package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
model	TokenNameIdentifier
.	TokenNameDOT
interpolation	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
model	TokenNameIdentifier
.	TokenNameDOT
InputLocation	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
model	TokenNameIdentifier
.	TokenNameDOT
InputSource	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
model	TokenNameIdentifier
.	TokenNameDOT
Model	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
model	TokenNameIdentifier
.	TokenNameDOT
building	TokenNameIdentifier
.	TokenNameDOT
DefaultModelBuildingRequest	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
model	TokenNameIdentifier
.	TokenNameDOT
building	TokenNameIdentifier
.	TokenNameDOT
ModelBuildingRequest	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
model	TokenNameIdentifier
.	TokenNameDOT
building	TokenNameIdentifier
.	TokenNameDOT
SimpleProblemCollector	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
File	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
Callable	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
CountDownLatch	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
Future	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
FutureTask	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
StringSearchModelInterpolatorTest	TokenNameIdentifier
extends	TokenNameextends
AbstractModelInterpolatorTest	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
ModelInterpolator	TokenNameIdentifier
interpolator	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Override	TokenNameIdentifier
protected	TokenNameprotected
void	TokenNamevoid
setUp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
super	TokenNamesuper
.	TokenNameDOT
setUp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interpolator	TokenNameIdentifier
=	TokenNameEQUAL
lookup	TokenNameIdentifier
(	TokenNameLPAREN
ModelInterpolator	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
ModelInterpolator	TokenNameIdentifier
createInterpolator	TokenNameIdentifier
(	TokenNameLPAREN
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
model	TokenNameIdentifier
.	TokenNameDOT
path	TokenNameIdentifier
.	TokenNameDOT
PathTranslator	TokenNameIdentifier
translator	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
this	TokenNamethis
.	TokenNameDOT
interpolator	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
ModelInterpolator	TokenNameIdentifier
createInterpolator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
this	TokenNamethis
.	TokenNameDOT
interpolator	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testInterpolateStringArray	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Model	TokenNameIdentifier
model	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Model	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Properties	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Properties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
"value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
,	TokenNameCOMMA
"value2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
values	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"${key}"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key2}"	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
StringSearchModelInterpolator	TokenNameIdentifier
interpolator	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
StringSearchModelInterpolator	TokenNameIdentifier
)	TokenNameRPAREN
createInterpolator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ModelBuildingRequest	TokenNameIdentifier
config	TokenNameIdentifier
=	TokenNameEQUAL
createModelBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
SimpleProblemCollector	TokenNameIdentifier
collector	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleProblemCollector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interpolator	TokenNameIdentifier
.	TokenNameDOT
interpolateObject	TokenNameIdentifier
(	TokenNameLPAREN
values	TokenNameIdentifier
,	TokenNameCOMMA
model	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
"."	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
config	TokenNameIdentifier
,	TokenNameCOMMA
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertProblemFree	TokenNameIdentifier
(	TokenNameLPAREN
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value"	TokenNameStringLiteral
,	TokenNameCOMMA
values	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value2"	TokenNameStringLiteral
,	TokenNameCOMMA
values	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
ModelBuildingRequest	TokenNameIdentifier
createModelBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
Properties	TokenNameIdentifier
p	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ModelBuildingRequest	TokenNameIdentifier
config	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultModelBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
config	TokenNameIdentifier
.	TokenNameDOT
setSystemProperties	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
config	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testInterpolateObjectWithStringArrayField	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Model	TokenNameIdentifier
model	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Model	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Properties	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Properties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
"value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
,	TokenNameCOMMA
"value2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
values	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"${key}"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key2}"	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
ObjectWithStringArrayField	TokenNameIdentifier
obj	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectWithStringArrayField	TokenNameIdentifier
(	TokenNameLPAREN
values	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringSearchModelInterpolator	TokenNameIdentifier
interpolator	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
StringSearchModelInterpolator	TokenNameIdentifier
)	TokenNameRPAREN
createInterpolator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ModelBuildingRequest	TokenNameIdentifier
config	TokenNameIdentifier
=	TokenNameEQUAL
createModelBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
SimpleProblemCollector	TokenNameIdentifier
collector	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleProblemCollector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interpolator	TokenNameIdentifier
.	TokenNameDOT
interpolateObject	TokenNameIdentifier
(	TokenNameLPAREN
obj	TokenNameIdentifier
,	TokenNameCOMMA
model	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
"."	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
config	TokenNameIdentifier
,	TokenNameCOMMA
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertProblemFree	TokenNameIdentifier
(	TokenNameLPAREN
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value"	TokenNameStringLiteral
,	TokenNameCOMMA
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value2"	TokenNameStringLiteral
,	TokenNameCOMMA
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testInterpolateObjectWithStringListField	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Model	TokenNameIdentifier
model	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Model	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Properties	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Properties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
"value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
,	TokenNameCOMMA
"value2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
values	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
"${key}"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
"${key2}"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ObjectWithListField	TokenNameIdentifier
obj	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectWithListField	TokenNameIdentifier
(	TokenNameLPAREN
values	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringSearchModelInterpolator	TokenNameIdentifier
interpolator	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
StringSearchModelInterpolator	TokenNameIdentifier
)	TokenNameRPAREN
createInterpolator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ModelBuildingRequest	TokenNameIdentifier
config	TokenNameIdentifier
=	TokenNameEQUAL
createModelBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
SimpleProblemCollector	TokenNameIdentifier
collector	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleProblemCollector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interpolator	TokenNameIdentifier
.	TokenNameDOT
interpolateObject	TokenNameIdentifier
(	TokenNameLPAREN
obj	TokenNameIdentifier
,	TokenNameCOMMA
model	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
"."	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
config	TokenNameIdentifier
,	TokenNameCOMMA
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertProblemFree	TokenNameIdentifier
(	TokenNameLPAREN
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value"	TokenNameStringLiteral
,	TokenNameCOMMA
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value2"	TokenNameStringLiteral
,	TokenNameCOMMA
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testInterpolateObjectWithStringListFieldAndOneLiteralValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Model	TokenNameIdentifier
model	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Model	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Properties	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Properties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
"value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
,	TokenNameCOMMA
"value2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
values	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
"${key2}"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ObjectWithListField	TokenNameIdentifier
obj	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectWithListField	TokenNameIdentifier
(	TokenNameLPAREN
values	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringSearchModelInterpolator	TokenNameIdentifier
interpolator	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
StringSearchModelInterpolator	TokenNameIdentifier
)	TokenNameRPAREN
createInterpolator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ModelBuildingRequest	TokenNameIdentifier
config	TokenNameIdentifier
=	TokenNameEQUAL
createModelBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
SimpleProblemCollector	TokenNameIdentifier
collector	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleProblemCollector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interpolator	TokenNameIdentifier
.	TokenNameDOT
interpolateObject	TokenNameIdentifier
(	TokenNameLPAREN
obj	TokenNameIdentifier
,	TokenNameCOMMA
model	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
"."	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
config	TokenNameIdentifier
,	TokenNameCOMMA
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertProblemFree	TokenNameIdentifier
(	TokenNameLPAREN
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value2"	TokenNameStringLiteral
,	TokenNameCOMMA
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testInterpolateObjectWithUnmodifiableStringListField	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Model	TokenNameIdentifier
model	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Model	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Properties	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Properties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
"value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
,	TokenNameCOMMA
"value2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
values	TokenNameIdentifier
=	TokenNameEQUAL
Collections	TokenNameIdentifier
.	TokenNameDOT
unmodifiableList	TokenNameIdentifier
(	TokenNameLPAREN
Collections	TokenNameIdentifier
.	TokenNameDOT
singletonList	TokenNameIdentifier
(	TokenNameLPAREN
"${key}"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ObjectWithListField	TokenNameIdentifier
obj	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectWithListField	TokenNameIdentifier
(	TokenNameLPAREN
values	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringSearchModelInterpolator	TokenNameIdentifier
interpolator	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
StringSearchModelInterpolator	TokenNameIdentifier
)	TokenNameRPAREN
createInterpolator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ModelBuildingRequest	TokenNameIdentifier
config	TokenNameIdentifier
=	TokenNameEQUAL
createModelBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
SimpleProblemCollector	TokenNameIdentifier
collector	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleProblemCollector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interpolator	TokenNameIdentifier
.	TokenNameDOT
interpolateObject	TokenNameIdentifier
(	TokenNameLPAREN
obj	TokenNameIdentifier
,	TokenNameCOMMA
model	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
"."	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
config	TokenNameIdentifier
,	TokenNameCOMMA
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertProblemFree	TokenNameIdentifier
(	TokenNameLPAREN
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"${key}"	TokenNameStringLiteral
,	TokenNameCOMMA
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testInterpolateObjectWithStringArrayListField	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Model	TokenNameIdentifier
model	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Model	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Properties	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Properties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
"value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
,	TokenNameCOMMA
"value2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key3"	TokenNameStringLiteral
,	TokenNameCOMMA
"value3"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key4"	TokenNameStringLiteral
,	TokenNameCOMMA
"value4"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
>	TokenNameGREATER
values	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"${key}"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key2}"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"${key3}"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key4}"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ObjectWithListField	TokenNameIdentifier
obj	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectWithListField	TokenNameIdentifier
(	TokenNameLPAREN
values	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringSearchModelInterpolator	TokenNameIdentifier
interpolator	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
StringSearchModelInterpolator	TokenNameIdentifier
)	TokenNameRPAREN
createInterpolator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ModelBuildingRequest	TokenNameIdentifier
config	TokenNameIdentifier
=	TokenNameEQUAL
createModelBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
SimpleProblemCollector	TokenNameIdentifier
collector	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleProblemCollector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interpolator	TokenNameIdentifier
.	TokenNameDOT
interpolateObject	TokenNameIdentifier
(	TokenNameLPAREN
obj	TokenNameIdentifier
,	TokenNameCOMMA
model	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
"."	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
config	TokenNameIdentifier
,	TokenNameCOMMA
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertProblemFree	TokenNameIdentifier
(	TokenNameLPAREN
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value"	TokenNameStringLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
)	TokenNameRPAREN
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value2"	TokenNameStringLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
)	TokenNameRPAREN
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value3"	TokenNameStringLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
)	TokenNameRPAREN
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value4"	TokenNameStringLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
)	TokenNameRPAREN
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testInterpolateObjectWithStringToStringMapField	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Model	TokenNameIdentifier
model	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Model	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Properties	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Properties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
"value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
,	TokenNameCOMMA
"value2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
values	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key}"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key2}"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ObjectWithMapField	TokenNameIdentifier
obj	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectWithMapField	TokenNameIdentifier
(	TokenNameLPAREN
values	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringSearchModelInterpolator	TokenNameIdentifier
interpolator	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
StringSearchModelInterpolator	TokenNameIdentifier
)	TokenNameRPAREN
createInterpolator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ModelBuildingRequest	TokenNameIdentifier
config	TokenNameIdentifier
=	TokenNameEQUAL
createModelBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
SimpleProblemCollector	TokenNameIdentifier
collector	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleProblemCollector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interpolator	TokenNameIdentifier
.	TokenNameDOT
interpolateObject	TokenNameIdentifier
(	TokenNameLPAREN
obj	TokenNameIdentifier
,	TokenNameCOMMA
model	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
"."	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
config	TokenNameIdentifier
,	TokenNameCOMMA
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertProblemFree	TokenNameIdentifier
(	TokenNameLPAREN
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value"	TokenNameStringLiteral
,	TokenNameCOMMA
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value2"	TokenNameStringLiteral
,	TokenNameCOMMA
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testInterpolateObjectWithStringToStringMapFieldAndOneLiteralValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Model	TokenNameIdentifier
model	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Model	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Properties	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Properties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
"value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
,	TokenNameCOMMA
"value2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
values	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
"val"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key2}"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ObjectWithMapField	TokenNameIdentifier
obj	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectWithMapField	TokenNameIdentifier
(	TokenNameLPAREN
values	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringSearchModelInterpolator	TokenNameIdentifier
interpolator	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
StringSearchModelInterpolator	TokenNameIdentifier
)	TokenNameRPAREN
createInterpolator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ModelBuildingRequest	TokenNameIdentifier
config	TokenNameIdentifier
=	TokenNameEQUAL
createModelBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
SimpleProblemCollector	TokenNameIdentifier
collector	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleProblemCollector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interpolator	TokenNameIdentifier
.	TokenNameDOT
interpolateObject	TokenNameIdentifier
(	TokenNameLPAREN
obj	TokenNameIdentifier
,	TokenNameCOMMA
model	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
"."	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
config	TokenNameIdentifier
,	TokenNameCOMMA
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertProblemFree	TokenNameIdentifier
(	TokenNameLPAREN
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"val"	TokenNameStringLiteral
,	TokenNameCOMMA
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value2"	TokenNameStringLiteral
,	TokenNameCOMMA
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testInterpolateObjectWithUnmodifiableStringToStringMapField	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Model	TokenNameIdentifier
model	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Model	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Properties	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Properties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
"value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
,	TokenNameCOMMA
"value2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
values	TokenNameIdentifier
=	TokenNameEQUAL
Collections	TokenNameIdentifier
.	TokenNameDOT
unmodifiableMap	TokenNameIdentifier
(	TokenNameLPAREN
Collections	TokenNameIdentifier
.	TokenNameDOT
singletonMap	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key}"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ObjectWithMapField	TokenNameIdentifier
obj	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectWithMapField	TokenNameIdentifier
(	TokenNameLPAREN
values	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringSearchModelInterpolator	TokenNameIdentifier
interpolator	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
StringSearchModelInterpolator	TokenNameIdentifier
)	TokenNameRPAREN
createInterpolator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ModelBuildingRequest	TokenNameIdentifier
config	TokenNameIdentifier
=	TokenNameEQUAL
createModelBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
SimpleProblemCollector	TokenNameIdentifier
collector	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleProblemCollector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interpolator	TokenNameIdentifier
.	TokenNameDOT
interpolateObject	TokenNameIdentifier
(	TokenNameLPAREN
obj	TokenNameIdentifier
,	TokenNameCOMMA
model	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
"."	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
config	TokenNameIdentifier
,	TokenNameCOMMA
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertProblemFree	TokenNameIdentifier
(	TokenNameLPAREN
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"${key}"	TokenNameStringLiteral
,	TokenNameCOMMA
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testInterpolateObjectWithStringToStringArrayMapField	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Model	TokenNameIdentifier
model	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Model	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Properties	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Properties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
"value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
,	TokenNameCOMMA
"value2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key3"	TokenNameStringLiteral
,	TokenNameCOMMA
"value3"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key4"	TokenNameStringLiteral
,	TokenNameCOMMA
"value4"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
>	TokenNameGREATER
values	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"${key}"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key2}"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"${key3}"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key4}"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ObjectWithMapField	TokenNameIdentifier
obj	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectWithMapField	TokenNameIdentifier
(	TokenNameLPAREN
values	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringSearchModelInterpolator	TokenNameIdentifier
interpolator	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
StringSearchModelInterpolator	TokenNameIdentifier
)	TokenNameRPAREN
createInterpolator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ModelBuildingRequest	TokenNameIdentifier
config	TokenNameIdentifier
=	TokenNameEQUAL
createModelBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
SimpleProblemCollector	TokenNameIdentifier
collector	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleProblemCollector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interpolator	TokenNameIdentifier
.	TokenNameDOT
interpolateObject	TokenNameIdentifier
(	TokenNameLPAREN
obj	TokenNameIdentifier
,	TokenNameCOMMA
model	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
"."	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
config	TokenNameIdentifier
,	TokenNameCOMMA
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertProblemFree	TokenNameIdentifier
(	TokenNameLPAREN
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value"	TokenNameStringLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
)	TokenNameRPAREN
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value2"	TokenNameStringLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
)	TokenNameRPAREN
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value3"	TokenNameStringLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
)	TokenNameRPAREN
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"value4"	TokenNameStringLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
)	TokenNameRPAREN
obj	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testConcurrentInterpolation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
Model	TokenNameIdentifier
model	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Model	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
Properties	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Properties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
"value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key2"	TokenNameStringLiteral
,	TokenNameCOMMA
"value2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key3"	TokenNameStringLiteral
,	TokenNameCOMMA
"value3"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key4"	TokenNameStringLiteral
,	TokenNameCOMMA
"value4"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"key5"	TokenNameStringLiteral
,	TokenNameCOMMA
"value5"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
StringSearchModelInterpolator	TokenNameIdentifier
interpolator	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
StringSearchModelInterpolator	TokenNameIdentifier
)	TokenNameRPAREN
createInterpolator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
numItems	TokenNameIdentifier
=	TokenNameEQUAL
100	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
CountDownLatch	TokenNameIdentifier
countDownLatch	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CountDownLatch	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Future	TokenNameIdentifier
<	TokenNameLESS
SimpleProblemCollector	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
futures	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Future	TokenNameIdentifier
<	TokenNameLESS
SimpleProblemCollector	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
numItems	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
Callable	TokenNameIdentifier
<	TokenNameLESS
SimpleProblemCollector	TokenNameIdentifier
>	TokenNameGREATER
future	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Callable	TokenNameIdentifier
<	TokenNameLESS
SimpleProblemCollector	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
SimpleProblemCollector	TokenNameIdentifier
call	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
ObjectWithMixedProtection	TokenNameIdentifier
obj	TokenNameIdentifier
=	TokenNameEQUAL
getValueList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
ModelBuildingRequest	TokenNameIdentifier
config	TokenNameIdentifier
=	TokenNameEQUAL
createModelBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
countDownLatch	TokenNameIdentifier
.	TokenNameDOT
await	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
SimpleProblemCollector	TokenNameIdentifier
collector	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleProblemCollector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interpolator	TokenNameIdentifier
.	TokenNameDOT
interpolateObject	TokenNameIdentifier
(	TokenNameLPAREN
obj	TokenNameIdentifier
,	TokenNameCOMMA
model	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
"."	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
config	TokenNameIdentifier
,	TokenNameCOMMA
collector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
collector	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
FutureTask	TokenNameIdentifier
<	TokenNameLESS
SimpleProblemCollector	TokenNameIdentifier
>	TokenNameGREATER
task	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FutureTask	TokenNameIdentifier
<	TokenNameLESS
SimpleProblemCollector	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
future	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
futures	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
task	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
new	TokenNamenew
Thread	TokenNameIdentifier
(	TokenNameLPAREN
task	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
start	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
countDownLatch	TokenNameIdentifier
.	TokenNameDOT
countDown	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Future	TokenNameIdentifier
<	TokenNameLESS
SimpleProblemCollector	TokenNameIdentifier
>	TokenNameGREATER
result	TokenNameIdentifier
:	TokenNameCOLON
futures	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
SimpleProblemCollector	TokenNameIdentifier
problemCollector	TokenNameIdentifier
=	TokenNameEQUAL
result	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertProblemFree	TokenNameIdentifier
(	TokenNameLPAREN
problemCollector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
ObjectWithMixedProtection	TokenNameIdentifier
getValueList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
>	TokenNameGREATER
values	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"${key}"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key2}"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"${key3}"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key4}"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
values2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"${key}"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key2}"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"${key3}"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key4}"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
values3	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"${key}"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key2}"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
values	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"${key3}"	TokenNameStringLiteral
,	TokenNameCOMMA
"${key4}"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
ObjectWithMixedProtection	TokenNameIdentifier
(	TokenNameLPAREN
values	TokenNameIdentifier
,	TokenNameCOMMA
values2	TokenNameIdentifier
,	TokenNameCOMMA
values3	TokenNameIdentifier
,	TokenNameCOMMA
"${key5}"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
class	TokenNameclass
ObjectWithStringArrayField	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
final	TokenNamefinal
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
values	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
ObjectWithStringArrayField	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
values	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
values	TokenNameIdentifier
=	TokenNameEQUAL
values	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
class	TokenNameclass
ObjectWithListField	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
values	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
ObjectWithListField	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
values	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
values	TokenNameIdentifier
=	TokenNameEQUAL
values	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
class	TokenNameclass
ObjectWithMapField	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
final	TokenNamefinal
Map	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
,	TokenNameCOMMA
?	TokenNameQUESTION
>	TokenNameGREATER
values	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
ObjectWithMapField	TokenNameIdentifier
(	TokenNameLPAREN
Map	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
,	TokenNameCOMMA
?	TokenNameQUESTION
>	TokenNameGREATER
values	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
values	TokenNameIdentifier
=	TokenNameEQUAL
values	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
@	TokenNameAT
SuppressWarnings	TokenNameIdentifier
(	TokenNameLPAREN
"unused"	TokenNameStringLiteral
)	TokenNameRPAREN
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
class	TokenNameclass
ObjectWithMixedProtection	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
List	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
values1	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
List	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
values2	TokenNameIdentifier
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
values3	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
fooBar	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
ObjectWithMixedProtection	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
values1	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
values2	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
values3	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
values1	TokenNameIdentifier
=	TokenNameEQUAL
values1	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
values2	TokenNameIdentifier
=	TokenNameEQUAL
values2	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
values3	TokenNameIdentifier
=	TokenNameEQUAL
values3	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
ObjectWithMixedProtection	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
values1	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
values2	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
values3	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
fooBar	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
values1	TokenNameIdentifier
=	TokenNameEQUAL
values1	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
values2	TokenNameIdentifier
=	TokenNameEQUAL
values2	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
values3	TokenNameIdentifier
=	TokenNameEQUAL
values3	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
fooBar	TokenNameIdentifier
=	TokenNameEQUAL
fooBar	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getFooBar	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
fooBar	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testFinalFieldsExcludedFromInterpolation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Properties	TokenNameIdentifier
props	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Properties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
props	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"expression"	TokenNameStringLiteral
,	TokenNameCOMMA
"value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DefaultModelBuildingRequest	TokenNameIdentifier
request	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultModelBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
request	TokenNameIdentifier
.	TokenNameDOT
setUserProperties	TokenNameIdentifier
(	TokenNameLPAREN
props	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SimpleProblemCollector	TokenNameIdentifier
problems	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleProblemCollector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringSearchModelInterpolator	TokenNameIdentifier
interpolator	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringSearchModelInterpolator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interpolator	TokenNameIdentifier
.	TokenNameDOT
interpolateObject	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
ClassWithFinalField	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
Model	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
request	TokenNameIdentifier
,	TokenNameCOMMA
problems	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertProblemFree	TokenNameIdentifier
(	TokenNameLPAREN
problems	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
class	TokenNameclass
ClassWithFinalField	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
CONSTANT	TokenNameIdentifier
=	TokenNameEQUAL
"${expression}"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testLocationTrackerShouldBeExcludedFromInterpolation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Properties	TokenNameIdentifier
props	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Properties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
props	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"expression"	TokenNameStringLiteral
,	TokenNameCOMMA
"value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DefaultModelBuildingRequest	TokenNameIdentifier
request	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultModelBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
request	TokenNameIdentifier
.	TokenNameDOT
setUserProperties	TokenNameIdentifier
(	TokenNameLPAREN
props	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
InputSource	TokenNameIdentifier
source	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
InputSource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
source	TokenNameIdentifier
.	TokenNameDOT
setLocation	TokenNameIdentifier
(	TokenNameLPAREN
"${expression}"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
source	TokenNameIdentifier
.	TokenNameDOT
setModelId	TokenNameIdentifier
(	TokenNameLPAREN
"${expression}"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Model	TokenNameIdentifier
model	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Model	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
model	TokenNameIdentifier
.	TokenNameDOT
setLocation	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
InputLocation	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
source	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SimpleProblemCollector	TokenNameIdentifier
problems	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleProblemCollector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringSearchModelInterpolator	TokenNameIdentifier
interpolator	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringSearchModelInterpolator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interpolator	TokenNameIdentifier
.	TokenNameDOT
interpolateObject	TokenNameIdentifier
(	TokenNameLPAREN
model	TokenNameIdentifier
,	TokenNameCOMMA
model	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
request	TokenNameIdentifier
,	TokenNameCOMMA
problems	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertProblemFree	TokenNameIdentifier
(	TokenNameLPAREN
problems	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"${expression}"	TokenNameStringLiteral
,	TokenNameCOMMA
source	TokenNameIdentifier
.	TokenNameDOT
getLocation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"${expression}"	TokenNameStringLiteral
,	TokenNameCOMMA
source	TokenNameIdentifier
.	TokenNameDOT
getModelId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
