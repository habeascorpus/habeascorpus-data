package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
cli	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
File	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
FileNotFoundException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
PrintStream	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ArrayList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Arrays	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
LinkedHashMap	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Map	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Properties	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
StringTokenizer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
commons	TokenNameIdentifier
.	TokenNameDOT
cli	TokenNameIdentifier
.	TokenNameDOT
CommandLine	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
commons	TokenNameIdentifier
.	TokenNameDOT
cli	TokenNameIdentifier
.	TokenNameDOT
ParseException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
commons	TokenNameIdentifier
.	TokenNameDOT
cli	TokenNameIdentifier
.	TokenNameDOT
UnrecognizedOptionException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
BuildAbort	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
InternalErrorException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
Maven	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
eventspy	TokenNameIdentifier
.	TokenNameDOT
internal	TokenNameIdentifier
.	TokenNameDOT
EventSpyDispatcher	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
exception	TokenNameIdentifier
.	TokenNameDOT
DefaultExceptionHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
exception	TokenNameIdentifier
.	TokenNameDOT
ExceptionHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
exception	TokenNameIdentifier
.	TokenNameDOT
ExceptionSummary	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
execution	TokenNameIdentifier
.	TokenNameDOT
DefaultMavenExecutionRequest	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
execution	TokenNameIdentifier
.	TokenNameDOT
ExecutionListener	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
execution	TokenNameIdentifier
.	TokenNameDOT
MavenExecutionRequest	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
execution	TokenNameIdentifier
.	TokenNameDOT
MavenExecutionRequestPopulator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
execution	TokenNameIdentifier
.	TokenNameDOT
MavenExecutionResult	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
LifecycleExecutionException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
internal	TokenNameIdentifier
.	TokenNameDOT
LifecycleWeaveBuilder	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
model	TokenNameIdentifier
.	TokenNameDOT
building	TokenNameIdentifier
.	TokenNameDOT
ModelProcessor	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
project	TokenNameIdentifier
.	TokenNameDOT
MavenProject	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
properties	TokenNameIdentifier
.	TokenNameDOT
internal	TokenNameIdentifier
.	TokenNameDOT
EnvironmentUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
settings	TokenNameIdentifier
.	TokenNameDOT
building	TokenNameIdentifier
.	TokenNameDOT
DefaultSettingsBuildingRequest	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
settings	TokenNameIdentifier
.	TokenNameDOT
building	TokenNameIdentifier
.	TokenNameDOT
SettingsBuilder	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
settings	TokenNameIdentifier
.	TokenNameDOT
building	TokenNameIdentifier
.	TokenNameDOT
SettingsBuildingRequest	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
settings	TokenNameIdentifier
.	TokenNameDOT
building	TokenNameIdentifier
.	TokenNameDOT
SettingsBuildingResult	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
settings	TokenNameIdentifier
.	TokenNameDOT
building	TokenNameIdentifier
.	TokenNameDOT
SettingsProblem	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
settings	TokenNameIdentifier
.	TokenNameDOT
building	TokenNameIdentifier
.	TokenNameDOT
SettingsSource	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
ContainerConfiguration	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
DefaultContainerConfiguration	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
DefaultPlexusContainer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
PlexusContainer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
classworlds	TokenNameIdentifier
.	TokenNameDOT
ClassWorld	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
classworlds	TokenNameIdentifier
.	TokenNameDOT
realm	TokenNameIdentifier
.	TokenNameDOT
ClassRealm	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
component	TokenNameIdentifier
.	TokenNameDOT
repository	TokenNameIdentifier
.	TokenNameDOT
exception	TokenNameIdentifier
.	TokenNameDOT
ComponentLookupException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
logging	TokenNameIdentifier
.	TokenNameDOT
Logger	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
StringUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
sonatype	TokenNameIdentifier
.	TokenNameDOT
aether	TokenNameIdentifier
.	TokenNameDOT
transfer	TokenNameIdentifier
.	TokenNameDOT
TransferListener	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
sonatype	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
components	TokenNameIdentifier
.	TokenNameDOT
cipher	TokenNameIdentifier
.	TokenNameDOT
DefaultPlexusCipher	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
sonatype	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
components	TokenNameIdentifier
.	TokenNameDOT
sec	TokenNameIdentifier
.	TokenNameDOT
dispatcher	TokenNameIdentifier
.	TokenNameDOT
DefaultSecDispatcher	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
sonatype	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
components	TokenNameIdentifier
.	TokenNameDOT
sec	TokenNameIdentifier
.	TokenNameDOT
dispatcher	TokenNameIdentifier
.	TokenNameDOT
SecDispatcher	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
sonatype	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
components	TokenNameIdentifier
.	TokenNameDOT
sec	TokenNameIdentifier
.	TokenNameDOT
dispatcher	TokenNameIdentifier
.	TokenNameDOT
SecUtil	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
sonatype	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
components	TokenNameIdentifier
.	TokenNameDOT
sec	TokenNameIdentifier
.	TokenNameDOT
dispatcher	TokenNameIdentifier
.	TokenNameDOT
model	TokenNameIdentifier
.	TokenNameDOT
SettingsSecurity	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
MavenCli	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
LOCAL_REPO_PROPERTY	TokenNameIdentifier
=	TokenNameEQUAL
"maven.repo.local"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
THREADS_DEPRECATED	TokenNameIdentifier
=	TokenNameEQUAL
"maven.threads.experimental"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
userHome	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"user.home"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
File	TokenNameIdentifier
userMavenConfigurationHome	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
userHome	TokenNameIdentifier
,	TokenNameCOMMA
".m2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
File	TokenNameIdentifier
DEFAULT_USER_SETTINGS_FILE	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
userMavenConfigurationHome	TokenNameIdentifier
,	TokenNameCOMMA
"settings.xml"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
File	TokenNameIdentifier
DEFAULT_GLOBAL_SETTINGS_FILE	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"maven.home"	TokenNameStringLiteral
,	TokenNameCOMMA
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"user.dir"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
"conf/settings.xml"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
File	TokenNameIdentifier
DEFAULT_USER_TOOLCHAINS_FILE	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
userMavenConfigurationHome	TokenNameIdentifier
,	TokenNameCOMMA
"toolchains.xml"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
EXT_CLASS_PATH	TokenNameIdentifier
=	TokenNameEQUAL
"maven.ext.class.path"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
ClassWorld	TokenNameIdentifier
classWorld	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
DefaultPlexusContainer	TokenNameIdentifier
container	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
Logger	TokenNameIdentifier
logger	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
EventSpyDispatcher	TokenNameIdentifier
eventSpyDispatcher	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
ModelProcessor	TokenNameIdentifier
modelProcessor	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
Maven	TokenNameIdentifier
maven	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
MavenExecutionRequestPopulator	TokenNameIdentifier
executionRequestPopulator	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
SettingsBuilder	TokenNameIdentifier
settingsBuilder	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
DefaultSecDispatcher	TokenNameIdentifier
dispatcher	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
MavenCli	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
MavenCli	TokenNameIdentifier
(	TokenNameLPAREN
ClassWorld	TokenNameIdentifier
classWorld	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
classWorld	TokenNameIdentifier
=	TokenNameEQUAL
classWorld	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
main	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
result	TokenNameIdentifier
=	TokenNameEQUAL
main	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
exit	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
main	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
,	TokenNameCOMMA
ClassWorld	TokenNameIdentifier
classWorld	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
MavenCli	TokenNameIdentifier
cli	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MavenCli	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
cli	TokenNameIdentifier
.	TokenNameDOT
doMain	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
CliRequest	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
,	TokenNameCOMMA
classWorld	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
doMain	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
,	TokenNameCOMMA
ClassWorld	TokenNameIdentifier
classWorld	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
MavenCli	TokenNameIdentifier
cli	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MavenCli	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
cli	TokenNameIdentifier
.	TokenNameDOT
doMain	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
CliRequest	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
,	TokenNameCOMMA
classWorld	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
doMain	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
workingDirectory	TokenNameIdentifier
,	TokenNameCOMMA
PrintStream	TokenNameIdentifier
stdout	TokenNameIdentifier
,	TokenNameCOMMA
PrintStream	TokenNameIdentifier
stderr	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
PrintStream	TokenNameIdentifier
oldout	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
;	TokenNameSEMICOLON
PrintStream	TokenNameIdentifier
olderr	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
err	TokenNameIdentifier
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
stdout	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
setOut	TokenNameIdentifier
(	TokenNameLPAREN
stdout	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
stderr	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
setErr	TokenNameIdentifier
(	TokenNameLPAREN
stderr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
CliRequest	TokenNameIdentifier
cliRequest	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CliRequest	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
,	TokenNameCOMMA
classWorld	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cliRequest	TokenNameIdentifier
.	TokenNameDOT
workingDirectory	TokenNameIdentifier
=	TokenNameEQUAL
workingDirectory	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
doMain	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
setOut	TokenNameIdentifier
(	TokenNameLPAREN
oldout	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
setErr	TokenNameIdentifier
(	TokenNameLPAREN
olderr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
doMain	TokenNameIdentifier
(	TokenNameLPAREN
CliRequest	TokenNameIdentifier
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
initialize	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cli	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logging	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
version	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
properties	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
container	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
commands	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
settings	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
populateRequest	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
encryption	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
execute	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ExitException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
e	TokenNameIdentifier
.	TokenNameDOT
exitCode	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
UnrecognizedOptionException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
BuildAbort	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
CLIReportingUtils	TokenNameIdentifier
.	TokenNameDOT
showError	TokenNameIdentifier
(	TokenNameLPAREN
logger	TokenNameIdentifier
,	TokenNameCOMMA
"ABORTED"	TokenNameStringLiteral
,	TokenNameCOMMA
e	TokenNameIdentifier
,	TokenNameCOMMA
cliRequest	TokenNameIdentifier
.	TokenNameDOT
showErrors	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
CLIReportingUtils	TokenNameIdentifier
.	TokenNameDOT
showError	TokenNameIdentifier
(	TokenNameLPAREN
logger	TokenNameIdentifier
,	TokenNameCOMMA
"Error executing Maven."	TokenNameStringLiteral
,	TokenNameCOMMA
e	TokenNameIdentifier
,	TokenNameCOMMA
cliRequest	TokenNameIdentifier
.	TokenNameDOT
showErrors	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
fileStream	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
cliRequest	TokenNameIdentifier
.	TokenNameDOT
fileStream	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
initialize	TokenNameIdentifier
(	TokenNameLPAREN
CliRequest	TokenNameIdentifier
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
workingDirectory	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
cliRequest	TokenNameIdentifier
.	TokenNameDOT
workingDirectory	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"user.dir"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
String	TokenNameIdentifier
mavenHome	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"maven.home"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
mavenHome	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"maven.home"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
mavenHome	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getAbsolutePath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
logging	TokenNameIdentifier
(	TokenNameLPAREN
CliRequest	TokenNameIdentifier
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
cliRequest	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
=	TokenNameEQUAL
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
DEBUG	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cliRequest	TokenNameIdentifier
.	TokenNameDOT
quiet	TokenNameIdentifier
=	TokenNameEQUAL
!	TokenNameNOT
cliRequest	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
&&	TokenNameAND_AND
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
QUIET	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cliRequest	TokenNameIdentifier
.	TokenNameDOT
showErrors	TokenNameIdentifier
=	TokenNameEQUAL
cliRequest	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
||	TokenNameOR_OR
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ERRORS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
cliRequest	TokenNameIdentifier
.	TokenNameDOT
request	TokenNameIdentifier
.	TokenNameDOT
setLoggingLevel	TokenNameIdentifier
(	TokenNameLPAREN
MavenExecutionRequest	TokenNameIdentifier
.	TokenNameDOT
LOGGING_LEVEL_DEBUG	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
quiet	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
cliRequest	TokenNameIdentifier
.	TokenNameDOT
request	TokenNameIdentifier
.	TokenNameDOT
setLoggingLevel	TokenNameIdentifier
(	TokenNameLPAREN
MavenExecutionRequest	TokenNameIdentifier
.	TokenNameDOT
LOGGING_LEVEL_ERROR	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
cliRequest	TokenNameIdentifier
.	TokenNameDOT
request	TokenNameIdentifier
.	TokenNameDOT
setLoggingLevel	TokenNameIdentifier
(	TokenNameLPAREN
MavenExecutionRequest	TokenNameIdentifier
.	TokenNameDOT
LOGGING_LEVEL_INFO	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
LOG_FILE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
File	TokenNameIdentifier
logFile	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
getOptionValue	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
LOG_FILE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logFile	TokenNameIdentifier
=	TokenNameEQUAL
resolveFile	TokenNameIdentifier
(	TokenNameLPAREN
logFile	TokenNameIdentifier
,	TokenNameCOMMA
cliRequest	TokenNameIdentifier
.	TokenNameDOT
workingDirectory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
cliRequest	TokenNameIdentifier
.	TokenNameDOT
fileStream	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
PrintStream	TokenNameIdentifier
(	TokenNameLPAREN
logFile	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
setOut	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
fileStream	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
setErr	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
fileStream	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
FileNotFoundException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
err	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
cli	TokenNameIdentifier
(	TokenNameLPAREN
CliRequest	TokenNameIdentifier
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
CLIManager	TokenNameIdentifier
cliManager	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CLIManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
=	TokenNameEQUAL
cliManager	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
args	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ParseException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
err	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Unable to parse command line options: "	TokenNameStringLiteral
+	TokenNamePLUS
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cliManager	TokenNameIdentifier
.	TokenNameDOT
displayHelp	TokenNameIdentifier
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
e	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
HELP	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
cliManager	TokenNameIdentifier
.	TokenNameDOT
displayHelp	TokenNameIdentifier
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
ExitException	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
VERSION	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CLIReportingUtils	TokenNameIdentifier
.	TokenNameDOT
showVersion	TokenNameIdentifier
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
ExitException	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
version	TokenNameIdentifier
(	TokenNameLPAREN
CliRequest	TokenNameIdentifier
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
||	TokenNameOR_OR
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
SHOW_VERSION	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CLIReportingUtils	TokenNameIdentifier
.	TokenNameDOT
showVersion	TokenNameIdentifier
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
commands	TokenNameIdentifier
(	TokenNameLPAREN
CliRequest	TokenNameIdentifier
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
showErrors	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
info	TokenNameIdentifier
(	TokenNameLPAREN
"Error stacktraces are turned on."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
MavenExecutionRequest	TokenNameIdentifier
.	TokenNameDOT
CHECKSUM_POLICY_WARN	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
request	TokenNameIdentifier
.	TokenNameDOT
getGlobalChecksumPolicy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
info	TokenNameIdentifier
(	TokenNameLPAREN
"Disabling strict checksum verification on all artifact downloads."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
MavenExecutionRequest	TokenNameIdentifier
.	TokenNameDOT
CHECKSUM_POLICY_FAIL	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
request	TokenNameIdentifier
.	TokenNameDOT
getGlobalChecksumPolicy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
info	TokenNameIdentifier
(	TokenNameLPAREN
"Enabling strict checksum verification on all artifact downloads."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
properties	TokenNameIdentifier
(	TokenNameLPAREN
CliRequest	TokenNameIdentifier
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
populateProperties	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
,	TokenNameCOMMA
cliRequest	TokenNameIdentifier
.	TokenNameDOT
systemProperties	TokenNameIdentifier
,	TokenNameCOMMA
cliRequest	TokenNameIdentifier
.	TokenNameDOT
userProperties	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
container	TokenNameIdentifier
(	TokenNameLPAREN
CliRequest	TokenNameIdentifier
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
classWorld	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
cliRequest	TokenNameIdentifier
.	TokenNameDOT
classWorld	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ClassWorld	TokenNameIdentifier
(	TokenNameLPAREN
"plexus.core"	TokenNameStringLiteral
,	TokenNameCOMMA
Thread	TokenNameIdentifier
.	TokenNameDOT
currentThread	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getContextClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
DefaultPlexusContainer	TokenNameIdentifier
container	TokenNameIdentifier
=	TokenNameEQUAL
this	TokenNamethis
.	TokenNameDOT
container	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
container	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
=	TokenNameEQUAL
setupLogger	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ContainerConfiguration	TokenNameIdentifier
cc	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultContainerConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
setClassWorld	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
classWorld	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setRealm	TokenNameIdentifier
(	TokenNameLPAREN
setupContainerRealm	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
setName	TokenNameIdentifier
(	TokenNameLPAREN
"maven"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
container	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultPlexusContainer	TokenNameIdentifier
(	TokenNameLPAREN
cc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
container	TokenNameIdentifier
.	TokenNameDOT
setLookupRealm	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
container	TokenNameIdentifier
.	TokenNameDOT
setLoggerManager	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
MavenLoggerManager	TokenNameIdentifier
(	TokenNameLPAREN
logger	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
customizeContainer	TokenNameIdentifier
(	TokenNameLPAREN
container	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
classWorld	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
classWorld	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
container	TokenNameIdentifier
=	TokenNameEQUAL
container	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
container	TokenNameIdentifier
.	TokenNameDOT
getLoggerManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
setThresholds	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
request	TokenNameIdentifier
.	TokenNameDOT
getLoggingLevel	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Thread	TokenNameIdentifier
.	TokenNameDOT
currentThread	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
setContextClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
container	TokenNameIdentifier
.	TokenNameDOT
getContainerRealm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
eventSpyDispatcher	TokenNameIdentifier
=	TokenNameEQUAL
container	TokenNameIdentifier
.	TokenNameDOT
lookup	TokenNameIdentifier
(	TokenNameLPAREN
EventSpyDispatcher	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DefaultEventSpyContext	TokenNameIdentifier
eventSpyContext	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultEventSpyContext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
>	TokenNameGREATER
data	TokenNameIdentifier
=	TokenNameEQUAL
eventSpyContext	TokenNameIdentifier
.	TokenNameDOT
getData	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
data	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"plexus"	TokenNameStringLiteral
,	TokenNameCOMMA
container	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
data	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"workingDirectory"	TokenNameStringLiteral
,	TokenNameCOMMA
cliRequest	TokenNameIdentifier
.	TokenNameDOT
workingDirectory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
data	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"systemProperties"	TokenNameStringLiteral
,	TokenNameCOMMA
cliRequest	TokenNameIdentifier
.	TokenNameDOT
systemProperties	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
data	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"userProperties"	TokenNameStringLiteral
,	TokenNameCOMMA
cliRequest	TokenNameIdentifier
.	TokenNameDOT
userProperties	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
data	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"versionProperties"	TokenNameStringLiteral
,	TokenNameCOMMA
CLIReportingUtils	TokenNameIdentifier
.	TokenNameDOT
getBuildProperties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
eventSpyDispatcher	TokenNameIdentifier
.	TokenNameDOT
init	TokenNameIdentifier
(	TokenNameLPAREN
eventSpyContext	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
=	TokenNameEQUAL
container	TokenNameIdentifier
.	TokenNameDOT
getLoggerManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getLoggerForComponent	TokenNameIdentifier
(	TokenNameLPAREN
MavenCli	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
maven	TokenNameIdentifier
=	TokenNameEQUAL
container	TokenNameIdentifier
.	TokenNameDOT
lookup	TokenNameIdentifier
(	TokenNameLPAREN
Maven	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
executionRequestPopulator	TokenNameIdentifier
=	TokenNameEQUAL
container	TokenNameIdentifier
.	TokenNameDOT
lookup	TokenNameIdentifier
(	TokenNameLPAREN
MavenExecutionRequestPopulator	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
modelProcessor	TokenNameIdentifier
=	TokenNameEQUAL
createModelProcessor	TokenNameIdentifier
(	TokenNameLPAREN
container	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
settingsBuilder	TokenNameIdentifier
=	TokenNameEQUAL
container	TokenNameIdentifier
.	TokenNameDOT
lookup	TokenNameIdentifier
(	TokenNameLPAREN
SettingsBuilder	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dispatcher	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
DefaultSecDispatcher	TokenNameIdentifier
)	TokenNameRPAREN
container	TokenNameIdentifier
.	TokenNameDOT
lookup	TokenNameIdentifier
(	TokenNameLPAREN
SecDispatcher	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
"maven"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
PrintStreamLogger	TokenNameIdentifier
setupLogger	TokenNameIdentifier
(	TokenNameLPAREN
CliRequest	TokenNameIdentifier
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
PrintStreamLogger	TokenNameIdentifier
logger	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
PrintStreamLogger	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
PrintStreamLogger	TokenNameIdentifier
.	TokenNameDOT
Provider	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
PrintStream	TokenNameIdentifier
getStream	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
setThreshold	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
request	TokenNameIdentifier
.	TokenNameDOT
getLoggingLevel	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
logger	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
ClassRealm	TokenNameIdentifier
setupContainerRealm	TokenNameIdentifier
(	TokenNameLPAREN
CliRequest	TokenNameIdentifier
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
ClassRealm	TokenNameIdentifier
containerRealm	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
String	TokenNameIdentifier
extClassPath	TokenNameIdentifier
=	TokenNameEQUAL
cliRequest	TokenNameIdentifier
.	TokenNameDOT
userProperties	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
EXT_CLASS_PATH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
extClassPath	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
extClassPath	TokenNameIdentifier
=	TokenNameEQUAL
cliRequest	TokenNameIdentifier
.	TokenNameDOT
systemProperties	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
EXT_CLASS_PATH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
StringUtils	TokenNameIdentifier
.	TokenNameDOT
isNotEmpty	TokenNameIdentifier
(	TokenNameLPAREN
extClassPath	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
jars	TokenNameIdentifier
=	TokenNameEQUAL
StringUtils	TokenNameIdentifier
.	TokenNameDOT
split	TokenNameIdentifier
(	TokenNameLPAREN
extClassPath	TokenNameIdentifier
,	TokenNameCOMMA
File	TokenNameIdentifier
.	TokenNameDOT
pathSeparator	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
jars	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
ClassRealm	TokenNameIdentifier
coreRealm	TokenNameIdentifier
=	TokenNameEQUAL
cliRequest	TokenNameIdentifier
.	TokenNameDOT
classWorld	TokenNameIdentifier
.	TokenNameDOT
getClassRealm	TokenNameIdentifier
(	TokenNameLPAREN
"plexus.core"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
coreRealm	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
coreRealm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
ClassRealm	TokenNameIdentifier
)	TokenNameRPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
classWorld	TokenNameIdentifier
.	TokenNameDOT
getRealms	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
ClassRealm	TokenNameIdentifier
extRealm	TokenNameIdentifier
=	TokenNameEQUAL
cliRequest	TokenNameIdentifier
.	TokenNameDOT
classWorld	TokenNameIdentifier
.	TokenNameDOT
newRealm	TokenNameIdentifier
(	TokenNameLPAREN
"maven.ext"	TokenNameStringLiteral
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"Populating class realm "	TokenNameStringLiteral
+	TokenNamePLUS
extRealm	TokenNameIdentifier
.	TokenNameDOT
getId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
String	TokenNameIdentifier
jar	TokenNameIdentifier
:	TokenNameCOLON
jars	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
File	TokenNameIdentifier
file	TokenNameIdentifier
=	TokenNameEQUAL
resolveFile	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
jar	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
cliRequest	TokenNameIdentifier
.	TokenNameDOT
workingDirectory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"  Included "	TokenNameStringLiteral
+	TokenNamePLUS
file	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
extRealm	TokenNameIdentifier
.	TokenNameDOT
addURL	TokenNameIdentifier
(	TokenNameLPAREN
file	TokenNameIdentifier
.	TokenNameDOT
toURI	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
toURL	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
extRealm	TokenNameIdentifier
.	TokenNameDOT
setParentRealm	TokenNameIdentifier
(	TokenNameLPAREN
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
containerRealm	TokenNameIdentifier
=	TokenNameEQUAL
extRealm	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
containerRealm	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
customizeContainer	TokenNameIdentifier
(	TokenNameLPAREN
PlexusContainer	TokenNameIdentifier
container	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
encryption	TokenNameIdentifier
(	TokenNameLPAREN
CliRequest	TokenNameIdentifier
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ENCRYPT_MASTER_PASSWORD	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
passwd	TokenNameIdentifier
=	TokenNameEQUAL
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
getOptionValue	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ENCRYPT_MASTER_PASSWORD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DefaultPlexusCipher	TokenNameIdentifier
cipher	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultPlexusCipher	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
cipher	TokenNameIdentifier
.	TokenNameDOT
encryptAndDecorate	TokenNameIdentifier
(	TokenNameLPAREN
passwd	TokenNameIdentifier
,	TokenNameCOMMA
DefaultSecDispatcher	TokenNameIdentifier
.	TokenNameDOT
SYSTEM_PROPERTY_SEC_LOCATION	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
ExitException	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ENCRYPT_PASSWORD	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
passwd	TokenNameIdentifier
=	TokenNameEQUAL
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
getOptionValue	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ENCRYPT_PASSWORD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
configurationFile	TokenNameIdentifier
=	TokenNameEQUAL
dispatcher	TokenNameIdentifier
.	TokenNameDOT
getConfigurationFile	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
configurationFile	TokenNameIdentifier
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
"~"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
configurationFile	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"user.home"	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
configurationFile	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
String	TokenNameIdentifier
file	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
DefaultSecDispatcher	TokenNameIdentifier
.	TokenNameDOT
SYSTEM_PROPERTY_SEC_LOCATION	TokenNameIdentifier
,	TokenNameCOMMA
configurationFile	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
master	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
SettingsSecurity	TokenNameIdentifier
sec	TokenNameIdentifier
=	TokenNameEQUAL
SecUtil	TokenNameIdentifier
.	TokenNameDOT
read	TokenNameIdentifier
(	TokenNameLPAREN
file	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
sec	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
master	TokenNameIdentifier
=	TokenNameEQUAL
sec	TokenNameIdentifier
.	TokenNameDOT
getMaster	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
master	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IllegalStateException	TokenNameIdentifier
(	TokenNameLPAREN
"Master password is not set in the setting security file: "	TokenNameStringLiteral
+	TokenNamePLUS
file	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
DefaultPlexusCipher	TokenNameIdentifier
cipher	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultPlexusCipher	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
masterPasswd	TokenNameIdentifier
=	TokenNameEQUAL
cipher	TokenNameIdentifier
.	TokenNameDOT
decryptDecorated	TokenNameIdentifier
(	TokenNameLPAREN
master	TokenNameIdentifier
,	TokenNameCOMMA
DefaultSecDispatcher	TokenNameIdentifier
.	TokenNameDOT
SYSTEM_PROPERTY_SEC_LOCATION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
cipher	TokenNameIdentifier
.	TokenNameDOT
encryptAndDecorate	TokenNameIdentifier
(	TokenNameLPAREN
passwd	TokenNameIdentifier
,	TokenNameCOMMA
masterPasswd	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
ExitException	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
int	TokenNameint
execute	TokenNameIdentifier
(	TokenNameLPAREN
CliRequest	TokenNameIdentifier
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
eventSpyDispatcher	TokenNameIdentifier
.	TokenNameDOT
onEvent	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
request	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MavenExecutionResult	TokenNameIdentifier
result	TokenNameIdentifier
=	TokenNameEQUAL
maven	TokenNameIdentifier
.	TokenNameDOT
execute	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
request	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
eventSpyDispatcher	TokenNameIdentifier
.	TokenNameDOT
onEvent	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
eventSpyDispatcher	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
hasExceptions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ExceptionHandler	TokenNameIdentifier
handler	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultExceptionHandler	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
references	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
LinkedHashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MavenProject	TokenNameIdentifier
project	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Throwable	TokenNameIdentifier
exception	TokenNameIdentifier
:	TokenNameCOLON
result	TokenNameIdentifier
.	TokenNameDOT
getExceptions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ExceptionSummary	TokenNameIdentifier
summary	TokenNameIdentifier
=	TokenNameEQUAL
handler	TokenNameIdentifier
.	TokenNameDOT
handleException	TokenNameIdentifier
(	TokenNameLPAREN
exception	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logSummary	TokenNameIdentifier
(	TokenNameLPAREN
summary	TokenNameIdentifier
,	TokenNameCOMMA
references	TokenNameIdentifier
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
cliRequest	TokenNameIdentifier
.	TokenNameDOT
showErrors	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
project	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
exception	TokenNameIdentifier
instanceof	TokenNameinstanceof
LifecycleExecutionException	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
project	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
LifecycleExecutionException	TokenNameIdentifier
)	TokenNameRPAREN
exception	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getProject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cliRequest	TokenNameIdentifier
.	TokenNameDOT
showErrors	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
"To see the full stack trace of the errors, re-run Maven with the -e switch."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
logger	TokenNameIdentifier
.	TokenNameDOT
isDebugEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
"Re-run Maven using the -X switch to enable full debug logging."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
references	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
"For more information about the errors and possible solutions"	TokenNameStringLiteral
+	TokenNamePLUS
", please read the following articles:"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
entry	TokenNameIdentifier
:	TokenNameCOLON
references	TokenNameIdentifier
.	TokenNameDOT
entrySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
entry	TokenNameIdentifier
.	TokenNameDOT
getValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
" "	TokenNameStringLiteral
+	TokenNamePLUS
entry	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
project	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
!	TokenNameNOT
project	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getTopologicallySortedProjects	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
"After correcting the problems, you can resume the build with the command"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
"  mvn <goals> -rf :"	TokenNameStringLiteral
+	TokenNamePLUS
project	TokenNameIdentifier
.	TokenNameDOT
getArtifactId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
MavenExecutionRequest	TokenNameIdentifier
.	TokenNameDOT
REACTOR_FAIL_NEVER	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
request	TokenNameIdentifier
.	TokenNameDOT
getReactorFailureBehavior	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
info	TokenNameIdentifier
(	TokenNameLPAREN
"Build failures were ignored."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
logSummary	TokenNameIdentifier
(	TokenNameLPAREN
ExceptionSummary	TokenNameIdentifier
summary	TokenNameIdentifier
,	TokenNameCOMMA
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
references	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
indent	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
showErrors	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
referenceKey	TokenNameIdentifier
=	TokenNameEQUAL
""	TokenNameStringLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
StringUtils	TokenNameIdentifier
.	TokenNameDOT
isNotEmpty	TokenNameIdentifier
(	TokenNameLPAREN
summary	TokenNameIdentifier
.	TokenNameDOT
getReference	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
referenceKey	TokenNameIdentifier
=	TokenNameEQUAL
references	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
summary	TokenNameIdentifier
.	TokenNameDOT
getReference	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
referenceKey	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
referenceKey	TokenNameIdentifier
=	TokenNameEQUAL
"[Help "	TokenNameStringLiteral
+	TokenNamePLUS
(	TokenNameLPAREN
references	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
"]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
references	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
summary	TokenNameIdentifier
.	TokenNameDOT
getReference	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
referenceKey	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
String	TokenNameIdentifier
msg	TokenNameIdentifier
=	TokenNameEQUAL
summary	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
StringUtils	TokenNameIdentifier
.	TokenNameDOT
isNotEmpty	TokenNameIdentifier
(	TokenNameLPAREN
referenceKey	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
msg	TokenNameIdentifier
.	TokenNameDOT
indexOf	TokenNameIdentifier
(	TokenNameLPAREN
'\n'	TokenNameCharacterLiteral
)	TokenNameRPAREN
<	TokenNameLESS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
msg	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
" -> "	TokenNameStringLiteral
+	TokenNamePLUS
referenceKey	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
msg	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
" -> "	TokenNameStringLiteral
+	TokenNamePLUS
referenceKey	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
lines	TokenNameIdentifier
=	TokenNameEQUAL
msg	TokenNameIdentifier
.	TokenNameDOT
split	TokenNameIdentifier
(	TokenNameLPAREN
"( )|()|( )"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
lines	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
line	TokenNameIdentifier
=	TokenNameEQUAL
indent	TokenNameIdentifier
+	TokenNamePLUS
lines	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
trim	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
i	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
lines	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
showErrors	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
summary	TokenNameIdentifier
.	TokenNameDOT
getException	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
instanceof	TokenNameinstanceof
InternalErrorException	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
line	TokenNameIdentifier
,	TokenNameCOMMA
summary	TokenNameIdentifier
.	TokenNameDOT
getException	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
line	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
indent	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
"  "	TokenNameStringLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ExceptionSummary	TokenNameIdentifier
child	TokenNameIdentifier
:	TokenNameCOLON
summary	TokenNameIdentifier
.	TokenNameDOT
getChildren	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logSummary	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
,	TokenNameCOMMA
references	TokenNameIdentifier
,	TokenNameCOMMA
indent	TokenNameIdentifier
,	TokenNameCOMMA
showErrors	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
ModelProcessor	TokenNameIdentifier
createModelProcessor	TokenNameIdentifier
(	TokenNameLPAREN
PlexusContainer	TokenNameIdentifier
container	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ComponentLookupException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
container	TokenNameIdentifier
.	TokenNameDOT
lookup	TokenNameIdentifier
(	TokenNameLPAREN
ModelProcessor	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
settings	TokenNameIdentifier
(	TokenNameLPAREN
CliRequest	TokenNameIdentifier
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
File	TokenNameIdentifier
userSettingsFile	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ALTERNATE_USER_SETTINGS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
userSettingsFile	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
getOptionValue	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ALTERNATE_USER_SETTINGS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
userSettingsFile	TokenNameIdentifier
=	TokenNameEQUAL
resolveFile	TokenNameIdentifier
(	TokenNameLPAREN
userSettingsFile	TokenNameIdentifier
,	TokenNameCOMMA
cliRequest	TokenNameIdentifier
.	TokenNameDOT
workingDirectory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
userSettingsFile	TokenNameIdentifier
.	TokenNameDOT
isFile	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
FileNotFoundException	TokenNameIdentifier
(	TokenNameLPAREN
"The specified user settings file does not exist: "	TokenNameStringLiteral
+	TokenNamePLUS
userSettingsFile	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
userSettingsFile	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_USER_SETTINGS_FILE	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
File	TokenNameIdentifier
globalSettingsFile	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ALTERNATE_GLOBAL_SETTINGS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
globalSettingsFile	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
getOptionValue	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ALTERNATE_GLOBAL_SETTINGS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
globalSettingsFile	TokenNameIdentifier
=	TokenNameEQUAL
resolveFile	TokenNameIdentifier
(	TokenNameLPAREN
globalSettingsFile	TokenNameIdentifier
,	TokenNameCOMMA
cliRequest	TokenNameIdentifier
.	TokenNameDOT
workingDirectory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
globalSettingsFile	TokenNameIdentifier
.	TokenNameDOT
isFile	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
FileNotFoundException	TokenNameIdentifier
(	TokenNameLPAREN
"The specified global settings file does not exist: "	TokenNameStringLiteral
+	TokenNamePLUS
globalSettingsFile	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
globalSettingsFile	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_GLOBAL_SETTINGS_FILE	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
cliRequest	TokenNameIdentifier
.	TokenNameDOT
request	TokenNameIdentifier
.	TokenNameDOT
setGlobalSettingsFile	TokenNameIdentifier
(	TokenNameLPAREN
globalSettingsFile	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cliRequest	TokenNameIdentifier
.	TokenNameDOT
request	TokenNameIdentifier
.	TokenNameDOT
setUserSettingsFile	TokenNameIdentifier
(	TokenNameLPAREN
userSettingsFile	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SettingsBuildingRequest	TokenNameIdentifier
settingsRequest	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultSettingsBuildingRequest	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
settingsRequest	TokenNameIdentifier
.	TokenNameDOT
setGlobalSettingsFile	TokenNameIdentifier
(	TokenNameLPAREN
globalSettingsFile	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
settingsRequest	TokenNameIdentifier
.	TokenNameDOT
setUserSettingsFile	TokenNameIdentifier
(	TokenNameLPAREN
userSettingsFile	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
settingsRequest	TokenNameIdentifier
.	TokenNameDOT
setSystemProperties	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
systemProperties	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
settingsRequest	TokenNameIdentifier
.	TokenNameDOT
setUserProperties	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
userProperties	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
eventSpyDispatcher	TokenNameIdentifier
.	TokenNameDOT
onEvent	TokenNameIdentifier
(	TokenNameLPAREN
settingsRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"Reading global settings from "	TokenNameStringLiteral
+	TokenNamePLUS
getSettingsLocation	TokenNameIdentifier
(	TokenNameLPAREN
settingsRequest	TokenNameIdentifier
.	TokenNameDOT
getGlobalSettingsSource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
settingsRequest	TokenNameIdentifier
.	TokenNameDOT
getGlobalSettingsFile	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"Reading user settings from "	TokenNameStringLiteral
+	TokenNamePLUS
getSettingsLocation	TokenNameIdentifier
(	TokenNameLPAREN
settingsRequest	TokenNameIdentifier
.	TokenNameDOT
getUserSettingsSource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
settingsRequest	TokenNameIdentifier
.	TokenNameDOT
getUserSettingsFile	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SettingsBuildingResult	TokenNameIdentifier
settingsResult	TokenNameIdentifier
=	TokenNameEQUAL
settingsBuilder	TokenNameIdentifier
.	TokenNameDOT
build	TokenNameIdentifier
(	TokenNameLPAREN
settingsRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
eventSpyDispatcher	TokenNameIdentifier
.	TokenNameDOT
onEvent	TokenNameIdentifier
(	TokenNameLPAREN
settingsResult	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
executionRequestPopulator	TokenNameIdentifier
.	TokenNameDOT
populateFromSettings	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
request	TokenNameIdentifier
,	TokenNameCOMMA
settingsResult	TokenNameIdentifier
.	TokenNameDOT
getEffectiveSettings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
settingsResult	TokenNameIdentifier
.	TokenNameDOT
getProblems	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
logger	TokenNameIdentifier
.	TokenNameDOT
isWarnEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
warn	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
warn	TokenNameIdentifier
(	TokenNameLPAREN
"Some problems were encountered while building the effective settings"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SettingsProblem	TokenNameIdentifier
problem	TokenNameIdentifier
:	TokenNameCOLON
settingsResult	TokenNameIdentifier
.	TokenNameDOT
getProblems	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
warn	TokenNameIdentifier
(	TokenNameLPAREN
problem	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
" @ "	TokenNameStringLiteral
+	TokenNamePLUS
problem	TokenNameIdentifier
.	TokenNameDOT
getLocation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
warn	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
Object	TokenNameIdentifier
getSettingsLocation	TokenNameIdentifier
(	TokenNameLPAREN
SettingsSource	TokenNameIdentifier
source	TokenNameIdentifier
,	TokenNameCOMMA
File	TokenNameIdentifier
file	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
source	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
source	TokenNameIdentifier
.	TokenNameDOT
getLocation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
file	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
MavenExecutionRequest	TokenNameIdentifier
populateRequest	TokenNameIdentifier
(	TokenNameLPAREN
CliRequest	TokenNameIdentifier
cliRequest	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
MavenExecutionRequest	TokenNameIdentifier
request	TokenNameIdentifier
=	TokenNameEQUAL
cliRequest	TokenNameIdentifier
.	TokenNameDOT
request	TokenNameIdentifier
;	TokenNameSEMICOLON
CommandLine	TokenNameIdentifier
commandLine	TokenNameIdentifier
=	TokenNameEQUAL
cliRequest	TokenNameIdentifier
.	TokenNameDOT
commandLine	TokenNameIdentifier
;	TokenNameSEMICOLON
String	TokenNameIdentifier
workingDirectory	TokenNameIdentifier
=	TokenNameEQUAL
cliRequest	TokenNameIdentifier
.	TokenNameDOT
workingDirectory	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
quiet	TokenNameIdentifier
=	TokenNameEQUAL
cliRequest	TokenNameIdentifier
.	TokenNameDOT
quiet	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
showErrors	TokenNameIdentifier
=	TokenNameEQUAL
cliRequest	TokenNameIdentifier
.	TokenNameDOT
showErrors	TokenNameIdentifier
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
deprecatedOptions	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"up"	TokenNameStringLiteral
,	TokenNameCOMMA
"npu"	TokenNameStringLiteral
,	TokenNameCOMMA
"cpu"	TokenNameStringLiteral
,	TokenNameCOMMA
"npr"	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
String	TokenNameIdentifier
deprecatedOption	TokenNameIdentifier
:	TokenNameCOLON
deprecatedOptions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
deprecatedOption	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
warn	TokenNameIdentifier
(	TokenNameLPAREN
"Command line option -"	TokenNameStringLiteral
+	TokenNamePLUS
deprecatedOption	TokenNameIdentifier
+	TokenNamePLUS
" is deprecated and will be removed in future Maven versions."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
BATCH_MODE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
request	TokenNameIdentifier
.	TokenNameDOT
setInteractiveMode	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
boolean	TokenNameboolean
noSnapshotUpdates	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
SUPRESS_SNAPSHOT_UPDATES	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
noSnapshotUpdates	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
SuppressWarnings	TokenNameIdentifier
(	TokenNameLPAREN
"unchecked"	TokenNameStringLiteral
)	TokenNameRPAREN
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
goals	TokenNameIdentifier
=	TokenNameEQUAL
commandLine	TokenNameIdentifier
.	TokenNameDOT
getArgList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
recursive	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
String	TokenNameIdentifier
reactorFailureBehaviour	TokenNameIdentifier
=	TokenNameEQUAL
MavenExecutionRequest	TokenNameIdentifier
.	TokenNameDOT
REACTOR_FAIL_FAST	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
NON_RECURSIVE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
recursive	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
FAIL_FAST	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
reactorFailureBehaviour	TokenNameIdentifier
=	TokenNameEQUAL
MavenExecutionRequest	TokenNameIdentifier
.	TokenNameDOT
REACTOR_FAIL_FAST	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
FAIL_AT_END	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
reactorFailureBehaviour	TokenNameIdentifier
=	TokenNameEQUAL
MavenExecutionRequest	TokenNameIdentifier
.	TokenNameDOT
REACTOR_FAIL_AT_END	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
FAIL_NEVER	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
reactorFailureBehaviour	TokenNameIdentifier
=	TokenNameEQUAL
MavenExecutionRequest	TokenNameIdentifier
.	TokenNameDOT
REACTOR_FAIL_NEVER	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
OFFLINE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
request	TokenNameIdentifier
.	TokenNameDOT
setOffline	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
boolean	TokenNameboolean
updateSnapshots	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
UPDATE_SNAPSHOTS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
updateSnapshots	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
String	TokenNameIdentifier
globalChecksumPolicy	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
CHECKSUM_FAILURE_POLICY	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
globalChecksumPolicy	TokenNameIdentifier
=	TokenNameEQUAL
MavenExecutionRequest	TokenNameIdentifier
.	TokenNameDOT
CHECKSUM_POLICY_FAIL	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
CHECKSUM_WARNING_POLICY	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
globalChecksumPolicy	TokenNameIdentifier
=	TokenNameEQUAL
MavenExecutionRequest	TokenNameIdentifier
.	TokenNameDOT
CHECKSUM_POLICY_WARN	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
File	TokenNameIdentifier
baseDirectory	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
workingDirectory	TokenNameIdentifier
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
.	TokenNameDOT
getAbsoluteFile	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
activeProfiles	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
inactiveProfiles	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ACTIVATE_PROFILES	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
profileOptionValues	TokenNameIdentifier
=	TokenNameEQUAL
commandLine	TokenNameIdentifier
.	TokenNameDOT
getOptionValues	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ACTIVATE_PROFILES	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
profileOptionValues	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
profileOptionValues	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
StringTokenizer	TokenNameIdentifier
profileTokens	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
profileOptionValues	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
,	TokenNameCOMMA
","	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
profileTokens	TokenNameIdentifier
.	TokenNameDOT
hasMoreTokens	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
profileAction	TokenNameIdentifier
=	TokenNameEQUAL
profileTokens	TokenNameIdentifier
.	TokenNameDOT
nextToken	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
trim	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
profileAction	TokenNameIdentifier
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
"-"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
profileAction	TokenNameIdentifier
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
"!"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
inactiveProfiles	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
profileAction	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
profileAction	TokenNameIdentifier
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
"+"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
activeProfiles	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
profileAction	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
activeProfiles	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
profileAction	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
TransferListener	TokenNameIdentifier
transferListener	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
quiet	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
transferListener	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
QuietMavenTransferListener	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
request	TokenNameIdentifier
.	TokenNameDOT
isInteractiveMode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
transferListener	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ConsoleMavenTransferListener	TokenNameIdentifier
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
transferListener	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BatchModeMavenTransferListener	TokenNameIdentifier
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
ExecutionListener	TokenNameIdentifier
executionListener	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ExecutionEventLogger	TokenNameIdentifier
(	TokenNameLPAREN
logger	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
executionListener	TokenNameIdentifier
=	TokenNameEQUAL
eventSpyDispatcher	TokenNameIdentifier
.	TokenNameDOT
chainListener	TokenNameIdentifier
(	TokenNameLPAREN
executionListener	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
alternatePomFile	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ALTERNATE_POM_FILE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alternatePomFile	TokenNameIdentifier
=	TokenNameEQUAL
commandLine	TokenNameIdentifier
.	TokenNameDOT
getOptionValue	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ALTERNATE_POM_FILE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
File	TokenNameIdentifier
userToolchainsFile	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ALTERNATE_USER_TOOLCHAINS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
userToolchainsFile	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
getOptionValue	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ALTERNATE_USER_TOOLCHAINS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
userToolchainsFile	TokenNameIdentifier
=	TokenNameEQUAL
resolveFile	TokenNameIdentifier
(	TokenNameLPAREN
userToolchainsFile	TokenNameIdentifier
,	TokenNameCOMMA
workingDirectory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
userToolchainsFile	TokenNameIdentifier
=	TokenNameEQUAL
MavenCli	TokenNameIdentifier
.	TokenNameDOT
DEFAULT_USER_TOOLCHAINS_FILE	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
request	TokenNameIdentifier
.	TokenNameDOT
setBaseDirectory	TokenNameIdentifier
(	TokenNameLPAREN
baseDirectory	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setGoals	TokenNameIdentifier
(	TokenNameLPAREN
goals	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setSystemProperties	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
systemProperties	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setUserProperties	TokenNameIdentifier
(	TokenNameLPAREN
cliRequest	TokenNameIdentifier
.	TokenNameDOT
userProperties	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setReactorFailureBehavior	TokenNameIdentifier
(	TokenNameLPAREN
reactorFailureBehaviour	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setRecursive	TokenNameIdentifier
(	TokenNameLPAREN
recursive	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setShowErrors	TokenNameIdentifier
(	TokenNameLPAREN
showErrors	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
addActiveProfiles	TokenNameIdentifier
(	TokenNameLPAREN
activeProfiles	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
addInactiveProfiles	TokenNameIdentifier
(	TokenNameLPAREN
inactiveProfiles	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setExecutionListener	TokenNameIdentifier
(	TokenNameLPAREN
executionListener	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setTransferListener	TokenNameIdentifier
(	TokenNameLPAREN
transferListener	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setUpdateSnapshots	TokenNameIdentifier
(	TokenNameLPAREN
updateSnapshots	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setNoSnapshotUpdates	TokenNameIdentifier
(	TokenNameLPAREN
noSnapshotUpdates	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setGlobalChecksumPolicy	TokenNameIdentifier
(	TokenNameLPAREN
globalChecksumPolicy	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setUserToolchainsFile	TokenNameIdentifier
(	TokenNameLPAREN
userToolchainsFile	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
alternatePomFile	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
File	TokenNameIdentifier
pom	TokenNameIdentifier
=	TokenNameEQUAL
resolveFile	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
alternatePomFile	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
workingDirectory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
request	TokenNameIdentifier
.	TokenNameDOT
setPom	TokenNameIdentifier
(	TokenNameLPAREN
pom	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
File	TokenNameIdentifier
pom	TokenNameIdentifier
=	TokenNameEQUAL
modelProcessor	TokenNameIdentifier
.	TokenNameDOT
locatePom	TokenNameIdentifier
(	TokenNameLPAREN
baseDirectory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
pom	TokenNameIdentifier
.	TokenNameDOT
isFile	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
request	TokenNameIdentifier
.	TokenNameDOT
setPom	TokenNameIdentifier
(	TokenNameLPAREN
pom	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
request	TokenNameIdentifier
.	TokenNameDOT
getPom	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
request	TokenNameIdentifier
.	TokenNameDOT
getPom	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getParentFile	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
request	TokenNameIdentifier
.	TokenNameDOT
setBaseDirectory	TokenNameIdentifier
(	TokenNameLPAREN
request	TokenNameIdentifier
.	TokenNameDOT
getPom	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getParentFile	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
RESUME_FROM	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
request	TokenNameIdentifier
.	TokenNameDOT
setResumeFrom	TokenNameIdentifier
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
getOptionValue	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
RESUME_FROM	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
PROJECT_LIST	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
values	TokenNameIdentifier
=	TokenNameEQUAL
commandLine	TokenNameIdentifier
.	TokenNameDOT
getOptionValues	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
PROJECT_LIST	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
projects	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
values	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
tmp	TokenNameIdentifier
=	TokenNameEQUAL
StringUtils	TokenNameIdentifier
.	TokenNameDOT
split	TokenNameIdentifier
(	TokenNameLPAREN
values	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
,	TokenNameCOMMA
","	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
projects	TokenNameIdentifier
.	TokenNameDOT
addAll	TokenNameIdentifier
(	TokenNameLPAREN
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
tmp	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
request	TokenNameIdentifier
.	TokenNameDOT
setSelectedProjects	TokenNameIdentifier
(	TokenNameLPAREN
projects	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ALSO_MAKE	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ALSO_MAKE_DEPENDENTS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
request	TokenNameIdentifier
.	TokenNameDOT
setMakeBehavior	TokenNameIdentifier
(	TokenNameLPAREN
MavenExecutionRequest	TokenNameIdentifier
.	TokenNameDOT
REACTOR_MAKE_UPSTREAM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ALSO_MAKE	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ALSO_MAKE_DEPENDENTS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
request	TokenNameIdentifier
.	TokenNameDOT
setMakeBehavior	TokenNameIdentifier
(	TokenNameLPAREN
MavenExecutionRequest	TokenNameIdentifier
.	TokenNameDOT
REACTOR_MAKE_DOWNSTREAM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ALSO_MAKE	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
ALSO_MAKE_DEPENDENTS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
request	TokenNameIdentifier
.	TokenNameDOT
setMakeBehavior	TokenNameIdentifier
(	TokenNameLPAREN
MavenExecutionRequest	TokenNameIdentifier
.	TokenNameDOT
REACTOR_MAKE_BOTH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
String	TokenNameIdentifier
localRepoProperty	TokenNameIdentifier
=	TokenNameEQUAL
request	TokenNameIdentifier
.	TokenNameDOT
getUserProperties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
MavenCli	TokenNameIdentifier
.	TokenNameDOT
LOCAL_REPO_PROPERTY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
localRepoProperty	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
localRepoProperty	TokenNameIdentifier
=	TokenNameEQUAL
request	TokenNameIdentifier
.	TokenNameDOT
getSystemProperties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
MavenCli	TokenNameIdentifier
.	TokenNameDOT
LOCAL_REPO_PROPERTY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
localRepoProperty	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
request	TokenNameIdentifier
.	TokenNameDOT
setLocalRepositoryPath	TokenNameIdentifier
(	TokenNameLPAREN
localRepoProperty	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
String	TokenNameIdentifier
threadConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
THREADS	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
commandLine	TokenNameIdentifier
.	TokenNameDOT
getOptionValue	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
THREADS	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
request	TokenNameIdentifier
.	TokenNameDOT
getSystemProperties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
MavenCli	TokenNameIdentifier
.	TokenNameDOT
THREADS_DEPRECATED	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
threadConfiguration	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
request	TokenNameIdentifier
.	TokenNameDOT
setPerCoreThreadCount	TokenNameIdentifier
(	TokenNameLPAREN
threadConfiguration	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
"C"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
threadConfiguration	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
"W"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
LifecycleWeaveBuilder	TokenNameIdentifier
.	TokenNameDOT
setWeaveMode	TokenNameIdentifier
(	TokenNameLPAREN
request	TokenNameIdentifier
.	TokenNameDOT
getUserProperties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
request	TokenNameIdentifier
.	TokenNameDOT
setThreadCount	TokenNameIdentifier
(	TokenNameLPAREN
threadConfiguration	TokenNameIdentifier
.	TokenNameDOT
replace	TokenNameIdentifier
(	TokenNameLPAREN
"C"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
.	TokenNameDOT
replace	TokenNameIdentifier
(	TokenNameLPAREN
"W"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
.	TokenNameDOT
replace	TokenNameIdentifier
(	TokenNameLPAREN
"auto"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
request	TokenNameIdentifier
.	TokenNameDOT
setCacheNotFound	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
request	TokenNameIdentifier
.	TokenNameDOT
setCacheTransferError	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
request	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
File	TokenNameIdentifier
resolveFile	TokenNameIdentifier
(	TokenNameLPAREN
File	TokenNameIdentifier
file	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
workingDirectory	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
file	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
file	TokenNameIdentifier
.	TokenNameDOT
isAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
file	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
file	TokenNameIdentifier
.	TokenNameDOT
getPath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
File	TokenNameIdentifier
.	TokenNameDOT
separator	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
file	TokenNameIdentifier
.	TokenNameDOT
getAbsoluteFile	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
workingDirectory	TokenNameIdentifier
,	TokenNameCOMMA
file	TokenNameIdentifier
.	TokenNameDOT
getPath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getAbsoluteFile	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
void	TokenNamevoid
populateProperties	TokenNameIdentifier
(	TokenNameLPAREN
CommandLine	TokenNameIdentifier
commandLine	TokenNameIdentifier
,	TokenNameCOMMA
Properties	TokenNameIdentifier
systemProperties	TokenNameIdentifier
,	TokenNameCOMMA
Properties	TokenNameIdentifier
userProperties	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
EnvironmentUtils	TokenNameIdentifier
.	TokenNameDOT
addEnvVars	TokenNameIdentifier
(	TokenNameLPAREN
systemProperties	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
commandLine	TokenNameIdentifier
.	TokenNameDOT
hasOption	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
SET_SYSTEM_PROPERTY	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
defStrs	TokenNameIdentifier
=	TokenNameEQUAL
commandLine	TokenNameIdentifier
.	TokenNameDOT
getOptionValues	TokenNameIdentifier
(	TokenNameLPAREN
CLIManager	TokenNameIdentifier
.	TokenNameDOT
SET_SYSTEM_PROPERTY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
defStrs	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
defStrs	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
setCliProperty	TokenNameIdentifier
(	TokenNameLPAREN
defStrs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
,	TokenNameCOMMA
userProperties	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
systemProperties	TokenNameIdentifier
.	TokenNameDOT
putAll	TokenNameIdentifier
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
getProperties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Properties	TokenNameIdentifier
buildProperties	TokenNameIdentifier
=	TokenNameEQUAL
CLIReportingUtils	TokenNameIdentifier
.	TokenNameDOT
getBuildProperties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
mavenVersion	TokenNameIdentifier
=	TokenNameEQUAL
buildProperties	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
CLIReportingUtils	TokenNameIdentifier
.	TokenNameDOT
BUILD_VERSION_PROPERTY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
systemProperties	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"maven.version"	TokenNameStringLiteral
,	TokenNameCOMMA
mavenVersion	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
mavenBuildVersion	TokenNameIdentifier
=	TokenNameEQUAL
CLIReportingUtils	TokenNameIdentifier
.	TokenNameDOT
createMavenVersionString	TokenNameIdentifier
(	TokenNameLPAREN
buildProperties	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
systemProperties	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"maven.build.version"	TokenNameStringLiteral
,	TokenNameCOMMA
mavenBuildVersion	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
void	TokenNamevoid
setCliProperty	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
property	TokenNameIdentifier
,	TokenNameCOMMA
Properties	TokenNameIdentifier
properties	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
name	TokenNameIdentifier
;	TokenNameSEMICOLON
String	TokenNameIdentifier
value	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
property	TokenNameIdentifier
.	TokenNameDOT
indexOf	TokenNameIdentifier
(	TokenNameLPAREN
"="	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
i	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
name	TokenNameIdentifier
=	TokenNameEQUAL
property	TokenNameIdentifier
.	TokenNameDOT
trim	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
value	TokenNameIdentifier
=	TokenNameEQUAL
"true"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
name	TokenNameIdentifier
=	TokenNameEQUAL
property	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
i	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
trim	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
value	TokenNameIdentifier
=	TokenNameEQUAL
property	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
properties	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
value	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
value	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
class	TokenNameclass
CliRequest	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
;	TokenNameSEMICOLON
CommandLine	TokenNameIdentifier
commandLine	TokenNameIdentifier
;	TokenNameSEMICOLON
ClassWorld	TokenNameIdentifier
classWorld	TokenNameIdentifier
;	TokenNameSEMICOLON
String	TokenNameIdentifier
workingDirectory	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
debug	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
quiet	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
showErrors	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
PrintStream	TokenNameIdentifier
fileStream	TokenNameIdentifier
;	TokenNameSEMICOLON
Properties	TokenNameIdentifier
userProperties	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Properties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Properties	TokenNameIdentifier
systemProperties	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Properties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MavenExecutionRequest	TokenNameIdentifier
request	TokenNameIdentifier
;	TokenNameSEMICOLON
CliRequest	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
,	TokenNameCOMMA
ClassWorld	TokenNameIdentifier
classWorld	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
args	TokenNameIdentifier
=	TokenNameEQUAL
args	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
classWorld	TokenNameIdentifier
=	TokenNameEQUAL
classWorld	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
request	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultMavenExecutionRequest	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
class	TokenNameclass
ExitException	TokenNameIdentifier
extends	TokenNameextends
Exception	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
int	TokenNameint
exitCode	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
ExitException	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
exitCode	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
exitCode	TokenNameIdentifier
=	TokenNameEQUAL
exitCode	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
