package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
artifact	TokenNameIdentifier
.	TokenNameDOT
resolver	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Arrays	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
junit	TokenNameIdentifier
.	TokenNameDOT
framework	TokenNameIdentifier
.	TokenNameDOT
TestCase	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
ArtifactResolutionExceptionTest	TokenNameIdentifier
extends	TokenNameextends
TestCase	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
LS	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"line.separator"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
void	TokenNamevoid
testMissingArtifactMessageFormat	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
message	TokenNameIdentifier
=	TokenNameEQUAL
"Missing artifact"	TokenNameStringLiteral
;	TokenNameSEMICOLON
String	TokenNameIdentifier
indentation	TokenNameIdentifier
=	TokenNameEQUAL
"  "	TokenNameStringLiteral
;	TokenNameSEMICOLON
String	TokenNameIdentifier
groupId	TokenNameIdentifier
=	TokenNameEQUAL
"aGroupId"	TokenNameStringLiteral
;	TokenNameSEMICOLON
String	TokenNameIdentifier
artifactId	TokenNameIdentifier
=	TokenNameEQUAL
"anArtifactId"	TokenNameStringLiteral
;	TokenNameSEMICOLON
String	TokenNameIdentifier
version	TokenNameIdentifier
=	TokenNameEQUAL
"aVersion"	TokenNameStringLiteral
;	TokenNameSEMICOLON
String	TokenNameIdentifier
type	TokenNameIdentifier
=	TokenNameEQUAL
"jar"	TokenNameStringLiteral
;	TokenNameSEMICOLON
String	TokenNameIdentifier
classifier	TokenNameIdentifier
=	TokenNameEQUAL
"aClassifier"	TokenNameStringLiteral
;	TokenNameSEMICOLON
String	TokenNameIdentifier
downloadUrl	TokenNameIdentifier
=	TokenNameEQUAL
"http://somewhere.com/download"	TokenNameStringLiteral
;	TokenNameSEMICOLON
List	TokenNameIdentifier
path	TokenNameIdentifier
=	TokenNameEQUAL
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"dependency1"	TokenNameStringLiteral
,	TokenNameCOMMA
"dependency2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
expected	TokenNameIdentifier
=	TokenNameEQUAL
"Missing artifact"	TokenNameStringLiteral
+	TokenNamePLUS
LS	TokenNameIdentifier
+	TokenNamePLUS
LS	TokenNameIdentifier
+	TokenNamePLUS
"  Try downloading the file manually from: "	TokenNameStringLiteral
+	TokenNamePLUS
LS	TokenNameIdentifier
+	TokenNamePLUS
"      http://somewhere.com/download"	TokenNameStringLiteral
+	TokenNamePLUS
LS	TokenNameIdentifier
+	TokenNamePLUS
LS	TokenNameIdentifier
+	TokenNamePLUS
"  Then, install it using the command: "	TokenNameStringLiteral
+	TokenNamePLUS
LS	TokenNameIdentifier
+	TokenNamePLUS
"      mvn install:install-file -DgroupId=aGroupId -DartifactId=anArtifactId -Dversion=aVersion "	TokenNameStringLiteral
+	TokenNamePLUS
"-Dclassifier=aClassifier -Dpackaging=jar -Dfile=/path/to/file"	TokenNameStringLiteral
+	TokenNamePLUS
LS	TokenNameIdentifier
+	TokenNamePLUS
LS	TokenNameIdentifier
+	TokenNamePLUS
"  Alternatively, if you host your own repository you can deploy the file there: "	TokenNameStringLiteral
+	TokenNamePLUS
LS	TokenNameIdentifier
+	TokenNamePLUS
"      mvn deploy:deploy-file -DgroupId=aGroupId -DartifactId=anArtifactId"	TokenNameStringLiteral
+	TokenNamePLUS
" -Dversion=aVersion -Dclassifier=aClassifier -Dpackaging=jar -Dfile=/path/to/file"	TokenNameStringLiteral
+	TokenNamePLUS
" -Durl=[url] -DrepositoryId=[id]"	TokenNameStringLiteral
+	TokenNamePLUS
LS	TokenNameIdentifier
+	TokenNamePLUS
LS	TokenNameIdentifier
+	TokenNamePLUS
"  Path to dependency: "	TokenNameStringLiteral
+	TokenNamePLUS
LS	TokenNameIdentifier
+	TokenNamePLUS
"   1) dependency1"	TokenNameStringLiteral
+	TokenNamePLUS
LS	TokenNameIdentifier
+	TokenNamePLUS
"   2) dependency2"	TokenNameStringLiteral
+	TokenNamePLUS
LS	TokenNameIdentifier
+	TokenNamePLUS
LS	TokenNameIdentifier
;	TokenNameSEMICOLON
String	TokenNameIdentifier
actual	TokenNameIdentifier
=	TokenNameEQUAL
AbstractArtifactResolutionException	TokenNameIdentifier
.	TokenNameDOT
constructMissingArtifactMessage	TokenNameIdentifier
(	TokenNameLPAREN
message	TokenNameIdentifier
,	TokenNameCOMMA
indentation	TokenNameIdentifier
,	TokenNameCOMMA
groupId	TokenNameIdentifier
,	TokenNameCOMMA
artifactId	TokenNameIdentifier
,	TokenNameCOMMA
version	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
,	TokenNameCOMMA
classifier	TokenNameIdentifier
,	TokenNameCOMMA
downloadUrl	TokenNameIdentifier
,	TokenNameCOMMA
path	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
expected	TokenNameIdentifier
,	TokenNameCOMMA
actual	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
