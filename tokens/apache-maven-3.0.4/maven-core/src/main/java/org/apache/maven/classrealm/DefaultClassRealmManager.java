package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
classrealm	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
File	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
MalformedURLException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ArrayList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Collections	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
HashMap	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
LinkedHashSet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Map	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Random	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Set	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
TreeMap	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
artifact	TokenNameIdentifier
.	TokenNameDOT
ArtifactUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
classrealm	TokenNameIdentifier
.	TokenNameDOT
ClassRealmRequest	TokenNameIdentifier
.	TokenNameDOT
RealmType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
model	TokenNameIdentifier
.	TokenNameDOT
Model	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
model	TokenNameIdentifier
.	TokenNameDOT
Plugin	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
MutablePlexusContainer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
PlexusContainer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
classworlds	TokenNameIdentifier
.	TokenNameDOT
ClassWorld	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
classworlds	TokenNameIdentifier
.	TokenNameDOT
realm	TokenNameIdentifier
.	TokenNameDOT
ClassRealm	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
classworlds	TokenNameIdentifier
.	TokenNameDOT
realm	TokenNameIdentifier
.	TokenNameDOT
DuplicateRealmException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
component	TokenNameIdentifier
.	TokenNameDOT
annotations	TokenNameIdentifier
.	TokenNameDOT
Component	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
component	TokenNameIdentifier
.	TokenNameDOT
annotations	TokenNameIdentifier
.	TokenNameDOT
Requirement	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
component	TokenNameIdentifier
.	TokenNameDOT
repository	TokenNameIdentifier
.	TokenNameDOT
exception	TokenNameIdentifier
.	TokenNameDOT
ComponentLookupException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
logging	TokenNameIdentifier
.	TokenNameDOT
Logger	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
StringUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
sonatype	TokenNameIdentifier
.	TokenNameDOT
aether	TokenNameIdentifier
.	TokenNameDOT
artifact	TokenNameIdentifier
.	TokenNameDOT
Artifact	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Component	TokenNameIdentifier
(	TokenNameLPAREN
role	TokenNameIdentifier
=	TokenNameEQUAL
ClassRealmManager	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
public	TokenNamepublic
class	TokenNameclass
DefaultClassRealmManager	TokenNameIdentifier
implements	TokenNameimplements
ClassRealmManager	TokenNameIdentifier
{	TokenNameLBRACE
@	TokenNameAT
Requirement	TokenNameIdentifier
private	TokenNameprivate
Logger	TokenNameIdentifier
logger	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Requirement	TokenNameIdentifier
protected	TokenNameprotected
PlexusContainer	TokenNameIdentifier
container	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
ClassRealm	TokenNameIdentifier
mavenRealm	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
ClassWorld	TokenNameIdentifier
getClassWorld	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
(	TokenNameLPAREN
MutablePlexusContainer	TokenNameIdentifier
)	TokenNameRPAREN
container	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getClassWorld	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
ClassRealm	TokenNameIdentifier
newRealm	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
id	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ClassWorld	TokenNameIdentifier
world	TokenNameIdentifier
=	TokenNameEQUAL
getClassWorld	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
synchronized	TokenNamesynchronized
(	TokenNameLPAREN
world	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
realmId	TokenNameIdentifier
=	TokenNameEQUAL
id	TokenNameIdentifier
;	TokenNameSEMICOLON
Random	TokenNameIdentifier
random	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Random	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
ClassRealm	TokenNameIdentifier
classRealm	TokenNameIdentifier
=	TokenNameEQUAL
world	TokenNameIdentifier
.	TokenNameDOT
newRealm	TokenNameIdentifier
(	TokenNameLPAREN
realmId	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
isDebugEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"Created new class realm "	TokenNameStringLiteral
+	TokenNamePLUS
realmId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
classRealm	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
DuplicateRealmException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
realmId	TokenNameIdentifier
=	TokenNameEQUAL
id	TokenNameIdentifier
+	TokenNamePLUS
'-'	TokenNameCharacterLiteral
+	TokenNamePLUS
random	TokenNameIdentifier
.	TokenNameDOT
nextInt	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
synchronized	TokenNamesynchronized
ClassRealm	TokenNameIdentifier
getMavenApiRealm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
mavenRealm	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
mavenRealm	TokenNameIdentifier
=	TokenNameEQUAL
newRealm	TokenNameIdentifier
(	TokenNameLPAREN
"maven.api"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
ClassRealmConstituent	TokenNameIdentifier
>	TokenNameGREATER
constituents	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
ClassRealmConstituent	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
parentImports	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ClassLoader	TokenNameIdentifier
>	TokenNameGREATER
foreignImports	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ClassLoader	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
importMavenApi	TokenNameIdentifier
(	TokenNameLPAREN
foreignImports	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
callDelegates	TokenNameIdentifier
(	TokenNameLPAREN
mavenRealm	TokenNameIdentifier
,	TokenNameCOMMA
RealmType	TokenNameIdentifier
.	TokenNameDOT
Core	TokenNameIdentifier
,	TokenNameCOMMA
mavenRealm	TokenNameIdentifier
.	TokenNameDOT
getParentClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
parentImports	TokenNameIdentifier
,	TokenNameCOMMA
foreignImports	TokenNameIdentifier
,	TokenNameCOMMA
constituents	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
wireRealm	TokenNameIdentifier
(	TokenNameLPAREN
mavenRealm	TokenNameIdentifier
,	TokenNameCOMMA
parentImports	TokenNameIdentifier
,	TokenNameCOMMA
foreignImports	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
populateRealm	TokenNameIdentifier
(	TokenNameLPAREN
mavenRealm	TokenNameIdentifier
,	TokenNameCOMMA
constituents	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
mavenRealm	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
importMavenApi	TokenNameIdentifier
(	TokenNameLPAREN
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ClassLoader	TokenNameIdentifier
>	TokenNameGREATER
imports	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ClassRealm	TokenNameIdentifier
coreRealm	TokenNameIdentifier
=	TokenNameEQUAL
getCoreRealm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.*"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.artifact"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.classrealm"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.cli"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.configuration"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.exception"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.execution"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.lifecycle"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.model"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.monitor"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.plugin"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.profiles"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.project"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.reporting"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.repository"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.rtinfo"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.settings"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.toolchain"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.usability"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.wagon.*"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.wagon.authentication"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.wagon.authorization"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.wagon.events"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.wagon.observers"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.wagon.proxy"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.wagon.repository"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.maven.wagon.resource"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.sonatype.aether.*"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.sonatype.aether.artifact"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.sonatype.aether.collection"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.sonatype.aether.deployment"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.sonatype.aether.graph"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.sonatype.aether.impl"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.sonatype.aether.installation"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.sonatype.aether.metadata"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.sonatype.aether.repository"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.sonatype.aether.resolution"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.sonatype.aether.spi"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.sonatype.aether.transfer"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.sonatype.aether.version"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.codehaus.plexus.classworlds"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.codehaus.classworlds"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.codehaus.plexus.*"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.codehaus.plexus.component"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.codehaus.plexus.configuration"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.codehaus.plexus.container"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.codehaus.plexus.context"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.codehaus.plexus.lifecycle"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.codehaus.plexus.logging"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.codehaus.plexus.personality"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.codehaus.plexus.util.xml.Xpp3Dom"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.codehaus.plexus.util.xml.pull.XmlPullParser"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.codehaus.plexus.util.xml.pull.XmlPullParserException"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
imports	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"org.codehaus.plexus.util.xml.pull.XmlSerializer"	TokenNameStringLiteral
,	TokenNameCOMMA
coreRealm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
ClassRealm	TokenNameIdentifier
createRealm	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
baseRealmId	TokenNameIdentifier
,	TokenNameCOMMA
RealmType	TokenNameIdentifier
type	TokenNameIdentifier
,	TokenNameCOMMA
ClassLoader	TokenNameIdentifier
parent	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
parentImports	TokenNameIdentifier
,	TokenNameCOMMA
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ClassLoader	TokenNameIdentifier
>	TokenNameGREATER
foreignImports	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Artifact	TokenNameIdentifier
>	TokenNameGREATER
artifacts	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
artifactIds	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
LinkedHashSet	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
ClassRealmConstituent	TokenNameIdentifier
>	TokenNameGREATER
constituents	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
ClassRealmConstituent	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
artifacts	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
Artifact	TokenNameIdentifier
artifact	TokenNameIdentifier
:	TokenNameCOLON
artifacts	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
artifactIds	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
getId	TokenNameIdentifier
(	TokenNameLPAREN
artifact	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
artifact	TokenNameIdentifier
.	TokenNameDOT
getFile	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
constituents	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
ArtifactClassRealmConstituent	TokenNameIdentifier
(	TokenNameLPAREN
artifact	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
parentImports	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
parentImports	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
parentImports	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
parentImports	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
foreignImports	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
foreignImports	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TreeMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ClassLoader	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
foreignImports	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
foreignImports	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TreeMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ClassLoader	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
ClassRealm	TokenNameIdentifier
classRealm	TokenNameIdentifier
=	TokenNameEQUAL
newRealm	TokenNameIdentifier
(	TokenNameLPAREN
baseRealmId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
parent	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
classRealm	TokenNameIdentifier
.	TokenNameDOT
setParentClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
parent	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
callDelegates	TokenNameIdentifier
(	TokenNameLPAREN
classRealm	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
,	TokenNameCOMMA
parent	TokenNameIdentifier
,	TokenNameCOMMA
parentImports	TokenNameIdentifier
,	TokenNameCOMMA
foreignImports	TokenNameIdentifier
,	TokenNameCOMMA
constituents	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
wireRealm	TokenNameIdentifier
(	TokenNameLPAREN
classRealm	TokenNameIdentifier
,	TokenNameCOMMA
parentImports	TokenNameIdentifier
,	TokenNameCOMMA
foreignImports	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
includedIds	TokenNameIdentifier
=	TokenNameEQUAL
populateRealm	TokenNameIdentifier
(	TokenNameLPAREN
classRealm	TokenNameIdentifier
,	TokenNameCOMMA
constituents	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
isDebugEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
artifactIds	TokenNameIdentifier
.	TokenNameDOT
removeAll	TokenNameIdentifier
(	TokenNameLPAREN
includedIds	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
String	TokenNameIdentifier
id	TokenNameIdentifier
:	TokenNameCOLON
artifactIds	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"  Excluded: "	TokenNameStringLiteral
+	TokenNamePLUS
id	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
classRealm	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ClassRealm	TokenNameIdentifier
getCoreRealm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
container	TokenNameIdentifier
.	TokenNameDOT
getContainerRealm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ClassRealm	TokenNameIdentifier
createProjectRealm	TokenNameIdentifier
(	TokenNameLPAREN
Model	TokenNameIdentifier
model	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Artifact	TokenNameIdentifier
>	TokenNameGREATER
artifacts	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
model	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
"model missing"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
ClassLoader	TokenNameIdentifier
parent	TokenNameIdentifier
=	TokenNameEQUAL
getMavenApiRealm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
createRealm	TokenNameIdentifier
(	TokenNameLPAREN
getKey	TokenNameIdentifier
(	TokenNameLPAREN
model	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
RealmType	TokenNameIdentifier
.	TokenNameDOT
Project	TokenNameIdentifier
,	TokenNameCOMMA
parent	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
artifacts	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
String	TokenNameIdentifier
getKey	TokenNameIdentifier
(	TokenNameLPAREN
Model	TokenNameIdentifier
model	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"project>"	TokenNameStringLiteral
+	TokenNamePLUS
model	TokenNameIdentifier
.	TokenNameDOT
getGroupId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
":"	TokenNameStringLiteral
+	TokenNamePLUS
model	TokenNameIdentifier
.	TokenNameDOT
getArtifactId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
":"	TokenNameStringLiteral
+	TokenNamePLUS
model	TokenNameIdentifier
.	TokenNameDOT
getVersion	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ClassRealm	TokenNameIdentifier
createExtensionRealm	TokenNameIdentifier
(	TokenNameLPAREN
Plugin	TokenNameIdentifier
plugin	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Artifact	TokenNameIdentifier
>	TokenNameGREATER
artifacts	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
plugin	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
"extension plugin missing"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
ClassLoader	TokenNameIdentifier
parent	TokenNameIdentifier
=	TokenNameEQUAL
ClassLoader	TokenNameIdentifier
.	TokenNameDOT
getSystemClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ClassLoader	TokenNameIdentifier
>	TokenNameGREATER
foreignImports	TokenNameIdentifier
=	TokenNameEQUAL
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ClassLoader	TokenNameIdentifier
>	TokenNameGREATER
singletonMap	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
getMavenApiRealm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
createRealm	TokenNameIdentifier
(	TokenNameLPAREN
getKey	TokenNameIdentifier
(	TokenNameLPAREN
plugin	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
,	TokenNameCOMMA
RealmType	TokenNameIdentifier
.	TokenNameDOT
Extension	TokenNameIdentifier
,	TokenNameCOMMA
parent	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
foreignImports	TokenNameIdentifier
,	TokenNameCOMMA
artifacts	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ClassRealm	TokenNameIdentifier
createPluginRealm	TokenNameIdentifier
(	TokenNameLPAREN
Plugin	TokenNameIdentifier
plugin	TokenNameIdentifier
,	TokenNameCOMMA
ClassLoader	TokenNameIdentifier
parent	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
parentImports	TokenNameIdentifier
,	TokenNameCOMMA
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ClassLoader	TokenNameIdentifier
>	TokenNameGREATER
foreignImports	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Artifact	TokenNameIdentifier
>	TokenNameGREATER
artifacts	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
plugin	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
"plugin missing"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
parent	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
parent	TokenNameIdentifier
=	TokenNameEQUAL
ClassLoader	TokenNameIdentifier
.	TokenNameDOT
getSystemClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
createRealm	TokenNameIdentifier
(	TokenNameLPAREN
getKey	TokenNameIdentifier
(	TokenNameLPAREN
plugin	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
,	TokenNameCOMMA
RealmType	TokenNameIdentifier
.	TokenNameDOT
Plugin	TokenNameIdentifier
,	TokenNameCOMMA
parent	TokenNameIdentifier
,	TokenNameCOMMA
parentImports	TokenNameIdentifier
,	TokenNameCOMMA
foreignImports	TokenNameIdentifier
,	TokenNameCOMMA
artifacts	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
String	TokenNameIdentifier
getKey	TokenNameIdentifier
(	TokenNameLPAREN
Plugin	TokenNameIdentifier
plugin	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
extension	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
version	TokenNameIdentifier
=	TokenNameEQUAL
ArtifactUtils	TokenNameIdentifier
.	TokenNameDOT
toSnapshotVersion	TokenNameIdentifier
(	TokenNameLPAREN
plugin	TokenNameIdentifier
.	TokenNameDOT
getVersion	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
(	TokenNameLPAREN
extension	TokenNameIdentifier
?	TokenNameQUESTION
"extension>"	TokenNameStringLiteral
:	TokenNameCOLON
"plugin>"	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
plugin	TokenNameIdentifier
.	TokenNameDOT
getGroupId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
":"	TokenNameStringLiteral
+	TokenNamePLUS
plugin	TokenNameIdentifier
.	TokenNameDOT
getArtifactId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
":"	TokenNameStringLiteral
+	TokenNamePLUS
version	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
String	TokenNameIdentifier
getId	TokenNameIdentifier
(	TokenNameLPAREN
Artifact	TokenNameIdentifier
artifact	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getId	TokenNameIdentifier
(	TokenNameLPAREN
artifact	TokenNameIdentifier
.	TokenNameDOT
getGroupId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
artifact	TokenNameIdentifier
.	TokenNameDOT
getArtifactId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
artifact	TokenNameIdentifier
.	TokenNameDOT
getExtension	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
artifact	TokenNameIdentifier
.	TokenNameDOT
getClassifier	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
artifact	TokenNameIdentifier
.	TokenNameDOT
getBaseVersion	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
String	TokenNameIdentifier
getId	TokenNameIdentifier
(	TokenNameLPAREN
ClassRealmConstituent	TokenNameIdentifier
constituent	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getId	TokenNameIdentifier
(	TokenNameLPAREN
constituent	TokenNameIdentifier
.	TokenNameDOT
getGroupId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
constituent	TokenNameIdentifier
.	TokenNameDOT
getArtifactId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
constituent	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
constituent	TokenNameIdentifier
.	TokenNameDOT
getClassifier	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
constituent	TokenNameIdentifier
.	TokenNameDOT
getVersion	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
String	TokenNameIdentifier
getId	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
gid	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
aid	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
type	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cls	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
ver	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
gid	TokenNameIdentifier
+	TokenNamePLUS
':'	TokenNameCharacterLiteral
+	TokenNamePLUS
aid	TokenNameIdentifier
+	TokenNamePLUS
':'	TokenNameCharacterLiteral
+	TokenNamePLUS
type	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
StringUtils	TokenNameIdentifier
.	TokenNameDOT
isNotEmpty	TokenNameIdentifier
(	TokenNameLPAREN
cls	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
':'	TokenNameCharacterLiteral
+	TokenNamePLUS
cls	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
':'	TokenNameCharacterLiteral
+	TokenNamePLUS
ver	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
List	TokenNameIdentifier
<	TokenNameLESS
ClassRealmManagerDelegate	TokenNameIdentifier
>	TokenNameGREATER
getDelegates	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
container	TokenNameIdentifier
.	TokenNameDOT
lookupList	TokenNameIdentifier
(	TokenNameLPAREN
ClassRealmManagerDelegate	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ComponentLookupException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
"Failed to lookup class realm delegates: "	TokenNameStringLiteral
+	TokenNamePLUS
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
Collections	TokenNameIdentifier
.	TokenNameDOT
emptyList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
callDelegates	TokenNameIdentifier
(	TokenNameLPAREN
ClassRealm	TokenNameIdentifier
classRealm	TokenNameIdentifier
,	TokenNameCOMMA
RealmType	TokenNameIdentifier
type	TokenNameIdentifier
,	TokenNameCOMMA
ClassLoader	TokenNameIdentifier
parent	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
parentImports	TokenNameIdentifier
,	TokenNameCOMMA
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ClassLoader	TokenNameIdentifier
>	TokenNameGREATER
foreignImports	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
ClassRealmConstituent	TokenNameIdentifier
>	TokenNameGREATER
constituents	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
ClassRealmManagerDelegate	TokenNameIdentifier
>	TokenNameGREATER
delegates	TokenNameIdentifier
=	TokenNameEQUAL
getDelegates	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
delegates	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ClassRealmRequest	TokenNameIdentifier
request	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultClassRealmRequest	TokenNameIdentifier
(	TokenNameLPAREN
type	TokenNameIdentifier
,	TokenNameCOMMA
parent	TokenNameIdentifier
,	TokenNameCOMMA
parentImports	TokenNameIdentifier
,	TokenNameCOMMA
foreignImports	TokenNameIdentifier
,	TokenNameCOMMA
constituents	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ClassRealmManagerDelegate	TokenNameIdentifier
delegate	TokenNameIdentifier
:	TokenNameCOLON
delegates	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
delegate	TokenNameIdentifier
.	TokenNameDOT
setupRealm	TokenNameIdentifier
(	TokenNameLPAREN
classRealm	TokenNameIdentifier
,	TokenNameCOMMA
request	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
delegate	TokenNameIdentifier
.	TokenNameDOT
getClass	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
" failed to setup class realm "	TokenNameStringLiteral
+	TokenNamePLUS
classRealm	TokenNameIdentifier
+	TokenNamePLUS
": "	TokenNameStringLiteral
+	TokenNamePLUS
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
populateRealm	TokenNameIdentifier
(	TokenNameLPAREN
ClassRealm	TokenNameIdentifier
classRealm	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
ClassRealmConstituent	TokenNameIdentifier
>	TokenNameGREATER
constituents	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
includedIds	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
LinkedHashSet	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
isDebugEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"Populating class realm "	TokenNameStringLiteral
+	TokenNamePLUS
classRealm	TokenNameIdentifier
.	TokenNameDOT
getId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
ClassRealmConstituent	TokenNameIdentifier
constituent	TokenNameIdentifier
:	TokenNameCOLON
constituents	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
File	TokenNameIdentifier
file	TokenNameIdentifier
=	TokenNameEQUAL
constituent	TokenNameIdentifier
.	TokenNameDOT
getFile	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
id	TokenNameIdentifier
=	TokenNameEQUAL
getId	TokenNameIdentifier
(	TokenNameLPAREN
constituent	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
includedIds	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
id	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
isDebugEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"  Included: "	TokenNameStringLiteral
+	TokenNamePLUS
id	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
classRealm	TokenNameIdentifier
.	TokenNameDOT
addURL	TokenNameIdentifier
(	TokenNameLPAREN
file	TokenNameIdentifier
.	TokenNameDOT
toURI	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
toURL	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MalformedURLException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
includedIds	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
wireRealm	TokenNameIdentifier
(	TokenNameLPAREN
ClassRealm	TokenNameIdentifier
classRealm	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
parentImports	TokenNameIdentifier
,	TokenNameCOMMA
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ClassLoader	TokenNameIdentifier
>	TokenNameGREATER
foreignImports	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
foreignImports	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
!	TokenNameNOT
foreignImports	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
isDebugEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"Importing foreign packages into class realm "	TokenNameStringLiteral
+	TokenNamePLUS
classRealm	TokenNameIdentifier
.	TokenNameDOT
getId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ClassLoader	TokenNameIdentifier
>	TokenNameGREATER
entry	TokenNameIdentifier
:	TokenNameCOLON
foreignImports	TokenNameIdentifier
.	TokenNameDOT
entrySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ClassLoader	TokenNameIdentifier
importedRealm	TokenNameIdentifier
=	TokenNameEQUAL
entry	TokenNameIdentifier
.	TokenNameDOT
getValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
imp	TokenNameIdentifier
=	TokenNameEQUAL
entry	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
isDebugEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"  Imported: "	TokenNameStringLiteral
+	TokenNamePLUS
imp	TokenNameIdentifier
+	TokenNamePLUS
" < "	TokenNameStringLiteral
+	TokenNamePLUS
getId	TokenNameIdentifier
(	TokenNameLPAREN
importedRealm	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
classRealm	TokenNameIdentifier
.	TokenNameDOT
importFrom	TokenNameIdentifier
(	TokenNameLPAREN
importedRealm	TokenNameIdentifier
,	TokenNameCOMMA
imp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
parentImports	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
!	TokenNameNOT
parentImports	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
isDebugEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"Importing parent packages into class realm "	TokenNameStringLiteral
+	TokenNamePLUS
classRealm	TokenNameIdentifier
.	TokenNameDOT
getId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
String	TokenNameIdentifier
imp	TokenNameIdentifier
:	TokenNameCOLON
parentImports	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
isDebugEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"  Imported: "	TokenNameStringLiteral
+	TokenNamePLUS
imp	TokenNameIdentifier
+	TokenNamePLUS
" < "	TokenNameStringLiteral
+	TokenNamePLUS
getId	TokenNameIdentifier
(	TokenNameLPAREN
classRealm	TokenNameIdentifier
.	TokenNameDOT
getParentClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
classRealm	TokenNameIdentifier
.	TokenNameDOT
importFromParent	TokenNameIdentifier
(	TokenNameLPAREN
imp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
String	TokenNameIdentifier
getId	TokenNameIdentifier
(	TokenNameLPAREN
ClassLoader	TokenNameIdentifier
classLoader	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
classLoader	TokenNameIdentifier
instanceof	TokenNameinstanceof
ClassRealm	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
(	TokenNameLPAREN
ClassRealm	TokenNameIdentifier
)	TokenNameRPAREN
classLoader	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
String	TokenNameIdentifier
.	TokenNameDOT
valueOf	TokenNameIdentifier
(	TokenNameLPAREN
classLoader	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
