package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
internal	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ArrayList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Collection	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Collections	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
HashSet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
LinkedHashMap	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Map	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
TreeMap	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
execution	TokenNameIdentifier
.	TokenNameDOT
MavenSession	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
DefaultLifecycles	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
DefaultSchedules	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
Lifecycle	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
LifecycleNotFoundException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
LifecyclePhaseNotFoundException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
MavenExecutionPlan	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
model	TokenNameIdentifier
.	TokenNameDOT
Plugin	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
model	TokenNameIdentifier
.	TokenNameDOT
PluginExecution	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
BuildPluginManager	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
InvalidPluginDescriptorException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
MojoExecution	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
MojoNotFoundException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
PluginDescriptorParsingException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
PluginNotFoundException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
PluginResolutionException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
descriptor	TokenNameIdentifier
.	TokenNameDOT
MojoDescriptor	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
descriptor	TokenNameIdentifier
.	TokenNameDOT
Parameter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
descriptor	TokenNameIdentifier
.	TokenNameDOT
PluginDescriptor	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
Execution	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
Phase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
prefix	TokenNameIdentifier
.	TokenNameDOT
NoPluginFoundForPrefixException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
version	TokenNameIdentifier
.	TokenNameDOT
PluginVersionResolutionException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
version	TokenNameIdentifier
.	TokenNameDOT
PluginVersionResolver	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
project	TokenNameIdentifier
.	TokenNameDOT
MavenProject	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
component	TokenNameIdentifier
.	TokenNameDOT
annotations	TokenNameIdentifier
.	TokenNameDOT
Component	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
component	TokenNameIdentifier
.	TokenNameDOT
annotations	TokenNameIdentifier
.	TokenNameDOT
Requirement	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
StringUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
Xpp3Dom	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
pull	TokenNameIdentifier
.	TokenNameDOT
XmlPullParserException	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Component	TokenNameIdentifier
(	TokenNameLPAREN
role	TokenNameIdentifier
=	TokenNameEQUAL
LifecycleExecutionPlanCalculator	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
public	TokenNamepublic
class	TokenNameclass
DefaultLifecycleExecutionPlanCalculator	TokenNameIdentifier
implements	TokenNameimplements
LifecycleExecutionPlanCalculator	TokenNameIdentifier
{	TokenNameLBRACE
@	TokenNameAT
Requirement	TokenNameIdentifier
private	TokenNameprivate
PluginVersionResolver	TokenNameIdentifier
pluginVersionResolver	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Requirement	TokenNameIdentifier
private	TokenNameprivate
BuildPluginManager	TokenNameIdentifier
pluginManager	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Requirement	TokenNameIdentifier
private	TokenNameprivate
DefaultLifecycles	TokenNameIdentifier
defaultLifeCycles	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Requirement	TokenNameIdentifier
private	TokenNameprivate
DefaultSchedules	TokenNameIdentifier
defaultSchedules	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Requirement	TokenNameIdentifier
private	TokenNameprivate
MojoDescriptorCreator	TokenNameIdentifier
mojoDescriptorCreator	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Requirement	TokenNameIdentifier
private	TokenNameprivate
LifecyclePluginResolver	TokenNameIdentifier
lifecyclePluginResolver	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
SuppressWarnings	TokenNameIdentifier
(	TokenNameLPAREN
{	TokenNameLBRACE
"UnusedDeclaration"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
public	TokenNamepublic
DefaultLifecycleExecutionPlanCalculator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
DefaultLifecycleExecutionPlanCalculator	TokenNameIdentifier
(	TokenNameLPAREN
BuildPluginManager	TokenNameIdentifier
pluginManager	TokenNameIdentifier
,	TokenNameCOMMA
DefaultLifecycles	TokenNameIdentifier
defaultLifeCycles	TokenNameIdentifier
,	TokenNameCOMMA
MojoDescriptorCreator	TokenNameIdentifier
mojoDescriptorCreator	TokenNameIdentifier
,	TokenNameCOMMA
LifecyclePluginResolver	TokenNameIdentifier
lifecyclePluginResolver	TokenNameIdentifier
,	TokenNameCOMMA
DefaultSchedules	TokenNameIdentifier
defaultSchedules	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
pluginManager	TokenNameIdentifier
=	TokenNameEQUAL
pluginManager	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
defaultLifeCycles	TokenNameIdentifier
=	TokenNameEQUAL
defaultLifeCycles	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
mojoDescriptorCreator	TokenNameIdentifier
=	TokenNameEQUAL
mojoDescriptorCreator	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
lifecyclePluginResolver	TokenNameIdentifier
=	TokenNameEQUAL
lifecyclePluginResolver	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
defaultSchedules	TokenNameIdentifier
=	TokenNameEQUAL
defaultSchedules	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
MavenExecutionPlan	TokenNameIdentifier
calculateExecutionPlan	TokenNameIdentifier
(	TokenNameLPAREN
MavenSession	TokenNameIdentifier
session	TokenNameIdentifier
,	TokenNameCOMMA
MavenProject	TokenNameIdentifier
project	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Object	TokenNameIdentifier
>	TokenNameGREATER
tasks	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
setup	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
PluginNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginResolutionException	TokenNameIdentifier
,	TokenNameCOMMA
LifecyclePhaseNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginDescriptorParsingException	TokenNameIdentifier
,	TokenNameCOMMA
MojoNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidPluginDescriptorException	TokenNameIdentifier
,	TokenNameCOMMA
NoPluginFoundForPrefixException	TokenNameIdentifier
,	TokenNameCOMMA
LifecycleNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginVersionResolutionException	TokenNameIdentifier
{	TokenNameLBRACE
lifecyclePluginResolver	TokenNameIdentifier
.	TokenNameDOT
resolveMissingPluginVersions	TokenNameIdentifier
(	TokenNameLPAREN
project	TokenNameIdentifier
,	TokenNameCOMMA
session	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
executions	TokenNameIdentifier
=	TokenNameEQUAL
calculateMojoExecutions	TokenNameIdentifier
(	TokenNameLPAREN
session	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
,	TokenNameCOMMA
tasks	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
setup	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
setupMojoExecutions	TokenNameIdentifier
(	TokenNameLPAREN
session	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
,	TokenNameCOMMA
executions	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
ExecutionPlanItem	TokenNameIdentifier
>	TokenNameGREATER
planItem	TokenNameIdentifier
=	TokenNameEQUAL
defaultSchedules	TokenNameIdentifier
.	TokenNameDOT
createExecutionPlanItem	TokenNameIdentifier
(	TokenNameLPAREN
project	TokenNameIdentifier
,	TokenNameCOMMA
executions	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
MavenExecutionPlan	TokenNameIdentifier
(	TokenNameLPAREN
planItem	TokenNameIdentifier
,	TokenNameCOMMA
defaultLifeCycles	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
MavenExecutionPlan	TokenNameIdentifier
calculateExecutionPlan	TokenNameIdentifier
(	TokenNameLPAREN
MavenSession	TokenNameIdentifier
session	TokenNameIdentifier
,	TokenNameCOMMA
MavenProject	TokenNameIdentifier
project	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Object	TokenNameIdentifier
>	TokenNameGREATER
tasks	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
PluginNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginResolutionException	TokenNameIdentifier
,	TokenNameCOMMA
LifecyclePhaseNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginDescriptorParsingException	TokenNameIdentifier
,	TokenNameCOMMA
MojoNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidPluginDescriptorException	TokenNameIdentifier
,	TokenNameCOMMA
NoPluginFoundForPrefixException	TokenNameIdentifier
,	TokenNameCOMMA
LifecycleNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginVersionResolutionException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
calculateExecutionPlan	TokenNameIdentifier
(	TokenNameLPAREN
session	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
,	TokenNameCOMMA
tasks	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
setupMojoExecutions	TokenNameIdentifier
(	TokenNameLPAREN
MavenSession	TokenNameIdentifier
session	TokenNameIdentifier
,	TokenNameCOMMA
MavenProject	TokenNameIdentifier
project	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
mojoExecutions	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
PluginNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginResolutionException	TokenNameIdentifier
,	TokenNameCOMMA
PluginDescriptorParsingException	TokenNameIdentifier
,	TokenNameCOMMA
MojoNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidPluginDescriptorException	TokenNameIdentifier
,	TokenNameCOMMA
NoPluginFoundForPrefixException	TokenNameIdentifier
,	TokenNameCOMMA
LifecyclePhaseNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
LifecycleNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginVersionResolutionException	TokenNameIdentifier
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
MojoExecution	TokenNameIdentifier
mojoExecution	TokenNameIdentifier
:	TokenNameCOLON
mojoExecutions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
setupMojoExecution	TokenNameIdentifier
(	TokenNameLPAREN
session	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
,	TokenNameCOMMA
mojoExecution	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setupMojoExecution	TokenNameIdentifier
(	TokenNameLPAREN
MavenSession	TokenNameIdentifier
session	TokenNameIdentifier
,	TokenNameCOMMA
MavenProject	TokenNameIdentifier
project	TokenNameIdentifier
,	TokenNameCOMMA
MojoExecution	TokenNameIdentifier
mojoExecution	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
PluginNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginResolutionException	TokenNameIdentifier
,	TokenNameCOMMA
PluginDescriptorParsingException	TokenNameIdentifier
,	TokenNameCOMMA
MojoNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidPluginDescriptorException	TokenNameIdentifier
,	TokenNameCOMMA
NoPluginFoundForPrefixException	TokenNameIdentifier
,	TokenNameCOMMA
LifecyclePhaseNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
LifecycleNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginVersionResolutionException	TokenNameIdentifier
{	TokenNameLBRACE
MojoDescriptor	TokenNameIdentifier
mojoDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
getMojoDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
mojoDescriptor	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
mojoDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
pluginManager	TokenNameIdentifier
.	TokenNameDOT
getMojoDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
getPlugin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
getGoal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
project	TokenNameIdentifier
.	TokenNameDOT
getRemotePluginRepositories	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
session	TokenNameIdentifier
.	TokenNameDOT
getRepositorySession	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
setMojoDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
mojoDescriptor	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
populateMojoExecutionConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
project	TokenNameIdentifier
,	TokenNameCOMMA
mojoExecution	TokenNameIdentifier
,	TokenNameCOMMA
MojoExecution	TokenNameIdentifier
.	TokenNameDOT
Source	TokenNameIdentifier
.	TokenNameDOT
CLI	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
getSource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
finalizeMojoConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
mojoExecution	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
calculateForkedExecutions	TokenNameIdentifier
(	TokenNameLPAREN
mojoExecution	TokenNameIdentifier
,	TokenNameCOMMA
session	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
MojoDescriptor	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
calculateMojoExecutions	TokenNameIdentifier
(	TokenNameLPAREN
MavenSession	TokenNameIdentifier
session	TokenNameIdentifier
,	TokenNameCOMMA
MavenProject	TokenNameIdentifier
project	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Object	TokenNameIdentifier
>	TokenNameGREATER
tasks	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
PluginNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginResolutionException	TokenNameIdentifier
,	TokenNameCOMMA
PluginDescriptorParsingException	TokenNameIdentifier
,	TokenNameCOMMA
MojoNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
NoPluginFoundForPrefixException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidPluginDescriptorException	TokenNameIdentifier
,	TokenNameCOMMA
PluginVersionResolutionException	TokenNameIdentifier
,	TokenNameCOMMA
LifecyclePhaseNotFoundException	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
mojoExecutions	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Object	TokenNameIdentifier
task	TokenNameIdentifier
:	TokenNameCOLON
tasks	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
task	TokenNameIdentifier
instanceof	TokenNameinstanceof
GoalTask	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
pluginGoal	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
GoalTask	TokenNameIdentifier
)	TokenNameRPAREN
task	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
pluginGoal	TokenNameIdentifier
;	TokenNameSEMICOLON
MojoDescriptor	TokenNameIdentifier
mojoDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
mojoDescriptorCreator	TokenNameIdentifier
.	TokenNameDOT
getMojoDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
pluginGoal	TokenNameIdentifier
,	TokenNameCOMMA
session	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MojoExecution	TokenNameIdentifier
mojoExecution	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MojoExecution	TokenNameIdentifier
(	TokenNameLPAREN
mojoDescriptor	TokenNameIdentifier
,	TokenNameCOMMA
"default-cli"	TokenNameStringLiteral
,	TokenNameCOMMA
MojoExecution	TokenNameIdentifier
.	TokenNameDOT
Source	TokenNameIdentifier
.	TokenNameDOT
CLI	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mojoExecutions	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
mojoExecution	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
task	TokenNameIdentifier
instanceof	TokenNameinstanceof
LifecycleTask	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
lifecyclePhase	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
LifecycleTask	TokenNameIdentifier
)	TokenNameRPAREN
task	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getLifecyclePhase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
phaseToMojoMapping	TokenNameIdentifier
=	TokenNameEQUAL
calculateLifecycleMappings	TokenNameIdentifier
(	TokenNameLPAREN
session	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
,	TokenNameCOMMA
lifecyclePhase	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
mojoExecutionsFromLifecycle	TokenNameIdentifier
:	TokenNameCOLON
phaseToMojoMapping	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
mojoExecutions	TokenNameIdentifier
.	TokenNameDOT
addAll	TokenNameIdentifier
(	TokenNameLPAREN
mojoExecutionsFromLifecycle	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IllegalStateException	TokenNameIdentifier
(	TokenNameLPAREN
"unexpected task "	TokenNameStringLiteral
+	TokenNamePLUS
task	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
mojoExecutions	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
calculateLifecycleMappings	TokenNameIdentifier
(	TokenNameLPAREN
MavenSession	TokenNameIdentifier
session	TokenNameIdentifier
,	TokenNameCOMMA
MavenProject	TokenNameIdentifier
project	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
lifecyclePhase	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
LifecyclePhaseNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginResolutionException	TokenNameIdentifier
,	TokenNameCOMMA
PluginDescriptorParsingException	TokenNameIdentifier
,	TokenNameCOMMA
MojoNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidPluginDescriptorException	TokenNameIdentifier
{	TokenNameLBRACE
Lifecycle	TokenNameIdentifier
lifecycle	TokenNameIdentifier
=	TokenNameEQUAL
defaultLifeCycles	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
lifecyclePhase	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
lifecycle	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
LifecyclePhaseNotFoundException	TokenNameIdentifier
(	TokenNameLPAREN
"Unknown lifecycle phase ""	TokenNameStringLiteral
+	TokenNamePLUS
lifecyclePhase	TokenNameIdentifier
+	TokenNamePLUS
"". You must specify a valid lifecycle phase"	TokenNameStringLiteral
+	TokenNamePLUS
" or a goal in the format <plugin-prefix>:<goal> or"	TokenNameStringLiteral
+	TokenNamePLUS
" <plugin-group-id>:<plugin-artifact-id>[:<plugin-version>]:<goal>. Available lifecycle phases are: "	TokenNameStringLiteral
+	TokenNamePLUS
defaultLifeCycles	TokenNameIdentifier
.	TokenNameDOT
getLifecyclePhaseList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
"."	TokenNameStringLiteral
,	TokenNameCOMMA
lifecyclePhase	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
Map	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
mappings	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
LinkedHashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
Map	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
String	TokenNameIdentifier
phase	TokenNameIdentifier
:	TokenNameCOLON
lifecycle	TokenNameIdentifier
.	TokenNameDOT
getPhases	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Map	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
phaseBindings	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TreeMap	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mappings	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
phase	TokenNameIdentifier
,	TokenNameCOMMA
phaseBindings	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
phase	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
lifecyclePhase	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
Plugin	TokenNameIdentifier
plugin	TokenNameIdentifier
:	TokenNameCOLON
project	TokenNameIdentifier
.	TokenNameDOT
getBuild	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getPlugins	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
PluginExecution	TokenNameIdentifier
execution	TokenNameIdentifier
:	TokenNameCOLON
plugin	TokenNameIdentifier
.	TokenNameDOT
getExecutions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
execution	TokenNameIdentifier
.	TokenNameDOT
getPhase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
Map	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
phaseBindings	TokenNameIdentifier
=	TokenNameEQUAL
mappings	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
execution	TokenNameIdentifier
.	TokenNameDOT
getPhase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
phaseBindings	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
String	TokenNameIdentifier
goal	TokenNameIdentifier
:	TokenNameCOLON
execution	TokenNameIdentifier
.	TokenNameDOT
getGoals	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
MojoExecution	TokenNameIdentifier
mojoExecution	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MojoExecution	TokenNameIdentifier
(	TokenNameLPAREN
plugin	TokenNameIdentifier
,	TokenNameCOMMA
goal	TokenNameIdentifier
,	TokenNameCOMMA
execution	TokenNameIdentifier
.	TokenNameDOT
getId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
setLifecyclePhase	TokenNameIdentifier
(	TokenNameLPAREN
execution	TokenNameIdentifier
.	TokenNameDOT
getPhase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addMojoExecution	TokenNameIdentifier
(	TokenNameLPAREN
phaseBindings	TokenNameIdentifier
,	TokenNameCOMMA
mojoExecution	TokenNameIdentifier
,	TokenNameCOMMA
execution	TokenNameIdentifier
.	TokenNameDOT
getPriority	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
String	TokenNameIdentifier
goal	TokenNameIdentifier
:	TokenNameCOLON
execution	TokenNameIdentifier
.	TokenNameDOT
getGoals	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
MojoDescriptor	TokenNameIdentifier
mojoDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
pluginManager	TokenNameIdentifier
.	TokenNameDOT
getMojoDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
plugin	TokenNameIdentifier
,	TokenNameCOMMA
goal	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
.	TokenNameDOT
getRemotePluginRepositories	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
session	TokenNameIdentifier
.	TokenNameDOT
getRepositorySession	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
phaseBindings	TokenNameIdentifier
=	TokenNameEQUAL
mappings	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
mojoDescriptor	TokenNameIdentifier
.	TokenNameDOT
getPhase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
phaseBindings	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
MojoExecution	TokenNameIdentifier
mojoExecution	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MojoExecution	TokenNameIdentifier
(	TokenNameLPAREN
mojoDescriptor	TokenNameIdentifier
,	TokenNameCOMMA
execution	TokenNameIdentifier
.	TokenNameDOT
getId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
setLifecyclePhase	TokenNameIdentifier
(	TokenNameLPAREN
mojoDescriptor	TokenNameIdentifier
.	TokenNameDOT
getPhase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addMojoExecution	TokenNameIdentifier
(	TokenNameLPAREN
phaseBindings	TokenNameIdentifier
,	TokenNameCOMMA
mojoExecution	TokenNameIdentifier
,	TokenNameCOMMA
execution	TokenNameIdentifier
.	TokenNameDOT
getPriority	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
lifecycleMappings	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
LinkedHashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
Map	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
entry	TokenNameIdentifier
:	TokenNameCOLON
mappings	TokenNameIdentifier
.	TokenNameDOT
entrySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
mojoExecutions	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
executions	TokenNameIdentifier
:	TokenNameCOLON
entry	TokenNameIdentifier
.	TokenNameDOT
getValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
mojoExecutions	TokenNameIdentifier
.	TokenNameDOT
addAll	TokenNameIdentifier
(	TokenNameLPAREN
executions	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
lifecycleMappings	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
entry	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
mojoExecutions	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
lifecycleMappings	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
addMojoExecution	TokenNameIdentifier
(	TokenNameLPAREN
Map	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
phaseBindings	TokenNameIdentifier
,	TokenNameCOMMA
MojoExecution	TokenNameIdentifier
mojoExecution	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
priority	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
mojoExecutions	TokenNameIdentifier
=	TokenNameEQUAL
phaseBindings	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
priority	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
mojoExecutions	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
mojoExecutions	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
phaseBindings	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
priority	TokenNameIdentifier
,	TokenNameCOMMA
mojoExecutions	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
mojoExecutions	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
mojoExecution	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
populateMojoExecutionConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
MavenProject	TokenNameIdentifier
project	TokenNameIdentifier
,	TokenNameCOMMA
MojoExecution	TokenNameIdentifier
mojoExecution	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
allowPluginLevelConfig	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
g	TokenNameIdentifier
=	TokenNameEQUAL
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
getGroupId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
a	TokenNameIdentifier
=	TokenNameEQUAL
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
getArtifactId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Plugin	TokenNameIdentifier
plugin	TokenNameIdentifier
=	TokenNameEQUAL
findPlugin	TokenNameIdentifier
(	TokenNameLPAREN
g	TokenNameIdentifier
,	TokenNameCOMMA
a	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
.	TokenNameDOT
getBuildPlugins	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
plugin	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
project	TokenNameIdentifier
.	TokenNameDOT
getPluginManagement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
plugin	TokenNameIdentifier
=	TokenNameEQUAL
findPlugin	TokenNameIdentifier
(	TokenNameLPAREN
g	TokenNameIdentifier
,	TokenNameCOMMA
a	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
.	TokenNameDOT
getPluginManagement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getPlugins	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
plugin	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
PluginExecution	TokenNameIdentifier
pluginExecution	TokenNameIdentifier
=	TokenNameEQUAL
findPluginExecution	TokenNameIdentifier
(	TokenNameLPAREN
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
getExecutionId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
plugin	TokenNameIdentifier
.	TokenNameDOT
getExecutions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Xpp3Dom	TokenNameIdentifier
pomConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
pluginExecution	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
pomConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Xpp3Dom	TokenNameIdentifier
)	TokenNameRPAREN
pluginExecution	TokenNameIdentifier
.	TokenNameDOT
getConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
allowPluginLevelConfig	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
pomConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Xpp3Dom	TokenNameIdentifier
)	TokenNameRPAREN
plugin	TokenNameIdentifier
.	TokenNameDOT
getConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Xpp3Dom	TokenNameIdentifier
mojoConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
pomConfiguration	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
new	TokenNamenew
Xpp3Dom	TokenNameIdentifier
(	TokenNameLPAREN
pomConfiguration	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
;	TokenNameSEMICOLON
mojoConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
Xpp3Dom	TokenNameIdentifier
.	TokenNameDOT
mergeXpp3Dom	TokenNameIdentifier
(	TokenNameLPAREN
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
getConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
mojoConfiguration	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
setConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
mojoConfiguration	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
Plugin	TokenNameIdentifier
findPlugin	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
groupId	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
artifactId	TokenNameIdentifier
,	TokenNameCOMMA
Collection	TokenNameIdentifier
<	TokenNameLESS
Plugin	TokenNameIdentifier
>	TokenNameGREATER
plugins	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
Plugin	TokenNameIdentifier
plugin	TokenNameIdentifier
:	TokenNameCOLON
plugins	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
artifactId	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
plugin	TokenNameIdentifier
.	TokenNameDOT
getArtifactId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
groupId	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
plugin	TokenNameIdentifier
.	TokenNameDOT
getGroupId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
plugin	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
PluginExecution	TokenNameIdentifier
findPluginExecution	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
executionId	TokenNameIdentifier
,	TokenNameCOMMA
Collection	TokenNameIdentifier
<	TokenNameLESS
PluginExecution	TokenNameIdentifier
>	TokenNameGREATER
executions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
StringUtils	TokenNameIdentifier
.	TokenNameDOT
isNotEmpty	TokenNameIdentifier
(	TokenNameLPAREN
executionId	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
PluginExecution	TokenNameIdentifier
execution	TokenNameIdentifier
:	TokenNameCOLON
executions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
executionId	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
execution	TokenNameIdentifier
.	TokenNameDOT
getId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
execution	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
finalizeMojoConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
MojoExecution	TokenNameIdentifier
mojoExecution	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
MojoDescriptor	TokenNameIdentifier
mojoDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
getMojoDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Xpp3Dom	TokenNameIdentifier
executionConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
getConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
executionConfiguration	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
executionConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Xpp3Dom	TokenNameIdentifier
(	TokenNameLPAREN
"configuration"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Xpp3Dom	TokenNameIdentifier
defaultConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
getMojoConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
mojoDescriptor	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Xpp3Dom	TokenNameIdentifier
finalConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Xpp3Dom	TokenNameIdentifier
(	TokenNameLPAREN
"configuration"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
mojoDescriptor	TokenNameIdentifier
.	TokenNameDOT
getParameters	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
Parameter	TokenNameIdentifier
parameter	TokenNameIdentifier
:	TokenNameCOLON
mojoDescriptor	TokenNameIdentifier
.	TokenNameDOT
getParameters	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Xpp3Dom	TokenNameIdentifier
parameterConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
executionConfiguration	TokenNameIdentifier
.	TokenNameDOT
getChild	TokenNameIdentifier
(	TokenNameLPAREN
parameter	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
parameterConfiguration	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
parameterConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
executionConfiguration	TokenNameIdentifier
.	TokenNameDOT
getChild	TokenNameIdentifier
(	TokenNameLPAREN
parameter	TokenNameIdentifier
.	TokenNameDOT
getAlias	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Xpp3Dom	TokenNameIdentifier
parameterDefaults	TokenNameIdentifier
=	TokenNameEQUAL
defaultConfiguration	TokenNameIdentifier
.	TokenNameDOT
getChild	TokenNameIdentifier
(	TokenNameLPAREN
parameter	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
parameterConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
Xpp3Dom	TokenNameIdentifier
.	TokenNameDOT
mergeXpp3Dom	TokenNameIdentifier
(	TokenNameLPAREN
parameterConfiguration	TokenNameIdentifier
,	TokenNameCOMMA
parameterDefaults	TokenNameIdentifier
,	TokenNameCOMMA
Boolean	TokenNameIdentifier
.	TokenNameDOT
TRUE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
parameterConfiguration	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
parameterConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Xpp3Dom	TokenNameIdentifier
(	TokenNameLPAREN
parameterConfiguration	TokenNameIdentifier
,	TokenNameCOMMA
parameter	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
StringUtils	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
parameterConfiguration	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
"implementation"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
StringUtils	TokenNameIdentifier
.	TokenNameDOT
isNotEmpty	TokenNameIdentifier
(	TokenNameLPAREN
parameter	TokenNameIdentifier
.	TokenNameDOT
getImplementation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
parameterConfiguration	TokenNameIdentifier
.	TokenNameDOT
setAttribute	TokenNameIdentifier
(	TokenNameLPAREN
"implementation"	TokenNameStringLiteral
,	TokenNameCOMMA
parameter	TokenNameIdentifier
.	TokenNameDOT
getImplementation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finalConfiguration	TokenNameIdentifier
.	TokenNameDOT
addChild	TokenNameIdentifier
(	TokenNameLPAREN
parameterConfiguration	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
setConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
finalConfiguration	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Xpp3Dom	TokenNameIdentifier
getMojoConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
MojoDescriptor	TokenNameIdentifier
mojoDescriptor	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
MojoDescriptorCreator	TokenNameIdentifier
.	TokenNameDOT
convert	TokenNameIdentifier
(	TokenNameLPAREN
mojoDescriptor	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
calculateForkedExecutions	TokenNameIdentifier
(	TokenNameLPAREN
MojoExecution	TokenNameIdentifier
mojoExecution	TokenNameIdentifier
,	TokenNameCOMMA
MavenSession	TokenNameIdentifier
session	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
MojoNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginResolutionException	TokenNameIdentifier
,	TokenNameCOMMA
PluginDescriptorParsingException	TokenNameIdentifier
,	TokenNameCOMMA
NoPluginFoundForPrefixException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidPluginDescriptorException	TokenNameIdentifier
,	TokenNameCOMMA
LifecyclePhaseNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
LifecycleNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginVersionResolutionException	TokenNameIdentifier
{	TokenNameLBRACE
calculateForkedExecutions	TokenNameIdentifier
(	TokenNameLPAREN
mojoExecution	TokenNameIdentifier
,	TokenNameCOMMA
session	TokenNameIdentifier
,	TokenNameCOMMA
session	TokenNameIdentifier
.	TokenNameDOT
getCurrentProject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
MojoDescriptor	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
calculateForkedExecutions	TokenNameIdentifier
(	TokenNameLPAREN
MojoExecution	TokenNameIdentifier
mojoExecution	TokenNameIdentifier
,	TokenNameCOMMA
MavenSession	TokenNameIdentifier
session	TokenNameIdentifier
,	TokenNameCOMMA
MavenProject	TokenNameIdentifier
project	TokenNameIdentifier
,	TokenNameCOMMA
Collection	TokenNameIdentifier
<	TokenNameLESS
MojoDescriptor	TokenNameIdentifier
>	TokenNameGREATER
alreadyForkedExecutions	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
MojoNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginResolutionException	TokenNameIdentifier
,	TokenNameCOMMA
PluginDescriptorParsingException	TokenNameIdentifier
,	TokenNameCOMMA
NoPluginFoundForPrefixException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidPluginDescriptorException	TokenNameIdentifier
,	TokenNameCOMMA
LifecyclePhaseNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
LifecycleNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginVersionResolutionException	TokenNameIdentifier
{	TokenNameLBRACE
MojoDescriptor	TokenNameIdentifier
mojoDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
getMojoDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
mojoDescriptor	TokenNameIdentifier
.	TokenNameDOT
isForking	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
alreadyForkedExecutions	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
mojoDescriptor	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
List	TokenNameIdentifier
<	TokenNameLESS
MavenProject	TokenNameIdentifier
>	TokenNameGREATER
forkedProjects	TokenNameIdentifier
=	TokenNameEQUAL
LifecycleDependencyResolver	TokenNameIdentifier
.	TokenNameDOT
getProjects	TokenNameIdentifier
(	TokenNameLPAREN
project	TokenNameIdentifier
,	TokenNameCOMMA
session	TokenNameIdentifier
,	TokenNameCOMMA
mojoDescriptor	TokenNameIdentifier
.	TokenNameDOT
isAggregator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
MavenProject	TokenNameIdentifier
forkedProject	TokenNameIdentifier
:	TokenNameCOLON
forkedProjects	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
forkedProject	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
project	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
lifecyclePluginResolver	TokenNameIdentifier
.	TokenNameDOT
resolveMissingPluginVersions	TokenNameIdentifier
(	TokenNameLPAREN
forkedProject	TokenNameIdentifier
,	TokenNameCOMMA
session	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
forkedExecutions	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
StringUtils	TokenNameIdentifier
.	TokenNameDOT
isNotEmpty	TokenNameIdentifier
(	TokenNameLPAREN
mojoDescriptor	TokenNameIdentifier
.	TokenNameDOT
getExecutePhase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
forkedExecutions	TokenNameIdentifier
=	TokenNameEQUAL
calculateForkedLifecycle	TokenNameIdentifier
(	TokenNameLPAREN
mojoExecution	TokenNameIdentifier
,	TokenNameCOMMA
session	TokenNameIdentifier
,	TokenNameCOMMA
forkedProject	TokenNameIdentifier
,	TokenNameCOMMA
alreadyForkedExecutions	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
forkedExecutions	TokenNameIdentifier
=	TokenNameEQUAL
calculateForkedGoal	TokenNameIdentifier
(	TokenNameLPAREN
mojoExecution	TokenNameIdentifier
,	TokenNameCOMMA
session	TokenNameIdentifier
,	TokenNameCOMMA
forkedProject	TokenNameIdentifier
,	TokenNameCOMMA
alreadyForkedExecutions	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
setForkedExecutions	TokenNameIdentifier
(	TokenNameLPAREN
BuilderCommon	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
forkedProject	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
forkedExecutions	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
alreadyForkedExecutions	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
mojoDescriptor	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
calculateForkedLifecycle	TokenNameIdentifier
(	TokenNameLPAREN
MojoExecution	TokenNameIdentifier
mojoExecution	TokenNameIdentifier
,	TokenNameCOMMA
MavenSession	TokenNameIdentifier
session	TokenNameIdentifier
,	TokenNameCOMMA
MavenProject	TokenNameIdentifier
project	TokenNameIdentifier
,	TokenNameCOMMA
Collection	TokenNameIdentifier
<	TokenNameLESS
MojoDescriptor	TokenNameIdentifier
>	TokenNameGREATER
alreadyForkedExecutions	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
MojoNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginResolutionException	TokenNameIdentifier
,	TokenNameCOMMA
PluginDescriptorParsingException	TokenNameIdentifier
,	TokenNameCOMMA
NoPluginFoundForPrefixException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidPluginDescriptorException	TokenNameIdentifier
,	TokenNameCOMMA
LifecyclePhaseNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
LifecycleNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginVersionResolutionException	TokenNameIdentifier
{	TokenNameLBRACE
MojoDescriptor	TokenNameIdentifier
mojoDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
getMojoDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
forkedPhase	TokenNameIdentifier
=	TokenNameEQUAL
mojoDescriptor	TokenNameIdentifier
.	TokenNameDOT
getExecutePhase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
lifecycleMappings	TokenNameIdentifier
=	TokenNameEQUAL
calculateLifecycleMappings	TokenNameIdentifier
(	TokenNameLPAREN
session	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
,	TokenNameCOMMA
forkedPhase	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
forkedExecutions	TokenNameIdentifier
:	TokenNameCOLON
lifecycleMappings	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
MojoExecution	TokenNameIdentifier
forkedExecution	TokenNameIdentifier
:	TokenNameCOLON
forkedExecutions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
forkedExecution	TokenNameIdentifier
.	TokenNameDOT
getMojoDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
MojoDescriptor	TokenNameIdentifier
forkedMojoDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
pluginManager	TokenNameIdentifier
.	TokenNameDOT
getMojoDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
forkedExecution	TokenNameIdentifier
.	TokenNameDOT
getPlugin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
forkedExecution	TokenNameIdentifier
.	TokenNameDOT
getGoal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
project	TokenNameIdentifier
.	TokenNameDOT
getRemotePluginRepositories	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
session	TokenNameIdentifier
.	TokenNameDOT
getRepositorySession	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
forkedExecution	TokenNameIdentifier
.	TokenNameDOT
setMojoDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
forkedMojoDescriptor	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
populateMojoExecutionConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
project	TokenNameIdentifier
,	TokenNameCOMMA
forkedExecution	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
injectLifecycleOverlay	TokenNameIdentifier
(	TokenNameLPAREN
lifecycleMappings	TokenNameIdentifier
,	TokenNameCOMMA
mojoExecution	TokenNameIdentifier
,	TokenNameCOMMA
session	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
mojoExecutions	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
forkedExecutions	TokenNameIdentifier
:	TokenNameCOLON
lifecycleMappings	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
MojoExecution	TokenNameIdentifier
forkedExecution	TokenNameIdentifier
:	TokenNameCOLON
forkedExecutions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
alreadyForkedExecutions	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
forkedExecution	TokenNameIdentifier
.	TokenNameDOT
getMojoDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
finalizeMojoConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
forkedExecution	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
calculateForkedExecutions	TokenNameIdentifier
(	TokenNameLPAREN
forkedExecution	TokenNameIdentifier
,	TokenNameCOMMA
session	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
,	TokenNameCOMMA
alreadyForkedExecutions	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mojoExecutions	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
forkedExecution	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
mojoExecutions	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
injectLifecycleOverlay	TokenNameIdentifier
(	TokenNameLPAREN
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
lifecycleMappings	TokenNameIdentifier
,	TokenNameCOMMA
MojoExecution	TokenNameIdentifier
mojoExecution	TokenNameIdentifier
,	TokenNameCOMMA
MavenSession	TokenNameIdentifier
session	TokenNameIdentifier
,	TokenNameCOMMA
MavenProject	TokenNameIdentifier
project	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
PluginDescriptorParsingException	TokenNameIdentifier
,	TokenNameCOMMA
LifecycleNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
MojoNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginResolutionException	TokenNameIdentifier
,	TokenNameCOMMA
NoPluginFoundForPrefixException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidPluginDescriptorException	TokenNameIdentifier
,	TokenNameCOMMA
PluginVersionResolutionException	TokenNameIdentifier
{	TokenNameLBRACE
MojoDescriptor	TokenNameIdentifier
mojoDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
getMojoDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
PluginDescriptor	TokenNameIdentifier
pluginDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
mojoDescriptor	TokenNameIdentifier
.	TokenNameDOT
getPluginDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
forkedLifecycle	TokenNameIdentifier
=	TokenNameEQUAL
mojoDescriptor	TokenNameIdentifier
.	TokenNameDOT
getExecuteLifecycle	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
StringUtils	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
forkedLifecycle	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
plugin	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
Lifecycle	TokenNameIdentifier
lifecycleOverlay	TokenNameIdentifier
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
lifecycleOverlay	TokenNameIdentifier
=	TokenNameEQUAL
pluginDescriptor	TokenNameIdentifier
.	TokenNameDOT
getLifecycleMapping	TokenNameIdentifier
(	TokenNameLPAREN
forkedLifecycle	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
IOException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
PluginDescriptorParsingException	TokenNameIdentifier
(	TokenNameLPAREN
pluginDescriptor	TokenNameIdentifier
.	TokenNameDOT
getPlugin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
pluginDescriptor	TokenNameIdentifier
.	TokenNameDOT
getSource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
XmlPullParserException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
PluginDescriptorParsingException	TokenNameIdentifier
(	TokenNameLPAREN
pluginDescriptor	TokenNameIdentifier
.	TokenNameDOT
getPlugin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
pluginDescriptor	TokenNameIdentifier
.	TokenNameDOT
getSource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
lifecycleOverlay	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
LifecycleNotFoundException	TokenNameIdentifier
(	TokenNameLPAREN
forkedLifecycle	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
Phase	TokenNameIdentifier
phase	TokenNameIdentifier
:	TokenNameCOLON
lifecycleOverlay	TokenNameIdentifier
.	TokenNameDOT
getPhases	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
forkedExecutions	TokenNameIdentifier
=	TokenNameEQUAL
lifecycleMappings	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
phase	TokenNameIdentifier
.	TokenNameDOT
getId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
forkedExecutions	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
Execution	TokenNameIdentifier
execution	TokenNameIdentifier
:	TokenNameCOLON
phase	TokenNameIdentifier
.	TokenNameDOT
getExecutions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
String	TokenNameIdentifier
goal	TokenNameIdentifier
:	TokenNameCOLON
execution	TokenNameIdentifier
.	TokenNameDOT
getGoals	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
MojoDescriptor	TokenNameIdentifier
forkedMojoDescriptor	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
goal	TokenNameIdentifier
.	TokenNameDOT
indexOf	TokenNameIdentifier
(	TokenNameLPAREN
':'	TokenNameCharacterLiteral
)	TokenNameRPAREN
<	TokenNameLESS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
forkedMojoDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
pluginDescriptor	TokenNameIdentifier
.	TokenNameDOT
getMojo	TokenNameIdentifier
(	TokenNameLPAREN
goal	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
forkedMojoDescriptor	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
MojoNotFoundException	TokenNameIdentifier
(	TokenNameLPAREN
goal	TokenNameIdentifier
,	TokenNameCOMMA
pluginDescriptor	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
forkedMojoDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
mojoDescriptorCreator	TokenNameIdentifier
.	TokenNameDOT
getMojoDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
goal	TokenNameIdentifier
,	TokenNameCOMMA
session	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
MojoExecution	TokenNameIdentifier
forkedExecution	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MojoExecution	TokenNameIdentifier
(	TokenNameLPAREN
forkedMojoDescriptor	TokenNameIdentifier
,	TokenNameCOMMA
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
getExecutionId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Xpp3Dom	TokenNameIdentifier
forkedConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Xpp3Dom	TokenNameIdentifier
)	TokenNameRPAREN
execution	TokenNameIdentifier
.	TokenNameDOT
getConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
forkedExecution	TokenNameIdentifier
.	TokenNameDOT
setConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
forkedConfiguration	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
populateMojoExecutionConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
project	TokenNameIdentifier
,	TokenNameCOMMA
forkedExecution	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
forkedExecutions	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
forkedExecution	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
Xpp3Dom	TokenNameIdentifier
phaseConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Xpp3Dom	TokenNameIdentifier
)	TokenNameRPAREN
phase	TokenNameIdentifier
.	TokenNameDOT
getConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
phaseConfiguration	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
MojoExecution	TokenNameIdentifier
forkedExecution	TokenNameIdentifier
:	TokenNameCOLON
forkedExecutions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Xpp3Dom	TokenNameIdentifier
forkedConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
forkedExecution	TokenNameIdentifier
.	TokenNameDOT
getConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
forkedConfiguration	TokenNameIdentifier
=	TokenNameEQUAL
Xpp3Dom	TokenNameIdentifier
.	TokenNameDOT
mergeXpp3Dom	TokenNameIdentifier
(	TokenNameLPAREN
phaseConfiguration	TokenNameIdentifier
,	TokenNameCOMMA
forkedConfiguration	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
forkedExecution	TokenNameIdentifier
.	TokenNameDOT
setConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
forkedConfiguration	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
List	TokenNameIdentifier
<	TokenNameLESS
MojoExecution	TokenNameIdentifier
>	TokenNameGREATER
calculateForkedGoal	TokenNameIdentifier
(	TokenNameLPAREN
MojoExecution	TokenNameIdentifier
mojoExecution	TokenNameIdentifier
,	TokenNameCOMMA
MavenSession	TokenNameIdentifier
session	TokenNameIdentifier
,	TokenNameCOMMA
MavenProject	TokenNameIdentifier
project	TokenNameIdentifier
,	TokenNameCOMMA
Collection	TokenNameIdentifier
<	TokenNameLESS
MojoDescriptor	TokenNameIdentifier
>	TokenNameGREATER
alreadyForkedExecutions	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
MojoNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginResolutionException	TokenNameIdentifier
,	TokenNameCOMMA
PluginDescriptorParsingException	TokenNameIdentifier
,	TokenNameCOMMA
NoPluginFoundForPrefixException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidPluginDescriptorException	TokenNameIdentifier
,	TokenNameCOMMA
LifecyclePhaseNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
LifecycleNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
PluginVersionResolutionException	TokenNameIdentifier
{	TokenNameLBRACE
MojoDescriptor	TokenNameIdentifier
mojoDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
mojoExecution	TokenNameIdentifier
.	TokenNameDOT
getMojoDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
PluginDescriptor	TokenNameIdentifier
pluginDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
mojoDescriptor	TokenNameIdentifier
.	TokenNameDOT
getPluginDescriptor	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
forkedGoal	TokenNameIdentifier
=	TokenNameEQUAL
mojoDescriptor	TokenNameIdentifier
.	TokenNameDOT
getExecuteGoal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MojoDescriptor	TokenNameIdentifier
forkedMojoDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
pluginDescriptor	TokenNameIdentifier
.	TokenNameDOT
getMojo	TokenNameIdentifier
(	TokenNameLPAREN
forkedGoal	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
forkedMojoDescriptor	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
MojoNotFoundException	TokenNameIdentifier
(	TokenNameLPAREN
forkedGoal	TokenNameIdentifier
,	TokenNameCOMMA
pluginDescriptor	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
alreadyForkedExecutions	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
forkedMojoDescriptor	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
Collections	TokenNameIdentifier
.	TokenNameDOT
emptyList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
MojoExecution	TokenNameIdentifier
forkedExecution	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MojoExecution	TokenNameIdentifier
(	TokenNameLPAREN
forkedMojoDescriptor	TokenNameIdentifier
,	TokenNameCOMMA
forkedGoal	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
populateMojoExecutionConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
project	TokenNameIdentifier
,	TokenNameCOMMA
forkedExecution	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
finalizeMojoConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
forkedExecution	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
calculateForkedExecutions	TokenNameIdentifier
(	TokenNameLPAREN
forkedExecution	TokenNameIdentifier
,	TokenNameCOMMA
session	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
,	TokenNameCOMMA
alreadyForkedExecutions	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
Collections	TokenNameIdentifier
.	TokenNameDOT
singletonList	TokenNameIdentifier
(	TokenNameLPAREN
forkedExecution	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
