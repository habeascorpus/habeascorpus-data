package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
internal	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
artifact	TokenNameIdentifier
.	TokenNameDOT
Artifact	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
artifact	TokenNameIdentifier
.	TokenNameDOT
ArtifactUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
execution	TokenNameIdentifier
.	TokenNameDOT
BuildSuccess	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
execution	TokenNameIdentifier
.	TokenNameDOT
ExecutionEvent	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
execution	TokenNameIdentifier
.	TokenNameDOT
MavenExecutionRequest	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
execution	TokenNameIdentifier
.	TokenNameDOT
MavenSession	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
LifecycleExecutionException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
MavenExecutionPlan	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
lifecycle	TokenNameIdentifier
.	TokenNameDOT
Schedule	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
maven	TokenNameIdentifier
.	TokenNameDOT
project	TokenNameIdentifier
.	TokenNameDOT
MavenProject	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
component	TokenNameIdentifier
.	TokenNameDOT
annotations	TokenNameIdentifier
.	TokenNameDOT
Component	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
component	TokenNameIdentifier
.	TokenNameDOT
annotations	TokenNameIdentifier
.	TokenNameDOT
Requirement	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
codehaus	TokenNameIdentifier
.	TokenNameDOT
plexus	TokenNameIdentifier
.	TokenNameDOT
logging	TokenNameIdentifier
.	TokenNameDOT
Logger	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ArrayList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Collection	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
HashMap	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
HashSet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Iterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Map	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Properties	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Set	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
Callable	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
CompletionService	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
ExecutionException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
ExecutorCompletionService	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
ExecutorService	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
Future	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Component	TokenNameIdentifier
(	TokenNameLPAREN
role	TokenNameIdentifier
=	TokenNameEQUAL
LifecycleWeaveBuilder	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
public	TokenNamepublic
class	TokenNameclass
LifecycleWeaveBuilder	TokenNameIdentifier
{	TokenNameLBRACE
@	TokenNameAT
Requirement	TokenNameIdentifier
private	TokenNameprivate
MojoExecutor	TokenNameIdentifier
mojoExecutor	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Requirement	TokenNameIdentifier
private	TokenNameprivate
BuilderCommon	TokenNameIdentifier
builderCommon	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Requirement	TokenNameIdentifier
private	TokenNameprivate
Logger	TokenNameIdentifier
logger	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Requirement	TokenNameIdentifier
private	TokenNameprivate
ExecutionEventCatapult	TokenNameIdentifier
eventCatapult	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
Map	TokenNameIdentifier
<	TokenNameLESS
MavenProject	TokenNameIdentifier
,	TokenNameCOMMA
MavenExecutionPlan	TokenNameIdentifier
>	TokenNameGREATER
executionPlans	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
MavenProject	TokenNameIdentifier
,	TokenNameCOMMA
MavenExecutionPlan	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
@	TokenNameAT
SuppressWarnings	TokenNameIdentifier
(	TokenNameLPAREN
{	TokenNameLBRACE
"UnusedDeclaration"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
public	TokenNamepublic
LifecycleWeaveBuilder	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
LifecycleWeaveBuilder	TokenNameIdentifier
(	TokenNameLPAREN
MojoExecutor	TokenNameIdentifier
mojoExecutor	TokenNameIdentifier
,	TokenNameCOMMA
BuilderCommon	TokenNameIdentifier
builderCommon	TokenNameIdentifier
,	TokenNameCOMMA
Logger	TokenNameIdentifier
logger	TokenNameIdentifier
,	TokenNameCOMMA
ExecutionEventCatapult	TokenNameIdentifier
eventCatapult	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
mojoExecutor	TokenNameIdentifier
=	TokenNameEQUAL
mojoExecutor	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
builderCommon	TokenNameIdentifier
=	TokenNameEQUAL
builderCommon	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
logger	TokenNameIdentifier
=	TokenNameEQUAL
logger	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
eventCatapult	TokenNameIdentifier
=	TokenNameEQUAL
eventCatapult	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
build	TokenNameIdentifier
(	TokenNameLPAREN
ProjectBuildList	TokenNameIdentifier
projectBuilds	TokenNameIdentifier
,	TokenNameCOMMA
ReactorContext	TokenNameIdentifier
buildContext	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
TaskSegment	TokenNameIdentifier
>	TokenNameGREATER
taskSegments	TokenNameIdentifier
,	TokenNameCOMMA
MavenSession	TokenNameIdentifier
session	TokenNameIdentifier
,	TokenNameCOMMA
ExecutorService	TokenNameIdentifier
executor	TokenNameIdentifier
,	TokenNameCOMMA
ReactorBuildStatus	TokenNameIdentifier
reactorBuildStatus	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ExecutionException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
ConcurrentBuildLogger	TokenNameIdentifier
concurrentBuildLogger	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ConcurrentBuildLogger	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CompletionService	TokenNameIdentifier
<	TokenNameLESS
ProjectSegment	TokenNameIdentifier
>	TokenNameGREATER
service	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ExecutorCompletionService	TokenNameIdentifier
<	TokenNameLESS
ProjectSegment	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
executor	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
MavenProject	TokenNameIdentifier
mavenProject	TokenNameIdentifier
:	TokenNameCOLON
session	TokenNameIdentifier
.	TokenNameDOT
getProjects	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Artifact	TokenNameIdentifier
mainArtifact	TokenNameIdentifier
=	TokenNameEQUAL
mavenProject	TokenNameIdentifier
.	TokenNameDOT
getArtifact	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
mainArtifact	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
!	TokenNameNOT
(	TokenNameLPAREN
mainArtifact	TokenNameIdentifier
instanceof	TokenNameinstanceof
ThreadLockedArtifact	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ThreadLockedArtifact	TokenNameIdentifier
threadLockedArtifact	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ThreadLockedArtifact	TokenNameIdentifier
(	TokenNameLPAREN
mainArtifact	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mavenProject	TokenNameIdentifier
.	TokenNameDOT
setArtifact	TokenNameIdentifier
(	TokenNameLPAREN
threadLockedArtifact	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
Future	TokenNameIdentifier
<	TokenNameLESS
ProjectSegment	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
futures	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Future	TokenNameIdentifier
<	TokenNameLESS
ProjectSegment	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
Map	TokenNameIdentifier
<	TokenNameLESS
ProjectSegment	TokenNameIdentifier
,	TokenNameCOMMA
Future	TokenNameIdentifier
<	TokenNameLESS
MavenExecutionPlan	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
plans	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
ProjectSegment	TokenNameIdentifier
,	TokenNameCOMMA
Future	TokenNameIdentifier
<	TokenNameLESS
MavenExecutionPlan	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
TaskSegment	TokenNameIdentifier
taskSegment	TokenNameIdentifier
:	TokenNameCOLON
taskSegments	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ProjectBuildList	TokenNameIdentifier
segmentChunks	TokenNameIdentifier
=	TokenNameEQUAL
projectBuilds	TokenNameIdentifier
.	TokenNameDOT
getByTaskSegment	TokenNameIdentifier
(	TokenNameLPAREN
taskSegment	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
Artifact	TokenNameIdentifier
>	TokenNameGREATER
projectArtifacts	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
Artifact	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ProjectSegment	TokenNameIdentifier
segmentChunk	TokenNameIdentifier
:	TokenNameCOLON
segmentChunks	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Artifact	TokenNameIdentifier
artifact	TokenNameIdentifier
=	TokenNameEQUAL
segmentChunk	TokenNameIdentifier
.	TokenNameDOT
getProject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getArtifact	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
artifact	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
projectArtifacts	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
artifact	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
ProjectSegment	TokenNameIdentifier
projectBuild	TokenNameIdentifier
:	TokenNameCOLON
segmentChunks	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
plans	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
projectBuild	TokenNameIdentifier
,	TokenNameCOMMA
executor	TokenNameIdentifier
.	TokenNameDOT
submit	TokenNameIdentifier
(	TokenNameLPAREN
createEPFuture	TokenNameIdentifier
(	TokenNameLPAREN
projectBuild	TokenNameIdentifier
,	TokenNameCOMMA
projectArtifacts	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
ProjectSegment	TokenNameIdentifier
projectSegment	TokenNameIdentifier
:	TokenNameCOLON
plans	TokenNameIdentifier
.	TokenNameDOT
keySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
executionPlans	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
projectSegment	TokenNameIdentifier
.	TokenNameDOT
getProject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
plans	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
projectSegment	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
ProjectSegment	TokenNameIdentifier
projectBuild	TokenNameIdentifier
:	TokenNameCOLON
segmentChunks	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
final	TokenNamefinal
MavenExecutionPlan	TokenNameIdentifier
executionPlan	TokenNameIdentifier
=	TokenNameEQUAL
plans	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
projectBuild	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DependencyContext	TokenNameIdentifier
dependencyContext	TokenNameIdentifier
=	TokenNameEQUAL
mojoExecutor	TokenNameIdentifier
.	TokenNameDOT
newDependencyContext	TokenNameIdentifier
(	TokenNameLPAREN
session	TokenNameIdentifier
,	TokenNameCOMMA
executionPlan	TokenNameIdentifier
.	TokenNameDOT
getMojoExecutions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
Callable	TokenNameIdentifier
<	TokenNameLESS
ProjectSegment	TokenNameIdentifier
>	TokenNameGREATER
projectBuilder	TokenNameIdentifier
=	TokenNameEQUAL
createCallableForBuildingOneFullModule	TokenNameIdentifier
(	TokenNameLPAREN
buildContext	TokenNameIdentifier
,	TokenNameCOMMA
session	TokenNameIdentifier
,	TokenNameCOMMA
reactorBuildStatus	TokenNameIdentifier
,	TokenNameCOMMA
executionPlan	TokenNameIdentifier
,	TokenNameCOMMA
projectBuild	TokenNameIdentifier
,	TokenNameCOMMA
dependencyContext	TokenNameIdentifier
,	TokenNameCOMMA
concurrentBuildLogger	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
futures	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
service	TokenNameIdentifier
.	TokenNameDOT
submit	TokenNameIdentifier
(	TokenNameLPAREN
projectBuilder	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
ExecutionException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
Future	TokenNameIdentifier
<	TokenNameLESS
ProjectSegment	TokenNameIdentifier
>	TokenNameGREATER
buildFuture	TokenNameIdentifier
:	TokenNameCOLON
futures	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
buildFuture	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
futures	TokenNameIdentifier
.	TokenNameDOT
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
projectBuilds	TokenNameIdentifier
.	TokenNameDOT
closeAll	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
info	TokenNameIdentifier
(	TokenNameLPAREN
concurrentBuildLogger	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Callable	TokenNameIdentifier
<	TokenNameLESS
MavenExecutionPlan	TokenNameIdentifier
>	TokenNameGREATER
createEPFuture	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
ProjectSegment	TokenNameIdentifier
projectSegment	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
Set	TokenNameIdentifier
<	TokenNameLESS
Artifact	TokenNameIdentifier
>	TokenNameGREATER
projectArtifacts	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Callable	TokenNameIdentifier
<	TokenNameLESS
MavenExecutionPlan	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
MavenExecutionPlan	TokenNameIdentifier
call	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
builderCommon	TokenNameIdentifier
.	TokenNameDOT
resolveBuildPlan	TokenNameIdentifier
(	TokenNameLPAREN
projectSegment	TokenNameIdentifier
.	TokenNameDOT
getSession	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
projectSegment	TokenNameIdentifier
.	TokenNameDOT
getProject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
projectSegment	TokenNameIdentifier
.	TokenNameDOT
getTaskSegment	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
projectArtifacts	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Callable	TokenNameIdentifier
<	TokenNameLESS
ProjectSegment	TokenNameIdentifier
>	TokenNameGREATER
createCallableForBuildingOneFullModule	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
ReactorContext	TokenNameIdentifier
reactorContext	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
MavenSession	TokenNameIdentifier
rootSession	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
ReactorBuildStatus	TokenNameIdentifier
reactorBuildStatus	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
MavenExecutionPlan	TokenNameIdentifier
executionPlan	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
ProjectSegment	TokenNameIdentifier
projectBuild	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
DependencyContext	TokenNameIdentifier
dependencyContext	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
ConcurrentBuildLogger	TokenNameIdentifier
concurrentBuildLogger	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Callable	TokenNameIdentifier
<	TokenNameLESS
ProjectSegment	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
ProjectSegment	TokenNameIdentifier
call	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Iterator	TokenNameIdentifier
<	TokenNameLESS
ExecutionPlanItem	TokenNameIdentifier
>	TokenNameGREATER
planItems	TokenNameIdentifier
=	TokenNameEQUAL
executionPlan	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ExecutionPlanItem	TokenNameIdentifier
current	TokenNameIdentifier
=	TokenNameEQUAL
planItems	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
planItems	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
;	TokenNameSEMICOLON
ThreadLockedArtifact	TokenNameIdentifier
threadLockedArtifact	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
ThreadLockedArtifact	TokenNameIdentifier
)	TokenNameRPAREN
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getProject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getArtifact	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
threadLockedArtifact	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
threadLockedArtifact	TokenNameIdentifier
.	TokenNameDOT
attachToThread	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
long	TokenNamelong
buildStartTime	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
reactorBuildStatus	TokenNameIdentifier
.	TokenNameDOT
isHaltedOrBlacklisted	TokenNameIdentifier
(	TokenNameLPAREN
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getProject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
eventCatapult	TokenNameIdentifier
.	TokenNameDOT
fire	TokenNameIdentifier
(	TokenNameLPAREN
ExecutionEvent	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
.	TokenNameDOT
ProjectSkipped	TokenNameIdentifier
,	TokenNameCOMMA
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getSession	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
eventCatapult	TokenNameIdentifier
.	TokenNameDOT
fire	TokenNameIdentifier
(	TokenNameLPAREN
ExecutionEvent	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
.	TokenNameDOT
ProjectStarted	TokenNameIdentifier
,	TokenNameCOMMA
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getSession	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Collection	TokenNameIdentifier
<	TokenNameLESS
ArtifactLink	TokenNameIdentifier
>	TokenNameGREATER
dependencyLinks	TokenNameIdentifier
=	TokenNameEQUAL
getUpstreamReactorDependencies	TokenNameIdentifier
(	TokenNameLPAREN
projectBuild	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
PhaseRecorder	TokenNameIdentifier
phaseRecorder	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
PhaseRecorder	TokenNameIdentifier
(	TokenNameLPAREN
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getProject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
long	TokenNamelong
totalMojoTime	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
long	TokenNamelong
mojoStart	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
current	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
!	TokenNameNOT
reactorBuildStatus	TokenNameIdentifier
.	TokenNameDOT
isHaltedOrBlacklisted	TokenNameIdentifier
(	TokenNameLPAREN
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getProject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
BuildLogItem	TokenNameIdentifier
builtLogItem	TokenNameIdentifier
=	TokenNameEQUAL
concurrentBuildLogger	TokenNameIdentifier
.	TokenNameDOT
createBuildLogItem	TokenNameIdentifier
(	TokenNameLPAREN
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getProject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
current	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
Schedule	TokenNameIdentifier
schedule	TokenNameIdentifier
=	TokenNameEQUAL
current	TokenNameIdentifier
.	TokenNameDOT
getSchedule	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mojoStart	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
buildExecutionPlanItem	TokenNameIdentifier
(	TokenNameLPAREN
current	TokenNameIdentifier
,	TokenNameCOMMA
phaseRecorder	TokenNameIdentifier
,	TokenNameCOMMA
schedule	TokenNameIdentifier
,	TokenNameCOMMA
reactorContext	TokenNameIdentifier
,	TokenNameCOMMA
projectBuild	TokenNameIdentifier
,	TokenNameCOMMA
dependencyContext	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
totalMojoTime	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
mojoStart	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
current	TokenNameIdentifier
.	TokenNameDOT
setComplete	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
builtLogItem	TokenNameIdentifier
.	TokenNameDOT
setComplete	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ExecutionPlanItem	TokenNameIdentifier
nextPlanItem	TokenNameIdentifier
=	TokenNameEQUAL
planItems	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
planItems	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
nextPlanItem	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
phaseRecorder	TokenNameIdentifier
.	TokenNameDOT
isDifferentPhase	TokenNameIdentifier
(	TokenNameLPAREN
nextPlanItem	TokenNameIdentifier
.	TokenNameDOT
getMojoExecution	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
Schedule	TokenNameIdentifier
scheduleOfNext	TokenNameIdentifier
=	TokenNameEQUAL
nextPlanItem	TokenNameIdentifier
.	TokenNameDOT
getSchedule	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
scheduleOfNext	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
!	TokenNameNOT
scheduleOfNext	TokenNameIdentifier
.	TokenNameDOT
isParallel	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
waitForAppropriateUpstreamExecutionsToFinish	TokenNameIdentifier
(	TokenNameLPAREN
builtLogItem	TokenNameIdentifier
,	TokenNameCOMMA
nextPlanItem	TokenNameIdentifier
,	TokenNameCOMMA
projectBuild	TokenNameIdentifier
,	TokenNameCOMMA
scheduleOfNext	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
ArtifactLink	TokenNameIdentifier
dependencyLink	TokenNameIdentifier
:	TokenNameCOLON
dependencyLinks	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
dependencyLink	TokenNameIdentifier
.	TokenNameDOT
resolveFromUpstream	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
current	TokenNameIdentifier
=	TokenNameEQUAL
nextPlanItem	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
BuildSuccess	TokenNameIdentifier
summary	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BuildSuccess	TokenNameIdentifier
(	TokenNameLPAREN
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getProject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
totalMojoTime	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reactorContext	TokenNameIdentifier
.	TokenNameDOT
getResult	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
addBuildSummary	TokenNameIdentifier
(	TokenNameLPAREN
summary	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
eventCatapult	TokenNameIdentifier
.	TokenNameDOT
fire	TokenNameIdentifier
(	TokenNameLPAREN
ExecutionEvent	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
.	TokenNameDOT
ProjectSucceeded	TokenNameIdentifier
,	TokenNameCOMMA
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getSession	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
builderCommon	TokenNameIdentifier
.	TokenNameDOT
handleBuildError	TokenNameIdentifier
(	TokenNameLPAREN
reactorContext	TokenNameIdentifier
,	TokenNameCOMMA
rootSession	TokenNameIdentifier
,	TokenNameCOMMA
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getProject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
e	TokenNameIdentifier
,	TokenNameCOMMA
buildStartTime	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
current	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
executionPlan	TokenNameIdentifier
.	TokenNameDOT
forceAllComplete	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
waitForAppropriateUpstreamExecutionsToFinish	TokenNameIdentifier
(	TokenNameLPAREN
BuildLogItem	TokenNameIdentifier
builtLogItem	TokenNameIdentifier
,	TokenNameCOMMA
ExecutionPlanItem	TokenNameIdentifier
nextPlanItem	TokenNameIdentifier
,	TokenNameCOMMA
ProjectSegment	TokenNameIdentifier
projectBuild	TokenNameIdentifier
,	TokenNameCOMMA
Schedule	TokenNameIdentifier
scheduleOfNext	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
MavenProject	TokenNameIdentifier
upstreamProject	TokenNameIdentifier
:	TokenNameCOLON
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getImmediateUpstreamProjects	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
MavenExecutionPlan	TokenNameIdentifier
upstreamPlan	TokenNameIdentifier
=	TokenNameEQUAL
executionPlans	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
upstreamProject	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
nextPhase	TokenNameIdentifier
=	TokenNameEQUAL
scheduleOfNext	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
scheduleOfNext	TokenNameIdentifier
.	TokenNameDOT
hasUpstreamPhaseDefined	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
scheduleOfNext	TokenNameIdentifier
.	TokenNameDOT
getUpstreamPhase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
nextPlanItem	TokenNameIdentifier
.	TokenNameDOT
getLifecyclePhase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
ExecutionPlanItem	TokenNameIdentifier
upstream	TokenNameIdentifier
=	TokenNameEQUAL
upstreamPlan	TokenNameIdentifier
.	TokenNameDOT
findLastInPhase	TokenNameIdentifier
(	TokenNameLPAREN
nextPhase	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
upstream	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
long	TokenNamelong
startWait	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
upstream	TokenNameIdentifier
.	TokenNameDOT
waitUntilDone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
builtLogItem	TokenNameIdentifier
.	TokenNameDOT
addWait	TokenNameIdentifier
(	TokenNameLPAREN
upstreamProject	TokenNameIdentifier
,	TokenNameCOMMA
upstream	TokenNameIdentifier
,	TokenNameCOMMA
startWait	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
upstreamPlan	TokenNameIdentifier
.	TokenNameDOT
containsPhase	TokenNameIdentifier
(	TokenNameLPAREN
nextPhase	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
builtLogItem	TokenNameIdentifier
.	TokenNameDOT
addDependency	TokenNameIdentifier
(	TokenNameLPAREN
upstreamProject	TokenNameIdentifier
,	TokenNameCOMMA
"No phase tracking possible "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
upstreamPlan	TokenNameIdentifier
.	TokenNameDOT
waitUntilAllDone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
builtLogItem	TokenNameIdentifier
.	TokenNameDOT
addDependency	TokenNameIdentifier
(	TokenNameLPAREN
upstreamProject	TokenNameIdentifier
,	TokenNameCOMMA
"No schedule"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
Collection	TokenNameIdentifier
<	TokenNameLESS
ArtifactLink	TokenNameIdentifier
>	TokenNameGREATER
getUpstreamReactorDependencies	TokenNameIdentifier
(	TokenNameLPAREN
ProjectSegment	TokenNameIdentifier
projectBuild	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Collection	TokenNameIdentifier
<	TokenNameLESS
ArtifactLink	TokenNameIdentifier
>	TokenNameGREATER
result	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
ArtifactLink	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
MavenProject	TokenNameIdentifier
upstreamProject	TokenNameIdentifier
:	TokenNameCOLON
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getTransitiveUpstreamProjects	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Artifact	TokenNameIdentifier
upStreamArtifact	TokenNameIdentifier
=	TokenNameEQUAL
upstreamProject	TokenNameIdentifier
.	TokenNameDOT
getArtifact	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
upStreamArtifact	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
Artifact	TokenNameIdentifier
dependencyArtifact	TokenNameIdentifier
=	TokenNameEQUAL
findDependency	TokenNameIdentifier
(	TokenNameLPAREN
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getProject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
upStreamArtifact	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dependencyArtifact	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
result	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
ArtifactLink	TokenNameIdentifier
(	TokenNameLPAREN
dependencyArtifact	TokenNameIdentifier
,	TokenNameCOMMA
upStreamArtifact	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
Artifact	TokenNameIdentifier
upStreamTestScopedArtifact	TokenNameIdentifier
=	TokenNameEQUAL
findTestScopedArtifact	TokenNameIdentifier
(	TokenNameLPAREN
upstreamProject	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
upStreamTestScopedArtifact	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
Artifact	TokenNameIdentifier
dependencyArtifact	TokenNameIdentifier
=	TokenNameEQUAL
findDependency	TokenNameIdentifier
(	TokenNameLPAREN
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getProject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
upStreamArtifact	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dependencyArtifact	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
result	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
ArtifactLink	TokenNameIdentifier
(	TokenNameLPAREN
dependencyArtifact	TokenNameIdentifier
,	TokenNameCOMMA
upStreamTestScopedArtifact	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
result	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Artifact	TokenNameIdentifier
findTestScopedArtifact	TokenNameIdentifier
(	TokenNameLPAREN
MavenProject	TokenNameIdentifier
upstreamProject	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
upstreamProject	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Artifact	TokenNameIdentifier
>	TokenNameGREATER
artifactList	TokenNameIdentifier
=	TokenNameEQUAL
upstreamProject	TokenNameIdentifier
.	TokenNameDOT
getAttachedArtifacts	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Artifact	TokenNameIdentifier
artifact	TokenNameIdentifier
:	TokenNameCOLON
artifactList	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Artifact	TokenNameIdentifier
.	TokenNameDOT
SCOPE_TEST	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
artifact	TokenNameIdentifier
.	TokenNameDOT
getScope	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
artifact	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
boolean	TokenNameboolean
isThreadLockedAndEmpty	TokenNameIdentifier
(	TokenNameLPAREN
Artifact	TokenNameIdentifier
artifact	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
artifact	TokenNameIdentifier
instanceof	TokenNameinstanceof
ThreadLockedArtifact	TokenNameIdentifier
&&	TokenNameAND_AND
!	TokenNameNOT
(	TokenNameLPAREN
(	TokenNameLPAREN
ThreadLockedArtifact	TokenNameIdentifier
)	TokenNameRPAREN
artifact	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
hasReal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
Artifact	TokenNameIdentifier
findDependency	TokenNameIdentifier
(	TokenNameLPAREN
MavenProject	TokenNameIdentifier
project	TokenNameIdentifier
,	TokenNameCOMMA
Artifact	TokenNameIdentifier
upStreamArtifact	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
upStreamArtifact	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
isThreadLockedAndEmpty	TokenNameIdentifier
(	TokenNameLPAREN
upStreamArtifact	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
String	TokenNameIdentifier
key	TokenNameIdentifier
=	TokenNameEQUAL
ArtifactUtils	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
(	TokenNameLPAREN
upStreamArtifact	TokenNameIdentifier
.	TokenNameDOT
getGroupId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
upStreamArtifact	TokenNameIdentifier
.	TokenNameDOT
getArtifactId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
upStreamArtifact	TokenNameIdentifier
.	TokenNameDOT
getVersion	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
Set	TokenNameIdentifier
<	TokenNameLESS
Artifact	TokenNameIdentifier
>	TokenNameGREATER
deps	TokenNameIdentifier
=	TokenNameEQUAL
project	TokenNameIdentifier
.	TokenNameDOT
getDependencyArtifacts	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Artifact	TokenNameIdentifier
dep	TokenNameIdentifier
:	TokenNameCOLON
deps	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
depKey	TokenNameIdentifier
=	TokenNameEQUAL
ArtifactUtils	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
(	TokenNameLPAREN
dep	TokenNameIdentifier
.	TokenNameDOT
getGroupId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
dep	TokenNameIdentifier
.	TokenNameDOT
getArtifactId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
dep	TokenNameIdentifier
.	TokenNameDOT
getVersion	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
key	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
depKey	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
dep	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
buildExecutionPlanItem	TokenNameIdentifier
(	TokenNameLPAREN
ExecutionPlanItem	TokenNameIdentifier
current	TokenNameIdentifier
,	TokenNameCOMMA
PhaseRecorder	TokenNameIdentifier
phaseRecorder	TokenNameIdentifier
,	TokenNameCOMMA
Schedule	TokenNameIdentifier
schedule	TokenNameIdentifier
,	TokenNameCOMMA
ReactorContext	TokenNameIdentifier
reactorContext	TokenNameIdentifier
,	TokenNameCOMMA
ProjectSegment	TokenNameIdentifier
projectBuild	TokenNameIdentifier
,	TokenNameCOMMA
DependencyContext	TokenNameIdentifier
dependencyContext	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
LifecycleExecutionException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
schedule	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
schedule	TokenNameIdentifier
.	TokenNameDOT
isMojoSynchronized	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
synchronized	TokenNamesynchronized
(	TokenNameLPAREN
current	TokenNameIdentifier
.	TokenNameDOT
getPlugin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
buildExecutionPlanItem	TokenNameIdentifier
(	TokenNameLPAREN
reactorContext	TokenNameIdentifier
,	TokenNameCOMMA
current	TokenNameIdentifier
,	TokenNameCOMMA
projectBuild	TokenNameIdentifier
,	TokenNameCOMMA
dependencyContext	TokenNameIdentifier
,	TokenNameCOMMA
phaseRecorder	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
buildExecutionPlanItem	TokenNameIdentifier
(	TokenNameLPAREN
reactorContext	TokenNameIdentifier
,	TokenNameCOMMA
current	TokenNameIdentifier
,	TokenNameCOMMA
projectBuild	TokenNameIdentifier
,	TokenNameCOMMA
dependencyContext	TokenNameIdentifier
,	TokenNameCOMMA
phaseRecorder	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
buildExecutionPlanItem	TokenNameIdentifier
(	TokenNameLPAREN
ReactorContext	TokenNameIdentifier
reactorContext	TokenNameIdentifier
,	TokenNameCOMMA
ExecutionPlanItem	TokenNameIdentifier
node	TokenNameIdentifier
,	TokenNameCOMMA
ProjectSegment	TokenNameIdentifier
projectBuild	TokenNameIdentifier
,	TokenNameCOMMA
DependencyContext	TokenNameIdentifier
dependencyContext	TokenNameIdentifier
,	TokenNameCOMMA
PhaseRecorder	TokenNameIdentifier
phaseRecorder	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
LifecycleExecutionException	TokenNameIdentifier
{	TokenNameLBRACE
MavenProject	TokenNameIdentifier
currentProject	TokenNameIdentifier
=	TokenNameEQUAL
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getProject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
long	TokenNamelong
buildStartTime	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CurrentPhaseForThread	TokenNameIdentifier
.	TokenNameDOT
setPhase	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
.	TokenNameDOT
getLifecyclePhase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MavenSession	TokenNameIdentifier
sessionForThisModule	TokenNameIdentifier
=	TokenNameEQUAL
projectBuild	TokenNameIdentifier
.	TokenNameDOT
getSession	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
reactorContext	TokenNameIdentifier
.	TokenNameDOT
getReactorBuildStatus	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isHaltedOrBlacklisted	TokenNameIdentifier
(	TokenNameLPAREN
currentProject	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
BuilderCommon	TokenNameIdentifier
.	TokenNameDOT
attachToThread	TokenNameIdentifier
(	TokenNameLPAREN
currentProject	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mojoExecutor	TokenNameIdentifier
.	TokenNameDOT
execute	TokenNameIdentifier
(	TokenNameLPAREN
sessionForThisModule	TokenNameIdentifier
,	TokenNameCOMMA
node	TokenNameIdentifier
.	TokenNameDOT
getMojoExecution	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
reactorContext	TokenNameIdentifier
.	TokenNameDOT
getProjectIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
dependencyContext	TokenNameIdentifier
,	TokenNameCOMMA
phaseRecorder	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
BuildSuccess	TokenNameIdentifier
summary	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BuildSuccess	TokenNameIdentifier
(	TokenNameLPAREN
currentProject	TokenNameIdentifier
,	TokenNameCOMMA
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
buildStartTime	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reactorContext	TokenNameIdentifier
.	TokenNameDOT
getResult	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
addBuildSummary	TokenNameIdentifier
(	TokenNameLPAREN
summary	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
Thread	TokenNameIdentifier
.	TokenNameDOT
currentThread	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
setContextClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
reactorContext	TokenNameIdentifier
.	TokenNameDOT
getOriginalContextClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isWeaveMode	TokenNameIdentifier
(	TokenNameLPAREN
MavenExecutionRequest	TokenNameIdentifier
request	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"true"	TokenNameStringLiteral
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
request	TokenNameIdentifier
.	TokenNameDOT
getUserProperties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"maven3.weaveMode"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setWeaveMode	TokenNameIdentifier
(	TokenNameLPAREN
Properties	TokenNameIdentifier
properties	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
properties	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"maven3.weaveMode"	TokenNameStringLiteral
,	TokenNameCOMMA
"true"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
class	TokenNameclass
ArtifactLink	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
final	TokenNamefinal
Artifact	TokenNameIdentifier
artifactInThis	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
Artifact	TokenNameIdentifier
upstream	TokenNameIdentifier
;	TokenNameSEMICOLON
ArtifactLink	TokenNameIdentifier
(	TokenNameLPAREN
Artifact	TokenNameIdentifier
artifactInThis	TokenNameIdentifier
,	TokenNameCOMMA
Artifact	TokenNameIdentifier
upstream	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
artifactInThis	TokenNameIdentifier
=	TokenNameEQUAL
artifactInThis	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
upstream	TokenNameIdentifier
=	TokenNameEQUAL
upstream	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
resolveFromUpstream	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
artifactInThis	TokenNameIdentifier
.	TokenNameDOT
setFile	TokenNameIdentifier
(	TokenNameLPAREN
upstream	TokenNameIdentifier
.	TokenNameDOT
getFile	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
artifactInThis	TokenNameIdentifier
.	TokenNameDOT
setRepository	TokenNameIdentifier
(	TokenNameLPAREN
upstream	TokenNameIdentifier
.	TokenNameDOT
getRepository	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
artifactInThis	TokenNameIdentifier
.	TokenNameDOT
setResolved	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
