package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
cn	TokenNameIdentifier
.	TokenNameDOT
smart	TokenNameIdentifier
.	TokenNameDOT
hhmm	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ArrayList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Collection	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
HashMap	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Map	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
cn	TokenNameIdentifier
.	TokenNameDOT
smart	TokenNameIdentifier
.	TokenNameDOT
Utility	TokenNameIdentifier
;	TokenNameSEMICOLON
class	TokenNameclass
BiSegGraph	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
Map	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
ArrayList	TokenNameIdentifier
<	TokenNameLESS
SegTokenPair	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
tokenPairListTable	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
ArrayList	TokenNameIdentifier
<	TokenNameLESS
SegTokenPair	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
List	TokenNameIdentifier
<	TokenNameLESS
SegToken	TokenNameIdentifier
>	TokenNameGREATER
segTokenList	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
BigramDictionary	TokenNameIdentifier
bigramDict	TokenNameIdentifier
=	TokenNameEQUAL
BigramDictionary	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
BiSegGraph	TokenNameIdentifier
(	TokenNameLPAREN
SegGraph	TokenNameIdentifier
segGraph	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
segTokenList	TokenNameIdentifier
=	TokenNameEQUAL
segGraph	TokenNameIdentifier
.	TokenNameDOT
makeIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
generateBiSegGraph	TokenNameIdentifier
(	TokenNameLPAREN
segGraph	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
generateBiSegGraph	TokenNameIdentifier
(	TokenNameLPAREN
SegGraph	TokenNameIdentifier
segGraph	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
double	TokenNamedouble
smooth	TokenNameIdentifier
=	TokenNameEQUAL
0.1	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
int	TokenNameint
wordPairFreq	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
maxStart	TokenNameIdentifier
=	TokenNameEQUAL
segGraph	TokenNameIdentifier
.	TokenNameDOT
getMaxStart	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
oneWordFreq	TokenNameIdentifier
,	TokenNameCOMMA
weight	TokenNameIdentifier
,	TokenNameCOMMA
tinyDouble	TokenNameIdentifier
=	TokenNameEQUAL
1.0	TokenNameDoubleLiteral
/	TokenNameDIVIDE
Utility	TokenNameIdentifier
.	TokenNameDOT
MAX_FREQUENCE	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
next	TokenNameIdentifier
;	TokenNameSEMICOLON
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
idBuffer	TokenNameIdentifier
;	TokenNameSEMICOLON
segTokenList	TokenNameIdentifier
=	TokenNameEQUAL
segGraph	TokenNameIdentifier
.	TokenNameDOT
makeIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
key	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
SegToken	TokenNameIdentifier
>	TokenNameGREATER
nextTokens	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
key	TokenNameIdentifier
<	TokenNameLESS
maxStart	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
segGraph	TokenNameIdentifier
.	TokenNameDOT
isStartExist	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
SegToken	TokenNameIdentifier
>	TokenNameGREATER
tokenList	TokenNameIdentifier
=	TokenNameEQUAL
segGraph	TokenNameIdentifier
.	TokenNameDOT
getStartList	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SegToken	TokenNameIdentifier
t1	TokenNameIdentifier
:	TokenNameCOLON
tokenList	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
oneWordFreq	TokenNameIdentifier
=	TokenNameEQUAL
t1	TokenNameIdentifier
.	TokenNameDOT
weight	TokenNameIdentifier
;	TokenNameSEMICOLON
next	TokenNameIdentifier
=	TokenNameEQUAL
t1	TokenNameIdentifier
.	TokenNameDOT
endOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
nextTokens	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
next	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
maxStart	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
segGraph	TokenNameIdentifier
.	TokenNameDOT
isStartExist	TokenNameIdentifier
(	TokenNameLPAREN
next	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
nextTokens	TokenNameIdentifier
=	TokenNameEQUAL
segGraph	TokenNameIdentifier
.	TokenNameDOT
getStartList	TokenNameIdentifier
(	TokenNameLPAREN
next	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
next	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
nextTokens	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
SegToken	TokenNameIdentifier
t2	TokenNameIdentifier
:	TokenNameCOLON
nextTokens	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
idBuffer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
char	TokenNamechar
[	TokenNameLBRACKET
t1	TokenNameIdentifier
.	TokenNameDOT
charArray	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
+	TokenNamePLUS
t2	TokenNameIdentifier
.	TokenNameDOT
charArray	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
t1	TokenNameIdentifier
.	TokenNameDOT
charArray	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
idBuffer	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
t1	TokenNameIdentifier
.	TokenNameDOT
charArray	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
idBuffer	TokenNameIdentifier
[	TokenNameLBRACKET
t1	TokenNameIdentifier
.	TokenNameDOT
charArray	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
BigramDictionary	TokenNameIdentifier
.	TokenNameDOT
WORD_SEGMENT_CHAR	TokenNameIdentifier
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
t2	TokenNameIdentifier
.	TokenNameDOT
charArray	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
idBuffer	TokenNameIdentifier
,	TokenNameCOMMA
t1	TokenNameIdentifier
.	TokenNameDOT
charArray	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
t2	TokenNameIdentifier
.	TokenNameDOT
charArray	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
wordPairFreq	TokenNameIdentifier
=	TokenNameEQUAL
bigramDict	TokenNameIdentifier
.	TokenNameDOT
getFrequency	TokenNameIdentifier
(	TokenNameLPAREN
idBuffer	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
weight	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
Math	TokenNameIdentifier
.	TokenNameDOT
log	TokenNameIdentifier
(	TokenNameLPAREN
smooth	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
1.0	TokenNameDoubleLiteral
+	TokenNamePLUS
oneWordFreq	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
(	TokenNameLPAREN
Utility	TokenNameIdentifier
.	TokenNameDOT
MAX_FREQUENCE	TokenNameIdentifier
+	TokenNamePLUS
0.0	TokenNameDoubleLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
1.0	TokenNameDoubleLiteral
-	TokenNameMINUS
smooth	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
(	TokenNameLPAREN
(	TokenNameLPAREN
1.0	TokenNameDoubleLiteral
-	TokenNameMINUS
tinyDouble	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
wordPairFreq	TokenNameIdentifier
/	TokenNameDIVIDE
(	TokenNameLPAREN
1.0	TokenNameDoubleLiteral
+	TokenNamePLUS
oneWordFreq	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
tinyDouble	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SegTokenPair	TokenNameIdentifier
tokenPair	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SegTokenPair	TokenNameIdentifier
(	TokenNameLPAREN
idBuffer	TokenNameIdentifier
,	TokenNameCOMMA
t1	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
,	TokenNameCOMMA
t2	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
,	TokenNameCOMMA
weight	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
addSegTokenPair	TokenNameIdentifier
(	TokenNameLPAREN
tokenPair	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
key	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isToExist	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
to	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
tokenPairListTable	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
Integer	TokenNameIdentifier
.	TokenNameDOT
valueOf	TokenNameIdentifier
(	TokenNameLPAREN
to	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
SegTokenPair	TokenNameIdentifier
>	TokenNameGREATER
getToList	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
to	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
tokenPairListTable	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
to	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addSegTokenPair	TokenNameIdentifier
(	TokenNameLPAREN
SegTokenPair	TokenNameIdentifier
tokenPair	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
to	TokenNameIdentifier
=	TokenNameEQUAL
tokenPair	TokenNameIdentifier
.	TokenNameDOT
to	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isToExist	TokenNameIdentifier
(	TokenNameLPAREN
to	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ArrayList	TokenNameIdentifier
<	TokenNameLESS
SegTokenPair	TokenNameIdentifier
>	TokenNameGREATER
newlist	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
SegTokenPair	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
newlist	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
tokenPair	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tokenPairListTable	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
to	TokenNameIdentifier
,	TokenNameCOMMA
newlist	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
SegTokenPair	TokenNameIdentifier
>	TokenNameGREATER
tokenPairList	TokenNameIdentifier
=	TokenNameEQUAL
tokenPairListTable	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
to	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tokenPairList	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
tokenPair	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getToCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
tokenPairListTable	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
SegToken	TokenNameIdentifier
>	TokenNameGREATER
getShortPath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
current	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
nodeCount	TokenNameIdentifier
=	TokenNameEQUAL
getToCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
PathNode	TokenNameIdentifier
>	TokenNameGREATER
path	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
PathNode	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
PathNode	TokenNameIdentifier
zeroPath	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
PathNode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
zeroPath	TokenNameIdentifier
.	TokenNameDOT
weight	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
zeroPath	TokenNameIdentifier
.	TokenNameDOT
preNode	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
path	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
zeroPath	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
current	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
current	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
nodeCount	TokenNameIdentifier
;	TokenNameSEMICOLON
current	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
double	TokenNamedouble
weight	TokenNameIdentifier
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
SegTokenPair	TokenNameIdentifier
>	TokenNameGREATER
edges	TokenNameIdentifier
=	TokenNameEQUAL
getToList	TokenNameIdentifier
(	TokenNameLPAREN
current	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
minWeight	TokenNameIdentifier
=	TokenNameEQUAL
Double	TokenNameIdentifier
.	TokenNameDOT
MAX_VALUE	TokenNameIdentifier
;	TokenNameSEMICOLON
SegTokenPair	TokenNameIdentifier
minEdge	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SegTokenPair	TokenNameIdentifier
edge	TokenNameIdentifier
:	TokenNameCOLON
edges	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
weight	TokenNameIdentifier
=	TokenNameEQUAL
edge	TokenNameIdentifier
.	TokenNameDOT
weight	TokenNameIdentifier
;	TokenNameSEMICOLON
PathNode	TokenNameIdentifier
preNode	TokenNameIdentifier
=	TokenNameEQUAL
path	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
edge	TokenNameIdentifier
.	TokenNameDOT
from	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
preNode	TokenNameIdentifier
.	TokenNameDOT
weight	TokenNameIdentifier
+	TokenNamePLUS
weight	TokenNameIdentifier
<	TokenNameLESS
minWeight	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
minWeight	TokenNameIdentifier
=	TokenNameEQUAL
preNode	TokenNameIdentifier
.	TokenNameDOT
weight	TokenNameIdentifier
+	TokenNamePLUS
weight	TokenNameIdentifier
;	TokenNameSEMICOLON
minEdge	TokenNameIdentifier
=	TokenNameEQUAL
edge	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
PathNode	TokenNameIdentifier
newNode	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
PathNode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
newNode	TokenNameIdentifier
.	TokenNameDOT
weight	TokenNameIdentifier
=	TokenNameEQUAL
minWeight	TokenNameIdentifier
;	TokenNameSEMICOLON
newNode	TokenNameIdentifier
.	TokenNameDOT
preNode	TokenNameIdentifier
=	TokenNameEQUAL
minEdge	TokenNameIdentifier
.	TokenNameDOT
from	TokenNameIdentifier
;	TokenNameSEMICOLON
path	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
newNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
preNode	TokenNameIdentifier
,	TokenNameCOMMA
lastNode	TokenNameIdentifier
;	TokenNameSEMICOLON
lastNode	TokenNameIdentifier
=	TokenNameEQUAL
path	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
current	TokenNameIdentifier
=	TokenNameEQUAL
lastNode	TokenNameIdentifier
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
>	TokenNameGREATER
rpath	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
SegToken	TokenNameIdentifier
>	TokenNameGREATER
resultPath	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
SegToken	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rpath	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
current	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
current	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
PathNode	TokenNameIdentifier
currentPathNode	TokenNameIdentifier
=	TokenNameEQUAL
path	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
current	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
preNode	TokenNameIdentifier
=	TokenNameEQUAL
currentPathNode	TokenNameIdentifier
.	TokenNameDOT
preNode	TokenNameIdentifier
;	TokenNameSEMICOLON
rpath	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
Integer	TokenNameIdentifier
.	TokenNameDOT
valueOf	TokenNameIdentifier
(	TokenNameLPAREN
preNode	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
current	TokenNameIdentifier
=	TokenNameEQUAL
preNode	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
j	TokenNameIdentifier
=	TokenNameEQUAL
rpath	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
j	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
j	TokenNameIdentifier
--	TokenNameMINUS_MINUS
)	TokenNameRPAREN
{	TokenNameLBRACE
Integer	TokenNameIdentifier
idInteger	TokenNameIdentifier
=	TokenNameEQUAL
rpath	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
id	TokenNameIdentifier
=	TokenNameEQUAL
idInteger	TokenNameIdentifier
.	TokenNameDOT
intValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SegToken	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
segTokenList	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
id	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
resultPath	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
t	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
resultPath	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
StringBuilder	TokenNameIdentifier
sb	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringBuilder	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Collection	TokenNameIdentifier
<	TokenNameLESS
ArrayList	TokenNameIdentifier
<	TokenNameLESS
SegTokenPair	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
values	TokenNameIdentifier
=	TokenNameEQUAL
tokenPairListTable	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ArrayList	TokenNameIdentifier
<	TokenNameLESS
SegTokenPair	TokenNameIdentifier
>	TokenNameGREATER
segList	TokenNameIdentifier
:	TokenNameCOLON
values	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
SegTokenPair	TokenNameIdentifier
pair	TokenNameIdentifier
:	TokenNameCOLON
segList	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
sb	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
pair	TokenNameIdentifier
+	TokenNamePLUS
" "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
sb	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
