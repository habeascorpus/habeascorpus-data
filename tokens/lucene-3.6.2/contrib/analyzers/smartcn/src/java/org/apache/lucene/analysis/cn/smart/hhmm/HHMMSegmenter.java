package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
cn	TokenNameIdentifier
.	TokenNameDOT
smart	TokenNameIdentifier
.	TokenNameDOT
hhmm	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
cn	TokenNameIdentifier
.	TokenNameDOT
smart	TokenNameIdentifier
.	TokenNameDOT
CharType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
cn	TokenNameIdentifier
.	TokenNameDOT
smart	TokenNameIdentifier
.	TokenNameDOT
Utility	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
cn	TokenNameIdentifier
.	TokenNameDOT
smart	TokenNameIdentifier
.	TokenNameDOT
WordType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
cn	TokenNameIdentifier
.	TokenNameDOT
smart	TokenNameIdentifier
.	TokenNameDOT
hhmm	TokenNameIdentifier
.	TokenNameDOT
SegToken	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
HHMMSegmenter	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
WordDictionary	TokenNameIdentifier
wordDict	TokenNameIdentifier
=	TokenNameEQUAL
WordDictionary	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
@	TokenNameAT
SuppressWarnings	TokenNameIdentifier
(	TokenNameLPAREN
"fallthrough"	TokenNameStringLiteral
)	TokenNameRPAREN
private	TokenNameprivate
SegGraph	TokenNameIdentifier
createSegGraph	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
sentence	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
j	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
length	TokenNameIdentifier
=	TokenNameEQUAL
sentence	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
foundIndex	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
charTypeArray	TokenNameIdentifier
=	TokenNameEQUAL
getCharTypes	TokenNameIdentifier
(	TokenNameLPAREN
sentence	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringBuilder	TokenNameIdentifier
wordBuf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringBuilder	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SegToken	TokenNameIdentifier
token	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
frequency	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
boolean	TokenNameboolean
hasFullWidth	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
wordType	TokenNameIdentifier
;	TokenNameSEMICOLON
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
charArray	TokenNameIdentifier
;	TokenNameSEMICOLON
SegGraph	TokenNameIdentifier
segGraph	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SegGraph	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
i	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
hasFullWidth	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
charTypeArray	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
CharType	TokenNameIdentifier
.	TokenNameDOT
SPACE_LIKE	TokenNameIdentifier
:	TokenNameCOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
CharType	TokenNameIdentifier
.	TokenNameDOT
HANZI	TokenNameIdentifier
:	TokenNameCOLON
j	TokenNameIdentifier
=	TokenNameEQUAL
i	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
wordBuf	TokenNameIdentifier
.	TokenNameDOT
delete	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
wordBuf	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
wordBuf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
sentence	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
charArray	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
sentence	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
;	TokenNameSEMICOLON
frequency	TokenNameIdentifier
=	TokenNameEQUAL
wordDict	TokenNameIdentifier
.	TokenNameDOT
getFrequency	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
token	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SegToken	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
,	TokenNameCOMMA
i	TokenNameIdentifier
,	TokenNameCOMMA
j	TokenNameIdentifier
,	TokenNameCOMMA
WordType	TokenNameIdentifier
.	TokenNameDOT
CHINESE_WORD	TokenNameIdentifier
,	TokenNameCOMMA
frequency	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
segGraph	TokenNameIdentifier
.	TokenNameDOT
addToken	TokenNameIdentifier
(	TokenNameLPAREN
token	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
foundIndex	TokenNameIdentifier
=	TokenNameEQUAL
wordDict	TokenNameIdentifier
.	TokenNameDOT
getPrefixMatch	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
j	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
length	TokenNameIdentifier
&&	TokenNameAND_AND
foundIndex	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
wordDict	TokenNameIdentifier
.	TokenNameDOT
isEqual	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
,	TokenNameCOMMA
foundIndex	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
charArray	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
>	TokenNameGREATER
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
frequency	TokenNameIdentifier
=	TokenNameEQUAL
wordDict	TokenNameIdentifier
.	TokenNameDOT
getFrequency	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
token	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SegToken	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
,	TokenNameCOMMA
i	TokenNameIdentifier
,	TokenNameCOMMA
j	TokenNameIdentifier
,	TokenNameCOMMA
WordType	TokenNameIdentifier
.	TokenNameDOT
CHINESE_WORD	TokenNameIdentifier
,	TokenNameCOMMA
frequency	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
segGraph	TokenNameIdentifier
.	TokenNameDOT
addToken	TokenNameIdentifier
(	TokenNameLPAREN
token	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
j	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
&&	TokenNameAND_AND
charTypeArray	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
==	TokenNameEQUAL_EQUAL
CharType	TokenNameIdentifier
.	TokenNameDOT
SPACE_LIKE	TokenNameIdentifier
)	TokenNameRPAREN
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
j	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
&&	TokenNameAND_AND
charTypeArray	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
==	TokenNameEQUAL_EQUAL
CharType	TokenNameIdentifier
.	TokenNameDOT
HANZI	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
wordBuf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
sentence	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
charArray	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
char	TokenNamechar
[	TokenNameLBRACKET
wordBuf	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
wordBuf	TokenNameIdentifier
.	TokenNameDOT
getChars	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
charArray	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
,	TokenNameCOMMA
charArray	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
foundIndex	TokenNameIdentifier
=	TokenNameEQUAL
wordDict	TokenNameIdentifier
.	TokenNameDOT
getPrefixMatch	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
,	TokenNameCOMMA
foundIndex	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
CharType	TokenNameIdentifier
.	TokenNameDOT
FULLWIDTH_LETTER	TokenNameIdentifier
:	TokenNameCOLON
hasFullWidth	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
case	TokenNamecase
CharType	TokenNameIdentifier
.	TokenNameDOT
LETTER	TokenNameIdentifier
:	TokenNameCOLON
j	TokenNameIdentifier
=	TokenNameEQUAL
i	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
j	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
&&	TokenNameAND_AND
(	TokenNameLPAREN
charTypeArray	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
==	TokenNameEQUAL_EQUAL
CharType	TokenNameIdentifier
.	TokenNameDOT
LETTER	TokenNameIdentifier
||	TokenNameOR_OR
charTypeArray	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
==	TokenNameEQUAL_EQUAL
CharType	TokenNameIdentifier
.	TokenNameDOT
FULLWIDTH_LETTER	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
charTypeArray	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
==	TokenNameEQUAL_EQUAL
CharType	TokenNameIdentifier
.	TokenNameDOT
FULLWIDTH_LETTER	TokenNameIdentifier
)	TokenNameRPAREN
hasFullWidth	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
charArray	TokenNameIdentifier
=	TokenNameEQUAL
Utility	TokenNameIdentifier
.	TokenNameDOT
STRING_CHAR_ARRAY	TokenNameIdentifier
;	TokenNameSEMICOLON
frequency	TokenNameIdentifier
=	TokenNameEQUAL
wordDict	TokenNameIdentifier
.	TokenNameDOT
getFrequency	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
wordType	TokenNameIdentifier
=	TokenNameEQUAL
hasFullWidth	TokenNameIdentifier
?	TokenNameQUESTION
WordType	TokenNameIdentifier
.	TokenNameDOT
FULLWIDTH_STRING	TokenNameIdentifier
:	TokenNameCOLON
WordType	TokenNameIdentifier
.	TokenNameDOT
STRING	TokenNameIdentifier
;	TokenNameSEMICOLON
token	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SegToken	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
,	TokenNameCOMMA
i	TokenNameIdentifier
,	TokenNameCOMMA
j	TokenNameIdentifier
,	TokenNameCOMMA
wordType	TokenNameIdentifier
,	TokenNameCOMMA
frequency	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
segGraph	TokenNameIdentifier
.	TokenNameDOT
addToken	TokenNameIdentifier
(	TokenNameLPAREN
token	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
=	TokenNameEQUAL
j	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
CharType	TokenNameIdentifier
.	TokenNameDOT
FULLWIDTH_DIGIT	TokenNameIdentifier
:	TokenNameCOLON
hasFullWidth	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
case	TokenNamecase
CharType	TokenNameIdentifier
.	TokenNameDOT
DIGIT	TokenNameIdentifier
:	TokenNameCOLON
j	TokenNameIdentifier
=	TokenNameEQUAL
i	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
j	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
&&	TokenNameAND_AND
(	TokenNameLPAREN
charTypeArray	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
==	TokenNameEQUAL_EQUAL
CharType	TokenNameIdentifier
.	TokenNameDOT
DIGIT	TokenNameIdentifier
||	TokenNameOR_OR
charTypeArray	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
==	TokenNameEQUAL_EQUAL
CharType	TokenNameIdentifier
.	TokenNameDOT
FULLWIDTH_DIGIT	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
charTypeArray	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
==	TokenNameEQUAL_EQUAL
CharType	TokenNameIdentifier
.	TokenNameDOT
FULLWIDTH_DIGIT	TokenNameIdentifier
)	TokenNameRPAREN
hasFullWidth	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
charArray	TokenNameIdentifier
=	TokenNameEQUAL
Utility	TokenNameIdentifier
.	TokenNameDOT
NUMBER_CHAR_ARRAY	TokenNameIdentifier
;	TokenNameSEMICOLON
frequency	TokenNameIdentifier
=	TokenNameEQUAL
wordDict	TokenNameIdentifier
.	TokenNameDOT
getFrequency	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
wordType	TokenNameIdentifier
=	TokenNameEQUAL
hasFullWidth	TokenNameIdentifier
?	TokenNameQUESTION
WordType	TokenNameIdentifier
.	TokenNameDOT
FULLWIDTH_NUMBER	TokenNameIdentifier
:	TokenNameCOLON
WordType	TokenNameIdentifier
.	TokenNameDOT
NUMBER	TokenNameIdentifier
;	TokenNameSEMICOLON
token	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SegToken	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
,	TokenNameCOMMA
i	TokenNameIdentifier
,	TokenNameCOMMA
j	TokenNameIdentifier
,	TokenNameCOMMA
wordType	TokenNameIdentifier
,	TokenNameCOMMA
frequency	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
segGraph	TokenNameIdentifier
.	TokenNameDOT
addToken	TokenNameIdentifier
(	TokenNameLPAREN
token	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
=	TokenNameEQUAL
j	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
CharType	TokenNameIdentifier
.	TokenNameDOT
DELIMITER	TokenNameIdentifier
:	TokenNameCOLON
j	TokenNameIdentifier
=	TokenNameEQUAL
i	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
frequency	TokenNameIdentifier
=	TokenNameEQUAL
Utility	TokenNameIdentifier
.	TokenNameDOT
MAX_FREQUENCE	TokenNameIdentifier
;	TokenNameSEMICOLON
charArray	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
sentence	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
;	TokenNameSEMICOLON
token	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SegToken	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
,	TokenNameCOMMA
i	TokenNameIdentifier
,	TokenNameCOMMA
j	TokenNameIdentifier
,	TokenNameCOMMA
WordType	TokenNameIdentifier
.	TokenNameDOT
DELIMITER	TokenNameIdentifier
,	TokenNameCOMMA
frequency	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
segGraph	TokenNameIdentifier
.	TokenNameDOT
addToken	TokenNameIdentifier
(	TokenNameLPAREN
token	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
=	TokenNameEQUAL
j	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
j	TokenNameIdentifier
=	TokenNameEQUAL
i	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
charArray	TokenNameIdentifier
=	TokenNameEQUAL
Utility	TokenNameIdentifier
.	TokenNameDOT
STRING_CHAR_ARRAY	TokenNameIdentifier
;	TokenNameSEMICOLON
frequency	TokenNameIdentifier
=	TokenNameEQUAL
wordDict	TokenNameIdentifier
.	TokenNameDOT
getFrequency	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
token	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SegToken	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
,	TokenNameCOMMA
i	TokenNameIdentifier
,	TokenNameCOMMA
j	TokenNameIdentifier
,	TokenNameCOMMA
WordType	TokenNameIdentifier
.	TokenNameDOT
STRING	TokenNameIdentifier
,	TokenNameCOMMA
frequency	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
segGraph	TokenNameIdentifier
.	TokenNameDOT
addToken	TokenNameIdentifier
(	TokenNameLPAREN
token	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
=	TokenNameEQUAL
j	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
charArray	TokenNameIdentifier
=	TokenNameEQUAL
Utility	TokenNameIdentifier
.	TokenNameDOT
START_CHAR_ARRAY	TokenNameIdentifier
;	TokenNameSEMICOLON
frequency	TokenNameIdentifier
=	TokenNameEQUAL
wordDict	TokenNameIdentifier
.	TokenNameDOT
getFrequency	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
token	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SegToken	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
,	TokenNameCOMMA
-	TokenNameMINUS
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
WordType	TokenNameIdentifier
.	TokenNameDOT
SENTENCE_BEGIN	TokenNameIdentifier
,	TokenNameCOMMA
frequency	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
segGraph	TokenNameIdentifier
.	TokenNameDOT
addToken	TokenNameIdentifier
(	TokenNameLPAREN
token	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
charArray	TokenNameIdentifier
=	TokenNameEQUAL
Utility	TokenNameIdentifier
.	TokenNameDOT
END_CHAR_ARRAY	TokenNameIdentifier
;	TokenNameSEMICOLON
frequency	TokenNameIdentifier
=	TokenNameEQUAL
wordDict	TokenNameIdentifier
.	TokenNameDOT
getFrequency	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
token	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SegToken	TokenNameIdentifier
(	TokenNameLPAREN
charArray	TokenNameIdentifier
,	TokenNameCOMMA
length	TokenNameIdentifier
,	TokenNameCOMMA
length	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
WordType	TokenNameIdentifier
.	TokenNameDOT
SENTENCE_END	TokenNameIdentifier
,	TokenNameCOMMA
frequency	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
segGraph	TokenNameIdentifier
.	TokenNameDOT
addToken	TokenNameIdentifier
(	TokenNameLPAREN
token	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
segGraph	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getCharTypes	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
sentence	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
length	TokenNameIdentifier
=	TokenNameEQUAL
sentence	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
charTypeArray	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
charTypeArray	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
Utility	TokenNameIdentifier
.	TokenNameDOT
getCharType	TokenNameIdentifier
(	TokenNameLPAREN
sentence	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
charTypeArray	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
SegToken	TokenNameIdentifier
>	TokenNameGREATER
process	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
sentence	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
SegGraph	TokenNameIdentifier
segGraph	TokenNameIdentifier
=	TokenNameEQUAL
createSegGraph	TokenNameIdentifier
(	TokenNameLPAREN
sentence	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
BiSegGraph	TokenNameIdentifier
biSegGraph	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BiSegGraph	TokenNameIdentifier
(	TokenNameLPAREN
segGraph	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
SegToken	TokenNameIdentifier
>	TokenNameGREATER
shortPath	TokenNameIdentifier
=	TokenNameEQUAL
biSegGraph	TokenNameIdentifier
.	TokenNameDOT
getShortPath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
shortPath	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
