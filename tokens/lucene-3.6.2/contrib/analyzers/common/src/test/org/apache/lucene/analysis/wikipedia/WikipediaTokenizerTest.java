package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
wikipedia	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
Reader	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
StringReader	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Set	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
HashSet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
Analyzer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
BaseTokenStreamTestCase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
ReusableAnalyzerBase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
Tokenizer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
tokenattributes	TokenNameIdentifier
.	TokenNameDOT
FlagsAttribute	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
static	TokenNamestatic
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
wikipedia	TokenNameIdentifier
.	TokenNameDOT
WikipediaTokenizer	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
WikipediaTokenizerTest	TokenNameIdentifier
extends	TokenNameextends
BaseTokenStreamTestCase	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
LINK_PHRASES	TokenNameIdentifier
=	TokenNameEQUAL
"click [[link here again]] click [http://lucene.apache.org here again] [[Category:a b c d]]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
void	TokenNamevoid
testSimple	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
text	TokenNameIdentifier
=	TokenNameEQUAL
"This is a [[Category:foo]]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
WikipediaTokenizer	TokenNameIdentifier
tf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
WikipediaTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
StringReader	TokenNameIdentifier
(	TokenNameLPAREN
text	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTokenStreamContents	TokenNameIdentifier
(	TokenNameLPAREN
tf	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"This"	TokenNameStringLiteral
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
,	TokenNameCOMMA
"a"	TokenNameStringLiteral
,	TokenNameCOMMA
"foo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
21	TokenNameIntegerLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
7	TokenNameIntegerLiteral
,	TokenNameCOMMA
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
24	TokenNameIntegerLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
CATEGORY	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
}	TokenNameRBRACE
,	TokenNameCOMMA
text	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testHandwritten	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
test	TokenNameIdentifier
=	TokenNameEQUAL
"[[link]] This is a [[Category:foo]] Category  This is a linked [[:Category:bar none withstanding]] "	TokenNameStringLiteral
+	TokenNamePLUS
"Category This is (parens) This is a [[link]]  This is an external URL [http://lucene.apache.org] "	TokenNameStringLiteral
+	TokenNamePLUS
"Here is ''italics'' and ''more italics'', '''bold''' and '''''five quotes''''' "	TokenNameStringLiteral
+	TokenNamePLUS
" This is a [[link|display info]]  This is a period.  Here is $3.25 and here is 3.50.  Here's Johnny.  "	TokenNameStringLiteral
+	TokenNamePLUS
"==heading== ===sub head=== followed by some text  [[Category:blah| ]] "	TokenNameStringLiteral
+	TokenNamePLUS
"''[[Category:ital_cat]]''  here is some that is ''italics [[Category:foo]] but is never closed."	TokenNameStringLiteral
+	TokenNamePLUS
"'''same [[Category:foo]] goes for this '''''and2 [[Category:foo]] and this"	TokenNameStringLiteral
+	TokenNamePLUS
" [http://foo.boo.com/test/test/ Test Test] [http://foo.boo.com/test/test/test.html Test Test]"	TokenNameStringLiteral
+	TokenNamePLUS
" [http://foo.boo.com/test/test/test.html?g=b&c=d Test Test] <ref>Citation</ref> <sup>martian</sup> <span class="glue">code</span>"	TokenNameStringLiteral
;	TokenNameSEMICOLON
WikipediaTokenizer	TokenNameIdentifier
tf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
WikipediaTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
StringReader	TokenNameIdentifier
(	TokenNameLPAREN
test	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTokenStreamContents	TokenNameIdentifier
(	TokenNameLPAREN
tf	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"link"	TokenNameStringLiteral
,	TokenNameCOMMA
"This"	TokenNameStringLiteral
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
,	TokenNameCOMMA
"a"	TokenNameStringLiteral
,	TokenNameCOMMA
"foo"	TokenNameStringLiteral
,	TokenNameCOMMA
"Category"	TokenNameStringLiteral
,	TokenNameCOMMA
"This"	TokenNameStringLiteral
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
,	TokenNameCOMMA
"a"	TokenNameStringLiteral
,	TokenNameCOMMA
"linked"	TokenNameStringLiteral
,	TokenNameCOMMA
"bar"	TokenNameStringLiteral
,	TokenNameCOMMA
"none"	TokenNameStringLiteral
,	TokenNameCOMMA
"withstanding"	TokenNameStringLiteral
,	TokenNameCOMMA
"Category"	TokenNameStringLiteral
,	TokenNameCOMMA
"This"	TokenNameStringLiteral
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
,	TokenNameCOMMA
"parens"	TokenNameStringLiteral
,	TokenNameCOMMA
"This"	TokenNameStringLiteral
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
,	TokenNameCOMMA
"a"	TokenNameStringLiteral
,	TokenNameCOMMA
"link"	TokenNameStringLiteral
,	TokenNameCOMMA
"This"	TokenNameStringLiteral
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
,	TokenNameCOMMA
"an"	TokenNameStringLiteral
,	TokenNameCOMMA
"external"	TokenNameStringLiteral
,	TokenNameCOMMA
"URL"	TokenNameStringLiteral
,	TokenNameCOMMA
"http://lucene.apache.org"	TokenNameStringLiteral
,	TokenNameCOMMA
"Here"	TokenNameStringLiteral
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
,	TokenNameCOMMA
"italics"	TokenNameStringLiteral
,	TokenNameCOMMA
"and"	TokenNameStringLiteral
,	TokenNameCOMMA
"more"	TokenNameStringLiteral
,	TokenNameCOMMA
"italics"	TokenNameStringLiteral
,	TokenNameCOMMA
"bold"	TokenNameStringLiteral
,	TokenNameCOMMA
"and"	TokenNameStringLiteral
,	TokenNameCOMMA
"five"	TokenNameStringLiteral
,	TokenNameCOMMA
"quotes"	TokenNameStringLiteral
,	TokenNameCOMMA
"This"	TokenNameStringLiteral
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
,	TokenNameCOMMA
"a"	TokenNameStringLiteral
,	TokenNameCOMMA
"link"	TokenNameStringLiteral
,	TokenNameCOMMA
"display"	TokenNameStringLiteral
,	TokenNameCOMMA
"info"	TokenNameStringLiteral
,	TokenNameCOMMA
"This"	TokenNameStringLiteral
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
,	TokenNameCOMMA
"a"	TokenNameStringLiteral
,	TokenNameCOMMA
"period"	TokenNameStringLiteral
,	TokenNameCOMMA
"Here"	TokenNameStringLiteral
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
,	TokenNameCOMMA
"3.25"	TokenNameStringLiteral
,	TokenNameCOMMA
"and"	TokenNameStringLiteral
,	TokenNameCOMMA
"here"	TokenNameStringLiteral
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
,	TokenNameCOMMA
"3.50"	TokenNameStringLiteral
,	TokenNameCOMMA
"Here's"	TokenNameStringLiteral
,	TokenNameCOMMA
"Johnny"	TokenNameStringLiteral
,	TokenNameCOMMA
"heading"	TokenNameStringLiteral
,	TokenNameCOMMA
"sub"	TokenNameStringLiteral
,	TokenNameCOMMA
"head"	TokenNameStringLiteral
,	TokenNameCOMMA
"followed"	TokenNameStringLiteral
,	TokenNameCOMMA
"by"	TokenNameStringLiteral
,	TokenNameCOMMA
"some"	TokenNameStringLiteral
,	TokenNameCOMMA
"text"	TokenNameStringLiteral
,	TokenNameCOMMA
"blah"	TokenNameStringLiteral
,	TokenNameCOMMA
"ital"	TokenNameStringLiteral
,	TokenNameCOMMA
"cat"	TokenNameStringLiteral
,	TokenNameCOMMA
"here"	TokenNameStringLiteral
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
,	TokenNameCOMMA
"some"	TokenNameStringLiteral
,	TokenNameCOMMA
"that"	TokenNameStringLiteral
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
,	TokenNameCOMMA
"italics"	TokenNameStringLiteral
,	TokenNameCOMMA
"foo"	TokenNameStringLiteral
,	TokenNameCOMMA
"but"	TokenNameStringLiteral
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
,	TokenNameCOMMA
"never"	TokenNameStringLiteral
,	TokenNameCOMMA
"closed"	TokenNameStringLiteral
,	TokenNameCOMMA
"same"	TokenNameStringLiteral
,	TokenNameCOMMA
"foo"	TokenNameStringLiteral
,	TokenNameCOMMA
"goes"	TokenNameStringLiteral
,	TokenNameCOMMA
"for"	TokenNameStringLiteral
,	TokenNameCOMMA
"this"	TokenNameStringLiteral
,	TokenNameCOMMA
"and2"	TokenNameStringLiteral
,	TokenNameCOMMA
"foo"	TokenNameStringLiteral
,	TokenNameCOMMA
"and"	TokenNameStringLiteral
,	TokenNameCOMMA
"this"	TokenNameStringLiteral
,	TokenNameCOMMA
"http://foo.boo.com/test/test/"	TokenNameStringLiteral
,	TokenNameCOMMA
"Test"	TokenNameStringLiteral
,	TokenNameCOMMA
"Test"	TokenNameStringLiteral
,	TokenNameCOMMA
"http://foo.boo.com/test/test/test.html"	TokenNameStringLiteral
,	TokenNameCOMMA
"Test"	TokenNameStringLiteral
,	TokenNameCOMMA
"Test"	TokenNameStringLiteral
,	TokenNameCOMMA
"http://foo.boo.com/test/test/test.html?g=b&c=d"	TokenNameStringLiteral
,	TokenNameCOMMA
"Test"	TokenNameStringLiteral
,	TokenNameCOMMA
"Test"	TokenNameStringLiteral
,	TokenNameCOMMA
"Citation"	TokenNameStringLiteral
,	TokenNameCOMMA
"martian"	TokenNameStringLiteral
,	TokenNameCOMMA
"code"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
INTERNAL_LINK	TokenNameIdentifier
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
CATEGORY	TokenNameIdentifier
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
CATEGORY	TokenNameIdentifier
,	TokenNameCOMMA
CATEGORY	TokenNameIdentifier
,	TokenNameCOMMA
CATEGORY	TokenNameIdentifier
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
INTERNAL_LINK	TokenNameIdentifier
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
EXTERNAL_LINK_URL	TokenNameIdentifier
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
ITALICS	TokenNameIdentifier
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
ITALICS	TokenNameIdentifier
,	TokenNameCOMMA
ITALICS	TokenNameIdentifier
,	TokenNameCOMMA
BOLD	TokenNameIdentifier
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
BOLD_ITALICS	TokenNameIdentifier
,	TokenNameCOMMA
BOLD_ITALICS	TokenNameIdentifier
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
INTERNAL_LINK	TokenNameIdentifier
,	TokenNameCOMMA
INTERNAL_LINK	TokenNameIdentifier
,	TokenNameCOMMA
INTERNAL_LINK	TokenNameIdentifier
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<NUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<NUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<APOSTROPHE>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
HEADING	TokenNameIdentifier
,	TokenNameCOMMA
SUB_HEADING	TokenNameIdentifier
,	TokenNameCOMMA
SUB_HEADING	TokenNameIdentifier
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
CATEGORY	TokenNameIdentifier
,	TokenNameCOMMA
CATEGORY	TokenNameIdentifier
,	TokenNameCOMMA
CATEGORY	TokenNameIdentifier
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
ITALICS	TokenNameIdentifier
,	TokenNameCOMMA
CATEGORY	TokenNameIdentifier
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
BOLD	TokenNameIdentifier
,	TokenNameCOMMA
CATEGORY	TokenNameIdentifier
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
BOLD_ITALICS	TokenNameIdentifier
,	TokenNameCOMMA
CATEGORY	TokenNameIdentifier
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
EXTERNAL_LINK_URL	TokenNameIdentifier
,	TokenNameCOMMA
EXTERNAL_LINK	TokenNameIdentifier
,	TokenNameCOMMA
EXTERNAL_LINK	TokenNameIdentifier
,	TokenNameCOMMA
EXTERNAL_LINK_URL	TokenNameIdentifier
,	TokenNameCOMMA
EXTERNAL_LINK	TokenNameIdentifier
,	TokenNameCOMMA
EXTERNAL_LINK	TokenNameIdentifier
,	TokenNameCOMMA
EXTERNAL_LINK_URL	TokenNameIdentifier
,	TokenNameCOMMA
EXTERNAL_LINK	TokenNameIdentifier
,	TokenNameCOMMA
EXTERNAL_LINK	TokenNameIdentifier
,	TokenNameCOMMA
CITATION	TokenNameIdentifier
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<ALPHANUM>"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testLinkPhrases	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
WikipediaTokenizer	TokenNameIdentifier
tf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
WikipediaTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
StringReader	TokenNameIdentifier
(	TokenNameLPAREN
LINK_PHRASES	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkLinkPhrases	TokenNameIdentifier
(	TokenNameLPAREN
tf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
checkLinkPhrases	TokenNameIdentifier
(	TokenNameLPAREN
WikipediaTokenizer	TokenNameIdentifier
tf	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
assertTokenStreamContents	TokenNameIdentifier
(	TokenNameLPAREN
tf	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"click"	TokenNameStringLiteral
,	TokenNameCOMMA
"link"	TokenNameStringLiteral
,	TokenNameCOMMA
"here"	TokenNameStringLiteral
,	TokenNameCOMMA
"again"	TokenNameStringLiteral
,	TokenNameCOMMA
"click"	TokenNameStringLiteral
,	TokenNameCOMMA
"http://lucene.apache.org"	TokenNameStringLiteral
,	TokenNameCOMMA
"here"	TokenNameStringLiteral
,	TokenNameCOMMA
"again"	TokenNameStringLiteral
,	TokenNameCOMMA
"a"	TokenNameStringLiteral
,	TokenNameCOMMA
"b"	TokenNameStringLiteral
,	TokenNameCOMMA
"c"	TokenNameStringLiteral
,	TokenNameCOMMA
"d"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testLinks	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
test	TokenNameIdentifier
=	TokenNameEQUAL
"[http://lucene.apache.org/java/docs/index.html#news here] [http://lucene.apache.org/java/docs/index.html?b=c here] [https://lucene.apache.org/java/docs/index.html?b=c here]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
WikipediaTokenizer	TokenNameIdentifier
tf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
WikipediaTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
StringReader	TokenNameIdentifier
(	TokenNameLPAREN
test	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTokenStreamContents	TokenNameIdentifier
(	TokenNameLPAREN
tf	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"http://lucene.apache.org/java/docs/index.html#news"	TokenNameStringLiteral
,	TokenNameCOMMA
"here"	TokenNameStringLiteral
,	TokenNameCOMMA
"http://lucene.apache.org/java/docs/index.html?b=c"	TokenNameStringLiteral
,	TokenNameCOMMA
"here"	TokenNameStringLiteral
,	TokenNameCOMMA
"https://lucene.apache.org/java/docs/index.html?b=c"	TokenNameStringLiteral
,	TokenNameCOMMA
"here"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
EXTERNAL_LINK_URL	TokenNameIdentifier
,	TokenNameCOMMA
EXTERNAL_LINK	TokenNameIdentifier
,	TokenNameCOMMA
EXTERNAL_LINK_URL	TokenNameIdentifier
,	TokenNameCOMMA
EXTERNAL_LINK	TokenNameIdentifier
,	TokenNameCOMMA
EXTERNAL_LINK_URL	TokenNameIdentifier
,	TokenNameCOMMA
EXTERNAL_LINK	TokenNameIdentifier
,	TokenNameCOMMA
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testLucene1133	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
untoks	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
untoks	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
WikipediaTokenizer	TokenNameIdentifier
.	TokenNameDOT
CATEGORY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
untoks	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
WikipediaTokenizer	TokenNameIdentifier
.	TokenNameDOT
ITALICS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
WikipediaTokenizer	TokenNameIdentifier
tf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
WikipediaTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
StringReader	TokenNameIdentifier
(	TokenNameLPAREN
LINK_PHRASES	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
WikipediaTokenizer	TokenNameIdentifier
.	TokenNameDOT
TOKENS_ONLY	TokenNameIdentifier
,	TokenNameCOMMA
untoks	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkLinkPhrases	TokenNameIdentifier
(	TokenNameLPAREN
tf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
test	TokenNameIdentifier
=	TokenNameEQUAL
"[[Category:a b c d]] [[Category:e f g]] [[link here]] [[link there]] ''italics here'' something ''more italics'' [[Category:h   i   j]]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
tf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
WikipediaTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
StringReader	TokenNameIdentifier
(	TokenNameLPAREN
test	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
WikipediaTokenizer	TokenNameIdentifier
.	TokenNameDOT
UNTOKENIZED_ONLY	TokenNameIdentifier
,	TokenNameCOMMA
untoks	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTokenStreamContents	TokenNameIdentifier
(	TokenNameLPAREN
tf	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"a b c d"	TokenNameStringLiteral
,	TokenNameCOMMA
"e f g"	TokenNameStringLiteral
,	TokenNameCOMMA
"link"	TokenNameStringLiteral
,	TokenNameCOMMA
"here"	TokenNameStringLiteral
,	TokenNameCOMMA
"link"	TokenNameStringLiteral
,	TokenNameCOMMA
"there"	TokenNameStringLiteral
,	TokenNameCOMMA
"italics here"	TokenNameStringLiteral
,	TokenNameCOMMA
"something"	TokenNameStringLiteral
,	TokenNameCOMMA
"more italics"	TokenNameStringLiteral
,	TokenNameCOMMA
"h   i   j"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
32	TokenNameIntegerLiteral
,	TokenNameCOMMA
42	TokenNameIntegerLiteral
,	TokenNameCOMMA
47	TokenNameIntegerLiteral
,	TokenNameCOMMA
56	TokenNameIntegerLiteral
,	TokenNameCOMMA
61	TokenNameIntegerLiteral
,	TokenNameCOMMA
71	TokenNameIntegerLiteral
,	TokenNameCOMMA
86	TokenNameIntegerLiteral
,	TokenNameCOMMA
98	TokenNameIntegerLiteral
,	TokenNameCOMMA
124	TokenNameIntegerLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
18	TokenNameIntegerLiteral
,	TokenNameCOMMA
37	TokenNameIntegerLiteral
,	TokenNameCOMMA
46	TokenNameIntegerLiteral
,	TokenNameCOMMA
51	TokenNameIntegerLiteral
,	TokenNameCOMMA
60	TokenNameIntegerLiteral
,	TokenNameCOMMA
66	TokenNameIntegerLiteral
,	TokenNameCOMMA
83	TokenNameIntegerLiteral
,	TokenNameCOMMA
95	TokenNameIntegerLiteral
,	TokenNameCOMMA
110	TokenNameIntegerLiteral
,	TokenNameCOMMA
133	TokenNameIntegerLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testBoth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
untoks	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
untoks	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
WikipediaTokenizer	TokenNameIdentifier
.	TokenNameDOT
CATEGORY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
untoks	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
WikipediaTokenizer	TokenNameIdentifier
.	TokenNameDOT
ITALICS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
test	TokenNameIdentifier
=	TokenNameEQUAL
"[[Category:a b c d]] [[Category:e f g]] [[link here]] [[link there]] ''italics here'' something ''more italics'' [[Category:h   i   j]]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
WikipediaTokenizer	TokenNameIdentifier
tf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
WikipediaTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
StringReader	TokenNameIdentifier
(	TokenNameLPAREN
test	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
WikipediaTokenizer	TokenNameIdentifier
.	TokenNameDOT
BOTH	TokenNameIdentifier
,	TokenNameCOMMA
untoks	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTokenStreamContents	TokenNameIdentifier
(	TokenNameLPAREN
tf	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"a b c d"	TokenNameStringLiteral
,	TokenNameCOMMA
"a"	TokenNameStringLiteral
,	TokenNameCOMMA
"b"	TokenNameStringLiteral
,	TokenNameCOMMA
"c"	TokenNameStringLiteral
,	TokenNameCOMMA
"d"	TokenNameStringLiteral
,	TokenNameCOMMA
"e f g"	TokenNameStringLiteral
,	TokenNameCOMMA
"e"	TokenNameStringLiteral
,	TokenNameCOMMA
"f"	TokenNameStringLiteral
,	TokenNameCOMMA
"g"	TokenNameStringLiteral
,	TokenNameCOMMA
"link"	TokenNameStringLiteral
,	TokenNameCOMMA
"here"	TokenNameStringLiteral
,	TokenNameCOMMA
"link"	TokenNameStringLiteral
,	TokenNameCOMMA
"there"	TokenNameStringLiteral
,	TokenNameCOMMA
"italics here"	TokenNameStringLiteral
,	TokenNameCOMMA
"italics"	TokenNameStringLiteral
,	TokenNameCOMMA
"here"	TokenNameStringLiteral
,	TokenNameCOMMA
"something"	TokenNameStringLiteral
,	TokenNameCOMMA
"more italics"	TokenNameStringLiteral
,	TokenNameCOMMA
"more"	TokenNameStringLiteral
,	TokenNameCOMMA
"italics"	TokenNameStringLiteral
,	TokenNameCOMMA
"h   i   j"	TokenNameStringLiteral
,	TokenNameCOMMA
"h"	TokenNameStringLiteral
,	TokenNameCOMMA
"i"	TokenNameStringLiteral
,	TokenNameCOMMA
"j"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
13	TokenNameIntegerLiteral
,	TokenNameCOMMA
15	TokenNameIntegerLiteral
,	TokenNameCOMMA
17	TokenNameIntegerLiteral
,	TokenNameCOMMA
32	TokenNameIntegerLiteral
,	TokenNameCOMMA
32	TokenNameIntegerLiteral
,	TokenNameCOMMA
34	TokenNameIntegerLiteral
,	TokenNameCOMMA
36	TokenNameIntegerLiteral
,	TokenNameCOMMA
42	TokenNameIntegerLiteral
,	TokenNameCOMMA
47	TokenNameIntegerLiteral
,	TokenNameCOMMA
56	TokenNameIntegerLiteral
,	TokenNameCOMMA
61	TokenNameIntegerLiteral
,	TokenNameCOMMA
71	TokenNameIntegerLiteral
,	TokenNameCOMMA
71	TokenNameIntegerLiteral
,	TokenNameCOMMA
79	TokenNameIntegerLiteral
,	TokenNameCOMMA
86	TokenNameIntegerLiteral
,	TokenNameCOMMA
98	TokenNameIntegerLiteral
,	TokenNameCOMMA
98	TokenNameIntegerLiteral
,	TokenNameCOMMA
103	TokenNameIntegerLiteral
,	TokenNameCOMMA
124	TokenNameIntegerLiteral
,	TokenNameCOMMA
124	TokenNameIntegerLiteral
,	TokenNameCOMMA
128	TokenNameIntegerLiteral
,	TokenNameCOMMA
132	TokenNameIntegerLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
18	TokenNameIntegerLiteral
,	TokenNameCOMMA
12	TokenNameIntegerLiteral
,	TokenNameCOMMA
14	TokenNameIntegerLiteral
,	TokenNameCOMMA
16	TokenNameIntegerLiteral
,	TokenNameCOMMA
18	TokenNameIntegerLiteral
,	TokenNameCOMMA
37	TokenNameIntegerLiteral
,	TokenNameCOMMA
33	TokenNameIntegerLiteral
,	TokenNameCOMMA
35	TokenNameIntegerLiteral
,	TokenNameCOMMA
37	TokenNameIntegerLiteral
,	TokenNameCOMMA
46	TokenNameIntegerLiteral
,	TokenNameCOMMA
51	TokenNameIntegerLiteral
,	TokenNameCOMMA
60	TokenNameIntegerLiteral
,	TokenNameCOMMA
66	TokenNameIntegerLiteral
,	TokenNameCOMMA
83	TokenNameIntegerLiteral
,	TokenNameCOMMA
78	TokenNameIntegerLiteral
,	TokenNameCOMMA
83	TokenNameIntegerLiteral
,	TokenNameCOMMA
95	TokenNameIntegerLiteral
,	TokenNameCOMMA
110	TokenNameIntegerLiteral
,	TokenNameCOMMA
102	TokenNameIntegerLiteral
,	TokenNameCOMMA
110	TokenNameIntegerLiteral
,	TokenNameCOMMA
133	TokenNameIntegerLiteral
,	TokenNameCOMMA
125	TokenNameIntegerLiteral
,	TokenNameCOMMA
129	TokenNameIntegerLiteral
,	TokenNameCOMMA
133	TokenNameIntegerLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
WikipediaTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
StringReader	TokenNameIdentifier
(	TokenNameLPAREN
test	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
WikipediaTokenizer	TokenNameIdentifier
.	TokenNameDOT
BOTH	TokenNameIdentifier
,	TokenNameCOMMA
untoks	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
expectedFlags	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
UNTOKENIZED_TOKEN_FLAG	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
UNTOKENIZED_TOKEN_FLAG	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
UNTOKENIZED_TOKEN_FLAG	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
UNTOKENIZED_TOKEN_FLAG	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
UNTOKENIZED_TOKEN_FLAG	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
FlagsAttribute	TokenNameIdentifier
flagsAtt	TokenNameIdentifier
=	TokenNameEQUAL
tf	TokenNameIdentifier
.	TokenNameDOT
addAttribute	TokenNameIdentifier
(	TokenNameLPAREN
FlagsAttribute	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tf	TokenNameIdentifier
.	TokenNameDOT
reset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
expectedFlags	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
tf	TokenNameIdentifier
.	TokenNameDOT
incrementToken	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"flags "	TokenNameStringLiteral
+	TokenNamePLUS
i	TokenNameIdentifier
,	TokenNameCOMMA
expectedFlags	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
,	TokenNameCOMMA
flagsAtt	TokenNameIdentifier
.	TokenNameDOT
getFlags	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
assertFalse	TokenNameIdentifier
(	TokenNameLPAREN
tf	TokenNameIdentifier
.	TokenNameDOT
incrementToken	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tf	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testRandomStrings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Analyzer	TokenNameIdentifier
a	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ReusableAnalyzerBase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
@	TokenNameAT
Override	TokenNameIdentifier
protected	TokenNameprotected
TokenStreamComponents	TokenNameIdentifier
createComponents	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
fieldName	TokenNameIdentifier
,	TokenNameCOMMA
Reader	TokenNameIdentifier
reader	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Tokenizer	TokenNameIdentifier
tokenizer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
WikipediaTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
TokenStreamComponents	TokenNameIdentifier
(	TokenNameLPAREN
tokenizer	TokenNameIdentifier
,	TokenNameCOMMA
tokenizer	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkRandomData	TokenNameIdentifier
(	TokenNameLPAREN
random	TokenNameIdentifier
,	TokenNameCOMMA
a	TokenNameIdentifier
,	TokenNameCOMMA
10000	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
RANDOM_MULTIPLIER	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testRandomHugeStrings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Analyzer	TokenNameIdentifier
a	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ReusableAnalyzerBase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
@	TokenNameAT
Override	TokenNameIdentifier
protected	TokenNameprotected
TokenStreamComponents	TokenNameIdentifier
createComponents	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
fieldName	TokenNameIdentifier
,	TokenNameCOMMA
Reader	TokenNameIdentifier
reader	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Tokenizer	TokenNameIdentifier
tokenizer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
WikipediaTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
TokenStreamComponents	TokenNameIdentifier
(	TokenNameLPAREN
tokenizer	TokenNameIdentifier
,	TokenNameCOMMA
tokenizer	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkRandomData	TokenNameIdentifier
(	TokenNameLPAREN
random	TokenNameIdentifier
,	TokenNameCOMMA
a	TokenNameIdentifier
,	TokenNameCOMMA
200	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
RANDOM_MULTIPLIER	TokenNameIdentifier
,	TokenNameCOMMA
8192	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
