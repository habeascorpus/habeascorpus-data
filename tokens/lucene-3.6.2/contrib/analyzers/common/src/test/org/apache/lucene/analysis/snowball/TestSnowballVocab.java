package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
snowball	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
Reader	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
KeywordTokenizer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
Analyzer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
Tokenizer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
ReusableAnalyzerBase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
LuceneTestCase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
static	TokenNamestatic
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
VocabularyAssert	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
TestSnowballVocab	TokenNameIdentifier
extends	TokenNameextends
LuceneTestCase	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
void	TokenNamevoid
testStemmers	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"Danish"	TokenNameStringLiteral
,	TokenNameCOMMA
"danish"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"Dutch"	TokenNameStringLiteral
,	TokenNameCOMMA
"dutch"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"English"	TokenNameStringLiteral
,	TokenNameCOMMA
"english"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"French"	TokenNameStringLiteral
,	TokenNameCOMMA
"french"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"German"	TokenNameStringLiteral
,	TokenNameCOMMA
"german"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"German2"	TokenNameStringLiteral
,	TokenNameCOMMA
"german2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"Hungarian"	TokenNameStringLiteral
,	TokenNameCOMMA
"hungarian"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"Italian"	TokenNameStringLiteral
,	TokenNameCOMMA
"italian"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"Kp"	TokenNameStringLiteral
,	TokenNameCOMMA
"kraaij_pohlmann"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"Norwegian"	TokenNameStringLiteral
,	TokenNameCOMMA
"norwegian"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"Porter"	TokenNameStringLiteral
,	TokenNameCOMMA
"porter"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"Portuguese"	TokenNameStringLiteral
,	TokenNameCOMMA
"portuguese"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"Romanian"	TokenNameStringLiteral
,	TokenNameCOMMA
"romanian"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"Russian"	TokenNameStringLiteral
,	TokenNameCOMMA
"russian"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"Spanish"	TokenNameStringLiteral
,	TokenNameCOMMA
"spanish"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"Swedish"	TokenNameStringLiteral
,	TokenNameCOMMA
"swedish"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
"Turkish"	TokenNameStringLiteral
,	TokenNameCOMMA
"turkish"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
assertCorrectOutput	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
String	TokenNameIdentifier
snowballLanguage	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
dataDirectory	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"checking snowball language: "	TokenNameStringLiteral
+	TokenNamePLUS
snowballLanguage	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Analyzer	TokenNameIdentifier
a	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ReusableAnalyzerBase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
@	TokenNameAT
Override	TokenNameIdentifier
protected	TokenNameprotected
TokenStreamComponents	TokenNameIdentifier
createComponents	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
fieldName	TokenNameIdentifier
,	TokenNameCOMMA
Reader	TokenNameIdentifier
reader	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Tokenizer	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
KeywordTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
TokenStreamComponents	TokenNameIdentifier
(	TokenNameLPAREN
t	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
SnowballFilter	TokenNameIdentifier
(	TokenNameLPAREN
t	TokenNameIdentifier
,	TokenNameCOMMA
snowballLanguage	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
assertVocabulary	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
,	TokenNameCOMMA
getDataFile	TokenNameIdentifier
(	TokenNameLPAREN
"TestSnowballVocabData.zip"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
dataDirectory	TokenNameIdentifier
+	TokenNamePLUS
"/voc.txt"	TokenNameStringLiteral
,	TokenNameCOMMA
dataDirectory	TokenNameIdentifier
+	TokenNamePLUS
"/output.txt"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
