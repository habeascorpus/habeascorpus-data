package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
cjk	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
BaseTokenStreamTestCase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
Analyzer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Version	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Deprecated	TokenNameIdentifier
public	TokenNamepublic
class	TokenNameclass
TestCJKTokenizer	TokenNameIdentifier
extends	TokenNameextends
BaseTokenStreamTestCase	TokenNameIdentifier
{	TokenNameLBRACE
class	TokenNameclass
TestToken	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
termText	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
start	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
end	TokenNameIdentifier
;	TokenNameSEMICOLON
String	TokenNameIdentifier
type	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
TestToken	TokenNameIdentifier
newToken	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
termText	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
start	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
end	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
TestToken	TokenNameIdentifier
token	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TestToken	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
token	TokenNameIdentifier
.	TokenNameDOT
termText	TokenNameIdentifier
=	TokenNameEQUAL
termText	TokenNameIdentifier
;	TokenNameSEMICOLON
token	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
=	TokenNameEQUAL
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
TOKEN_TYPE_NAMES	TokenNameIdentifier
[	TokenNameLBRACKET
type	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
token	TokenNameIdentifier
.	TokenNameDOT
start	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
;	TokenNameSEMICOLON
token	TokenNameIdentifier
.	TokenNameDOT
end	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
token	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
String	TokenNameIdentifier
str	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
out_tokens	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Analyzer	TokenNameIdentifier
analyzer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CJKAnalyzer	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_30	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
terms	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
out_tokens	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
startOffsets	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
out_tokens	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
endOffsets	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
out_tokens	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
String	TokenNameIdentifier
types	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
out_tokens	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
out_tokens	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
terms	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
out_tokens	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
termText	TokenNameIdentifier
;	TokenNameSEMICOLON
startOffsets	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
out_tokens	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
start	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffsets	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
out_tokens	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
end	TokenNameIdentifier
;	TokenNameSEMICOLON
types	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
out_tokens	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
type	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
assertAnalyzesTo	TokenNameIdentifier
(	TokenNameLPAREN
analyzer	TokenNameIdentifier
,	TokenNameCOMMA
str	TokenNameIdentifier
,	TokenNameCOMMA
terms	TokenNameIdentifier
,	TokenNameCOMMA
startOffsets	TokenNameIdentifier
,	TokenNameCOMMA
endOffsets	TokenNameIdentifier
,	TokenNameCOMMA
types	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
checkCJKTokenReusable	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
Analyzer	TokenNameIdentifier
a	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
String	TokenNameIdentifier
str	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
out_tokens	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Analyzer	TokenNameIdentifier
analyzer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CJKAnalyzer	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_30	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
terms	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
out_tokens	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
startOffsets	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
out_tokens	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
endOffsets	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
out_tokens	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
String	TokenNameIdentifier
types	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
out_tokens	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
out_tokens	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
terms	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
out_tokens	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
termText	TokenNameIdentifier
;	TokenNameSEMICOLON
startOffsets	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
out_tokens	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
start	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffsets	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
out_tokens	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
end	TokenNameIdentifier
;	TokenNameSEMICOLON
types	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
out_tokens	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
type	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
assertAnalyzesToReuse	TokenNameIdentifier
(	TokenNameLPAREN
analyzer	TokenNameIdentifier
,	TokenNameCOMMA
str	TokenNameIdentifier
,	TokenNameCOMMA
terms	TokenNameIdentifier
,	TokenNameCOMMA
startOffsets	TokenNameIdentifier
,	TokenNameCOMMA
endOffsets	TokenNameIdentifier
,	TokenNameCOMMA
types	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testJa1	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
str	TokenNameIdentifier
=	TokenNameEQUAL
"一二三四五六七八九十"	TokenNameStringLiteral
;	TokenNameSEMICOLON
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
out_tokens	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"一二"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"二三"	TokenNameStringLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"三四"	TokenNameStringLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"四五"	TokenNameStringLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"五六"	TokenNameStringLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
6	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"六七"	TokenNameStringLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
7	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"七八"	TokenNameStringLiteral
,	TokenNameCOMMA
6	TokenNameIntegerLiteral
,	TokenNameCOMMA
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"八九"	TokenNameStringLiteral
,	TokenNameCOMMA
7	TokenNameIntegerLiteral
,	TokenNameCOMMA
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"九十"	TokenNameStringLiteral
,	TokenNameCOMMA
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
10	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
str	TokenNameIdentifier
,	TokenNameCOMMA
out_tokens	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testJa2	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
str	TokenNameIdentifier
=	TokenNameEQUAL
"一 二三四 五六七八九 十"	TokenNameStringLiteral
;	TokenNameSEMICOLON
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
out_tokens	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"一"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"二三"	TokenNameStringLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"三四"	TokenNameStringLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"五六"	TokenNameStringLiteral
,	TokenNameCOMMA
6	TokenNameIntegerLiteral
,	TokenNameCOMMA
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"六七"	TokenNameStringLiteral
,	TokenNameCOMMA
7	TokenNameIntegerLiteral
,	TokenNameCOMMA
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"七八"	TokenNameStringLiteral
,	TokenNameCOMMA
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
10	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"八九"	TokenNameStringLiteral
,	TokenNameCOMMA
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"十"	TokenNameStringLiteral
,	TokenNameCOMMA
12	TokenNameIntegerLiteral
,	TokenNameCOMMA
13	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
str	TokenNameIdentifier
,	TokenNameCOMMA
out_tokens	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testC	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
str	TokenNameIdentifier
=	TokenNameEQUAL
"abc defgh ijklmn opqrstu vwxy z"	TokenNameStringLiteral
;	TokenNameSEMICOLON
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
out_tokens	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"abc"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"defgh"	TokenNameStringLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"ijklmn"	TokenNameStringLiteral
,	TokenNameCOMMA
10	TokenNameIntegerLiteral
,	TokenNameCOMMA
16	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"opqrstu"	TokenNameStringLiteral
,	TokenNameCOMMA
17	TokenNameIntegerLiteral
,	TokenNameCOMMA
24	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"vwxy"	TokenNameStringLiteral
,	TokenNameCOMMA
25	TokenNameIntegerLiteral
,	TokenNameCOMMA
29	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"z"	TokenNameStringLiteral
,	TokenNameCOMMA
30	TokenNameIntegerLiteral
,	TokenNameCOMMA
31	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
str	TokenNameIdentifier
,	TokenNameCOMMA
out_tokens	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testMix	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
str	TokenNameIdentifier
=	TokenNameEQUAL
"あいうえおabcかきくけこ"	TokenNameStringLiteral
;	TokenNameSEMICOLON
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
out_tokens	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"あい"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"いう"	TokenNameStringLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"うえ"	TokenNameStringLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"えお"	TokenNameStringLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"abc"	TokenNameStringLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"かき"	TokenNameStringLiteral
,	TokenNameCOMMA
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
10	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"きく"	TokenNameStringLiteral
,	TokenNameCOMMA
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"くけ"	TokenNameStringLiteral
,	TokenNameCOMMA
10	TokenNameIntegerLiteral
,	TokenNameCOMMA
12	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"けこ"	TokenNameStringLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
13	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
str	TokenNameIdentifier
,	TokenNameCOMMA
out_tokens	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testMix2	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
str	TokenNameIdentifier
=	TokenNameEQUAL
"あいうえおabんcかきくけ こ"	TokenNameStringLiteral
;	TokenNameSEMICOLON
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
out_tokens	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"あい"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"いう"	TokenNameStringLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"うえ"	TokenNameStringLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"えお"	TokenNameStringLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"ab"	TokenNameStringLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
7	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"ん"	TokenNameStringLiteral
,	TokenNameCOMMA
7	TokenNameIntegerLiteral
,	TokenNameCOMMA
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"c"	TokenNameStringLiteral
,	TokenNameCOMMA
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"かき"	TokenNameStringLiteral
,	TokenNameCOMMA
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"きく"	TokenNameStringLiteral
,	TokenNameCOMMA
10	TokenNameIntegerLiteral
,	TokenNameCOMMA
12	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"くけ"	TokenNameStringLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
13	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"こ"	TokenNameStringLiteral
,	TokenNameCOMMA
14	TokenNameIntegerLiteral
,	TokenNameCOMMA
15	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
str	TokenNameIdentifier
,	TokenNameCOMMA
out_tokens	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testSingleChar	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
str	TokenNameIdentifier
=	TokenNameEQUAL
"一"	TokenNameStringLiteral
;	TokenNameSEMICOLON
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
out_tokens	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"一"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
str	TokenNameIdentifier
,	TokenNameCOMMA
out_tokens	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testFullWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
str	TokenNameIdentifier
=	TokenNameEQUAL
"Ｔｅｓｔ １２３４"	TokenNameStringLiteral
;	TokenNameSEMICOLON
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
out_tokens	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"test"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"1234"	TokenNameStringLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
str	TokenNameIdentifier
,	TokenNameCOMMA
out_tokens	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testNonIdeographic	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
str	TokenNameIdentifier
=	TokenNameEQUAL
"一 روبرت موير"	TokenNameStringLiteral
;	TokenNameSEMICOLON
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
out_tokens	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"一"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"رو"	TokenNameStringLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"وب"	TokenNameStringLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"بر"	TokenNameStringLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
6	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"رت"	TokenNameStringLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
7	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"مو"	TokenNameStringLiteral
,	TokenNameCOMMA
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
10	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"وي"	TokenNameStringLiteral
,	TokenNameCOMMA
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"ير"	TokenNameStringLiteral
,	TokenNameCOMMA
10	TokenNameIntegerLiteral
,	TokenNameCOMMA
12	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
str	TokenNameIdentifier
,	TokenNameCOMMA
out_tokens	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testNonIdeographicNonLetter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
str	TokenNameIdentifier
=	TokenNameEQUAL
"一 رُوبرت موير"	TokenNameStringLiteral
;	TokenNameSEMICOLON
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
out_tokens	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"一"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"ر"	TokenNameStringLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"وب"	TokenNameStringLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
6	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"بر"	TokenNameStringLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
7	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"رت"	TokenNameStringLiteral
,	TokenNameCOMMA
6	TokenNameIntegerLiteral
,	TokenNameCOMMA
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"مو"	TokenNameStringLiteral
,	TokenNameCOMMA
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"وي"	TokenNameStringLiteral
,	TokenNameCOMMA
10	TokenNameIntegerLiteral
,	TokenNameCOMMA
12	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"ير"	TokenNameStringLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
13	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
str	TokenNameIdentifier
,	TokenNameCOMMA
out_tokens	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testTokenStream	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Analyzer	TokenNameIdentifier
analyzer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CJKAnalyzer	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_30	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertAnalyzesTo	TokenNameIdentifier
(	TokenNameLPAREN
analyzer	TokenNameIdentifier
,	TokenNameCOMMA
"一丁丂"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"一丁"	TokenNameStringLiteral
,	TokenNameCOMMA
"丁丂"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testReusableTokenStream	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Analyzer	TokenNameIdentifier
analyzer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CJKAnalyzer	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_30	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
str	TokenNameIdentifier
=	TokenNameEQUAL
"あいうえおabcかきくけこ"	TokenNameStringLiteral
;	TokenNameSEMICOLON
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
out_tokens	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"あい"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"いう"	TokenNameStringLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"うえ"	TokenNameStringLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"えお"	TokenNameStringLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"abc"	TokenNameStringLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"かき"	TokenNameStringLiteral
,	TokenNameCOMMA
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
10	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"きく"	TokenNameStringLiteral
,	TokenNameCOMMA
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"くけ"	TokenNameStringLiteral
,	TokenNameCOMMA
10	TokenNameIntegerLiteral
,	TokenNameCOMMA
12	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"けこ"	TokenNameStringLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
13	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkCJKTokenReusable	TokenNameIdentifier
(	TokenNameLPAREN
analyzer	TokenNameIdentifier
,	TokenNameCOMMA
str	TokenNameIdentifier
,	TokenNameCOMMA
out_tokens	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
str	TokenNameIdentifier
=	TokenNameEQUAL
"あいうえおabんcかきくけ こ"	TokenNameStringLiteral
;	TokenNameSEMICOLON
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
out_tokens2	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"あい"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"いう"	TokenNameStringLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"うえ"	TokenNameStringLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"えお"	TokenNameStringLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"ab"	TokenNameStringLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
7	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"ん"	TokenNameStringLiteral
,	TokenNameCOMMA
7	TokenNameIntegerLiteral
,	TokenNameCOMMA
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"c"	TokenNameStringLiteral
,	TokenNameCOMMA
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"かき"	TokenNameStringLiteral
,	TokenNameCOMMA
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"きく"	TokenNameStringLiteral
,	TokenNameCOMMA
10	TokenNameIntegerLiteral
,	TokenNameCOMMA
12	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"くけ"	TokenNameStringLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
13	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"こ"	TokenNameStringLiteral
,	TokenNameCOMMA
14	TokenNameIntegerLiteral
,	TokenNameCOMMA
15	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkCJKTokenReusable	TokenNameIdentifier
(	TokenNameLPAREN
analyzer	TokenNameIdentifier
,	TokenNameCOMMA
str	TokenNameIdentifier
,	TokenNameCOMMA
out_tokens2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testFinalOffset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
"あい"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"あい"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
"あい   "	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"あい"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
"test"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"test"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
"test   "	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"test"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
"あいtest"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"あい"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"test"	TokenNameStringLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
6	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkCJKToken	TokenNameIdentifier
(	TokenNameLPAREN
"testあい    "	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
TestToken	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"test"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
SINGLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
newToken	TokenNameIdentifier
(	TokenNameLPAREN
"あい"	TokenNameStringLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
6	TokenNameIntegerLiteral
,	TokenNameCOMMA
CJKTokenizer	TokenNameIdentifier
.	TokenNameDOT
DOUBLE_TOKEN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testRandomStrings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
checkRandomData	TokenNameIdentifier
(	TokenNameLPAREN
random	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
CJKAnalyzer	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_30	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
10000	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
RANDOM_MULTIPLIER	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
