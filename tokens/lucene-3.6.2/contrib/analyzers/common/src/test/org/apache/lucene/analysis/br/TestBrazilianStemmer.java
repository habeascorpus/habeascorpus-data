package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
br	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
Reader	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
StringReader	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
BaseTokenStreamTestCase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
Analyzer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
CharArraySet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
KeywordMarkerFilter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
LowerCaseTokenizer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
ReusableAnalyzerBase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
Tokenizer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
KeywordTokenizer	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
TestBrazilianStemmer	TokenNameIdentifier
extends	TokenNameextends
BaseTokenStreamTestCase	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
void	TokenNamevoid
testWithSnowballExamples	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
check	TokenNameIdentifier
(	TokenNameLPAREN
"boa"	TokenNameStringLiteral
,	TokenNameCOMMA
"boa"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boainain"	TokenNameStringLiteral
,	TokenNameCOMMA
"boainain"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boas"	TokenNameStringLiteral
,	TokenNameCOMMA
"boas"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bôas"	TokenNameStringLiteral
,	TokenNameCOMMA
"boas"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boassu"	TokenNameStringLiteral
,	TokenNameCOMMA
"boassu"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boataria"	TokenNameStringLiteral
,	TokenNameCOMMA
"boat"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boate"	TokenNameStringLiteral
,	TokenNameCOMMA
"boat"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boates"	TokenNameStringLiteral
,	TokenNameCOMMA
"boat"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boatos"	TokenNameStringLiteral
,	TokenNameCOMMA
"boat"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bob"	TokenNameStringLiteral
,	TokenNameCOMMA
"bob"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boba"	TokenNameStringLiteral
,	TokenNameCOMMA
"bob"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bobagem"	TokenNameStringLiteral
,	TokenNameCOMMA
"bobag"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bobagens"	TokenNameStringLiteral
,	TokenNameCOMMA
"bobagens"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bobalhões"	TokenNameStringLiteral
,	TokenNameCOMMA
"bobalho"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bobear"	TokenNameStringLiteral
,	TokenNameCOMMA
"bob"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bobeira"	TokenNameStringLiteral
,	TokenNameCOMMA
"bobeir"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bobinho"	TokenNameStringLiteral
,	TokenNameCOMMA
"bobinh"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bobinhos"	TokenNameStringLiteral
,	TokenNameCOMMA
"bobinh"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bobo"	TokenNameStringLiteral
,	TokenNameCOMMA
"bob"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bobs"	TokenNameStringLiteral
,	TokenNameCOMMA
"bobs"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boca"	TokenNameStringLiteral
,	TokenNameCOMMA
"boc"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bocadas"	TokenNameStringLiteral
,	TokenNameCOMMA
"boc"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bocadinho"	TokenNameStringLiteral
,	TokenNameCOMMA
"bocadinh"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bocado"	TokenNameStringLiteral
,	TokenNameCOMMA
"boc"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bocaiúva"	TokenNameStringLiteral
,	TokenNameCOMMA
"bocaiuv"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boçal"	TokenNameStringLiteral
,	TokenNameCOMMA
"bocal"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bocarra"	TokenNameStringLiteral
,	TokenNameCOMMA
"bocarr"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bocas"	TokenNameStringLiteral
,	TokenNameCOMMA
"boc"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bode"	TokenNameStringLiteral
,	TokenNameCOMMA
"bod"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bodoque"	TokenNameStringLiteral
,	TokenNameCOMMA
"bodoqu"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"body"	TokenNameStringLiteral
,	TokenNameCOMMA
"body"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boeing"	TokenNameStringLiteral
,	TokenNameCOMMA
"boeing"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boem"	TokenNameStringLiteral
,	TokenNameCOMMA
"boem"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boemia"	TokenNameStringLiteral
,	TokenNameCOMMA
"boem"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boêmio"	TokenNameStringLiteral
,	TokenNameCOMMA
"boemi"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bogotá"	TokenNameStringLiteral
,	TokenNameCOMMA
"bogot"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boi"	TokenNameStringLiteral
,	TokenNameCOMMA
"boi"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"bóia"	TokenNameStringLiteral
,	TokenNameCOMMA
"boi"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"boiando"	TokenNameStringLiteral
,	TokenNameCOMMA
"boi"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quiabo"	TokenNameStringLiteral
,	TokenNameCOMMA
"quiab"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quicaram"	TokenNameStringLiteral
,	TokenNameCOMMA
"quic"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quickly"	TokenNameStringLiteral
,	TokenNameCOMMA
"quickly"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quieto"	TokenNameStringLiteral
,	TokenNameCOMMA
"quiet"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quietos"	TokenNameStringLiteral
,	TokenNameCOMMA
"quiet"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quilate"	TokenNameStringLiteral
,	TokenNameCOMMA
"quilat"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quilates"	TokenNameStringLiteral
,	TokenNameCOMMA
"quilat"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quilinhos"	TokenNameStringLiteral
,	TokenNameCOMMA
"quilinh"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quilo"	TokenNameStringLiteral
,	TokenNameCOMMA
"quil"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quilombo"	TokenNameStringLiteral
,	TokenNameCOMMA
"quilomb"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quilométricas"	TokenNameStringLiteral
,	TokenNameCOMMA
"quilometr"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quilométricos"	TokenNameStringLiteral
,	TokenNameCOMMA
"quilometr"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quilômetro"	TokenNameStringLiteral
,	TokenNameCOMMA
"quilometr"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quilômetros"	TokenNameStringLiteral
,	TokenNameCOMMA
"quilometr"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quilos"	TokenNameStringLiteral
,	TokenNameCOMMA
"quil"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quimica"	TokenNameStringLiteral
,	TokenNameCOMMA
"quimic"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quilos"	TokenNameStringLiteral
,	TokenNameCOMMA
"quil"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quimica"	TokenNameStringLiteral
,	TokenNameCOMMA
"quimic"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quimicas"	TokenNameStringLiteral
,	TokenNameCOMMA
"quimic"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quimico"	TokenNameStringLiteral
,	TokenNameCOMMA
"quimic"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quimicos"	TokenNameStringLiteral
,	TokenNameCOMMA
"quimic"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quimioterapia"	TokenNameStringLiteral
,	TokenNameCOMMA
"quimioterap"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quimioterápicos"	TokenNameStringLiteral
,	TokenNameCOMMA
"quimioterap"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quimono"	TokenNameStringLiteral
,	TokenNameCOMMA
"quimon"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quincas"	TokenNameStringLiteral
,	TokenNameCOMMA
"quinc"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quinhão"	TokenNameStringLiteral
,	TokenNameCOMMA
"quinha"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quinhentos"	TokenNameStringLiteral
,	TokenNameCOMMA
"quinhent"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quinn"	TokenNameStringLiteral
,	TokenNameCOMMA
"quinn"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quino"	TokenNameStringLiteral
,	TokenNameCOMMA
"quin"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quinta"	TokenNameStringLiteral
,	TokenNameCOMMA
"quint"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quintal"	TokenNameStringLiteral
,	TokenNameCOMMA
"quintal"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quintana"	TokenNameStringLiteral
,	TokenNameCOMMA
"quintan"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quintanilha"	TokenNameStringLiteral
,	TokenNameCOMMA
"quintanilh"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quintão"	TokenNameStringLiteral
,	TokenNameCOMMA
"quinta"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quintessência"	TokenNameStringLiteral
,	TokenNameCOMMA
"quintessente"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quintino"	TokenNameStringLiteral
,	TokenNameCOMMA
"quintin"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quinto"	TokenNameStringLiteral
,	TokenNameCOMMA
"quint"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quintos"	TokenNameStringLiteral
,	TokenNameCOMMA
"quint"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quintuplicou"	TokenNameStringLiteral
,	TokenNameCOMMA
"quintuplic"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quinze"	TokenNameStringLiteral
,	TokenNameCOMMA
"quinz"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quinzena"	TokenNameStringLiteral
,	TokenNameCOMMA
"quinzen"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quiosque"	TokenNameStringLiteral
,	TokenNameCOMMA
"quiosqu"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testNormalization	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
check	TokenNameIdentifier
(	TokenNameLPAREN
"Brasil"	TokenNameStringLiteral
,	TokenNameCOMMA
"brasil"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"Brasília"	TokenNameStringLiteral
,	TokenNameCOMMA
"brasil"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"quimio5terápicos"	TokenNameStringLiteral
,	TokenNameCOMMA
"quimio5terapicos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"áá"	TokenNameStringLiteral
,	TokenNameCOMMA
"áá"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
check	TokenNameIdentifier
(	TokenNameLPAREN
"ááá"	TokenNameStringLiteral
,	TokenNameCOMMA
"aaa"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testReusableTokenStream	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Analyzer	TokenNameIdentifier
a	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BrazilianAnalyzer	TokenNameIdentifier
(	TokenNameLPAREN
TEST_VERSION_CURRENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkReuse	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
,	TokenNameCOMMA
"boa"	TokenNameStringLiteral
,	TokenNameCOMMA
"boa"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkReuse	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
,	TokenNameCOMMA
"boainain"	TokenNameStringLiteral
,	TokenNameCOMMA
"boainain"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkReuse	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
,	TokenNameCOMMA
"boas"	TokenNameStringLiteral
,	TokenNameCOMMA
"boas"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkReuse	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
,	TokenNameCOMMA
"bôas"	TokenNameStringLiteral
,	TokenNameCOMMA
"boas"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testStemExclusionTable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
BrazilianAnalyzer	TokenNameIdentifier
a	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BrazilianAnalyzer	TokenNameIdentifier
(	TokenNameLPAREN
TEST_VERSION_CURRENT	TokenNameIdentifier
,	TokenNameCOMMA
CharArraySet	TokenNameIdentifier
.	TokenNameDOT
EMPTY_SET	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
TEST_VERSION_CURRENT	TokenNameIdentifier
,	TokenNameCOMMA
asSet	TokenNameIdentifier
(	TokenNameLPAREN
"quintessência"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkReuse	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
,	TokenNameCOMMA
"quintessência"	TokenNameStringLiteral
,	TokenNameCOMMA
"quintessência"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testStemExclusionTableBWCompat	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
CharArraySet	TokenNameIdentifier
set	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
TEST_VERSION_CURRENT	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
set	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
"Brasília"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
BrazilianStemFilter	TokenNameIdentifier
filter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BrazilianStemFilter	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
LowerCaseTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
TEST_VERSION_CURRENT	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
StringReader	TokenNameIdentifier
(	TokenNameLPAREN
"Brasília Brasilia"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
set	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTokenStreamContents	TokenNameIdentifier
(	TokenNameLPAREN
filter	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"brasília"	TokenNameStringLiteral
,	TokenNameCOMMA
"brasil"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testWithKeywordAttribute	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
CharArraySet	TokenNameIdentifier
set	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
TEST_VERSION_CURRENT	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
set	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
"Brasília"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
BrazilianStemFilter	TokenNameIdentifier
filter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BrazilianStemFilter	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
KeywordMarkerFilter	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
LowerCaseTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
TEST_VERSION_CURRENT	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
StringReader	TokenNameIdentifier
(	TokenNameLPAREN
"Brasília Brasilia"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
set	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTokenStreamContents	TokenNameIdentifier
(	TokenNameLPAREN
filter	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"brasília"	TokenNameStringLiteral
,	TokenNameCOMMA
"brasil"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testWithKeywordAttributeAndExclusionTable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
CharArraySet	TokenNameIdentifier
set	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
TEST_VERSION_CURRENT	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
set	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
"Brasília"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CharArraySet	TokenNameIdentifier
set1	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
TEST_VERSION_CURRENT	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
set1	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
"Brasilia"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
BrazilianStemFilter	TokenNameIdentifier
filter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BrazilianStemFilter	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
KeywordMarkerFilter	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
LowerCaseTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
TEST_VERSION_CURRENT	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
StringReader	TokenNameIdentifier
(	TokenNameLPAREN
"Brasília Brasilia"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
set	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
set1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTokenStreamContents	TokenNameIdentifier
(	TokenNameLPAREN
filter	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"brasília"	TokenNameStringLiteral
,	TokenNameCOMMA
"brasilia"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testExclusionTableReuse	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
BrazilianAnalyzer	TokenNameIdentifier
a	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BrazilianAnalyzer	TokenNameIdentifier
(	TokenNameLPAREN
TEST_VERSION_CURRENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkReuse	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
,	TokenNameCOMMA
"quintessência"	TokenNameStringLiteral
,	TokenNameCOMMA
"quintessente"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
a	TokenNameIdentifier
.	TokenNameDOT
setStemExclusionTable	TokenNameIdentifier
(	TokenNameLPAREN
"quintessência"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkReuse	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
,	TokenNameCOMMA
"quintessência"	TokenNameStringLiteral
,	TokenNameCOMMA
"quintessência"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
check	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
String	TokenNameIdentifier
input	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
String	TokenNameIdentifier
expected	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
checkOneTerm	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BrazilianAnalyzer	TokenNameIdentifier
(	TokenNameLPAREN
TEST_VERSION_CURRENT	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
input	TokenNameIdentifier
,	TokenNameCOMMA
expected	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
checkReuse	TokenNameIdentifier
(	TokenNameLPAREN
Analyzer	TokenNameIdentifier
a	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
input	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
expected	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
checkOneTermReuse	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
,	TokenNameCOMMA
input	TokenNameIdentifier
,	TokenNameCOMMA
expected	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testRandomStrings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
checkRandomData	TokenNameIdentifier
(	TokenNameLPAREN
random	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
BrazilianAnalyzer	TokenNameIdentifier
(	TokenNameLPAREN
TEST_VERSION_CURRENT	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
10000	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
RANDOM_MULTIPLIER	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testEmptyTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Analyzer	TokenNameIdentifier
a	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ReusableAnalyzerBase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
@	TokenNameAT
Override	TokenNameIdentifier
protected	TokenNameprotected
TokenStreamComponents	TokenNameIdentifier
createComponents	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
fieldName	TokenNameIdentifier
,	TokenNameCOMMA
Reader	TokenNameIdentifier
reader	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Tokenizer	TokenNameIdentifier
tokenizer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
KeywordTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
TokenStreamComponents	TokenNameIdentifier
(	TokenNameLPAREN
tokenizer	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
BrazilianStemFilter	TokenNameIdentifier
(	TokenNameLPAREN
tokenizer	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkOneTermReuse	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
