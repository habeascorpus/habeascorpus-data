package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
el	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
CharArraySet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Version	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Arrays	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
GreekStemmer	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
int	TokenNameint
stem	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
<	TokenNameLESS
4	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
origLen	TokenNameIdentifier
=	TokenNameEQUAL
len	TokenNameIdentifier
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule0	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule1	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule2	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule3	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule4	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule5	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule6	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule7	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule8	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule9	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule10	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule11	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule12	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule13	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule14	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule15	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule16	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule17	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule18	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule19	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
len	TokenNameIdentifier
=	TokenNameEQUAL
rule20	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
origLen	TokenNameIdentifier
)	TokenNameRPAREN
len	TokenNameIdentifier
=	TokenNameEQUAL
rule21	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
rule22	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
int	TokenNameint
rule0	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
9	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"καθεστωτοσ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"καθεστωτων"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
8	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"γεγονοτοσ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"γεγονοτων"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
8	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"καθεστωτα"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
7	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"τατογιου"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"τατογιων"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
7	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"γεγονοτα"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
7	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"καθεστωσ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
6	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σκαγιου"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σκαγιων"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ολογιου"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ολογιων"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"κρεατοσ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"κρεατων"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"περατοσ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"περατων"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"τερατοσ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"τερατων"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
6	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"τατογια"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
6	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"γεγονοσ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
5	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"φαγιου"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"φαγιων"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σογιου"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σογιων"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
5	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σκαγια"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ολογια"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"κρεατα"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"περατα"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"τερατα"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
4	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"φαγια"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σογια"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"φωτοσ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"φωτων"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
4	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"κρεασ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"περασ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"τερασ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
3	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"φωτα"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
2	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"φωσ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
int	TokenNameint
rule1	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
4	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αδεσ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αδων"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οκ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"μαμ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"μαν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"μπαμπ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"πατερ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"γιαγι"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"νταντ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"κυρ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"θει"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"πεθερ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
int	TokenNameint
rule2	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
4	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"εδεσ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"εδων"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οπ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιπ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"εμπ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"υπ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"γηπ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"δαπ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"κρασπ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"μιλ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
int	TokenNameint
rule3	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
5	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουδεσ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουδων"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αρκ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"καλιακ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"πεταλ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"λιχ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"πλεξ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σκ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"φλ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"φρ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"βελ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"λουλ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"χν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σπ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"τραγ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"φε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc4	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"θ"	TokenNameStringLiteral
,	TokenNameCOMMA
"δ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ελ"	TokenNameStringLiteral
,	TokenNameCOMMA
"γαλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ν"	TokenNameStringLiteral
,	TokenNameCOMMA
"π"	TokenNameStringLiteral
,	TokenNameCOMMA
"ιδ"	TokenNameStringLiteral
,	TokenNameCOMMA
"παρ"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
rule4	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
3	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"εωσ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"εων"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
exc4	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
int	TokenNameint
rule5	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
2	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ια"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
endsWithVowel	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
3	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιου"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιων"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
endsWithVowel	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc6	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"αλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αδ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ενδ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αμαν"	TokenNameStringLiteral
,	TokenNameCOMMA
"αμμοχαλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ηθ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ανηθ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αντιδ"	TokenNameStringLiteral
,	TokenNameCOMMA
"φυσ"	TokenNameStringLiteral
,	TokenNameCOMMA
"βρωμ"	TokenNameStringLiteral
,	TokenNameCOMMA
"γερ"	TokenNameStringLiteral
,	TokenNameCOMMA
"εξωδ"	TokenNameStringLiteral
,	TokenNameCOMMA
"καλπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"καλλιν"	TokenNameStringLiteral
,	TokenNameCOMMA
"καταδ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μουλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μπαν"	TokenNameStringLiteral
,	TokenNameCOMMA
"μπαγιατ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μπολ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μποσ"	TokenNameStringLiteral
,	TokenNameCOMMA
"νιτ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ξικ"	TokenNameStringLiteral
,	TokenNameCOMMA
"συνομηλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πετσ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πιτσ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πικαντ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πλιατσ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ποστελν"	TokenNameStringLiteral
,	TokenNameCOMMA
"πρωτοδ"	TokenNameStringLiteral
,	TokenNameCOMMA
"σερτ"	TokenNameStringLiteral
,	TokenNameCOMMA
"συναδ"	TokenNameStringLiteral
,	TokenNameCOMMA
"τσαμ"	TokenNameStringLiteral
,	TokenNameCOMMA
"υποδ"	TokenNameStringLiteral
,	TokenNameCOMMA
"φιλον"	TokenNameStringLiteral
,	TokenNameCOMMA
"φυλοδ"	TokenNameStringLiteral
,	TokenNameCOMMA
"χασ"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
rule6	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
boolean	TokenNameboolean
removed	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
3	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ικα"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ικο"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
4	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ικου"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ικων"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
removed	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
endsWithVowel	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
exc6	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc7	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"αναπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αποθ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αποκ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αποστ"	TokenNameStringLiteral
,	TokenNameCOMMA
"βουβ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ξεθ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ουλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πεθ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πικρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ποτ"	TokenNameStringLiteral
,	TokenNameCOMMA
"σιχ"	TokenNameStringLiteral
,	TokenNameCOMMA
"χ"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
rule7	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
5	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αγαμε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
7	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηθηκαμε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
7	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
6	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουσαμε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
6	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
5	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αγαμε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ησαμε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηκαμε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
3	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αμε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
exc7	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc8a	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"τρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"τσ"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc8b	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"βετερ"	TokenNameStringLiteral
,	TokenNameCOMMA
"βουλκ"	TokenNameStringLiteral
,	TokenNameCOMMA
"βραχμ"	TokenNameStringLiteral
,	TokenNameCOMMA
"γ"	TokenNameStringLiteral
,	TokenNameCOMMA
"δραδουμ"	TokenNameStringLiteral
,	TokenNameCOMMA
"θ"	TokenNameStringLiteral
,	TokenNameCOMMA
"καλπουζ"	TokenNameStringLiteral
,	TokenNameCOMMA
"καστελ"	TokenNameStringLiteral
,	TokenNameCOMMA
"κορμορ"	TokenNameStringLiteral
,	TokenNameCOMMA
"λαοπλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μωαμεθ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μουσουλμ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ν"	TokenNameStringLiteral
,	TokenNameCOMMA
"ουλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"π"	TokenNameStringLiteral
,	TokenNameCOMMA
"πελεκ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πολισ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πορτολ"	TokenNameStringLiteral
,	TokenNameCOMMA
"σαρακατσ"	TokenNameStringLiteral
,	TokenNameCOMMA
"σουλτ"	TokenNameStringLiteral
,	TokenNameCOMMA
"τσαρλατ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ορφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"τσιγγ"	TokenNameStringLiteral
,	TokenNameCOMMA
"τσοπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"φωτοστεφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"χ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ψυχοπλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αγ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ορφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"γαλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"γερ"	TokenNameStringLiteral
,	TokenNameCOMMA
"δεκ"	TokenNameStringLiteral
,	TokenNameCOMMA
"διπλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αμερικαν"	TokenNameStringLiteral
,	TokenNameCOMMA
"ουρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πιθ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πουριτ"	TokenNameStringLiteral
,	TokenNameCOMMA
"σ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ζωντ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ικ"	TokenNameStringLiteral
,	TokenNameCOMMA
"καστ"	TokenNameStringLiteral
,	TokenNameCOMMA
"κοπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"λιχ"	TokenNameStringLiteral
,	TokenNameCOMMA
"λουθηρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μαιντ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μελ"	TokenNameStringLiteral
,	TokenNameCOMMA
"σιγ"	TokenNameStringLiteral
,	TokenNameCOMMA
"σπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"στεγ"	TokenNameStringLiteral
,	TokenNameCOMMA
"τραγ"	TokenNameStringLiteral
,	TokenNameCOMMA
"τσαγ"	TokenNameStringLiteral
,	TokenNameCOMMA
"φ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ερ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αδαπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αθιγγ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αμηχ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ανικ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ανοργ"	TokenNameStringLiteral
,	TokenNameCOMMA
"απηγ"	TokenNameStringLiteral
,	TokenNameCOMMA
"απιθ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ατσιγγ"	TokenNameStringLiteral
,	TokenNameCOMMA
"βασ"	TokenNameStringLiteral
,	TokenNameCOMMA
"βασκ"	TokenNameStringLiteral
,	TokenNameCOMMA
"βαθυγαλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"βιομηχ"	TokenNameStringLiteral
,	TokenNameCOMMA
"βραχυκ"	TokenNameStringLiteral
,	TokenNameCOMMA
"διατ"	TokenNameStringLiteral
,	TokenNameCOMMA
"διαφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ενοργ"	TokenNameStringLiteral
,	TokenNameCOMMA
"θυσ"	TokenNameStringLiteral
,	TokenNameCOMMA
"καπνοβιομηχ"	TokenNameStringLiteral
,	TokenNameCOMMA
"καταγαλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"κλιβ"	TokenNameStringLiteral
,	TokenNameCOMMA
"κοιλαρφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"λιβ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μεγλοβιομηχ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μικροβιομηχ"	TokenNameStringLiteral
,	TokenNameCOMMA
"νταβ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ξηροκλιβ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ολιγοδαμ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ολογαλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πενταρφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"περηφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"περιτρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πλατ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πολυδαπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πολυμηχ"	TokenNameStringLiteral
,	TokenNameCOMMA
"στεφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ταβ"	TokenNameStringLiteral
,	TokenNameCOMMA
"τετ"	TokenNameStringLiteral
,	TokenNameCOMMA
"υπερηφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"υποκοπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"χαμηλοδαπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ψηλοταβ"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
rule8	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
boolean	TokenNameboolean
removed	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
8	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιουντανε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
7	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιοντανε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουντανε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηθηκανε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
7	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
6	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιοτανε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οντανε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουσανε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
6	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
5	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αγανε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ησανε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οτανε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηκανε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
removed	TokenNameIdentifier
&&	TokenNameAND_AND
exc8a	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
4	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'α'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'γ'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'α'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'ν'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
3	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ανε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
endsWithVowelNoY	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
exc8b	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc9	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"αβαρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"βεν"	TokenNameStringLiteral
,	TokenNameCOMMA
"εναρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αβρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αδ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αθ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αν"	TokenNameStringLiteral
,	TokenNameCOMMA
"απλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"βαρον"	TokenNameStringLiteral
,	TokenNameCOMMA
"ντρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"σκ"	TokenNameStringLiteral
,	TokenNameCOMMA
"κοπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μπορ"	TokenNameStringLiteral
,	TokenNameCOMMA
"νιφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"παγ"	TokenNameStringLiteral
,	TokenNameCOMMA
"παρακαλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"σερπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"σκελ"	TokenNameStringLiteral
,	TokenNameCOMMA
"συρφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"τοκ"	TokenNameStringLiteral
,	TokenNameCOMMA
"υ"	TokenNameStringLiteral
,	TokenNameCOMMA
"δ"	TokenNameStringLiteral
,	TokenNameCOMMA
"εμ"	TokenNameStringLiteral
,	TokenNameCOMMA
"θαρρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"θ"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
rule9	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
5	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ησετε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
3	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ετε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
exc9	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWithVowelNoY	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οδ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αιρ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"φορ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ταθ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"διαθ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σχ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ενδ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ευρ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"τιθ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"υπερθ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ραθ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ενθ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ροθ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σθ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"πυρ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αιν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"συνδ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"συν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"συνθ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"χωρ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"πον"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"βρ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"καθ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ευθ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"εκθ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"νετ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ρον"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αρκ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"βαρ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"βολ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ωφελ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
int	TokenNameint
rule10	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
5	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οντασ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ωντασ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
3	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αρχ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'ο'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"κρε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'ω'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
int	TokenNameint
rule11	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
6	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ομαστε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
6	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
2	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ον"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
7	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιομαστε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
7	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
2	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ον"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
5	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'ο'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
4	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'μ'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'α'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'σ'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'τ'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc12a	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"π"	TokenNameStringLiteral
,	TokenNameCOMMA
"απ"	TokenNameStringLiteral
,	TokenNameCOMMA
"συμπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ασυμπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ακαταπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αμεταμφ"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc12b	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"αλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"εκτελ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ζ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ξ"	TokenNameStringLiteral
,	TokenNameCOMMA
"παρακαλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"προ"	TokenNameStringLiteral
,	TokenNameCOMMA
"νισ"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
rule12	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
5	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιεστε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
exc12a	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
4	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"εστε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
exc12b	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc13	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"διαθ"	TokenNameStringLiteral
,	TokenNameCOMMA
"θ"	TokenNameStringLiteral
,	TokenNameCOMMA
"παρακαταθ"	TokenNameStringLiteral
,	TokenNameCOMMA
"προσθ"	TokenNameStringLiteral
,	TokenNameCOMMA
"συνθ"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
rule13	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
6	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηθηκεσ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
6	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
5	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηθηκα"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηθηκε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
boolean	TokenNameboolean
removed	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
4	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηκεσ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
3	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηκα"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηκε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
removed	TokenNameIdentifier
&&	TokenNameAND_AND
(	TokenNameLPAREN
exc13	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σκωλ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σκουλ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ναρθ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σφ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οθ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"πιθ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc14	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"φαρμακ"	TokenNameStringLiteral
,	TokenNameCOMMA
"χαδ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αγκ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αναρρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"βρομ"	TokenNameStringLiteral
,	TokenNameCOMMA
"εκλιπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"λαμπιδ"	TokenNameStringLiteral
,	TokenNameCOMMA
"λεχ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πατ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"λ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μεδ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μεσαζ"	TokenNameStringLiteral
,	TokenNameCOMMA
"υποτειν"	TokenNameStringLiteral
,	TokenNameCOMMA
"αμ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αιθ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ανηκ"	TokenNameStringLiteral
,	TokenNameCOMMA
"δεσποζ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ενδιαφερ"	TokenNameStringLiteral
,	TokenNameCOMMA
"δε"	TokenNameStringLiteral
,	TokenNameCOMMA
"δευτερευ"	TokenNameStringLiteral
,	TokenNameCOMMA
"καθαρευ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πλε"	TokenNameStringLiteral
,	TokenNameCOMMA
"τσα"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
rule14	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
boolean	TokenNameboolean
removed	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
5	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουσεσ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
4	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουσα"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουσε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
removed	TokenNameIdentifier
&&	TokenNameAND_AND
(	TokenNameLPAREN
exc14	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWithVowel	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ποδαρ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"βλεπ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"πανταχ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"φρυδ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"μαντιλ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"μαλλ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"κυματ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"λαχ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ληγ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"φαγ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ομ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"πρωτ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc15a	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"αβαστ"	TokenNameStringLiteral
,	TokenNameCOMMA
"πολυφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αδηφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"παμφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ασπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αμαλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αμαλλι"	TokenNameStringLiteral
,	TokenNameCOMMA
"ανυστ"	TokenNameStringLiteral
,	TokenNameCOMMA
"απερ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ασπαρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αχαρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"δερβεν"	TokenNameStringLiteral
,	TokenNameCOMMA
"δροσοπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ξεφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"νεοπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"νομοτ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ολοπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ομοτ"	TokenNameStringLiteral
,	TokenNameCOMMA
"προστ"	TokenNameStringLiteral
,	TokenNameCOMMA
"προσωποπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"συμπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"συντ"	TokenNameStringLiteral
,	TokenNameCOMMA
"τ"	TokenNameStringLiteral
,	TokenNameCOMMA
"υποτ"	TokenNameStringLiteral
,	TokenNameCOMMA
"χαρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αειπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αιμοστ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ανυπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αποτ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αρτιπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"διατ"	TokenNameStringLiteral
,	TokenNameCOMMA
"εν"	TokenNameStringLiteral
,	TokenNameCOMMA
"επιτ"	TokenNameStringLiteral
,	TokenNameCOMMA
"κροκαλοπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"σιδηροπ"	TokenNameStringLiteral
,	TokenNameCOMMA
"λ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ναυ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ουλαμ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ουρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"π"	TokenNameStringLiteral
,	TokenNameCOMMA
"τρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"μ"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc15b	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"ψοφ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ναυλοχ"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
rule15	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
boolean	TokenNameboolean
removed	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
4	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αγεσ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
3	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αγα"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αγε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
removed	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
boolean	TokenNameboolean
cond1	TokenNameIdentifier
=	TokenNameEQUAL
exc15a	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οφ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"πελ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"χορτ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"λλ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σφ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ρπ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"φρ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"πρ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"λοχ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"σμην"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
boolean	TokenNameboolean
cond2	TokenNameIdentifier
=	TokenNameEQUAL
exc15b	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"κολλ"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cond1	TokenNameIdentifier
&&	TokenNameAND_AND
!	TokenNameNOT
cond2	TokenNameIdentifier
)	TokenNameRPAREN
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc16	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"ν"	TokenNameStringLiteral
,	TokenNameCOMMA
"χερσον"	TokenNameStringLiteral
,	TokenNameCOMMA
"δωδεκαν"	TokenNameStringLiteral
,	TokenNameCOMMA
"ερημον"	TokenNameStringLiteral
,	TokenNameCOMMA
"μεγαλον"	TokenNameStringLiteral
,	TokenNameCOMMA
"επταν"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
rule16	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
boolean	TokenNameboolean
removed	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
4	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ησου"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
3	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ησε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ησα"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
removed	TokenNameIdentifier
&&	TokenNameAND_AND
exc16	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc17	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"ασβ"	TokenNameStringLiteral
,	TokenNameCOMMA
"σβ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αχρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"χρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"απλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αειμν"	TokenNameStringLiteral
,	TokenNameCOMMA
"δυσχρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ευχρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"κοινοχρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"παλιμψ"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
rule17	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
4	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηστε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
exc17	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc18	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"ν"	TokenNameStringLiteral
,	TokenNameCOMMA
"ρ"	TokenNameStringLiteral
,	TokenNameCOMMA
"σπι"	TokenNameStringLiteral
,	TokenNameCOMMA
"στραβομουτσ"	TokenNameStringLiteral
,	TokenNameCOMMA
"κακομουτσ"	TokenNameStringLiteral
,	TokenNameCOMMA
"εξων"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
rule18	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
boolean	TokenNameboolean
removed	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
6	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ησουνε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηθουνε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
6	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
4	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουνε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
removed	TokenNameIdentifier
&&	TokenNameAND_AND
exc18	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'ο'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'υ'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'ν'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
CharArraySet	TokenNameIdentifier
exc19	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharArraySet	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_31	TokenNameIdentifier
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
"παρασουσ"	TokenNameStringLiteral
,	TokenNameCOMMA
"φ"	TokenNameStringLiteral
,	TokenNameCOMMA
"χ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ωριοπλ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αζ"	TokenNameStringLiteral
,	TokenNameCOMMA
"αλλοσουσ"	TokenNameStringLiteral
,	TokenNameCOMMA
"ασουσ"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
rule19	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
boolean	TokenNameboolean
removed	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
6	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ησουμε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηθουμε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
6	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
4	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουμε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
removed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
removed	TokenNameIdentifier
&&	TokenNameAND_AND
exc19	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'ο'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'υ'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
'μ'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
int	TokenNameint
rule20	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
5	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ματων"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ματοσ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
4	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ματα"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
len	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
int	TokenNameint
rule21	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
9	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιοντουσαν"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
9	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
8	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιομασταν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιοσασταν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιουμαστε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οντουσαν"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
7	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιεμαστε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιεσαστε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιομουνα"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιοσαστε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιοσουνα"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιουνται"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιουνταν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηθηκατε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ομασταν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οσασταν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουμαστε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
7	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
6	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιομουν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιονταν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιοσουν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηθειτε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηθηκαν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ομουνα"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οσαστε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οσουνα"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουνται"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουνταν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουσατε"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
6	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
5	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αγατε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιεμαι"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιεται"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιεσαι"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιοταν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ιουμα"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηθεισ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηθουν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηκατε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ησατε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ησουν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ομουν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ονται"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ονταν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οσουν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουμαι"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουσαν"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
4	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αγαν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αμαι"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ασαι"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αται"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ειτε"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"εσαι"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"εται"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηδεσ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηδων"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηθει"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηκαν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ησαν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ησει"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ησεσ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ομαι"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οταν"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
3	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αει"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"εισ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ηθω"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ησω"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ουσ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
2	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αν"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ασ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"αω"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ει"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"εσ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ησ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οι"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οσ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ου"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"υσ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ων"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>	TokenNameGREATER
1	TokenNameIntegerLiteral
&&	TokenNameAND_AND
endsWithVowel	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
int	TokenNameint
rule22	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"εστερ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"εστατ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οτερ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"οτατ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"υτερ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"υτατ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ωτερ"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
,	TokenNameCOMMA
"ωτατ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
len	TokenNameIdentifier
-	TokenNameMINUS
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
boolean	TokenNameboolean
endsWith	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
suffix	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
suffixLen	TokenNameIdentifier
=	TokenNameEQUAL
suffix	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
suffixLen	TokenNameIdentifier
>	TokenNameGREATER
len	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
suffixLen	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
--	TokenNameMINUS_MINUS
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
suffixLen	TokenNameIdentifier
-	TokenNameMINUS
i	TokenNameIdentifier
)	TokenNameRPAREN
]	TokenNameRBRACKET
!=	TokenNameNOT_EQUAL
suffix	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
boolean	TokenNameboolean
endsWithVowel	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
'α'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'ε'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'η'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'ι'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'ο'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'υ'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'ω'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
boolean	TokenNameboolean
endsWithVowelNoY	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
s	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
,	TokenNameCOMMA
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
s	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
'α'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'ε'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'η'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'ι'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'ο'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'ω'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
