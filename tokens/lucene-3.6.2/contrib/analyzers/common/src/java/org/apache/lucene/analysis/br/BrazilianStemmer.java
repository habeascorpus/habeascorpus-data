package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
br	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
BrazilianStemmer	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
String	TokenNameIdentifier
TERM	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
CT	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
R1	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
R2	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
RV	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
BrazilianStemmer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
String	TokenNameIdentifier
stem	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
term	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
boolean	TokenNameboolean
altered	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
createCT	TokenNameIdentifier
(	TokenNameLPAREN
term	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isIndexable	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isStemmable	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
CT	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
R1	TokenNameIdentifier
=	TokenNameEQUAL
getR1	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
R2	TokenNameIdentifier
=	TokenNameEQUAL
getR1	TokenNameIdentifier
(	TokenNameLPAREN
R1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
RV	TokenNameIdentifier
=	TokenNameEQUAL
getRV	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TERM	TokenNameIdentifier
=	TokenNameEQUAL
term	TokenNameIdentifier
+	TokenNamePLUS
";"	TokenNameStringLiteral
+	TokenNamePLUS
CT	TokenNameIdentifier
;	TokenNameSEMICOLON
altered	TokenNameIdentifier
=	TokenNameEQUAL
step1	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
altered	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
altered	TokenNameIdentifier
=	TokenNameEQUAL
step2	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
altered	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
step3	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
step4	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
step5	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
CT	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
boolean	TokenNameboolean
isStemmable	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
term	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
c	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
c	TokenNameIdentifier
<	TokenNameLESS
term	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
Character	TokenNameIdentifier
.	TokenNameDOT
isLetter	TokenNameIdentifier
(	TokenNameLPAREN
term	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
boolean	TokenNameboolean
isIndexable	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
term	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
term	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
<	TokenNameLESS
30	TokenNameIntegerLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
term	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
boolean	TokenNameboolean
isVowel	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
value	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
'a'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
value	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
'e'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
value	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
'i'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
value	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
'o'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
value	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
'u'	TokenNameCharacterLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
String	TokenNameIdentifier
getR1	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
i	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
j	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
value	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
i	TokenNameIdentifier
=	TokenNameEQUAL
value	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
j	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
j	TokenNameIdentifier
<	TokenNameLESS
i	TokenNameIdentifier
;	TokenNameSEMICOLON
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
isVowel	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
(	TokenNameLPAREN
j	TokenNameIdentifier
<	TokenNameLESS
i	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
;	TokenNameSEMICOLON
j	TokenNameIdentifier
<	TokenNameLESS
i	TokenNameIdentifier
;	TokenNameSEMICOLON
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
(	TokenNameLPAREN
isVowel	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
(	TokenNameLPAREN
j	TokenNameIdentifier
<	TokenNameLESS
i	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
value	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
String	TokenNameIdentifier
getRV	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
i	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
j	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
value	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
i	TokenNameIdentifier
=	TokenNameEQUAL
value	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
i	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
isVowel	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
j	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
j	TokenNameIdentifier
<	TokenNameLESS
i	TokenNameIdentifier
;	TokenNameSEMICOLON
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
isVowel	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
j	TokenNameIdentifier
<	TokenNameLESS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
value	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
i	TokenNameIdentifier
>	TokenNameGREATER
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
isVowel	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
isVowel	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
j	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
j	TokenNameIdentifier
<	TokenNameLESS
i	TokenNameIdentifier
;	TokenNameSEMICOLON
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isVowel	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
j	TokenNameIdentifier
<	TokenNameLESS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
value	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
i	TokenNameIdentifier
>	TokenNameGREATER
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
value	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
String	TokenNameIdentifier
changeTerm	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
j	TokenNameIdentifier
;	TokenNameSEMICOLON
String	TokenNameIdentifier
r	TokenNameIdentifier
=	TokenNameEQUAL
""	TokenNameStringLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
value	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
value	TokenNameIdentifier
=	TokenNameEQUAL
value	TokenNameIdentifier
.	TokenNameDOT
toLowerCase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
j	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
j	TokenNameIdentifier
<	TokenNameLESS
value	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'á'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'â'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'ã'	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
r	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
+	TokenNamePLUS
"a"	TokenNameStringLiteral
;	TokenNameSEMICOLON
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'é'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'ê'	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
r	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
+	TokenNamePLUS
"e"	TokenNameStringLiteral
;	TokenNameSEMICOLON
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'í'	TokenNameCharacterLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
r	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
+	TokenNamePLUS
"i"	TokenNameStringLiteral
;	TokenNameSEMICOLON
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'ó'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'ô'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'õ'	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
r	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
+	TokenNamePLUS
"o"	TokenNameStringLiteral
;	TokenNameSEMICOLON
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'ú'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'ü'	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
r	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
+	TokenNamePLUS
"u"	TokenNameStringLiteral
;	TokenNameSEMICOLON
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'ç'	TokenNameCharacterLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
r	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
+	TokenNamePLUS
"c"	TokenNameStringLiteral
;	TokenNameSEMICOLON
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'ñ'	TokenNameCharacterLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
r	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
+	TokenNamePLUS
"n"	TokenNameStringLiteral
;	TokenNameSEMICOLON
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
r	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
+	TokenNamePLUS
value	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
j	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
r	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
boolean	TokenNameboolean
suffix	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
value	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
suffix	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
value	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
suffix	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
value	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
value	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
suffix	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
suffix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
String	TokenNameIdentifier
replaceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
value	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
toReplace	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
changeTo	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
vvalue	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
value	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
toReplace	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
changeTo	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
value	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
vvalue	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
,	TokenNameCOMMA
toReplace	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
vvalue	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
value	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
vvalue	TokenNameIdentifier
+	TokenNamePLUS
changeTo	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
String	TokenNameIdentifier
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
value	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
toRemove	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
value	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
toRemove	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
||	TokenNameOR_OR
!	TokenNameNOT
suffix	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
,	TokenNameCOMMA
toRemove	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
value	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
value	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
value	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
toRemove	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
boolean	TokenNameboolean
suffixPreceded	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
value	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
suffix	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
preceded	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
value	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
suffix	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
preceded	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
||	TokenNameOR_OR
!	TokenNameNOT
suffix	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
,	TokenNameCOMMA
suffix	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
suffix	TokenNameIdentifier
(	TokenNameLPAREN
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
,	TokenNameCOMMA
suffix	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
preceded	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
createCT	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
term	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
changeTerm	TokenNameIdentifier
(	TokenNameLPAREN
term	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
<	TokenNameLESS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'"'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'\''	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'-'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
','	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
';'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'.'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'?'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'!'	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
CT	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
<	TokenNameLESS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'-'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
','	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
';'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'.'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'?'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'!'	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'\''	TokenNameCharacterLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'"'	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
CT	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
CT	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
boolean	TokenNameboolean
step1	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
CT	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"uciones"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"uciones"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
replaceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"uciones"	TokenNameStringLiteral
,	TokenNameCOMMA
"u"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
6	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"imentos"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"imentos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"imentos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"amentos"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"amentos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"amentos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"adores"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"adores"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"adores"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"adoras"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"adoras"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"adoras"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"logias"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"logias"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
replaceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"logias"	TokenNameStringLiteral
,	TokenNameCOMMA
"log"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"encias"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"encias"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
replaceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"encias"	TokenNameStringLiteral
,	TokenNameCOMMA
"ente"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"amente"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R1	TokenNameIdentifier
,	TokenNameCOMMA
"amente"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"amente"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"idades"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"idades"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"idades"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
5	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"acoes"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"acoes"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"acoes"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"imento"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"imento"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"imento"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"amento"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"amento"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"amento"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"adora"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"adora"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"adora"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ismos"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"ismos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ismos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"istas"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"istas"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"istas"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"logia"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"logia"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
replaceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"logia"	TokenNameStringLiteral
,	TokenNameCOMMA
"log"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ucion"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"ucion"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
replaceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ucion"	TokenNameStringLiteral
,	TokenNameCOMMA
"u"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"encia"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"encia"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
replaceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"encia"	TokenNameStringLiteral
,	TokenNameCOMMA
"ente"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"mente"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"mente"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"mente"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"idade"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"idade"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"idade"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
4	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"acao"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"acao"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"acao"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ezas"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"ezas"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ezas"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"icos"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"icos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"icos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"icas"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"icas"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"icas"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ismo"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"ismo"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ismo"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"avel"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"avel"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"avel"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ivel"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"ivel"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ivel"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ista"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"ista"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ista"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"osos"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"osos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"osos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"osas"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"osas"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"osas"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ador"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"ador"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ador"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ivas"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"ivas"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ivas"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ivos"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"ivos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ivos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iras"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"iras"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffixPreceded	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iras"	TokenNameStringLiteral
,	TokenNameCOMMA
"e"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
replaceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iras"	TokenNameStringLiteral
,	TokenNameCOMMA
"ir"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
CT	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"eza"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"eza"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"eza"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ico"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"ico"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ico"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ica"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"ica"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ica"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"oso"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"oso"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"oso"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"osa"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"osa"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"osa"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iva"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"iva"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iva"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ivo"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
R2	TokenNameIdentifier
,	TokenNameCOMMA
"ivo"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ivo"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ira"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ira"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffixPreceded	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ira"	TokenNameStringLiteral
,	TokenNameCOMMA
"e"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
replaceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ira"	TokenNameStringLiteral
,	TokenNameCOMMA
"ir"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
boolean	TokenNameboolean
step2	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
RV	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
RV	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
7	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"issemos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"issemos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"essemos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"essemos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"assemos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"assemos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ariamos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ariamos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"eriamos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"eriamos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"iriamos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iriamos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
RV	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
6	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"iremos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iremos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"eremos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"eremos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"aremos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"aremos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"avamos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"avamos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"iramos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iramos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"eramos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"eramos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"aramos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"aramos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"asseis"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"asseis"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"esseis"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"esseis"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"isseis"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"isseis"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"arieis"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"arieis"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"erieis"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"erieis"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"irieis"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"irieis"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
RV	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
5	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"irmos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"irmos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"iamos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iamos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"armos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"armos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ermos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ermos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"areis"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"areis"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ereis"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ereis"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ireis"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ireis"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"asses"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"asses"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"esses"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"esses"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"isses"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"isses"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"astes"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"astes"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"assem"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"assem"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"essem"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"essem"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"issem"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"issem"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ardes"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ardes"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"erdes"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"erdes"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"irdes"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"irdes"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ariam"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ariam"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"eriam"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"eriam"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"iriam"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iriam"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"arias"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"arias"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"erias"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"erias"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"irias"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"irias"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"estes"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"estes"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"istes"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"istes"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"areis"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"areis"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"aveis"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"aveis"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
RV	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
4	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"aria"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"aria"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"eria"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"eria"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"iria"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iria"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"asse"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"asse"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"esse"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"esse"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"isse"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"isse"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"aste"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"aste"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"este"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"este"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"iste"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iste"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"arei"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"arei"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"erei"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"erei"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"irei"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"irei"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"aram"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"aram"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"eram"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"eram"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"iram"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iram"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"avam"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"avam"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"arem"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"arem"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"erem"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"erem"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"irem"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"irem"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ando"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ando"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"endo"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"endo"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"indo"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"indo"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"arao"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"arao"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"erao"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"erao"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"irao"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"irao"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"adas"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"adas"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"idas"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"idas"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"aras"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"aras"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"eras"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"eras"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"iras"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iras"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"avas"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"avas"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ares"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ares"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"eres"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"eres"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ires"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ires"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ados"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ados"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"idos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"idos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"amos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"amos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"emos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"emos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"imos"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"imos"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"iras"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iras"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ieis"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ieis"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
RV	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ada"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ada"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ida"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ida"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ara"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ara"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"era"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"era"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ira"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ava"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"iam"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iam"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ado"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ado"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ido"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ido"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ias"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ias"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ais"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ais"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"eis"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"eis"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ira"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ira"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ear"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ear"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
RV	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ia"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ia"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ei"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ei"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"am"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"am"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"em"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"em"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ar"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ar"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"er"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"er"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ir"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ir"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"as"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"as"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"es"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"es"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"is"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"eu"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"eu"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"iu"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iu"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"iu"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"iu"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"ou"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"ou"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
step3	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
RV	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"i"	TokenNameStringLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
suffixPreceded	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"i"	TokenNameStringLiteral
,	TokenNameCOMMA
"c"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"i"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
step4	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
RV	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"os"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"os"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"a"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"a"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"i"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"i"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"o"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"o"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
step5	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
RV	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
suffix	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"e"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
suffixPreceded	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"e"	TokenNameStringLiteral
,	TokenNameCOMMA
"gu"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"e"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"u"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
suffixPreceded	TokenNameIdentifier
(	TokenNameLPAREN
RV	TokenNameIdentifier
,	TokenNameCOMMA
"e"	TokenNameStringLiteral
,	TokenNameCOMMA
"ci"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"e"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"i"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
CT	TokenNameIdentifier
=	TokenNameEQUAL
removeSuffix	TokenNameIdentifier
(	TokenNameLPAREN
CT	TokenNameIdentifier
,	TokenNameCOMMA
"e"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
log	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
" (TERM = "	TokenNameStringLiteral
+	TokenNamePLUS
TERM	TokenNameIdentifier
+	TokenNamePLUS
")"	TokenNameStringLiteral
+	TokenNamePLUS
" (CT = "	TokenNameStringLiteral
+	TokenNamePLUS
CT	TokenNameIdentifier
+	TokenNamePLUS
")"	TokenNameStringLiteral
+	TokenNamePLUS
" (RV = "	TokenNameStringLiteral
+	TokenNamePLUS
RV	TokenNameIdentifier
+	TokenNamePLUS
")"	TokenNameStringLiteral
+	TokenNamePLUS
" (R1 = "	TokenNameStringLiteral
+	TokenNamePLUS
R1	TokenNameIdentifier
+	TokenNamePLUS
")"	TokenNameStringLiteral
+	TokenNamePLUS
" (R2 = "	TokenNameStringLiteral
+	TokenNamePLUS
R2	TokenNameIdentifier
+	TokenNamePLUS
")"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
