package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
ja	TokenNameIdentifier
.	TokenNameDOT
dict	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
ja	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ToStringUtil	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
IntsRef	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
LuceneTestCase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
UnicodeUtil	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
fst	TokenNameIdentifier
.	TokenNameDOT
FST	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
fst	TokenNameIdentifier
.	TokenNameDOT
IntsRefFSTEnum	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
fst	TokenNameIdentifier
.	TokenNameDOT
IntsRefFSTEnum	TokenNameIdentifier
.	TokenNameDOT
InputOutput	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
TestTokenInfoDictionary	TokenNameIdentifier
extends	TokenNameextends
LuceneTestCase	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
void	TokenNamevoid
testEnumerateAll	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
numTerms	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
numWords	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
lastWordId	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
lastSourceId	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
TokenInfoDictionary	TokenNameIdentifier
tid	TokenNameIdentifier
=	TokenNameEQUAL
TokenInfoDictionary	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ConnectionCosts	TokenNameIdentifier
matrix	TokenNameIdentifier
=	TokenNameEQUAL
ConnectionCosts	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
FST	TokenNameIdentifier
<	TokenNameLESS
Long	TokenNameIdentifier
>	TokenNameGREATER
fst	TokenNameIdentifier
=	TokenNameEQUAL
tid	TokenNameIdentifier
.	TokenNameDOT
getFST	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getInternalFST	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
IntsRefFSTEnum	TokenNameIdentifier
<	TokenNameLESS
Long	TokenNameIdentifier
>	TokenNameGREATER
fstEnum	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
IntsRefFSTEnum	TokenNameIdentifier
<	TokenNameLESS
Long	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
fst	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
InputOutput	TokenNameIdentifier
<	TokenNameLESS
Long	TokenNameIdentifier
>	TokenNameGREATER
mapping	TokenNameIdentifier
;	TokenNameSEMICOLON
IntsRef	TokenNameIdentifier
scratch	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
IntsRef	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
(	TokenNameLPAREN
mapping	TokenNameIdentifier
=	TokenNameEQUAL
fstEnum	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
numTerms	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
IntsRef	TokenNameIdentifier
input	TokenNameIdentifier
=	TokenNameEQUAL
mapping	TokenNameIdentifier
.	TokenNameDOT
input	TokenNameIdentifier
;	TokenNameSEMICOLON
char	TokenNamechar
chars	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
char	TokenNamechar
[	TokenNameLBRACKET
input	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
chars	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
chars	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
char	TokenNamechar
)	TokenNameRPAREN
input	TokenNameIdentifier
.	TokenNameDOT
ints	TokenNameIdentifier
[	TokenNameLBRACKET
input	TokenNameIdentifier
.	TokenNameDOT
offset	TokenNameIdentifier
+	TokenNamePLUS
i	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
UnicodeUtil	TokenNameIdentifier
.	TokenNameDOT
validUTF16String	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
(	TokenNameLPAREN
chars	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Long	TokenNameIdentifier
output	TokenNameIdentifier
=	TokenNameEQUAL
mapping	TokenNameIdentifier
.	TokenNameDOT
output	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
sourceId	TokenNameIdentifier
=	TokenNameEQUAL
output	TokenNameIdentifier
.	TokenNameDOT
intValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
sourceId	TokenNameIdentifier
>	TokenNameGREATER
lastSourceId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
lastSourceId	TokenNameIdentifier
=	TokenNameEQUAL
sourceId	TokenNameIdentifier
;	TokenNameSEMICOLON
tid	TokenNameIdentifier
.	TokenNameDOT
lookupWordIds	TokenNameIdentifier
(	TokenNameLPAREN
sourceId	TokenNameIdentifier
,	TokenNameCOMMA
scratch	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
scratch	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
numWords	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
int	TokenNameint
wordId	TokenNameIdentifier
=	TokenNameEQUAL
scratch	TokenNameIdentifier
.	TokenNameDOT
ints	TokenNameIdentifier
[	TokenNameLBRACKET
scratch	TokenNameIdentifier
.	TokenNameDOT
offset	TokenNameIdentifier
+	TokenNamePLUS
i	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
wordId	TokenNameIdentifier
>	TokenNameGREATER
lastWordId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
lastWordId	TokenNameIdentifier
=	TokenNameEQUAL
wordId	TokenNameIdentifier
;	TokenNameSEMICOLON
String	TokenNameIdentifier
baseForm	TokenNameIdentifier
=	TokenNameEQUAL
tid	TokenNameIdentifier
.	TokenNameDOT
getBaseForm	TokenNameIdentifier
(	TokenNameLPAREN
wordId	TokenNameIdentifier
,	TokenNameCOMMA
chars	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
chars	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
baseForm	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
UnicodeUtil	TokenNameIdentifier
.	TokenNameDOT
validUTF16String	TokenNameIdentifier
(	TokenNameLPAREN
baseForm	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
inflectionForm	TokenNameIdentifier
=	TokenNameEQUAL
tid	TokenNameIdentifier
.	TokenNameDOT
getInflectionForm	TokenNameIdentifier
(	TokenNameLPAREN
wordId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
inflectionForm	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
UnicodeUtil	TokenNameIdentifier
.	TokenNameDOT
validUTF16String	TokenNameIdentifier
(	TokenNameLPAREN
inflectionForm	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
inflectionForm	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
assertNotNull	TokenNameIdentifier
(	TokenNameLPAREN
ToStringUtil	TokenNameIdentifier
.	TokenNameDOT
getInflectedFormTranslation	TokenNameIdentifier
(	TokenNameLPAREN
inflectionForm	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
String	TokenNameIdentifier
inflectionType	TokenNameIdentifier
=	TokenNameEQUAL
tid	TokenNameIdentifier
.	TokenNameDOT
getInflectionType	TokenNameIdentifier
(	TokenNameLPAREN
wordId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
inflectionType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
UnicodeUtil	TokenNameIdentifier
.	TokenNameDOT
validUTF16String	TokenNameIdentifier
(	TokenNameLPAREN
inflectionType	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
inflectionType	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
assertNotNull	TokenNameIdentifier
(	TokenNameLPAREN
ToStringUtil	TokenNameIdentifier
.	TokenNameDOT
getInflectionTypeTranslation	TokenNameIdentifier
(	TokenNameLPAREN
inflectionType	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
leftId	TokenNameIdentifier
=	TokenNameEQUAL
tid	TokenNameIdentifier
.	TokenNameDOT
getLeftId	TokenNameIdentifier
(	TokenNameLPAREN
wordId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
rightId	TokenNameIdentifier
=	TokenNameEQUAL
tid	TokenNameIdentifier
.	TokenNameDOT
getRightId	TokenNameIdentifier
(	TokenNameLPAREN
wordId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
matrix	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
rightId	TokenNameIdentifier
,	TokenNameCOMMA
leftId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tid	TokenNameIdentifier
.	TokenNameDOT
getWordCost	TokenNameIdentifier
(	TokenNameLPAREN
wordId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
pos	TokenNameIdentifier
=	TokenNameEQUAL
tid	TokenNameIdentifier
.	TokenNameDOT
getPartOfSpeech	TokenNameIdentifier
(	TokenNameLPAREN
wordId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNotNull	TokenNameIdentifier
(	TokenNameLPAREN
pos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
UnicodeUtil	TokenNameIdentifier
.	TokenNameDOT
validUTF16String	TokenNameIdentifier
(	TokenNameLPAREN
pos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNotNull	TokenNameIdentifier
(	TokenNameLPAREN
ToStringUtil	TokenNameIdentifier
.	TokenNameDOT
getPOSTranslation	TokenNameIdentifier
(	TokenNameLPAREN
pos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
pronunciation	TokenNameIdentifier
=	TokenNameEQUAL
tid	TokenNameIdentifier
.	TokenNameDOT
getPronunciation	TokenNameIdentifier
(	TokenNameLPAREN
wordId	TokenNameIdentifier
,	TokenNameCOMMA
chars	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
chars	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNotNull	TokenNameIdentifier
(	TokenNameLPAREN
pronunciation	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
UnicodeUtil	TokenNameIdentifier
.	TokenNameDOT
validUTF16String	TokenNameIdentifier
(	TokenNameLPAREN
pronunciation	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
reading	TokenNameIdentifier
=	TokenNameEQUAL
tid	TokenNameIdentifier
.	TokenNameDOT
getReading	TokenNameIdentifier
(	TokenNameLPAREN
wordId	TokenNameIdentifier
,	TokenNameCOMMA
chars	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
chars	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNotNull	TokenNameIdentifier
(	TokenNameLPAREN
reading	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
UnicodeUtil	TokenNameIdentifier
.	TokenNameDOT
validUTF16String	TokenNameIdentifier
(	TokenNameLPAREN
reading	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"checked "	TokenNameStringLiteral
+	TokenNamePLUS
numTerms	TokenNameIdentifier
+	TokenNamePLUS
" terms, "	TokenNameStringLiteral
+	TokenNamePLUS
numWords	TokenNameIdentifier
+	TokenNamePLUS
" words."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
