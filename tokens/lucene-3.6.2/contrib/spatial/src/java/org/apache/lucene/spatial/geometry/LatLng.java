package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
spatial	TokenNameIdentifier
.	TokenNameDOT
geometry	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Deprecated	TokenNameIdentifier
public	TokenNamepublic
abstract	TokenNameabstract
class	TokenNameclass
LatLng	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
abstract	TokenNameabstract
boolean	TokenNameboolean
isNormalized	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
abstract	TokenNameabstract
boolean	TokenNameboolean
isFixedPoint	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
abstract	TokenNameabstract
LatLng	TokenNameIdentifier
normalize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
abstract	TokenNameabstract
int	TokenNameint
getFixedLat	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
abstract	TokenNameabstract
int	TokenNameint
getFixedLng	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
abstract	TokenNameabstract
double	TokenNamedouble
getLat	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
abstract	TokenNameabstract
double	TokenNamedouble
getLng	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
abstract	TokenNameabstract
LatLng	TokenNameIdentifier
copy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
abstract	TokenNameabstract
FixedLatLng	TokenNameIdentifier
toFixed	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
abstract	TokenNameabstract
FloatLatLng	TokenNameIdentifier
toFloat	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
CartesianPoint	TokenNameIdentifier
toCartesian	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
LatLng	TokenNameIdentifier
ll	TokenNameIdentifier
=	TokenNameEQUAL
normalize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
lat	TokenNameIdentifier
=	TokenNameEQUAL
ll	TokenNameIdentifier
.	TokenNameDOT
getFixedLat	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
lng	TokenNameIdentifier
=	TokenNameEQUAL
ll	TokenNameIdentifier
.	TokenNameDOT
getFixedLng	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
CartesianPoint	TokenNameIdentifier
(	TokenNameLPAREN
lng	TokenNameIdentifier
+	TokenNamePLUS
180	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
FixedLatLng	TokenNameIdentifier
.	TokenNameDOT
SCALE_FACTOR_INT	TokenNameIdentifier
,	TokenNameCOMMA
lat	TokenNameIdentifier
+	TokenNamePLUS
90	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
FixedLatLng	TokenNameIdentifier
.	TokenNameDOT
SCALE_FACTOR_INT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
LatLng	TokenNameIdentifier
fromCartesian	TokenNameIdentifier
(	TokenNameLPAREN
CartesianPoint	TokenNameIdentifier
pt	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
lat	TokenNameIdentifier
=	TokenNameEQUAL
pt	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
90	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
FixedLatLng	TokenNameIdentifier
.	TokenNameDOT
SCALE_FACTOR_INT	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
lng	TokenNameIdentifier
=	TokenNameEQUAL
pt	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
180	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
FixedLatLng	TokenNameIdentifier
.	TokenNameDOT
SCALE_FACTOR_INT	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
FixedLatLng	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
arcDistance	TokenNameIdentifier
(	TokenNameLPAREN
LatLng	TokenNameIdentifier
ll2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
arcDistance	TokenNameIdentifier
(	TokenNameLPAREN
ll2	TokenNameIdentifier
,	TokenNameCOMMA
DistanceUnits	TokenNameIdentifier
.	TokenNameDOT
MILES	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
arcDistance	TokenNameIdentifier
(	TokenNameLPAREN
LatLng	TokenNameIdentifier
ll2	TokenNameIdentifier
,	TokenNameCOMMA
DistanceUnits	TokenNameIdentifier
lUnits	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
LatLng	TokenNameIdentifier
ll1	TokenNameIdentifier
=	TokenNameEQUAL
normalize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ll2	TokenNameIdentifier
=	TokenNameEQUAL
ll2	TokenNameIdentifier
.	TokenNameDOT
normalize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
lat1	TokenNameIdentifier
=	TokenNameEQUAL
ll1	TokenNameIdentifier
.	TokenNameDOT
getLat	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
lng1	TokenNameIdentifier
=	TokenNameEQUAL
ll1	TokenNameIdentifier
.	TokenNameDOT
getLng	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
lat2	TokenNameIdentifier
=	TokenNameEQUAL
ll2	TokenNameIdentifier
.	TokenNameDOT
getLat	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
lng2	TokenNameIdentifier
=	TokenNameEQUAL
ll2	TokenNameIdentifier
.	TokenNameDOT
getLng	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
lat1	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
lat2	TokenNameIdentifier
&&	TokenNameAND_AND
lng1	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
lng2	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
0.0	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
double	TokenNamedouble
dLon	TokenNameIdentifier
=	TokenNameEQUAL
lng2	TokenNameIdentifier
-	TokenNameMINUS
lng1	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
a	TokenNameIdentifier
=	TokenNameEQUAL
radians	TokenNameIdentifier
(	TokenNameLPAREN
90.0	TokenNameDoubleLiteral
-	TokenNameMINUS
lat1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
c	TokenNameIdentifier
=	TokenNameEQUAL
radians	TokenNameIdentifier
(	TokenNameLPAREN
90.0	TokenNameDoubleLiteral
-	TokenNameMINUS
lat2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
cosB	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Math	TokenNameIdentifier
.	TokenNameDOT
cos	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
Math	TokenNameIdentifier
.	TokenNameDOT
cos	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
Math	TokenNameIdentifier
.	TokenNameDOT
sin	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
Math	TokenNameIdentifier
.	TokenNameDOT
sin	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
Math	TokenNameIdentifier
.	TokenNameDOT
cos	TokenNameIdentifier
(	TokenNameLPAREN
radians	TokenNameIdentifier
(	TokenNameLPAREN
dLon	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
radius	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
lUnits	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
DistanceUnits	TokenNameIdentifier
.	TokenNameDOT
MILES	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
3963.205	TokenNameDoubleLiteral
:	TokenNameCOLON
6378.160187	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cosB	TokenNameIdentifier
<	TokenNameLESS
-	TokenNameMINUS
1.0	TokenNameDoubleLiteral
)	TokenNameRPAREN
return	TokenNamereturn
3.14159265358979323846	TokenNameDoubleLiteral
*	TokenNameMULTIPLY
radius	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
cosB	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
1.0	TokenNameDoubleLiteral
)	TokenNameRPAREN
return	TokenNamereturn
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
Math	TokenNameIdentifier
.	TokenNameDOT
acos	TokenNameIdentifier
(	TokenNameLPAREN
cosB	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
radius	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
double	TokenNamedouble
radians	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
a	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
a	TokenNameIdentifier
*	TokenNameMULTIPLY
0.01745329251994	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"["	TokenNameStringLiteral
+	TokenNamePLUS
getLat	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
getLng	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
"]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
abstract	TokenNameabstract
LatLng	TokenNameIdentifier
calculateMidpoint	TokenNameIdentifier
(	TokenNameLPAREN
LatLng	TokenNameIdentifier
other	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
abstract	TokenNameabstract
int	TokenNameint
hashCode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
abstract	TokenNameabstract
boolean	TokenNameboolean
equals	TokenNameIdentifier
(	TokenNameLPAREN
Object	TokenNameIdentifier
obj	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
