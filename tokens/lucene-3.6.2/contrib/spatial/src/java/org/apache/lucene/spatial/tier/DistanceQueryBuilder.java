package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
spatial	TokenNameIdentifier
.	TokenNameDOT
tier	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
ConstantScoreQuery	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
ChainedFilter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
Filter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
Query	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
QueryWrapperFilter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
spatial	TokenNameIdentifier
.	TokenNameDOT
geohash	TokenNameIdentifier
.	TokenNameDOT
GeoHashDistanceFilter	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Deprecated	TokenNameIdentifier
public	TokenNamepublic
class	TokenNameclass
DistanceQueryBuilder	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
long	TokenNamelong
serialVersionUID	TokenNameIdentifier
=	TokenNameEQUAL
1L	TokenNameLongLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
double	TokenNamedouble
lat	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
double	TokenNamedouble
lng	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
double	TokenNamedouble
miles	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
Filter	TokenNameIdentifier
filter	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
DistanceFilter	TokenNameIdentifier
distanceFilter	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
DistanceQueryBuilder	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
lat	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
lng	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
miles	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
latField	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
lngField	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
tierFieldPrefix	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
needPrecise	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
minTierIndexed	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
maxTierIndexed	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
lat	TokenNameIdentifier
=	TokenNameEQUAL
lat	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
lng	TokenNameIdentifier
=	TokenNameEQUAL
lng	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
miles	TokenNameIdentifier
=	TokenNameEQUAL
miles	TokenNameIdentifier
;	TokenNameSEMICOLON
CartesianPolyFilterBuilder	TokenNameIdentifier
cpf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CartesianPolyFilterBuilder	TokenNameIdentifier
(	TokenNameLPAREN
tierFieldPrefix	TokenNameIdentifier
,	TokenNameCOMMA
minTierIndexed	TokenNameIdentifier
,	TokenNameCOMMA
maxTierIndexed	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Filter	TokenNameIdentifier
cartesianFilter	TokenNameIdentifier
=	TokenNameEQUAL
cpf	TokenNameIdentifier
.	TokenNameDOT
getBoundingArea	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
miles	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
needPrecise	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
filter	TokenNameIdentifier
=	TokenNameEQUAL
distanceFilter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
LatLongDistanceFilter	TokenNameIdentifier
(	TokenNameLPAREN
cartesianFilter	TokenNameIdentifier
,	TokenNameCOMMA
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
miles	TokenNameIdentifier
,	TokenNameCOMMA
latField	TokenNameIdentifier
,	TokenNameCOMMA
lngField	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
filter	TokenNameIdentifier
=	TokenNameEQUAL
cartesianFilter	TokenNameIdentifier
;	TokenNameSEMICOLON
distanceFilter	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
DistanceQueryBuilder	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
lat	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
lng	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
miles	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
geoHashFieldPrefix	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
tierFieldPrefix	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
needPrecise	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
minTierIndexed	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
maxTierIndexed	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
lat	TokenNameIdentifier
=	TokenNameEQUAL
lat	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
lng	TokenNameIdentifier
=	TokenNameEQUAL
lng	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
miles	TokenNameIdentifier
=	TokenNameEQUAL
miles	TokenNameIdentifier
;	TokenNameSEMICOLON
CartesianPolyFilterBuilder	TokenNameIdentifier
cpf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CartesianPolyFilterBuilder	TokenNameIdentifier
(	TokenNameLPAREN
tierFieldPrefix	TokenNameIdentifier
,	TokenNameCOMMA
minTierIndexed	TokenNameIdentifier
,	TokenNameCOMMA
maxTierIndexed	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Filter	TokenNameIdentifier
cartesianFilter	TokenNameIdentifier
=	TokenNameEQUAL
cpf	TokenNameIdentifier
.	TokenNameDOT
getBoundingArea	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
miles	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
needPrecise	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
filter	TokenNameIdentifier
=	TokenNameEQUAL
distanceFilter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GeoHashDistanceFilter	TokenNameIdentifier
(	TokenNameLPAREN
cartesianFilter	TokenNameIdentifier
,	TokenNameCOMMA
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
miles	TokenNameIdentifier
,	TokenNameCOMMA
geoHashFieldPrefix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
filter	TokenNameIdentifier
=	TokenNameEQUAL
cartesianFilter	TokenNameIdentifier
;	TokenNameSEMICOLON
distanceFilter	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
Filter	TokenNameIdentifier
getFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
distanceFilter	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
distanceFilter	TokenNameIdentifier
.	TokenNameDOT
reset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
filter	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Filter	TokenNameIdentifier
getFilter	TokenNameIdentifier
(	TokenNameLPAREN
Query	TokenNameIdentifier
query	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
distanceFilter	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
distanceFilter	TokenNameIdentifier
.	TokenNameDOT
reset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
QueryWrapperFilter	TokenNameIdentifier
qf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
QueryWrapperFilter	TokenNameIdentifier
(	TokenNameLPAREN
query	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
ChainedFilter	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Filter	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
qf	TokenNameIdentifier
,	TokenNameCOMMA
filter	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
ChainedFilter	TokenNameIdentifier
.	TokenNameDOT
AND	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
DistanceFilter	TokenNameIdentifier
getDistanceFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
distanceFilter	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Query	TokenNameIdentifier
getQuery	TokenNameIdentifier
(	TokenNameLPAREN
Query	TokenNameIdentifier
query	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
ConstantScoreQuery	TokenNameIdentifier
(	TokenNameLPAREN
getFilter	TokenNameIdentifier
(	TokenNameLPAREN
query	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
getLat	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
lat	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
getLng	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
lng	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
getMiles	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
miles	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"DistanceQuery lat: "	TokenNameStringLiteral
+	TokenNamePLUS
lat	TokenNameIdentifier
+	TokenNamePLUS
" lng: "	TokenNameStringLiteral
+	TokenNamePLUS
lng	TokenNameIdentifier
+	TokenNamePLUS
" miles: "	TokenNameStringLiteral
+	TokenNamePLUS
miles	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
