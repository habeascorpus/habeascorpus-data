package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
spatial	TokenNameIdentifier
.	TokenNameDOT
tier	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
LinkedList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Map	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
MockAnalyzer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
document	TokenNameIdentifier
.	TokenNameDOT
Document	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
document	TokenNameIdentifier
.	TokenNameDOT
Field	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
IndexReader	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
IndexWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
IndexReader	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
Term	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
IndexSearcher	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
Query	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
ScoreDoc	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
Sort	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
SortField	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
TermQuery	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
TopDocs	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
function	TokenNameIdentifier
.	TokenNameDOT
CustomScoreQuery	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
function	TokenNameIdentifier
.	TokenNameDOT
CustomScoreProvider	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
function	TokenNameIdentifier
.	TokenNameDOT
FieldScoreQuery	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
function	TokenNameIdentifier
.	TokenNameDOT
FieldScoreQuery	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
spatial	TokenNameIdentifier
.	TokenNameDOT
DistanceUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
spatial	TokenNameIdentifier
.	TokenNameDOT
geohash	TokenNameIdentifier
.	TokenNameDOT
GeoHashUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
spatial	TokenNameIdentifier
.	TokenNameDOT
geometry	TokenNameIdentifier
.	TokenNameDOT
DistanceUnits	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
spatial	TokenNameIdentifier
.	TokenNameDOT
geometry	TokenNameIdentifier
.	TokenNameDOT
FloatLatLng	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
spatial	TokenNameIdentifier
.	TokenNameDOT
geometry	TokenNameIdentifier
.	TokenNameDOT
LatLng	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
spatial	TokenNameIdentifier
.	TokenNameDOT
tier	TokenNameIdentifier
.	TokenNameDOT
projections	TokenNameIdentifier
.	TokenNameDOT
CartesianTierPlotter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
spatial	TokenNameIdentifier
.	TokenNameDOT
tier	TokenNameIdentifier
.	TokenNameDOT
projections	TokenNameIdentifier
.	TokenNameDOT
IProjector	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
spatial	TokenNameIdentifier
.	TokenNameDOT
tier	TokenNameIdentifier
.	TokenNameDOT
projections	TokenNameIdentifier
.	TokenNameDOT
SinusoidalProjector	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
store	TokenNameIdentifier
.	TokenNameDOT
Directory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
LuceneTestCase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
NumericUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
TestCartesian	TokenNameIdentifier
extends	TokenNameextends
LuceneTestCase	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
Directory	TokenNameIdentifier
directory	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
IndexSearcher	TokenNameIdentifier
searcher	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
double	TokenNamedouble
lat	TokenNameIdentifier
=	TokenNameEQUAL
38.969398	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
double	TokenNamedouble
lng	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
77.386398	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
latField	TokenNameIdentifier
=	TokenNameEQUAL
"lat"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
lngField	TokenNameIdentifier
=	TokenNameEQUAL
"lng"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
List	TokenNameIdentifier
<	TokenNameLESS
CartesianTierPlotter	TokenNameIdentifier
>	TokenNameGREATER
ctps	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
LinkedList	TokenNameIdentifier
<	TokenNameLESS
CartesianTierPlotter	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
geoHashPrefix	TokenNameIdentifier
=	TokenNameEQUAL
"_geoHash_"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
IProjector	TokenNameIdentifier
project	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SinusoidalProjector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
setUp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
super	TokenNamesuper
.	TokenNameDOT
setUp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
directory	TokenNameIdentifier
=	TokenNameEQUAL
newDirectory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
IndexWriter	TokenNameIdentifier
writer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
IndexWriter	TokenNameIdentifier
(	TokenNameLPAREN
directory	TokenNameIdentifier
,	TokenNameCOMMA
newIndexWriterConfig	TokenNameIdentifier
(	TokenNameLPAREN
TEST_VERSION_CURRENT	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
MockAnalyzer	TokenNameIdentifier
(	TokenNameLPAREN
random	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
setUpPlotter	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
15	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addData	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
tearDown	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
directory	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
super	TokenNamesuper
.	TokenNameDOT
tearDown	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
setUpPlotter	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
base	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
top	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
;	TokenNameSEMICOLON
base	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
top	TokenNameIdentifier
;	TokenNameSEMICOLON
base	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
ctps	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
CartesianTierPlotter	TokenNameIdentifier
(	TokenNameLPAREN
base	TokenNameIdentifier
,	TokenNameCOMMA
project	TokenNameIdentifier
,	TokenNameCOMMA
CartesianTierPlotter	TokenNameIdentifier
.	TokenNameDOT
DEFALT_FIELD_PREFIX	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
IndexWriter	TokenNameIdentifier
writer	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
name	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
lat	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
lng	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Document	TokenNameIdentifier
doc	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Document	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
doc	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
newField	TokenNameIdentifier
(	TokenNameLPAREN
"name"	TokenNameStringLiteral
,	TokenNameCOMMA
name	TokenNameIdentifier
,	TokenNameCOMMA
Field	TokenNameIdentifier
.	TokenNameDOT
Store	TokenNameIdentifier
.	TokenNameDOT
YES	TokenNameIdentifier
,	TokenNameCOMMA
Field	TokenNameIdentifier
.	TokenNameDOT
Index	TokenNameIdentifier
.	TokenNameDOT
ANALYZED	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
doc	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Field	TokenNameIdentifier
(	TokenNameLPAREN
latField	TokenNameIdentifier
,	TokenNameCOMMA
NumericUtils	TokenNameIdentifier
.	TokenNameDOT
doubleToPrefixCoded	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
Field	TokenNameIdentifier
.	TokenNameDOT
Store	TokenNameIdentifier
.	TokenNameDOT
YES	TokenNameIdentifier
,	TokenNameCOMMA
Field	TokenNameIdentifier
.	TokenNameDOT
Index	TokenNameIdentifier
.	TokenNameDOT
NOT_ANALYZED	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
doc	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Field	TokenNameIdentifier
(	TokenNameLPAREN
lngField	TokenNameIdentifier
,	TokenNameCOMMA
NumericUtils	TokenNameIdentifier
.	TokenNameDOT
doubleToPrefixCoded	TokenNameIdentifier
(	TokenNameLPAREN
lng	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
Field	TokenNameIdentifier
.	TokenNameDOT
Store	TokenNameIdentifier
.	TokenNameDOT
YES	TokenNameIdentifier
,	TokenNameCOMMA
Field	TokenNameIdentifier
.	TokenNameDOT
Index	TokenNameIdentifier
.	TokenNameDOT
NOT_ANALYZED	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
doc	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
newField	TokenNameIdentifier
(	TokenNameLPAREN
"metafile"	TokenNameStringLiteral
,	TokenNameCOMMA
"doc"	TokenNameStringLiteral
,	TokenNameCOMMA
Field	TokenNameIdentifier
.	TokenNameDOT
Store	TokenNameIdentifier
.	TokenNameDOT
YES	TokenNameIdentifier
,	TokenNameCOMMA
Field	TokenNameIdentifier
.	TokenNameDOT
Index	TokenNameIdentifier
.	TokenNameDOT
ANALYZED	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
ctpsize	TokenNameIdentifier
=	TokenNameEQUAL
ctps	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
ctpsize	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
CartesianTierPlotter	TokenNameIdentifier
ctp	TokenNameIdentifier
=	TokenNameEQUAL
ctps	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
doc	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Field	TokenNameIdentifier
(	TokenNameLPAREN
ctp	TokenNameIdentifier
.	TokenNameDOT
getTierFieldName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
NumericUtils	TokenNameIdentifier
.	TokenNameDOT
doubleToPrefixCoded	TokenNameIdentifier
(	TokenNameLPAREN
ctp	TokenNameIdentifier
.	TokenNameDOT
getTierBoxId	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
Field	TokenNameIdentifier
.	TokenNameDOT
Store	TokenNameIdentifier
.	TokenNameDOT
YES	TokenNameIdentifier
,	TokenNameCOMMA
Field	TokenNameIdentifier
.	TokenNameDOT
Index	TokenNameIdentifier
.	TokenNameDOT
NOT_ANALYZED_NO_NORMS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
doc	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
newField	TokenNameIdentifier
(	TokenNameLPAREN
geoHashPrefix	TokenNameIdentifier
,	TokenNameCOMMA
GeoHashUtils	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
Field	TokenNameIdentifier
.	TokenNameDOT
Store	TokenNameIdentifier
.	TokenNameDOT
YES	TokenNameIdentifier
,	TokenNameCOMMA
Field	TokenNameIdentifier
.	TokenNameDOT
Index	TokenNameIdentifier
.	TokenNameDOT
NOT_ANALYZED_NO_NORMS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
writer	TokenNameIdentifier
.	TokenNameDOT
addDocument	TokenNameIdentifier
(	TokenNameLPAREN
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
addData	TokenNameIdentifier
(	TokenNameLPAREN
IndexWriter	TokenNameIdentifier
writer	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"McCormick &amp; Schmick's Seafood Restaurant"	TokenNameStringLiteral
,	TokenNameCOMMA
38.9579000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.3572000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"Jimmy's Old Town Tavern"	TokenNameStringLiteral
,	TokenNameCOMMA
38.9690000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.3862000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"Ned Devine's"	TokenNameStringLiteral
,	TokenNameCOMMA
38.9510000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.4107000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"Old Brogue Irish Pub"	TokenNameStringLiteral
,	TokenNameCOMMA
38.9955000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.2884000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"Alf Laylah Wa Laylah"	TokenNameStringLiteral
,	TokenNameCOMMA
38.8956000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.4258000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"Sully's Restaurant &amp; Supper"	TokenNameStringLiteral
,	TokenNameCOMMA
38.9003000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.4467000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"TGIFriday"	TokenNameStringLiteral
,	TokenNameCOMMA
38.8725000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.3829000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"Potomac Swing Dance Club"	TokenNameStringLiteral
,	TokenNameCOMMA
38.9027000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.2639000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"White Tiger Restaurant"	TokenNameStringLiteral
,	TokenNameCOMMA
38.9027000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.2638000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"Jammin' Java"	TokenNameStringLiteral
,	TokenNameCOMMA
38.9039000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.2622000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"Potomac Swing Dance Club"	TokenNameStringLiteral
,	TokenNameCOMMA
38.9027000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.2639000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"WiseAcres Comedy Club"	TokenNameStringLiteral
,	TokenNameCOMMA
38.9248000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.2344000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"Glen Echo Spanish Ballroom"	TokenNameStringLiteral
,	TokenNameCOMMA
38.9691000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.1400000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"Whitlow's on Wilson"	TokenNameStringLiteral
,	TokenNameCOMMA
38.8889000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.0926000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"Iota Club and Cafe"	TokenNameStringLiteral
,	TokenNameCOMMA
38.8890000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.0923000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"Hilton Washington Embassy Row"	TokenNameStringLiteral
,	TokenNameCOMMA
38.9103000	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.0451000	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"HorseFeathers, Bar & Grill"	TokenNameStringLiteral
,	TokenNameCOMMA
39.01220000000001	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
77.3942	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"Marshall Island Airfield"	TokenNameStringLiteral
,	TokenNameCOMMA
7.06	TokenNameDoubleLiteral
,	TokenNameCOMMA
171.2	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"Wonga Wongue Reserve, Gabon"	TokenNameStringLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
0.546562	TokenNameDoubleLiteral
,	TokenNameCOMMA
9.459229	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"Midway Island"	TokenNameStringLiteral
,	TokenNameCOMMA
25.7	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
171.7	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addPoint	TokenNameIdentifier
(	TokenNameLPAREN
writer	TokenNameIdentifier
,	TokenNameCOMMA
"North Pole Way"	TokenNameStringLiteral
,	TokenNameCOMMA
55.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
4.0	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
writer	TokenNameIdentifier
.	TokenNameDOT
commit	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
writer	TokenNameIdentifier
.	TokenNameDOT
forceMerge	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
writer	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testDistances	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidGeoException	TokenNameIdentifier
{	TokenNameLBRACE
LatLng	TokenNameIdentifier
p1	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FloatLatLng	TokenNameIdentifier
(	TokenNameLPAREN
7.06	TokenNameDoubleLiteral
,	TokenNameCOMMA
171.2	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
LatLng	TokenNameIdentifier
p2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FloatLatLng	TokenNameIdentifier
(	TokenNameLPAREN
21.6032207	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
158.0	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
miles	TokenNameIdentifier
=	TokenNameEQUAL
p1	TokenNameIdentifier
.	TokenNameDOT
arcDistance	TokenNameIdentifier
(	TokenNameLPAREN
p2	TokenNameIdentifier
,	TokenNameCOMMA
DistanceUnits	TokenNameIdentifier
.	TokenNameDOT
MILES	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"testDistances"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"miles:"	TokenNameStringLiteral
+	TokenNamePLUS
miles	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
2288.82495932794	TokenNameDoubleLiteral
,	TokenNameCOMMA
miles	TokenNameIdentifier
,	TokenNameCOMMA
0.001	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
LatLng	TokenNameIdentifier
p3	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FloatLatLng	TokenNameIdentifier
(	TokenNameLPAREN
41.6032207	TokenNameDoubleLiteral
,	TokenNameCOMMA
-	TokenNameMINUS
73.087749	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
LatLng	TokenNameIdentifier
p4	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FloatLatLng	TokenNameIdentifier
(	TokenNameLPAREN
55.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
4.0	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
miles	TokenNameIdentifier
=	TokenNameEQUAL
p3	TokenNameIdentifier
.	TokenNameDOT
arcDistance	TokenNameIdentifier
(	TokenNameLPAREN
p4	TokenNameIdentifier
,	TokenNameCOMMA
DistanceUnits	TokenNameIdentifier
.	TokenNameDOT
MILES	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"miles:"	TokenNameStringLiteral
+	TokenNamePLUS
miles	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
3474.331719997617	TokenNameDoubleLiteral
,	TokenNameCOMMA
miles	TokenNameIdentifier
,	TokenNameCOMMA
0.001	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testAntiM	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidGeoException	TokenNameIdentifier
{	TokenNameLBRACE
IndexReader	TokenNameIdentifier
reader	TokenNameIdentifier
=	TokenNameEQUAL
IndexReader	TokenNameIdentifier
.	TokenNameDOT
open	TokenNameIdentifier
(	TokenNameLPAREN
directory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
searcher	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
IndexSearcher	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
double	TokenNamedouble
miles	TokenNameIdentifier
=	TokenNameEQUAL
2800.0	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
lat	TokenNameIdentifier
=	TokenNameEQUAL
21.6032207	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
lng	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
158.0	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"testAntiM"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
DistanceQueryBuilder	TokenNameIdentifier
dq	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DistanceQueryBuilder	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
miles	TokenNameIdentifier
,	TokenNameCOMMA
latField	TokenNameIdentifier
,	TokenNameCOMMA
lngField	TokenNameIdentifier
,	TokenNameCOMMA
CartesianTierPlotter	TokenNameIdentifier
.	TokenNameDOT
DEFALT_FIELD_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
15	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
dq	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Query	TokenNameIdentifier
tq	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TermQuery	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
"metafile"	TokenNameStringLiteral
,	TokenNameCOMMA
"doc"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
FieldScoreQuery	TokenNameIdentifier
fsQuery	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FieldScoreQuery	TokenNameIdentifier
(	TokenNameLPAREN
"geo_distance"	TokenNameStringLiteral
,	TokenNameCOMMA
Type	TokenNameIdentifier
.	TokenNameDOT
FLOAT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CustomScoreQuery	TokenNameIdentifier
customScore	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CustomScoreQuery	TokenNameIdentifier
(	TokenNameLPAREN
dq	TokenNameIdentifier
.	TokenNameDOT
getQuery	TokenNameIdentifier
(	TokenNameLPAREN
tq	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
fsQuery	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
@	TokenNameAT
Override	TokenNameIdentifier
protected	TokenNameprotected
CustomScoreProvider	TokenNameIdentifier
getCustomScoreProvider	TokenNameIdentifier
(	TokenNameLPAREN
IndexReader	TokenNameIdentifier
reader	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
CustomScoreProvider	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
float	TokenNamefloat
customScore	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
doc	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
subQueryScore	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
valSrcScore	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dq	TokenNameIdentifier
.	TokenNameDOT
distanceFilter	TokenNameIdentifier
.	TokenNameDOT
getDistance	TokenNameIdentifier
(	TokenNameLPAREN
doc	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
double	TokenNamedouble
distance	TokenNameIdentifier
=	TokenNameEQUAL
dq	TokenNameIdentifier
.	TokenNameDOT
distanceFilter	TokenNameIdentifier
.	TokenNameDOT
getDistance	TokenNameIdentifier
(	TokenNameLPAREN
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
distance	TokenNameIdentifier
<	TokenNameLESS
1.0d	TokenNameDoubleLiteral
)	TokenNameRPAREN
distance	TokenNameIdentifier
=	TokenNameEQUAL
1.0d	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
score	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
miles	TokenNameIdentifier
-	TokenNameMINUS
distance	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
miles	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
score	TokenNameIdentifier
*	TokenNameMULTIPLY
subQueryScore	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
DistanceFieldComparatorSource	TokenNameIdentifier
dsort	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DistanceFieldComparatorSource	TokenNameIdentifier
(	TokenNameLPAREN
dq	TokenNameIdentifier
.	TokenNameDOT
distanceFilter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Sort	TokenNameIdentifier
sort	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Sort	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SortField	TokenNameIdentifier
(	TokenNameLPAREN
"foo"	TokenNameStringLiteral
,	TokenNameCOMMA
dsort	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TopDocs	TokenNameIdentifier
hits	TokenNameIdentifier
=	TokenNameEQUAL
searcher	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
(	TokenNameLPAREN
customScore	TokenNameIdentifier
.	TokenNameDOT
createWeight	TokenNameIdentifier
(	TokenNameLPAREN
searcher	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
1000	TokenNameIntegerLiteral
,	TokenNameCOMMA
sort	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
results	TokenNameIdentifier
=	TokenNameEQUAL
hits	TokenNameIdentifier
.	TokenNameDOT
totalHits	TokenNameIdentifier
;	TokenNameSEMICOLON
ScoreDoc	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
scoreDocs	TokenNameIdentifier
=	TokenNameEQUAL
hits	TokenNameIdentifier
.	TokenNameDOT
scoreDocs	TokenNameIdentifier
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
Double	TokenNameIdentifier
>	TokenNameGREATER
distances	TokenNameIdentifier
=	TokenNameEQUAL
dq	TokenNameIdentifier
.	TokenNameDOT
distanceFilter	TokenNameIdentifier
.	TokenNameDOT
getDistances	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Distance Filter filtered: "	TokenNameStringLiteral
+	TokenNamePLUS
distances	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Results: "	TokenNameStringLiteral
+	TokenNamePLUS
results	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"============================="	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Distances should be 2 "	TokenNameStringLiteral
+	TokenNamePLUS
distances	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Results should be 2 "	TokenNameStringLiteral
+	TokenNamePLUS
results	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
distances	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
results	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
lastDistance	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
results	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
Document	TokenNameIdentifier
d	TokenNameIdentifier
=	TokenNameEQUAL
searcher	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
(	TokenNameLPAREN
scoreDocs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
name	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
"name"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
rsLat	TokenNameIdentifier
=	TokenNameEQUAL
NumericUtils	TokenNameIdentifier
.	TokenNameDOT
prefixCodedToDouble	TokenNameIdentifier
(	TokenNameLPAREN
d	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
latField	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
rsLng	TokenNameIdentifier
=	TokenNameEQUAL
NumericUtils	TokenNameIdentifier
.	TokenNameDOT
prefixCodedToDouble	TokenNameIdentifier
(	TokenNameLPAREN
d	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
lngField	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Double	TokenNameIdentifier
geo_distance	TokenNameIdentifier
=	TokenNameEQUAL
distances	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
scoreDocs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
distance	TokenNameIdentifier
=	TokenNameEQUAL
DistanceUtils	TokenNameIdentifier
.	TokenNameDOT
getDistanceMi	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
rsLat	TokenNameIdentifier
,	TokenNameCOMMA
rsLng	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
llm	TokenNameIdentifier
=	TokenNameEQUAL
DistanceUtils	TokenNameIdentifier
.	TokenNameDOT
getLLMDistance	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
rsLat	TokenNameIdentifier
,	TokenNameCOMMA
rsLng	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Name: "	TokenNameStringLiteral
+	TokenNamePLUS
name	TokenNameIdentifier
+	TokenNamePLUS
", Distance "	TokenNameStringLiteral
+	TokenNamePLUS
distance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
Math	TokenNameIdentifier
.	TokenNameDOT
abs	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
distance	TokenNameIdentifier
-	TokenNameMINUS
llm	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
<	TokenNameLESS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
distance	TokenNameIdentifier
<	TokenNameLESS
miles	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
geo_distance	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
lastDistance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
lastDistance	TokenNameIdentifier
=	TokenNameEQUAL
geo_distance	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
searcher	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reader	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testPoleFlipping	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidGeoException	TokenNameIdentifier
{	TokenNameLBRACE
IndexReader	TokenNameIdentifier
reader	TokenNameIdentifier
=	TokenNameEQUAL
IndexReader	TokenNameIdentifier
.	TokenNameDOT
open	TokenNameIdentifier
(	TokenNameLPAREN
directory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
searcher	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
IndexSearcher	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
double	TokenNamedouble
miles	TokenNameIdentifier
=	TokenNameEQUAL
3500.0	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
lat	TokenNameIdentifier
=	TokenNameEQUAL
41.6032207	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
lng	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
73.087749	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"testPoleFlipping"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
DistanceQueryBuilder	TokenNameIdentifier
dq	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DistanceQueryBuilder	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
miles	TokenNameIdentifier
,	TokenNameCOMMA
latField	TokenNameIdentifier
,	TokenNameCOMMA
lngField	TokenNameIdentifier
,	TokenNameCOMMA
CartesianTierPlotter	TokenNameIdentifier
.	TokenNameDOT
DEFALT_FIELD_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
15	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
dq	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Query	TokenNameIdentifier
tq	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TermQuery	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
"metafile"	TokenNameStringLiteral
,	TokenNameCOMMA
"doc"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
FieldScoreQuery	TokenNameIdentifier
fsQuery	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FieldScoreQuery	TokenNameIdentifier
(	TokenNameLPAREN
"geo_distance"	TokenNameStringLiteral
,	TokenNameCOMMA
Type	TokenNameIdentifier
.	TokenNameDOT
FLOAT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CustomScoreQuery	TokenNameIdentifier
customScore	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CustomScoreQuery	TokenNameIdentifier
(	TokenNameLPAREN
dq	TokenNameIdentifier
.	TokenNameDOT
getQuery	TokenNameIdentifier
(	TokenNameLPAREN
tq	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
fsQuery	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
@	TokenNameAT
Override	TokenNameIdentifier
protected	TokenNameprotected
CustomScoreProvider	TokenNameIdentifier
getCustomScoreProvider	TokenNameIdentifier
(	TokenNameLPAREN
IndexReader	TokenNameIdentifier
reader	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
CustomScoreProvider	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
float	TokenNamefloat
customScore	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
doc	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
subQueryScore	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
valSrcScore	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dq	TokenNameIdentifier
.	TokenNameDOT
distanceFilter	TokenNameIdentifier
.	TokenNameDOT
getDistance	TokenNameIdentifier
(	TokenNameLPAREN
doc	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
double	TokenNamedouble
distance	TokenNameIdentifier
=	TokenNameEQUAL
dq	TokenNameIdentifier
.	TokenNameDOT
distanceFilter	TokenNameIdentifier
.	TokenNameDOT
getDistance	TokenNameIdentifier
(	TokenNameLPAREN
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
distance	TokenNameIdentifier
<	TokenNameLESS
1.0d	TokenNameDoubleLiteral
)	TokenNameRPAREN
distance	TokenNameIdentifier
=	TokenNameEQUAL
1.0d	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
score	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
miles	TokenNameIdentifier
-	TokenNameMINUS
distance	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
miles	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
score	TokenNameIdentifier
*	TokenNameMULTIPLY
subQueryScore	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
DistanceFieldComparatorSource	TokenNameIdentifier
dsort	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DistanceFieldComparatorSource	TokenNameIdentifier
(	TokenNameLPAREN
dq	TokenNameIdentifier
.	TokenNameDOT
distanceFilter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Sort	TokenNameIdentifier
sort	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Sort	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SortField	TokenNameIdentifier
(	TokenNameLPAREN
"foo"	TokenNameStringLiteral
,	TokenNameCOMMA
dsort	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TopDocs	TokenNameIdentifier
hits	TokenNameIdentifier
=	TokenNameEQUAL
searcher	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
(	TokenNameLPAREN
customScore	TokenNameIdentifier
.	TokenNameDOT
createWeight	TokenNameIdentifier
(	TokenNameLPAREN
searcher	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
1000	TokenNameIntegerLiteral
,	TokenNameCOMMA
sort	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
results	TokenNameIdentifier
=	TokenNameEQUAL
hits	TokenNameIdentifier
.	TokenNameDOT
totalHits	TokenNameIdentifier
;	TokenNameSEMICOLON
ScoreDoc	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
scoreDocs	TokenNameIdentifier
=	TokenNameEQUAL
hits	TokenNameIdentifier
.	TokenNameDOT
scoreDocs	TokenNameIdentifier
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
Double	TokenNameIdentifier
>	TokenNameGREATER
distances	TokenNameIdentifier
=	TokenNameEQUAL
dq	TokenNameIdentifier
.	TokenNameDOT
distanceFilter	TokenNameIdentifier
.	TokenNameDOT
getDistances	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Distance Filter filtered: "	TokenNameStringLiteral
+	TokenNamePLUS
distances	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Results: "	TokenNameStringLiteral
+	TokenNamePLUS
results	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"============================="	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Distances should be 18 "	TokenNameStringLiteral
+	TokenNamePLUS
distances	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Results should be 18 "	TokenNameStringLiteral
+	TokenNamePLUS
results	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
18	TokenNameIntegerLiteral
,	TokenNameCOMMA
distances	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
18	TokenNameIntegerLiteral
,	TokenNameCOMMA
results	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
lastDistance	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
results	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
Document	TokenNameIdentifier
d	TokenNameIdentifier
=	TokenNameEQUAL
searcher	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
(	TokenNameLPAREN
scoreDocs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
name	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
"name"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
rsLat	TokenNameIdentifier
=	TokenNameEQUAL
NumericUtils	TokenNameIdentifier
.	TokenNameDOT
prefixCodedToDouble	TokenNameIdentifier
(	TokenNameLPAREN
d	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
latField	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
rsLng	TokenNameIdentifier
=	TokenNameEQUAL
NumericUtils	TokenNameIdentifier
.	TokenNameDOT
prefixCodedToDouble	TokenNameIdentifier
(	TokenNameLPAREN
d	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
lngField	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Double	TokenNameIdentifier
geo_distance	TokenNameIdentifier
=	TokenNameEQUAL
distances	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
scoreDocs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
distance	TokenNameIdentifier
=	TokenNameEQUAL
DistanceUtils	TokenNameIdentifier
.	TokenNameDOT
getDistanceMi	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
rsLat	TokenNameIdentifier
,	TokenNameCOMMA
rsLng	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
llm	TokenNameIdentifier
=	TokenNameEQUAL
DistanceUtils	TokenNameIdentifier
.	TokenNameDOT
getLLMDistance	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
rsLat	TokenNameIdentifier
,	TokenNameCOMMA
rsLng	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Name: "	TokenNameStringLiteral
+	TokenNamePLUS
name	TokenNameIdentifier
+	TokenNamePLUS
", Distance "	TokenNameStringLiteral
+	TokenNamePLUS
distance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
Math	TokenNameIdentifier
.	TokenNameDOT
abs	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
distance	TokenNameIdentifier
-	TokenNameMINUS
llm	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
<	TokenNameLESS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"checking limit "	TokenNameStringLiteral
+	TokenNamePLUS
distance	TokenNameIdentifier
+	TokenNamePLUS
" < "	TokenNameStringLiteral
+	TokenNamePLUS
miles	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
distance	TokenNameIdentifier
<	TokenNameLESS
miles	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"checking sort "	TokenNameStringLiteral
+	TokenNamePLUS
geo_distance	TokenNameIdentifier
+	TokenNamePLUS
" >= "	TokenNameStringLiteral
+	TokenNamePLUS
lastDistance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
geo_distance	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
lastDistance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
lastDistance	TokenNameIdentifier
=	TokenNameEQUAL
geo_distance	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
searcher	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reader	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testRange	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidGeoException	TokenNameIdentifier
{	TokenNameLBRACE
IndexReader	TokenNameIdentifier
reader	TokenNameIdentifier
=	TokenNameEQUAL
IndexReader	TokenNameIdentifier
.	TokenNameDOT
open	TokenNameIdentifier
(	TokenNameLPAREN
directory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
searcher	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
IndexSearcher	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
milesToTest	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
6.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.5	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.001	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0	TokenNameDoubleLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
7	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
x	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
x	TokenNameIdentifier
<	TokenNameLESS
expected	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
x	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
double	TokenNamedouble
miles	TokenNameIdentifier
=	TokenNameEQUAL
milesToTest	TokenNameIdentifier
[	TokenNameLBRACKET
x	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
final	TokenNamefinal
DistanceQueryBuilder	TokenNameIdentifier
dq	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DistanceQueryBuilder	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
miles	TokenNameIdentifier
,	TokenNameCOMMA
latField	TokenNameIdentifier
,	TokenNameCOMMA
lngField	TokenNameIdentifier
,	TokenNameCOMMA
CartesianTierPlotter	TokenNameIdentifier
.	TokenNameDOT
DEFALT_FIELD_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
15	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
dq	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Query	TokenNameIdentifier
tq	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TermQuery	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
"metafile"	TokenNameStringLiteral
,	TokenNameCOMMA
"doc"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
FieldScoreQuery	TokenNameIdentifier
fsQuery	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FieldScoreQuery	TokenNameIdentifier
(	TokenNameLPAREN
"geo_distance"	TokenNameStringLiteral
,	TokenNameCOMMA
Type	TokenNameIdentifier
.	TokenNameDOT
FLOAT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CustomScoreQuery	TokenNameIdentifier
customScore	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CustomScoreQuery	TokenNameIdentifier
(	TokenNameLPAREN
dq	TokenNameIdentifier
.	TokenNameDOT
getQuery	TokenNameIdentifier
(	TokenNameLPAREN
tq	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
fsQuery	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
@	TokenNameAT
Override	TokenNameIdentifier
protected	TokenNameprotected
CustomScoreProvider	TokenNameIdentifier
getCustomScoreProvider	TokenNameIdentifier
(	TokenNameLPAREN
IndexReader	TokenNameIdentifier
reader	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
CustomScoreProvider	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
float	TokenNamefloat
customScore	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
doc	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
subQueryScore	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
valSrcScore	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dq	TokenNameIdentifier
.	TokenNameDOT
distanceFilter	TokenNameIdentifier
.	TokenNameDOT
getDistance	TokenNameIdentifier
(	TokenNameLPAREN
doc	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
double	TokenNamedouble
distance	TokenNameIdentifier
=	TokenNameEQUAL
dq	TokenNameIdentifier
.	TokenNameDOT
distanceFilter	TokenNameIdentifier
.	TokenNameDOT
getDistance	TokenNameIdentifier
(	TokenNameLPAREN
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
distance	TokenNameIdentifier
<	TokenNameLESS
1.0d	TokenNameDoubleLiteral
)	TokenNameRPAREN
distance	TokenNameIdentifier
=	TokenNameEQUAL
1.0d	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
score	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
miles	TokenNameIdentifier
-	TokenNameMINUS
distance	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
miles	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
score	TokenNameIdentifier
*	TokenNameMULTIPLY
subQueryScore	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
DistanceFieldComparatorSource	TokenNameIdentifier
dsort	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DistanceFieldComparatorSource	TokenNameIdentifier
(	TokenNameLPAREN
dq	TokenNameIdentifier
.	TokenNameDOT
distanceFilter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Sort	TokenNameIdentifier
sort	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Sort	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SortField	TokenNameIdentifier
(	TokenNameLPAREN
"foo"	TokenNameStringLiteral
,	TokenNameCOMMA
dsort	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TopDocs	TokenNameIdentifier
hits	TokenNameIdentifier
=	TokenNameEQUAL
searcher	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
(	TokenNameLPAREN
customScore	TokenNameIdentifier
.	TokenNameDOT
createWeight	TokenNameIdentifier
(	TokenNameLPAREN
searcher	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
1000	TokenNameIntegerLiteral
,	TokenNameCOMMA
sort	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
results	TokenNameIdentifier
=	TokenNameEQUAL
hits	TokenNameIdentifier
.	TokenNameDOT
totalHits	TokenNameIdentifier
;	TokenNameSEMICOLON
ScoreDoc	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
scoreDocs	TokenNameIdentifier
=	TokenNameEQUAL
hits	TokenNameIdentifier
.	TokenNameDOT
scoreDocs	TokenNameIdentifier
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
Double	TokenNameIdentifier
>	TokenNameGREATER
distances	TokenNameIdentifier
=	TokenNameEQUAL
dq	TokenNameIdentifier
.	TokenNameDOT
distanceFilter	TokenNameIdentifier
.	TokenNameDOT
getDistances	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Distance Filter filtered: "	TokenNameStringLiteral
+	TokenNamePLUS
distances	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Results: "	TokenNameStringLiteral
+	TokenNamePLUS
results	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"============================="	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Distances should be 7 "	TokenNameStringLiteral
+	TokenNamePLUS
expected	TokenNameIdentifier
[	TokenNameLBRACKET
x	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
":"	TokenNameStringLiteral
+	TokenNamePLUS
distances	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Results should be 7 "	TokenNameStringLiteral
+	TokenNamePLUS
expected	TokenNameIdentifier
[	TokenNameLBRACKET
x	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
":"	TokenNameStringLiteral
+	TokenNamePLUS
results	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
expected	TokenNameIdentifier
[	TokenNameLBRACKET
x	TokenNameIdentifier
]	TokenNameRBRACKET
,	TokenNameCOMMA
distances	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
expected	TokenNameIdentifier
[	TokenNameLBRACKET
x	TokenNameIdentifier
]	TokenNameRBRACKET
,	TokenNameCOMMA
results	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
lastDistance	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
results	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
Document	TokenNameIdentifier
d	TokenNameIdentifier
=	TokenNameEQUAL
searcher	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
(	TokenNameLPAREN
scoreDocs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
name	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
"name"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
rsLat	TokenNameIdentifier
=	TokenNameEQUAL
NumericUtils	TokenNameIdentifier
.	TokenNameDOT
prefixCodedToDouble	TokenNameIdentifier
(	TokenNameLPAREN
d	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
latField	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
rsLng	TokenNameIdentifier
=	TokenNameEQUAL
NumericUtils	TokenNameIdentifier
.	TokenNameDOT
prefixCodedToDouble	TokenNameIdentifier
(	TokenNameLPAREN
d	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
lngField	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Double	TokenNameIdentifier
geo_distance	TokenNameIdentifier
=	TokenNameEQUAL
distances	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
scoreDocs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
distance	TokenNameIdentifier
=	TokenNameEQUAL
DistanceUtils	TokenNameIdentifier
.	TokenNameDOT
getDistanceMi	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
rsLat	TokenNameIdentifier
,	TokenNameCOMMA
rsLng	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
llm	TokenNameIdentifier
=	TokenNameEQUAL
DistanceUtils	TokenNameIdentifier
.	TokenNameDOT
getLLMDistance	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
rsLat	TokenNameIdentifier
,	TokenNameCOMMA
rsLng	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Name: "	TokenNameStringLiteral
+	TokenNamePLUS
name	TokenNameIdentifier
+	TokenNamePLUS
", Distance "	TokenNameStringLiteral
+	TokenNamePLUS
distance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
Math	TokenNameIdentifier
.	TokenNameDOT
abs	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
distance	TokenNameIdentifier
-	TokenNameMINUS
llm	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
<	TokenNameLESS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
distance	TokenNameIdentifier
<	TokenNameLESS
miles	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
geo_distance	TokenNameIdentifier
>	TokenNameGREATER
lastDistance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
lastDistance	TokenNameIdentifier
=	TokenNameEQUAL
geo_distance	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
searcher	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reader	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testGeoHashRange	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidGeoException	TokenNameIdentifier
{	TokenNameLBRACE
IndexReader	TokenNameIdentifier
reader	TokenNameIdentifier
=	TokenNameEQUAL
IndexReader	TokenNameIdentifier
.	TokenNameDOT
open	TokenNameIdentifier
(	TokenNameLPAREN
directory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
searcher	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
IndexSearcher	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
milesToTest	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
6.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.5	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.001	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0	TokenNameDoubleLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
7	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
x	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
x	TokenNameIdentifier
<	TokenNameLESS
expected	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
x	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
double	TokenNamedouble
miles	TokenNameIdentifier
=	TokenNameEQUAL
milesToTest	TokenNameIdentifier
[	TokenNameLBRACKET
x	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
final	TokenNamefinal
DistanceQueryBuilder	TokenNameIdentifier
dq	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DistanceQueryBuilder	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
miles	TokenNameIdentifier
,	TokenNameCOMMA
geoHashPrefix	TokenNameIdentifier
,	TokenNameCOMMA
CartesianTierPlotter	TokenNameIdentifier
.	TokenNameDOT
DEFALT_FIELD_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
15	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
dq	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Query	TokenNameIdentifier
tq	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TermQuery	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
"metafile"	TokenNameStringLiteral
,	TokenNameCOMMA
"doc"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
FieldScoreQuery	TokenNameIdentifier
fsQuery	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FieldScoreQuery	TokenNameIdentifier
(	TokenNameLPAREN
"geo_distance"	TokenNameStringLiteral
,	TokenNameCOMMA
Type	TokenNameIdentifier
.	TokenNameDOT
FLOAT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CustomScoreQuery	TokenNameIdentifier
customScore	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CustomScoreQuery	TokenNameIdentifier
(	TokenNameLPAREN
tq	TokenNameIdentifier
,	TokenNameCOMMA
fsQuery	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
@	TokenNameAT
Override	TokenNameIdentifier
protected	TokenNameprotected
CustomScoreProvider	TokenNameIdentifier
getCustomScoreProvider	TokenNameIdentifier
(	TokenNameLPAREN
IndexReader	TokenNameIdentifier
reader	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
CustomScoreProvider	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
float	TokenNamefloat
customScore	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
doc	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
subQueryScore	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
valSrcScore	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dq	TokenNameIdentifier
.	TokenNameDOT
distanceFilter	TokenNameIdentifier
.	TokenNameDOT
getDistance	TokenNameIdentifier
(	TokenNameLPAREN
doc	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
double	TokenNamedouble
distance	TokenNameIdentifier
=	TokenNameEQUAL
dq	TokenNameIdentifier
.	TokenNameDOT
distanceFilter	TokenNameIdentifier
.	TokenNameDOT
getDistance	TokenNameIdentifier
(	TokenNameLPAREN
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
distance	TokenNameIdentifier
<	TokenNameLESS
1.0d	TokenNameDoubleLiteral
)	TokenNameRPAREN
distance	TokenNameIdentifier
=	TokenNameEQUAL
1.0d	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
score	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
miles	TokenNameIdentifier
-	TokenNameMINUS
distance	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
miles	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
score	TokenNameIdentifier
*	TokenNameMULTIPLY
subQueryScore	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
TopDocs	TokenNameIdentifier
hits	TokenNameIdentifier
=	TokenNameEQUAL
searcher	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
(	TokenNameLPAREN
customScore	TokenNameIdentifier
.	TokenNameDOT
createWeight	TokenNameIdentifier
(	TokenNameLPAREN
searcher	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
dq	TokenNameIdentifier
.	TokenNameDOT
getFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
1000	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
results	TokenNameIdentifier
=	TokenNameEQUAL
hits	TokenNameIdentifier
.	TokenNameDOT
totalHits	TokenNameIdentifier
;	TokenNameSEMICOLON
ScoreDoc	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
scoreDocs	TokenNameIdentifier
=	TokenNameEQUAL
hits	TokenNameIdentifier
.	TokenNameDOT
scoreDocs	TokenNameIdentifier
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
Double	TokenNameIdentifier
>	TokenNameGREATER
distances	TokenNameIdentifier
=	TokenNameEQUAL
dq	TokenNameIdentifier
.	TokenNameDOT
distanceFilter	TokenNameIdentifier
.	TokenNameDOT
getDistances	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Distance Filter filtered: "	TokenNameStringLiteral
+	TokenNamePLUS
distances	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Results: "	TokenNameStringLiteral
+	TokenNamePLUS
results	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"============================="	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Distances should be 14 "	TokenNameStringLiteral
+	TokenNamePLUS
expected	TokenNameIdentifier
[	TokenNameLBRACKET
x	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
":"	TokenNameStringLiteral
+	TokenNamePLUS
distances	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Results should be 7 "	TokenNameStringLiteral
+	TokenNamePLUS
expected	TokenNameIdentifier
[	TokenNameLBRACKET
x	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
":"	TokenNameStringLiteral
+	TokenNamePLUS
results	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
expected	TokenNameIdentifier
[	TokenNameLBRACKET
x	TokenNameIdentifier
]	TokenNameRBRACKET
,	TokenNameCOMMA
distances	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
expected	TokenNameIdentifier
[	TokenNameLBRACKET
x	TokenNameIdentifier
]	TokenNameRBRACKET
,	TokenNameCOMMA
results	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
results	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
Document	TokenNameIdentifier
d	TokenNameIdentifier
=	TokenNameEQUAL
searcher	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
(	TokenNameLPAREN
scoreDocs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
name	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
"name"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
rsLat	TokenNameIdentifier
=	TokenNameEQUAL
NumericUtils	TokenNameIdentifier
.	TokenNameDOT
prefixCodedToDouble	TokenNameIdentifier
(	TokenNameLPAREN
d	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
latField	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
rsLng	TokenNameIdentifier
=	TokenNameEQUAL
NumericUtils	TokenNameIdentifier
.	TokenNameDOT
prefixCodedToDouble	TokenNameIdentifier
(	TokenNameLPAREN
d	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
lngField	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Double	TokenNameIdentifier
geo_distance	TokenNameIdentifier
=	TokenNameEQUAL
distances	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
scoreDocs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
doc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
distance	TokenNameIdentifier
=	TokenNameEQUAL
DistanceUtils	TokenNameIdentifier
.	TokenNameDOT
getDistanceMi	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
rsLat	TokenNameIdentifier
,	TokenNameCOMMA
rsLng	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
llm	TokenNameIdentifier
=	TokenNameEQUAL
DistanceUtils	TokenNameIdentifier
.	TokenNameDOT
getLLMDistance	TokenNameIdentifier
(	TokenNameLPAREN
lat	TokenNameIdentifier
,	TokenNameCOMMA
lng	TokenNameIdentifier
,	TokenNameCOMMA
rsLat	TokenNameIdentifier
,	TokenNameCOMMA
rsLng	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Name: "	TokenNameStringLiteral
+	TokenNamePLUS
name	TokenNameIdentifier
+	TokenNamePLUS
", Distance (res, ortho, harvesine):"	TokenNameStringLiteral
+	TokenNamePLUS
distance	TokenNameIdentifier
+	TokenNamePLUS
" |"	TokenNameStringLiteral
+	TokenNamePLUS
geo_distance	TokenNameIdentifier
+	TokenNamePLUS
"|"	TokenNameStringLiteral
+	TokenNamePLUS
llm	TokenNameIdentifier
+	TokenNamePLUS
" | score "	TokenNameStringLiteral
+	TokenNamePLUS
scoreDocs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
score	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
Math	TokenNameIdentifier
.	TokenNameDOT
abs	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
distance	TokenNameIdentifier
-	TokenNameMINUS
llm	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
<	TokenNameLESS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
distance	TokenNameIdentifier
<	TokenNameLESS
miles	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
searcher	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reader	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
