package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
grouping	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
ScoreDoc	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
Sort	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
SortField	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
TopDocs	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
TopGroups	TokenNameIdentifier
<	TokenNameLESS
GROUP_VALUE_TYPE	TokenNameIdentifier
>	TokenNameGREATER
{	TokenNameLBRACE
public	TokenNamepublic
final	TokenNamefinal
int	TokenNameint
totalHitCount	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
int	TokenNameint
totalGroupedHitCount	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
Integer	TokenNameIdentifier
totalGroupCount	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
GroupDocs	TokenNameIdentifier
<	TokenNameLESS
GROUP_VALUE_TYPE	TokenNameIdentifier
>	TokenNameGREATER
[	TokenNameLBRACKET
]	TokenNameRBRACKET
groups	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
SortField	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
groupSort	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
SortField	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
withinGroupSort	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
TopGroups	TokenNameIdentifier
(	TokenNameLPAREN
SortField	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
groupSort	TokenNameIdentifier
,	TokenNameCOMMA
SortField	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
withinGroupSort	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
totalHitCount	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
totalGroupedHitCount	TokenNameIdentifier
,	TokenNameCOMMA
GroupDocs	TokenNameIdentifier
<	TokenNameLESS
GROUP_VALUE_TYPE	TokenNameIdentifier
>	TokenNameGREATER
[	TokenNameLBRACKET
]	TokenNameRBRACKET
groups	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
groupSort	TokenNameIdentifier
=	TokenNameEQUAL
groupSort	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
withinGroupSort	TokenNameIdentifier
=	TokenNameEQUAL
withinGroupSort	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
totalHitCount	TokenNameIdentifier
=	TokenNameEQUAL
totalHitCount	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
totalGroupedHitCount	TokenNameIdentifier
=	TokenNameEQUAL
totalGroupedHitCount	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
groups	TokenNameIdentifier
=	TokenNameEQUAL
groups	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
totalGroupCount	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
TopGroups	TokenNameIdentifier
(	TokenNameLPAREN
TopGroups	TokenNameIdentifier
<	TokenNameLESS
GROUP_VALUE_TYPE	TokenNameIdentifier
>	TokenNameGREATER
oldTopGroups	TokenNameIdentifier
,	TokenNameCOMMA
Integer	TokenNameIdentifier
totalGroupCount	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
groupSort	TokenNameIdentifier
=	TokenNameEQUAL
oldTopGroups	TokenNameIdentifier
.	TokenNameDOT
groupSort	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
withinGroupSort	TokenNameIdentifier
=	TokenNameEQUAL
oldTopGroups	TokenNameIdentifier
.	TokenNameDOT
withinGroupSort	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
totalHitCount	TokenNameIdentifier
=	TokenNameEQUAL
oldTopGroups	TokenNameIdentifier
.	TokenNameDOT
totalHitCount	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
totalGroupedHitCount	TokenNameIdentifier
=	TokenNameEQUAL
oldTopGroups	TokenNameIdentifier
.	TokenNameDOT
totalGroupedHitCount	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
groups	TokenNameIdentifier
=	TokenNameEQUAL
oldTopGroups	TokenNameIdentifier
.	TokenNameDOT
groups	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
totalGroupCount	TokenNameIdentifier
=	TokenNameEQUAL
totalGroupCount	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
<	TokenNameLESS
T	TokenNameIdentifier
>	TokenNameGREATER
TopGroups	TokenNameIdentifier
<	TokenNameLESS
T	TokenNameIdentifier
>	TokenNameGREATER
merge	TokenNameIdentifier
(	TokenNameLPAREN
TopGroups	TokenNameIdentifier
<	TokenNameLESS
T	TokenNameIdentifier
>	TokenNameGREATER
[	TokenNameLBRACKET
]	TokenNameRBRACKET
shardGroups	TokenNameIdentifier
,	TokenNameCOMMA
Sort	TokenNameIdentifier
groupSort	TokenNameIdentifier
,	TokenNameCOMMA
Sort	TokenNameIdentifier
docSort	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
docOffset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
docTopN	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
shardGroups	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
totalHitCount	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
totalGroupedHitCount	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Integer	TokenNameIdentifier
totalGroupCount	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
numGroups	TokenNameIdentifier
=	TokenNameEQUAL
shardGroups	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
.	TokenNameDOT
groups	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
TopGroups	TokenNameIdentifier
<	TokenNameLESS
T	TokenNameIdentifier
>	TokenNameGREATER
shard	TokenNameIdentifier
:	TokenNameCOLON
shardGroups	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
numGroups	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
shard	TokenNameIdentifier
.	TokenNameDOT
groups	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
"number of groups differs across shards; you must pass same top groups to all shards' second-pass collector"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
totalHitCount	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
shard	TokenNameIdentifier
.	TokenNameDOT
totalHitCount	TokenNameIdentifier
;	TokenNameSEMICOLON
totalGroupedHitCount	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
shard	TokenNameIdentifier
.	TokenNameDOT
totalGroupedHitCount	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
shard	TokenNameIdentifier
.	TokenNameDOT
totalGroupCount	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
totalGroupCount	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
totalGroupCount	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
totalGroupCount	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
shard	TokenNameIdentifier
.	TokenNameDOT
totalGroupCount	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
@	TokenNameAT
SuppressWarnings	TokenNameIdentifier
(	TokenNameLPAREN
"unchecked"	TokenNameStringLiteral
)	TokenNameRPAREN
final	TokenNamefinal
GroupDocs	TokenNameIdentifier
<	TokenNameLESS
T	TokenNameIdentifier
>	TokenNameGREATER
[	TokenNameLBRACKET
]	TokenNameRBRACKET
mergedGroupDocs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GroupDocs	TokenNameIdentifier
[	TokenNameLBRACKET
numGroups	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
final	TokenNamefinal
TopDocs	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
shardTopDocs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TopDocs	TokenNameIdentifier
[	TokenNameLBRACKET
shardGroups	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
groupIDX	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
groupIDX	TokenNameIdentifier
<	TokenNameLESS
numGroups	TokenNameIdentifier
;	TokenNameSEMICOLON
groupIDX	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
T	TokenNameIdentifier
groupValue	TokenNameIdentifier
=	TokenNameEQUAL
shardGroups	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
.	TokenNameDOT
groups	TokenNameIdentifier
[	TokenNameLBRACKET
groupIDX	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
groupValue	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
maxScore	TokenNameIdentifier
=	TokenNameEQUAL
Float	TokenNameIdentifier
.	TokenNameDOT
MIN_VALUE	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
totalHits	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
shardIDX	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
shardIDX	TokenNameIdentifier
<	TokenNameLESS
shardGroups	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
shardIDX	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
TopGroups	TokenNameIdentifier
<	TokenNameLESS
T	TokenNameIdentifier
>	TokenNameGREATER
shard	TokenNameIdentifier
=	TokenNameEQUAL
shardGroups	TokenNameIdentifier
[	TokenNameLBRACKET
shardIDX	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
final	TokenNamefinal
GroupDocs	TokenNameIdentifier
shardGroupDocs	TokenNameIdentifier
=	TokenNameEQUAL
shard	TokenNameIdentifier
.	TokenNameDOT
groups	TokenNameIdentifier
[	TokenNameLBRACKET
groupIDX	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
groupValue	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
shardGroupDocs	TokenNameIdentifier
.	TokenNameDOT
groupValue	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
"group values differ across shards; you must pass same top groups to all shards' second-pass collector"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
groupValue	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
shardGroupDocs	TokenNameIdentifier
.	TokenNameDOT
groupValue	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
"group values differ across shards; you must pass same top groups to all shards' second-pass collector"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
shardTopDocs	TokenNameIdentifier
[	TokenNameLBRACKET
shardIDX	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
TopDocs	TokenNameIdentifier
(	TokenNameLPAREN
shardGroupDocs	TokenNameIdentifier
.	TokenNameDOT
totalHits	TokenNameIdentifier
,	TokenNameCOMMA
shardGroupDocs	TokenNameIdentifier
.	TokenNameDOT
scoreDocs	TokenNameIdentifier
,	TokenNameCOMMA
shardGroupDocs	TokenNameIdentifier
.	TokenNameDOT
maxScore	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
maxScore	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
(	TokenNameLPAREN
maxScore	TokenNameIdentifier
,	TokenNameCOMMA
shardGroupDocs	TokenNameIdentifier
.	TokenNameDOT
maxScore	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
totalHits	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
shardGroupDocs	TokenNameIdentifier
.	TokenNameDOT
totalHits	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
TopDocs	TokenNameIdentifier
mergedTopDocs	TokenNameIdentifier
=	TokenNameEQUAL
TopDocs	TokenNameIdentifier
.	TokenNameDOT
merge	TokenNameIdentifier
(	TokenNameLPAREN
docSort	TokenNameIdentifier
,	TokenNameCOMMA
docOffset	TokenNameIdentifier
+	TokenNamePLUS
docTopN	TokenNameIdentifier
,	TokenNameCOMMA
shardTopDocs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
ScoreDoc	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
mergedScoreDocs	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
docOffset	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
mergedScoreDocs	TokenNameIdentifier
=	TokenNameEQUAL
mergedTopDocs	TokenNameIdentifier
.	TokenNameDOT
scoreDocs	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
docOffset	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
mergedTopDocs	TokenNameIdentifier
.	TokenNameDOT
scoreDocs	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
mergedScoreDocs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ScoreDoc	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
mergedScoreDocs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ScoreDoc	TokenNameIdentifier
[	TokenNameLBRACKET
mergedTopDocs	TokenNameIdentifier
.	TokenNameDOT
scoreDocs	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
-	TokenNameMINUS
docOffset	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
mergedTopDocs	TokenNameIdentifier
.	TokenNameDOT
scoreDocs	TokenNameIdentifier
,	TokenNameCOMMA
docOffset	TokenNameIdentifier
,	TokenNameCOMMA
mergedScoreDocs	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
mergedTopDocs	TokenNameIdentifier
.	TokenNameDOT
scoreDocs	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
-	TokenNameMINUS
docOffset	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
mergedGroupDocs	TokenNameIdentifier
[	TokenNameLBRACKET
groupIDX	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
GroupDocs	TokenNameIdentifier
<	TokenNameLESS
T	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
maxScore	TokenNameIdentifier
,	TokenNameCOMMA
totalHits	TokenNameIdentifier
,	TokenNameCOMMA
mergedScoreDocs	TokenNameIdentifier
,	TokenNameCOMMA
groupValue	TokenNameIdentifier
,	TokenNameCOMMA
shardGroups	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
.	TokenNameDOT
groups	TokenNameIdentifier
[	TokenNameLBRACKET
groupIDX	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
groupSortValues	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
totalGroupCount	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
TopGroups	TokenNameIdentifier
<	TokenNameLESS
T	TokenNameIdentifier
>	TokenNameGREATER
result	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TopGroups	TokenNameIdentifier
<	TokenNameLESS
T	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
groupSort	TokenNameIdentifier
.	TokenNameDOT
getSort	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
docSort	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
null	TokenNamenull
:	TokenNameCOLON
docSort	TokenNameIdentifier
.	TokenNameDOT
getSort	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
totalHitCount	TokenNameIdentifier
,	TokenNameCOMMA
totalGroupedHitCount	TokenNameIdentifier
,	TokenNameCOMMA
mergedGroupDocs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
TopGroups	TokenNameIdentifier
<	TokenNameLESS
T	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
result	TokenNameIdentifier
,	TokenNameCOMMA
totalGroupCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
TopGroups	TokenNameIdentifier
<	TokenNameLESS
T	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
groupSort	TokenNameIdentifier
.	TokenNameDOT
getSort	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
docSort	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
null	TokenNamenull
:	TokenNameCOLON
docSort	TokenNameIdentifier
.	TokenNameDOT
getSort	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
totalHitCount	TokenNameIdentifier
,	TokenNameCOMMA
totalGroupedHitCount	TokenNameIdentifier
,	TokenNameCOMMA
mergedGroupDocs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
