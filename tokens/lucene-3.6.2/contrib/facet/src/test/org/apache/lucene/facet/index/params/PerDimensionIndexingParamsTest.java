package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
facet	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
params	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
Term	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
junit	TokenNameIdentifier
.	TokenNameDOT
Test	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
LuceneTestCase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
facet	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
params	TokenNameIdentifier
.	TokenNameDOT
CategoryListParams	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
facet	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
params	TokenNameIdentifier
.	TokenNameDOT
FacetIndexingParams	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
facet	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
params	TokenNameIdentifier
.	TokenNameDOT
PerDimensionIndexingParams	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
facet	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
DrillDown	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
facet	TokenNameIdentifier
.	TokenNameDOT
taxonomy	TokenNameIdentifier
.	TokenNameDOT
CategoryPath	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
facet	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
PartitionsUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
PerDimensionIndexingParamsTest	TokenNameIdentifier
extends	TokenNameextends
LuceneTestCase	TokenNameIdentifier
{	TokenNameLBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testTopLevelSettings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
FacetIndexingParams	TokenNameIdentifier
ifip	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
PerDimensionIndexingParams	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNotNull	TokenNameIdentifier
(	TokenNameLPAREN
"Missing default category list"	TokenNameStringLiteral
,	TokenNameCOMMA
ifip	TokenNameIdentifier
.	TokenNameDOT
getAllCategoryListParams	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"Expected default category list term is $facets:$fulltree$"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
"$facets"	TokenNameStringLiteral
,	TokenNameCOMMA
"$fulltree$"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
ifip	TokenNameIdentifier
.	TokenNameDOT
getCategoryListParams	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
.	TokenNameDOT
getTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
expectedDDText	TokenNameIdentifier
=	TokenNameEQUAL
"a"	TokenNameStringLiteral
+	TokenNamePLUS
ifip	TokenNameIdentifier
.	TokenNameDOT
getFacetDelimChar	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
"b"	TokenNameStringLiteral
;	TokenNameSEMICOLON
CategoryPath	TokenNameIdentifier
cp	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CategoryPath	TokenNameIdentifier
(	TokenNameLPAREN
"a"	TokenNameStringLiteral
,	TokenNameCOMMA
"b"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"wrong drill-down term"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
"$facets"	TokenNameStringLiteral
,	TokenNameCOMMA
expectedDDText	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
DrillDown	TokenNameIdentifier
.	TokenNameDOT
term	TokenNameIdentifier
(	TokenNameLPAREN
ifip	TokenNameIdentifier
,	TokenNameCOMMA
cp	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
buf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
char	TokenNamechar
[	TokenNameLBRACKET
20	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
numchars	TokenNameIdentifier
=	TokenNameEQUAL
ifip	TokenNameIdentifier
.	TokenNameDOT
drillDownTermText	TokenNameIdentifier
(	TokenNameLPAREN
cp	TokenNameIdentifier
,	TokenNameCOMMA
buf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"3 characters should be written"	TokenNameStringLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
numchars	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"wrong drill-down term text"	TokenNameStringLiteral
,	TokenNameCOMMA
expectedDDText	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
(	TokenNameLPAREN
buf	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
numchars	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CategoryListParams	TokenNameIdentifier
clParams	TokenNameIdentifier
=	TokenNameEQUAL
ifip	TokenNameIdentifier
.	TokenNameDOT
getCategoryListParams	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"partition for all ordinals is the first"	TokenNameStringLiteral
,	TokenNameCOMMA
"$fulltree$"	TokenNameStringLiteral
,	TokenNameCOMMA
PartitionsUtils	TokenNameIdentifier
.	TokenNameDOT
partitionNameByOrdinal	TokenNameIdentifier
(	TokenNameLPAREN
ifip	TokenNameIdentifier
,	TokenNameCOMMA
clParams	TokenNameIdentifier
,	TokenNameCOMMA
250	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"for partition 0, the same name should be returned"	TokenNameStringLiteral
,	TokenNameCOMMA
"$fulltree$"	TokenNameStringLiteral
,	TokenNameCOMMA
PartitionsUtils	TokenNameIdentifier
.	TokenNameDOT
partitionName	TokenNameIdentifier
(	TokenNameLPAREN
clParams	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"for any other, it's the concatenation of name + partition"	TokenNameStringLiteral
,	TokenNameCOMMA
"$fulltree$1"	TokenNameStringLiteral
,	TokenNameCOMMA
PartitionsUtils	TokenNameIdentifier
.	TokenNameDOT
partitionName	TokenNameIdentifier
(	TokenNameLPAREN
clParams	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"default partition number is always 0"	TokenNameStringLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
PartitionsUtils	TokenNameIdentifier
.	TokenNameDOT
partitionNumber	TokenNameIdentifier
(	TokenNameLPAREN
ifip	TokenNameIdentifier
,	TokenNameCOMMA
100	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"default partition size is unbounded"	TokenNameStringLiteral
,	TokenNameCOMMA
Integer	TokenNameIdentifier
.	TokenNameDOT
MAX_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
ifip	TokenNameIdentifier
.	TokenNameDOT
getPartitionSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testCategoryListParamsAddition	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
PerDimensionIndexingParams	TokenNameIdentifier
tlfip	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
PerDimensionIndexingParams	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CategoryListParams	TokenNameIdentifier
clp	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CategoryListParams	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
"clp"	TokenNameStringLiteral
,	TokenNameCOMMA
"value"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tlfip	TokenNameIdentifier
.	TokenNameDOT
addCategoryListParams	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
CategoryPath	TokenNameIdentifier
(	TokenNameLPAREN
"a"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
clp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"Expected category list term is "	TokenNameStringLiteral
+	TokenNamePLUS
clp	TokenNameIdentifier
.	TokenNameDOT
getTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
clp	TokenNameIdentifier
.	TokenNameDOT
getTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
tlfip	TokenNameIdentifier
.	TokenNameDOT
getCategoryListParams	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
CategoryPath	TokenNameIdentifier
(	TokenNameLPAREN
"a"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNotSame	TokenNameIdentifier
(	TokenNameLPAREN
"Unexpected default category list "	TokenNameStringLiteral
+	TokenNamePLUS
clp	TokenNameIdentifier
.	TokenNameDOT
getTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
clp	TokenNameIdentifier
,	TokenNameCOMMA
tlfip	TokenNameIdentifier
.	TokenNameDOT
getCategoryListParams	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
