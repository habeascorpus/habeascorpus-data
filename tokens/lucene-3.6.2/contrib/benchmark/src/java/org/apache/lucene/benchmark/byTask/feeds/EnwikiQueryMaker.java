package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
benchmark	TokenNameIdentifier
.	TokenNameDOT
byTask	TokenNameIdentifier
.	TokenNameDOT
feeds	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ArrayList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Arrays	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
Analyzer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
standard	TokenNameIdentifier
.	TokenNameDOT
StandardAnalyzer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
Term	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
queryParser	TokenNameIdentifier
.	TokenNameDOT
QueryParser	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
MultiTermQuery	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
Query	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
WildcardQuery	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
spans	TokenNameIdentifier
.	TokenNameDOT
SpanFirstQuery	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
spans	TokenNameIdentifier
.	TokenNameDOT
SpanNearQuery	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
spans	TokenNameIdentifier
.	TokenNameDOT
SpanQuery	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
.	TokenNameDOT
spans	TokenNameIdentifier
.	TokenNameDOT
SpanTermQuery	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
benchmark	TokenNameIdentifier
.	TokenNameDOT
byTask	TokenNameIdentifier
.	TokenNameDOT
tasks	TokenNameIdentifier
.	TokenNameDOT
NewAnalyzerTask	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Version	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
EnwikiQueryMaker	TokenNameIdentifier
extends	TokenNameextends
AbstractQueryMaker	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
STANDARD_QUERIES	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"Images catbox gif"	TokenNameStringLiteral
,	TokenNameCOMMA
"Imunisasi haram"	TokenNameStringLiteral
,	TokenNameCOMMA
"Favicon ico"	TokenNameStringLiteral
,	TokenNameCOMMA
"Michael jackson"	TokenNameStringLiteral
,	TokenNameCOMMA
"Unknown artist"	TokenNameStringLiteral
,	TokenNameCOMMA
"Lily Thai"	TokenNameStringLiteral
,	TokenNameCOMMA
"Neda"	TokenNameStringLiteral
,	TokenNameCOMMA
"The Last Song"	TokenNameStringLiteral
,	TokenNameCOMMA
"Metallica"	TokenNameStringLiteral
,	TokenNameCOMMA
"Nicola Tesla"	TokenNameStringLiteral
,	TokenNameCOMMA
"Max B"	TokenNameStringLiteral
,	TokenNameCOMMA
"Skil Corporation"	TokenNameStringLiteral
,	TokenNameCOMMA
""The 100 Greatest Artists of All Time""	TokenNameStringLiteral
,	TokenNameCOMMA
""Top 100 Global Universities""	TokenNameStringLiteral
,	TokenNameCOMMA
"Pink floyd"	TokenNameStringLiteral
,	TokenNameCOMMA
"Bolton Sullivan"	TokenNameStringLiteral
,	TokenNameCOMMA
"Frank Lucas Jr"	TokenNameStringLiteral
,	TokenNameCOMMA
"Drake Woods"	TokenNameStringLiteral
,	TokenNameCOMMA
"Radiohead"	TokenNameStringLiteral
,	TokenNameCOMMA
"George Freeman"	TokenNameStringLiteral
,	TokenNameCOMMA
"Oksana Grigorieva"	TokenNameStringLiteral
,	TokenNameCOMMA
"The Elder Scrolls V"	TokenNameStringLiteral
,	TokenNameCOMMA
"Deadpool"	TokenNameStringLiteral
,	TokenNameCOMMA
"Green day"	TokenNameStringLiteral
,	TokenNameCOMMA
""Red hot chili peppers""	TokenNameStringLiteral
,	TokenNameCOMMA
"Jennifer Bini Taylor"	TokenNameStringLiteral
,	TokenNameCOMMA
"The Paradiso Girls"	TokenNameStringLiteral
,	TokenNameCOMMA
"Queen"	TokenNameStringLiteral
,	TokenNameCOMMA
"3Me4Ph"	TokenNameStringLiteral
,	TokenNameCOMMA
"Paloma Jimenez"	TokenNameStringLiteral
,	TokenNameCOMMA
"AUDI A4"	TokenNameStringLiteral
,	TokenNameCOMMA
"Edith Bouvier Beale: A Life In Pictures"	TokenNameStringLiteral
,	TokenNameCOMMA
""Skylar James Deleon""	TokenNameStringLiteral
,	TokenNameCOMMA
"Simple Explanation"	TokenNameStringLiteral
,	TokenNameCOMMA
"Juxtaposition"	TokenNameStringLiteral
,	TokenNameCOMMA
"The Woody Show"	TokenNameStringLiteral
,	TokenNameCOMMA
"London WITHER"	TokenNameStringLiteral
,	TokenNameCOMMA
"In A Dark Place"	TokenNameStringLiteral
,	TokenNameCOMMA
"George Freeman"	TokenNameStringLiteral
,	TokenNameCOMMA
"LuAnn de Lesseps"	TokenNameStringLiteral
,	TokenNameCOMMA
"Muhammad."	TokenNameStringLiteral
,	TokenNameCOMMA
"U2"	TokenNameStringLiteral
,	TokenNameCOMMA
"List of countries by GDP"	TokenNameStringLiteral
,	TokenNameCOMMA
"Dean Martin Discography"	TokenNameStringLiteral
,	TokenNameCOMMA
"Web 3.0"	TokenNameStringLiteral
,	TokenNameCOMMA
"List of American actors"	TokenNameStringLiteral
,	TokenNameCOMMA
"The Expendables"	TokenNameStringLiteral
,	TokenNameCOMMA
""100 Greatest Guitarists of All Time""	TokenNameStringLiteral
,	TokenNameCOMMA
"Vince Offer."	TokenNameStringLiteral
,	TokenNameCOMMA
""List of ZIP Codes in the United States""	TokenNameStringLiteral
,	TokenNameCOMMA
"Blood type diet"	TokenNameStringLiteral
,	TokenNameCOMMA
"Jennifer Gimenez"	TokenNameStringLiteral
,	TokenNameCOMMA
"List of hobbies"	TokenNameStringLiteral
,	TokenNameCOMMA
"The beatles"	TokenNameStringLiteral
,	TokenNameCOMMA
"Acdc"	TokenNameStringLiteral
,	TokenNameCOMMA
"Nightwish"	TokenNameStringLiteral
,	TokenNameCOMMA
"Iron maiden"	TokenNameStringLiteral
,	TokenNameCOMMA
"Murder Was the Case"	TokenNameStringLiteral
,	TokenNameCOMMA
"Pelvic hernia"	TokenNameStringLiteral
,	TokenNameCOMMA
"Naruto Shippuuden"	TokenNameStringLiteral
,	TokenNameCOMMA
"campaign"	TokenNameStringLiteral
,	TokenNameCOMMA
"Enthesopathy of hip region"	TokenNameStringLiteral
,	TokenNameCOMMA
"operating system"	TokenNameStringLiteral
,	TokenNameCOMMA
"mouse"	TokenNameStringLiteral
,	TokenNameCOMMA
"List of Xbox 360 games without region encoding"	TokenNameStringLiteral
,	TokenNameCOMMA
"Shakepearian sonnet"	TokenNameStringLiteral
,	TokenNameCOMMA
""The Monday Night Miracle""	TokenNameStringLiteral
,	TokenNameCOMMA
"India"	TokenNameStringLiteral
,	TokenNameCOMMA
"Dad's Army"	TokenNameStringLiteral
,	TokenNameCOMMA
"Solanum melanocerasum"	TokenNameStringLiteral
,	TokenNameCOMMA
""List of PlayStation Portable Wi-Fi games""	TokenNameStringLiteral
,	TokenNameCOMMA
"Little Pixie Geldof"	TokenNameStringLiteral
,	TokenNameCOMMA
"Planes, Trains & Automobiles"	TokenNameStringLiteral
,	TokenNameCOMMA
"Freddy Ingalls"	TokenNameStringLiteral
,	TokenNameCOMMA
"The Return of Chef"	TokenNameStringLiteral
,	TokenNameCOMMA
"Nehalem"	TokenNameStringLiteral
,	TokenNameCOMMA
"Turtle"	TokenNameStringLiteral
,	TokenNameCOMMA
"Calculus"	TokenNameStringLiteral
,	TokenNameCOMMA
"Superman-Prime"	TokenNameStringLiteral
,	TokenNameCOMMA
""The Losers""	TokenNameStringLiteral
,	TokenNameCOMMA
"pen-pal"	TokenNameStringLiteral
,	TokenNameCOMMA
"Audio stream input output"	TokenNameStringLiteral
,	TokenNameCOMMA
"lifehouse"	TokenNameStringLiteral
,	TokenNameCOMMA
"50 greatest gunners"	TokenNameStringLiteral
,	TokenNameCOMMA
"Polyfecalia"	TokenNameStringLiteral
,	TokenNameCOMMA
"freeloader"	TokenNameStringLiteral
,	TokenNameCOMMA
"The Filthy Youth"	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
Query	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getPrebuiltQueries	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
field	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
WildcardQuery	TokenNameIdentifier
wcq	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
WildcardQuery	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
field	TokenNameIdentifier
,	TokenNameCOMMA
"fo*"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
wcq	TokenNameIdentifier
.	TokenNameDOT
setRewriteMethod	TokenNameIdentifier
(	TokenNameLPAREN
MultiTermQuery	TokenNameIdentifier
.	TokenNameDOT
CONSTANT_SCORE_FILTER_REWRITE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
Query	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
new	TokenNamenew
SpanFirstQuery	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SpanTermQuery	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
field	TokenNameIdentifier
,	TokenNameCOMMA
"ford"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
SpanNearQuery	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SpanQuery	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
new	TokenNamenew
SpanTermQuery	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
field	TokenNameIdentifier
,	TokenNameCOMMA
"night"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
SpanTermQuery	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
field	TokenNameIdentifier
,	TokenNameCOMMA
"trading"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
SpanNearQuery	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SpanQuery	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
new	TokenNamenew
SpanFirstQuery	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SpanTermQuery	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
field	TokenNameIdentifier
,	TokenNameCOMMA
"ford"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
10	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
SpanTermQuery	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
field	TokenNameIdentifier
,	TokenNameCOMMA
"credit"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
,	TokenNameCOMMA
10	TokenNameIntegerLiteral
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
,	TokenNameCOMMA
wcq	TokenNameIdentifier
,	TokenNameCOMMA
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
Query	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
createQueries	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
Object	TokenNameIdentifier
>	TokenNameGREATER
qs	TokenNameIdentifier
,	TokenNameCOMMA
Analyzer	TokenNameIdentifier
a	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
QueryParser	TokenNameIdentifier
qp	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
QueryParser	TokenNameIdentifier
(	TokenNameLPAREN
Version	TokenNameIdentifier
.	TokenNameDOT
LUCENE_CURRENT	TokenNameIdentifier
,	TokenNameCOMMA
DocMaker	TokenNameIdentifier
.	TokenNameDOT
BODY_FIELD	TokenNameIdentifier
,	TokenNameCOMMA
a	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Object	TokenNameIdentifier
>	TokenNameGREATER
queries	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Object	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
qs	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
Object	TokenNameIdentifier
query	TokenNameIdentifier
=	TokenNameEQUAL
qs	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Query	TokenNameIdentifier
q	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
query	TokenNameIdentifier
instanceof	TokenNameinstanceof
String	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
q	TokenNameIdentifier
=	TokenNameEQUAL
qp	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
query	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
query	TokenNameIdentifier
instanceof	TokenNameinstanceof
Query	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
q	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Query	TokenNameIdentifier
)	TokenNameRPAREN
query	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
err	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Unsupported Query Type: "	TokenNameStringLiteral
+	TokenNamePLUS
query	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
q	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
queries	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
q	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
e	TokenNameIdentifier
.	TokenNameDOT
printStackTrace	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
queries	TokenNameIdentifier
.	TokenNameDOT
toArray	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Query	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
protected	TokenNameprotected
Query	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
prepareQueries	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
Analyzer	TokenNameIdentifier
anlzr	TokenNameIdentifier
=	TokenNameEQUAL
NewAnalyzerTask	TokenNameIdentifier
.	TokenNameDOT
createAnalyzer	TokenNameIdentifier
(	TokenNameLPAREN
config	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
"analyzer"	TokenNameStringLiteral
,	TokenNameCOMMA
StandardAnalyzer	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Object	TokenNameIdentifier
>	TokenNameGREATER
queryList	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Object	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
20	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
queryList	TokenNameIdentifier
.	TokenNameDOT
addAll	TokenNameIdentifier
(	TokenNameLPAREN
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
STANDARD_QUERIES	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
config	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
"enwikiQueryMaker.disableSpanQueries"	TokenNameStringLiteral
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
)	TokenNameRPAREN
queryList	TokenNameIdentifier
.	TokenNameDOT
addAll	TokenNameIdentifier
(	TokenNameLPAREN
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
getPrebuiltQueries	TokenNameIdentifier
(	TokenNameLPAREN
DocMaker	TokenNameIdentifier
.	TokenNameDOT
BODY_FIELD	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
createQueries	TokenNameIdentifier
(	TokenNameLPAREN
queryList	TokenNameIdentifier
,	TokenNameCOMMA
anlzr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
