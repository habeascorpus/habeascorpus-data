package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
MalformedURLException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
ServerSocket	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
Socket	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
rmi	TokenNameIdentifier
.	TokenNameDOT
Naming	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
rmi	TokenNameIdentifier
.	TokenNameDOT
NotBoundException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
rmi	TokenNameIdentifier
.	TokenNameDOT
RemoteException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
rmi	TokenNameIdentifier
.	TokenNameDOT
registry	TokenNameIdentifier
.	TokenNameDOT
LocateRegistry	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
rmi	TokenNameIdentifier
.	TokenNameDOT
server	TokenNameIdentifier
.	TokenNameDOT
RMIClientSocketFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
rmi	TokenNameIdentifier
.	TokenNameDOT
server	TokenNameIdentifier
.	TokenNameDOT
RMIServerSocketFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
LuceneTestCase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
junit	TokenNameIdentifier
.	TokenNameDOT
AfterClass	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
abstract	TokenNameabstract
class	TokenNameclass
RemoteTestCase	TokenNameIdentifier
extends	TokenNameextends
LuceneTestCase	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
int	TokenNameint
port	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
startServer	TokenNameIdentifier
(	TokenNameLPAREN
Searchable	TokenNameIdentifier
searchable	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
RMIClientSocketFactory	TokenNameIdentifier
clientFactory	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
RMIClientSocketFactory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
Socket	TokenNameIdentifier
createSocket	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
host	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
port	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Socket	TokenNameIdentifier
(	TokenNameLPAREN
host	TokenNameIdentifier
,	TokenNameCOMMA
port	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
class	TokenNameclass
TestRMIServerSocketFactory	TokenNameIdentifier
implements	TokenNameimplements
RMIServerSocketFactory	TokenNameIdentifier
{	TokenNameLBRACE
ServerSocket	TokenNameIdentifier
socket	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
ServerSocket	TokenNameIdentifier
createServerSocket	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
port	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
socket	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ServerSocket	TokenNameIdentifier
(	TokenNameLPAREN
port	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
TestRMIServerSocketFactory	TokenNameIdentifier
serverFactory	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TestRMIServerSocketFactory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
LocateRegistry	TokenNameIdentifier
.	TokenNameDOT
createRegistry	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
clientFactory	TokenNameIdentifier
,	TokenNameCOMMA
serverFactory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
RemoteSearchable	TokenNameIdentifier
impl	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
RemoteSearchable	TokenNameIdentifier
(	TokenNameLPAREN
searchable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
port	TokenNameIdentifier
=	TokenNameEQUAL
serverFactory	TokenNameIdentifier
.	TokenNameDOT
socket	TokenNameIdentifier
.	TokenNameDOT
getLocalPort	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Naming	TokenNameIdentifier
.	TokenNameDOT
rebind	TokenNameIdentifier
(	TokenNameLPAREN
"//localhost:"	TokenNameStringLiteral
+	TokenNamePLUS
port	TokenNameIdentifier
+	TokenNamePLUS
"/Searchable"	TokenNameStringLiteral
,	TokenNameCOMMA
impl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
AfterClass	TokenNameIdentifier
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
stopServer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
Naming	TokenNameIdentifier
.	TokenNameDOT
unbind	TokenNameIdentifier
(	TokenNameLPAREN
"//localhost:"	TokenNameStringLiteral
+	TokenNamePLUS
port	TokenNameIdentifier
+	TokenNamePLUS
"/Searchable"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RemoteException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MalformedURLException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
NotBoundException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Searchable	TokenNameIdentifier
lookupRemote	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
Searchable	TokenNameIdentifier
)	TokenNameRPAREN
Naming	TokenNameIdentifier
.	TokenNameDOT
lookup	TokenNameIdentifier
(	TokenNameLPAREN
"//localhost:"	TokenNameStringLiteral
+	TokenNamePLUS
port	TokenNameIdentifier
+	TokenNamePLUS
"/Searchable"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
