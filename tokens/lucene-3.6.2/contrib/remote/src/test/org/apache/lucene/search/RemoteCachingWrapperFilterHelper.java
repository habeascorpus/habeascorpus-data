package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
junit	TokenNameIdentifier
.	TokenNameDOT
framework	TokenNameIdentifier
.	TokenNameDOT
Assert	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
IndexReader	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
RemoteCachingWrapperFilterHelper	TokenNameIdentifier
extends	TokenNameextends
RemoteCachingWrapperFilter	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
boolean	TokenNameboolean
shouldHaveCache	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
RemoteCachingWrapperFilterHelper	TokenNameIdentifier
(	TokenNameLPAREN
Filter	TokenNameIdentifier
filter	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
shouldHaveCache	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
filter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
shouldHaveCache	TokenNameIdentifier
=	TokenNameEQUAL
shouldHaveCache	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
shouldHaveCache	TokenNameIdentifier
(	TokenNameLPAREN
boolean	TokenNameboolean
shouldHaveCache	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
shouldHaveCache	TokenNameIdentifier
=	TokenNameEQUAL
shouldHaveCache	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
DocIdSet	TokenNameIdentifier
getDocIdSet	TokenNameIdentifier
(	TokenNameLPAREN
IndexReader	TokenNameIdentifier
reader	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Filter	TokenNameIdentifier
cachedFilter	TokenNameIdentifier
=	TokenNameEQUAL
FilterManager	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getFilter	TokenNameIdentifier
(	TokenNameLPAREN
filter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Assert	TokenNameIdentifier
.	TokenNameDOT
assertNotNull	TokenNameIdentifier
(	TokenNameLPAREN
"Filter should not be null"	TokenNameStringLiteral
,	TokenNameCOMMA
cachedFilter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
shouldHaveCache	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Assert	TokenNameIdentifier
.	TokenNameDOT
assertSame	TokenNameIdentifier
(	TokenNameLPAREN
"First time filter should be the same "	TokenNameStringLiteral
,	TokenNameCOMMA
filter	TokenNameIdentifier
,	TokenNameCOMMA
cachedFilter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Assert	TokenNameIdentifier
.	TokenNameDOT
assertNotSame	TokenNameIdentifier
(	TokenNameLPAREN
"We should have a cached version of the filter"	TokenNameStringLiteral
,	TokenNameCOMMA
filter	TokenNameIdentifier
,	TokenNameCOMMA
cachedFilter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
filter	TokenNameIdentifier
instanceof	TokenNameinstanceof
CachingWrapperFilterHelper	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
CachingWrapperFilterHelper	TokenNameIdentifier
)	TokenNameRPAREN
cachedFilter	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setShouldHaveCache	TokenNameIdentifier
(	TokenNameLPAREN
shouldHaveCache	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
cachedFilter	TokenNameIdentifier
.	TokenNameDOT
getDocIdSet	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
