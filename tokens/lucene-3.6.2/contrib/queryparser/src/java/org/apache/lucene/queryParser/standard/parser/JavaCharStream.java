package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
queryParser	TokenNameIdentifier
.	TokenNameDOT
standard	TokenNameIdentifier
.	TokenNameDOT
parser	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
JavaCharStream	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
boolean	TokenNameboolean
staticFlag	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
hexval	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
c	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
'0'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
'1'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
'2'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
'3'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
'4'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
'5'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
'6'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
6	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
'7'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
7	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
'8'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
'9'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
9	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
'a'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'A'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
10	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
'b'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'B'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
11	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
'c'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'C'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
12	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
'd'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'D'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
13	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
'e'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'E'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
14	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
'f'	TokenNameCharacterLiteral
:	TokenNameCOLON
case	TokenNamecase
'F'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
15	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
throw	TokenNamethrow
new	TokenNamenew
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
bufpos	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
bufsize	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
available	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
tokenBegin	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
bufline	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
bufcolumn	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
column	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
line	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
protected	TokenNameprotected
boolean	TokenNameboolean
prevCharIsCR	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
protected	TokenNameprotected
boolean	TokenNameboolean
prevCharIsLF	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
protected	TokenNameprotected
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
Reader	TokenNameIdentifier
inputStream	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
nextCharBuf	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
buffer	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
maxNextCharInd	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
nextCharInd	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
inBuf	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
tabSize	TokenNameIdentifier
=	TokenNameEQUAL
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
protected	TokenNameprotected
void	TokenNamevoid
setTabSize	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
tabSize	TokenNameIdentifier
=	TokenNameEQUAL
i	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
int	TokenNameint
getTabSize	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
tabSize	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
ExpandBuff	TokenNameIdentifier
(	TokenNameLPAREN
boolean	TokenNameboolean
wrapAround	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newbuffer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
char	TokenNamechar
[	TokenNameLBRACKET
bufsize	TokenNameIdentifier
+	TokenNamePLUS
2048	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
newbufline	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
bufsize	TokenNameIdentifier
+	TokenNamePLUS
2048	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
newbufcolumn	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
bufsize	TokenNameIdentifier
+	TokenNamePLUS
2048	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
wrapAround	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
buffer	TokenNameIdentifier
,	TokenNameCOMMA
tokenBegin	TokenNameIdentifier
,	TokenNameCOMMA
newbuffer	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
bufsize	TokenNameIdentifier
-	TokenNameMINUS
tokenBegin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
buffer	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
newbuffer	TokenNameIdentifier
,	TokenNameCOMMA
bufsize	TokenNameIdentifier
-	TokenNameMINUS
tokenBegin	TokenNameIdentifier
,	TokenNameCOMMA
bufpos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
buffer	TokenNameIdentifier
=	TokenNameEQUAL
newbuffer	TokenNameIdentifier
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
bufline	TokenNameIdentifier
,	TokenNameCOMMA
tokenBegin	TokenNameIdentifier
,	TokenNameCOMMA
newbufline	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
bufsize	TokenNameIdentifier
-	TokenNameMINUS
tokenBegin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
bufline	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
newbufline	TokenNameIdentifier
,	TokenNameCOMMA
bufsize	TokenNameIdentifier
-	TokenNameMINUS
tokenBegin	TokenNameIdentifier
,	TokenNameCOMMA
bufpos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
bufline	TokenNameIdentifier
=	TokenNameEQUAL
newbufline	TokenNameIdentifier
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
bufcolumn	TokenNameIdentifier
,	TokenNameCOMMA
tokenBegin	TokenNameIdentifier
,	TokenNameCOMMA
newbufcolumn	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
bufsize	TokenNameIdentifier
-	TokenNameMINUS
tokenBegin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
bufcolumn	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
newbufcolumn	TokenNameIdentifier
,	TokenNameCOMMA
bufsize	TokenNameIdentifier
-	TokenNameMINUS
tokenBegin	TokenNameIdentifier
,	TokenNameCOMMA
bufpos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
bufcolumn	TokenNameIdentifier
=	TokenNameEQUAL
newbufcolumn	TokenNameIdentifier
;	TokenNameSEMICOLON
bufpos	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
bufsize	TokenNameIdentifier
-	TokenNameMINUS
tokenBegin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
buffer	TokenNameIdentifier
,	TokenNameCOMMA
tokenBegin	TokenNameIdentifier
,	TokenNameCOMMA
newbuffer	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
bufsize	TokenNameIdentifier
-	TokenNameMINUS
tokenBegin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
buffer	TokenNameIdentifier
=	TokenNameEQUAL
newbuffer	TokenNameIdentifier
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
bufline	TokenNameIdentifier
,	TokenNameCOMMA
tokenBegin	TokenNameIdentifier
,	TokenNameCOMMA
newbufline	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
bufsize	TokenNameIdentifier
-	TokenNameMINUS
tokenBegin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
bufline	TokenNameIdentifier
=	TokenNameEQUAL
newbufline	TokenNameIdentifier
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
bufcolumn	TokenNameIdentifier
,	TokenNameCOMMA
tokenBegin	TokenNameIdentifier
,	TokenNameCOMMA
newbufcolumn	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
bufsize	TokenNameIdentifier
-	TokenNameMINUS
tokenBegin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
bufcolumn	TokenNameIdentifier
=	TokenNameEQUAL
newbufcolumn	TokenNameIdentifier
;	TokenNameSEMICOLON
bufpos	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
tokenBegin	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Throwable	TokenNameIdentifier
t	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
Error	TokenNameIdentifier
(	TokenNameLPAREN
t	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
available	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
bufsize	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
2048	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tokenBegin	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
FillBuff	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
i	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
maxNextCharInd	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
4096	TokenNameIntegerLiteral
)	TokenNameRPAREN
maxNextCharInd	TokenNameIdentifier
=	TokenNameEQUAL
nextCharInd	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
i	TokenNameIdentifier
=	TokenNameEQUAL
inputStream	TokenNameIdentifier
.	TokenNameDOT
read	TokenNameIdentifier
(	TokenNameLPAREN
nextCharBuf	TokenNameIdentifier
,	TokenNameCOMMA
maxNextCharInd	TokenNameIdentifier
,	TokenNameCOMMA
4096	TokenNameIntegerLiteral
-	TokenNameMINUS
maxNextCharInd	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
inputStream	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
maxNextCharInd	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
i	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
bufpos	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
--	TokenNameMINUS_MINUS
bufpos	TokenNameIdentifier
;	TokenNameSEMICOLON
backup	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
bufline	TokenNameIdentifier
[	TokenNameLBRACKET
bufpos	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
line	TokenNameIdentifier
;	TokenNameSEMICOLON
bufcolumn	TokenNameIdentifier
[	TokenNameLBRACKET
bufpos	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
column	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
throw	TokenNamethrow
e	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
char	TokenNamechar
ReadByte	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
++	TokenNamePLUS_PLUS
nextCharInd	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
maxNextCharInd	TokenNameIdentifier
)	TokenNameRPAREN
FillBuff	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
nextCharBuf	TokenNameIdentifier
[	TokenNameLBRACKET
nextCharInd	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
char	TokenNamechar
BeginToken	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
inBuf	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
--	TokenNameMINUS_MINUS
inBuf	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
++	TokenNamePLUS_PLUS
bufpos	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
bufsize	TokenNameIdentifier
)	TokenNameRPAREN
bufpos	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
tokenBegin	TokenNameIdentifier
=	TokenNameEQUAL
bufpos	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
buffer	TokenNameIdentifier
[	TokenNameLBRACKET
bufpos	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
tokenBegin	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
bufpos	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
return	TokenNamereturn
readChar	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
AdjustBuffSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
available	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
bufsize	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
tokenBegin	TokenNameIdentifier
>	TokenNameGREATER
2048	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
bufpos	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
available	TokenNameIdentifier
=	TokenNameEQUAL
tokenBegin	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
ExpandBuff	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
available	TokenNameIdentifier
>	TokenNameGREATER
tokenBegin	TokenNameIdentifier
)	TokenNameRPAREN
available	TokenNameIdentifier
=	TokenNameEQUAL
bufsize	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
tokenBegin	TokenNameIdentifier
-	TokenNameMINUS
available	TokenNameIdentifier
)	TokenNameRPAREN
<	TokenNameLESS
2048	TokenNameIntegerLiteral
)	TokenNameRPAREN
ExpandBuff	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
available	TokenNameIdentifier
=	TokenNameEQUAL
tokenBegin	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
UpdateLineColumn	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
column	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
prevCharIsLF	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
prevCharIsLF	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
line	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
column	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
prevCharIsCR	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
prevCharIsCR	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
c	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
'\n'	TokenNameCharacterLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
prevCharIsLF	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
line	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
column	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
'\r'	TokenNameCharacterLiteral
:	TokenNameCOLON
prevCharIsCR	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
'\n'	TokenNameCharacterLiteral
:	TokenNameCOLON
prevCharIsLF	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
'\t'	TokenNameCharacterLiteral
:	TokenNameCOLON
column	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
column	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
tabSize	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
column	TokenNameIdentifier
%	TokenNameREMAINDER
tabSize	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
bufline	TokenNameIdentifier
[	TokenNameLBRACKET
bufpos	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
line	TokenNameIdentifier
;	TokenNameSEMICOLON
bufcolumn	TokenNameIdentifier
[	TokenNameLBRACKET
bufpos	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
column	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
char	TokenNamechar
readChar	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
inBuf	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
--	TokenNameMINUS_MINUS
inBuf	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
++	TokenNamePLUS_PLUS
bufpos	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
bufsize	TokenNameIdentifier
)	TokenNameRPAREN
bufpos	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
return	TokenNamereturn
buffer	TokenNameIdentifier
[	TokenNameLBRACKET
bufpos	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
char	TokenNamechar
c	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
++	TokenNamePLUS_PLUS
bufpos	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
available	TokenNameIdentifier
)	TokenNameRPAREN
AdjustBuffSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
buffer	TokenNameIdentifier
[	TokenNameLBRACKET
bufpos	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
c	TokenNameIdentifier
=	TokenNameEQUAL
ReadByte	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'\\'	TokenNameCharacterLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
UpdateLineColumn	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
backSlashCnt	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
;	TokenNameSEMICOLON
;	TokenNameSEMICOLON
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
++	TokenNamePLUS_PLUS
bufpos	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
available	TokenNameIdentifier
)	TokenNameRPAREN
AdjustBuffSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
buffer	TokenNameIdentifier
[	TokenNameLBRACKET
bufpos	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
c	TokenNameIdentifier
=	TokenNameEQUAL
ReadByte	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
'\\'	TokenNameCharacterLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
UpdateLineColumn	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
c	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
'u'	TokenNameCharacterLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
(	TokenNameLPAREN
backSlashCnt	TokenNameIdentifier
&	TokenNameAND
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
--	TokenNameMINUS_MINUS
bufpos	TokenNameIdentifier
<	TokenNameLESS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
bufpos	TokenNameIdentifier
=	TokenNameEQUAL
bufsize	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
backup	TokenNameIdentifier
(	TokenNameLPAREN
backSlashCnt	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
'\\'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
backSlashCnt	TokenNameIdentifier
>	TokenNameGREATER
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
backup	TokenNameIdentifier
(	TokenNameLPAREN
backSlashCnt	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
'\\'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
UpdateLineColumn	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
backSlashCnt	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
while	TokenNamewhile
(	TokenNameLPAREN
(	TokenNameLPAREN
c	TokenNameIdentifier
=	TokenNameEQUAL
ReadByte	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'u'	TokenNameCharacterLiteral
)	TokenNameRPAREN
++	TokenNamePLUS_PLUS
column	TokenNameIdentifier
;	TokenNameSEMICOLON
buffer	TokenNameIdentifier
[	TokenNameLBRACKET
bufpos	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
c	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
char	TokenNamechar
)	TokenNameRPAREN
(	TokenNameLPAREN
hexval	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
12	TokenNameIntegerLiteral
|	TokenNameOR
hexval	TokenNameIdentifier
(	TokenNameLPAREN
ReadByte	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
|	TokenNameOR
hexval	TokenNameIdentifier
(	TokenNameLPAREN
ReadByte	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
4	TokenNameIntegerLiteral
|	TokenNameOR
hexval	TokenNameIdentifier
(	TokenNameLPAREN
ReadByte	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
column	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
Error	TokenNameIdentifier
(	TokenNameLPAREN
"Invalid escape character at line "	TokenNameStringLiteral
+	TokenNamePLUS
line	TokenNameIdentifier
+	TokenNamePLUS
" column "	TokenNameStringLiteral
+	TokenNamePLUS
column	TokenNameIdentifier
+	TokenNamePLUS
"."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
backSlashCnt	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
c	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
{	TokenNameLBRACE
backup	TokenNameIdentifier
(	TokenNameLPAREN
backSlashCnt	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
'\\'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
UpdateLineColumn	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
c	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
@	TokenNameAT
Deprecated	TokenNameIdentifier
public	TokenNamepublic
int	TokenNameint
getColumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
bufcolumn	TokenNameIdentifier
[	TokenNameLBRACKET
bufpos	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Deprecated	TokenNameIdentifier
public	TokenNamepublic
int	TokenNameint
getLine	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
bufline	TokenNameIdentifier
[	TokenNameLBRACKET
bufpos	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getEndColumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
bufcolumn	TokenNameIdentifier
[	TokenNameLBRACKET
bufpos	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getEndLine	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
bufline	TokenNameIdentifier
[	TokenNameLBRACKET
bufpos	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getBeginColumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
bufcolumn	TokenNameIdentifier
[	TokenNameLBRACKET
tokenBegin	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getBeginLine	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
bufline	TokenNameIdentifier
[	TokenNameLBRACKET
tokenBegin	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
backup	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
amount	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
inBuf	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
amount	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
bufpos	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
amount	TokenNameIdentifier
)	TokenNameRPAREN
<	TokenNameLESS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
bufpos	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
bufsize	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
JavaCharStream	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
Reader	TokenNameIdentifier
dstream	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startline	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
buffersize	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
inputStream	TokenNameIdentifier
=	TokenNameEQUAL
dstream	TokenNameIdentifier
;	TokenNameSEMICOLON
line	TokenNameIdentifier
=	TokenNameEQUAL
startline	TokenNameIdentifier
;	TokenNameSEMICOLON
column	TokenNameIdentifier
=	TokenNameEQUAL
startcolumn	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
available	TokenNameIdentifier
=	TokenNameEQUAL
bufsize	TokenNameIdentifier
=	TokenNameEQUAL
buffersize	TokenNameIdentifier
;	TokenNameSEMICOLON
buffer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
char	TokenNamechar
[	TokenNameLBRACKET
buffersize	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
bufline	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
buffersize	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
bufcolumn	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
buffersize	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
nextCharBuf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
char	TokenNamechar
[	TokenNameLBRACKET
4096	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
JavaCharStream	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
Reader	TokenNameIdentifier
dstream	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startline	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startcolumn	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
dstream	TokenNameIdentifier
,	TokenNameCOMMA
startline	TokenNameIdentifier
,	TokenNameCOMMA
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
4096	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
JavaCharStream	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
Reader	TokenNameIdentifier
dstream	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
dstream	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
4096	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
Reader	TokenNameIdentifier
dstream	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startline	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
buffersize	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
inputStream	TokenNameIdentifier
=	TokenNameEQUAL
dstream	TokenNameIdentifier
;	TokenNameSEMICOLON
line	TokenNameIdentifier
=	TokenNameEQUAL
startline	TokenNameIdentifier
;	TokenNameSEMICOLON
column	TokenNameIdentifier
=	TokenNameEQUAL
startcolumn	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
buffer	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
buffersize	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
buffer	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
available	TokenNameIdentifier
=	TokenNameEQUAL
bufsize	TokenNameIdentifier
=	TokenNameEQUAL
buffersize	TokenNameIdentifier
;	TokenNameSEMICOLON
buffer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
char	TokenNamechar
[	TokenNameLBRACKET
buffersize	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
bufline	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
buffersize	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
bufcolumn	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
buffersize	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
nextCharBuf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
char	TokenNamechar
[	TokenNameLBRACKET
4096	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
prevCharIsLF	TokenNameIdentifier
=	TokenNameEQUAL
prevCharIsCR	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
tokenBegin	TokenNameIdentifier
=	TokenNameEQUAL
inBuf	TokenNameIdentifier
=	TokenNameEQUAL
maxNextCharInd	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
nextCharInd	TokenNameIdentifier
=	TokenNameEQUAL
bufpos	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
Reader	TokenNameIdentifier
dstream	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startline	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startcolumn	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
dstream	TokenNameIdentifier
,	TokenNameCOMMA
startline	TokenNameIdentifier
,	TokenNameCOMMA
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
4096	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
Reader	TokenNameIdentifier
dstream	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
dstream	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
4096	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
JavaCharStream	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStream	TokenNameIdentifier
dstream	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
encoding	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startline	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
buffersize	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
UnsupportedEncodingException	TokenNameIdentifier
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
encoding	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
new	TokenNamenew
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStreamReader	TokenNameIdentifier
(	TokenNameLPAREN
dstream	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
new	TokenNamenew
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStreamReader	TokenNameIdentifier
(	TokenNameLPAREN
dstream	TokenNameIdentifier
,	TokenNameCOMMA
encoding	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
startline	TokenNameIdentifier
,	TokenNameCOMMA
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
buffersize	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
JavaCharStream	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStream	TokenNameIdentifier
dstream	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startline	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
buffersize	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
new	TokenNamenew
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStreamReader	TokenNameIdentifier
(	TokenNameLPAREN
dstream	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
startline	TokenNameIdentifier
,	TokenNameCOMMA
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
4096	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
JavaCharStream	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStream	TokenNameIdentifier
dstream	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
encoding	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startline	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startcolumn	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
UnsupportedEncodingException	TokenNameIdentifier
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
dstream	TokenNameIdentifier
,	TokenNameCOMMA
encoding	TokenNameIdentifier
,	TokenNameCOMMA
startline	TokenNameIdentifier
,	TokenNameCOMMA
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
4096	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
JavaCharStream	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStream	TokenNameIdentifier
dstream	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startline	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startcolumn	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
dstream	TokenNameIdentifier
,	TokenNameCOMMA
startline	TokenNameIdentifier
,	TokenNameCOMMA
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
4096	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
JavaCharStream	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStream	TokenNameIdentifier
dstream	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
encoding	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
UnsupportedEncodingException	TokenNameIdentifier
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
dstream	TokenNameIdentifier
,	TokenNameCOMMA
encoding	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
4096	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
JavaCharStream	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStream	TokenNameIdentifier
dstream	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
dstream	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
4096	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStream	TokenNameIdentifier
dstream	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
encoding	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startline	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
buffersize	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
UnsupportedEncodingException	TokenNameIdentifier
{	TokenNameLBRACE
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
encoding	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
new	TokenNamenew
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStreamReader	TokenNameIdentifier
(	TokenNameLPAREN
dstream	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
new	TokenNamenew
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStreamReader	TokenNameIdentifier
(	TokenNameLPAREN
dstream	TokenNameIdentifier
,	TokenNameCOMMA
encoding	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
startline	TokenNameIdentifier
,	TokenNameCOMMA
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
buffersize	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStream	TokenNameIdentifier
dstream	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startline	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
buffersize	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStreamReader	TokenNameIdentifier
(	TokenNameLPAREN
dstream	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
startline	TokenNameIdentifier
,	TokenNameCOMMA
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
buffersize	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStream	TokenNameIdentifier
dstream	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
encoding	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startline	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startcolumn	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
UnsupportedEncodingException	TokenNameIdentifier
{	TokenNameLBRACE
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
dstream	TokenNameIdentifier
,	TokenNameCOMMA
encoding	TokenNameIdentifier
,	TokenNameCOMMA
startline	TokenNameIdentifier
,	TokenNameCOMMA
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
4096	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStream	TokenNameIdentifier
dstream	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startline	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
startcolumn	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
dstream	TokenNameIdentifier
,	TokenNameCOMMA
startline	TokenNameIdentifier
,	TokenNameCOMMA
startcolumn	TokenNameIdentifier
,	TokenNameCOMMA
4096	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStream	TokenNameIdentifier
dstream	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
encoding	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
UnsupportedEncodingException	TokenNameIdentifier
{	TokenNameLBRACE
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
dstream	TokenNameIdentifier
,	TokenNameCOMMA
encoding	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
4096	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStream	TokenNameIdentifier
dstream	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ReInit	TokenNameIdentifier
(	TokenNameLPAREN
dstream	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
4096	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
GetImage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
bufpos	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
tokenBegin	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
String	TokenNameIdentifier
(	TokenNameLPAREN
buffer	TokenNameIdentifier
,	TokenNameCOMMA
tokenBegin	TokenNameIdentifier
,	TokenNameCOMMA
bufpos	TokenNameIdentifier
-	TokenNameMINUS
tokenBegin	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
new	TokenNamenew
String	TokenNameIdentifier
(	TokenNameLPAREN
buffer	TokenNameIdentifier
,	TokenNameCOMMA
tokenBegin	TokenNameIdentifier
,	TokenNameCOMMA
bufsize	TokenNameIdentifier
-	TokenNameMINUS
tokenBegin	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
new	TokenNamenew
String	TokenNameIdentifier
(	TokenNameLPAREN
buffer	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
bufpos	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
GetSuffix	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
ret	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
char	TokenNamechar
[	TokenNameLBRACKET
len	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
bufpos	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
len	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
buffer	TokenNameIdentifier
,	TokenNameCOMMA
bufpos	TokenNameIdentifier
-	TokenNameMINUS
len	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
ret	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
buffer	TokenNameIdentifier
,	TokenNameCOMMA
bufsize	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
len	TokenNameIdentifier
-	TokenNameMINUS
bufpos	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
ret	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
len	TokenNameIdentifier
-	TokenNameMINUS
bufpos	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
buffer	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
ret	TokenNameIdentifier
,	TokenNameCOMMA
len	TokenNameIdentifier
-	TokenNameMINUS
bufpos	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
bufpos	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
ret	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
Done	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
nextCharBuf	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
buffer	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
bufline	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
bufcolumn	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
adjustBeginLineColumn	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
newLine	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newCol	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
start	TokenNameIdentifier
=	TokenNameEQUAL
tokenBegin	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
len	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
bufpos	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
tokenBegin	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
len	TokenNameIdentifier
=	TokenNameEQUAL
bufpos	TokenNameIdentifier
-	TokenNameMINUS
tokenBegin	TokenNameIdentifier
+	TokenNamePLUS
inBuf	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
len	TokenNameIdentifier
=	TokenNameEQUAL
bufsize	TokenNameIdentifier
-	TokenNameMINUS
tokenBegin	TokenNameIdentifier
+	TokenNamePLUS
bufpos	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
+	TokenNamePLUS
inBuf	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
j	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
k	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
nextColDiff	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
columnDiff	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
i	TokenNameIdentifier
<	TokenNameLESS
len	TokenNameIdentifier
&&	TokenNameAND_AND
bufline	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
%	TokenNameREMAINDER
bufsize	TokenNameIdentifier
]	TokenNameRBRACKET
==	TokenNameEQUAL_EQUAL
bufline	TokenNameIdentifier
[	TokenNameLBRACKET
k	TokenNameIdentifier
=	TokenNameEQUAL
++	TokenNamePLUS_PLUS
start	TokenNameIdentifier
%	TokenNameREMAINDER
bufsize	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
{	TokenNameLBRACE
bufline	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
newLine	TokenNameIdentifier
;	TokenNameSEMICOLON
nextColDiff	TokenNameIdentifier
=	TokenNameEQUAL
columnDiff	TokenNameIdentifier
+	TokenNamePLUS
bufcolumn	TokenNameIdentifier
[	TokenNameLBRACKET
k	TokenNameIdentifier
]	TokenNameRBRACKET
-	TokenNameMINUS
bufcolumn	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
bufcolumn	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
newCol	TokenNameIdentifier
+	TokenNamePLUS
columnDiff	TokenNameIdentifier
;	TokenNameSEMICOLON
columnDiff	TokenNameIdentifier
=	TokenNameEQUAL
nextColDiff	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
i	TokenNameIdentifier
<	TokenNameLESS
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
bufline	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
newLine	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
bufcolumn	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
newCol	TokenNameIdentifier
+	TokenNamePLUS
columnDiff	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
<	TokenNameLESS
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
bufline	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
%	TokenNameREMAINDER
bufsize	TokenNameIdentifier
]	TokenNameRBRACKET
!=	TokenNameNOT_EQUAL
bufline	TokenNameIdentifier
[	TokenNameLBRACKET
++	TokenNamePLUS_PLUS
start	TokenNameIdentifier
%	TokenNameREMAINDER
bufsize	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
bufline	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
newLine	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
else	TokenNameelse
bufline	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
newLine	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
line	TokenNameIdentifier
=	TokenNameEQUAL
bufline	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
column	TokenNameIdentifier
=	TokenNameEQUAL
bufcolumn	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
