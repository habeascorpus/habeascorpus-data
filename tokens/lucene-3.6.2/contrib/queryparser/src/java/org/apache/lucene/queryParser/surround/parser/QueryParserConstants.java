package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
queryParser	TokenNameIdentifier
.	TokenNameDOT
surround	TokenNameIdentifier
.	TokenNameDOT
parser	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
interface	TokenNameinterface
QueryParserConstants	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
EOF	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
_NUM_CHAR	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
_TERM_CHAR	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
_WHITESPACE	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
_STAR	TokenNameIdentifier
=	TokenNameEQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
_ONE_CHAR	TokenNameIdentifier
=	TokenNameEQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
_DISTOP_NUM	TokenNameIdentifier
=	TokenNameEQUAL
6	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
OR	TokenNameIdentifier
=	TokenNameEQUAL
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
AND	TokenNameIdentifier
=	TokenNameEQUAL
9	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
NOT	TokenNameIdentifier
=	TokenNameEQUAL
10	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
W	TokenNameIdentifier
=	TokenNameEQUAL
11	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
N	TokenNameIdentifier
=	TokenNameEQUAL
12	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LPAREN	TokenNameIdentifier
=	TokenNameEQUAL
13	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
RPAREN	TokenNameIdentifier
=	TokenNameEQUAL
14	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
COMMA	TokenNameIdentifier
=	TokenNameEQUAL
15	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
COLON	TokenNameIdentifier
=	TokenNameEQUAL
16	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
CARAT	TokenNameIdentifier
=	TokenNameEQUAL
17	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
TRUNCQUOTED	TokenNameIdentifier
=	TokenNameEQUAL
18	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
QUOTED	TokenNameIdentifier
=	TokenNameEQUAL
19	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
SUFFIXTERM	TokenNameIdentifier
=	TokenNameEQUAL
20	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
TRUNCTERM	TokenNameIdentifier
=	TokenNameEQUAL
21	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
TERM	TokenNameIdentifier
=	TokenNameEQUAL
22	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
23	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
Boost	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
DEFAULT	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
tokenImage	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"<EOF>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<_NUM_CHAR>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<_TERM_CHAR>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<_WHITESPACE>"	TokenNameStringLiteral
,	TokenNameCOMMA
""*""	TokenNameStringLiteral
,	TokenNameCOMMA
""?""	TokenNameStringLiteral
,	TokenNameCOMMA
"<_DISTOP_NUM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<token of kind 7>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<OR>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<AND>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<NOT>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<W>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<N>"	TokenNameStringLiteral
,	TokenNameCOMMA
""(""	TokenNameStringLiteral
,	TokenNameCOMMA
"")""	TokenNameStringLiteral
,	TokenNameCOMMA
"",""	TokenNameStringLiteral
,	TokenNameCOMMA
"":""	TokenNameStringLiteral
,	TokenNameCOMMA
""^""	TokenNameStringLiteral
,	TokenNameCOMMA
"<TRUNCQUOTED>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<QUOTED>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<SUFFIXTERM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<TRUNCTERM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<TERM>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<NUMBER>"	TokenNameStringLiteral
,	TokenNameCOMMA
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
