package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
store	TokenNameIdentifier
.	TokenNameDOT
Directory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
IOUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
class	TokenNameclass
FormatPostingsFieldsWriter	TokenNameIdentifier
extends	TokenNameextends
FormatPostingsFieldsConsumer	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
Directory	TokenNameIdentifier
dir	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
segment	TokenNameIdentifier
;	TokenNameSEMICOLON
TermInfosWriter	TokenNameIdentifier
termsOut	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
FieldInfos	TokenNameIdentifier
fieldInfos	TokenNameIdentifier
;	TokenNameSEMICOLON
FormatPostingsTermsWriter	TokenNameIdentifier
termsWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
DefaultSkipListWriter	TokenNameIdentifier
skipListWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
totalNumDocs	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
FormatPostingsFieldsWriter	TokenNameIdentifier
(	TokenNameLPAREN
SegmentWriteState	TokenNameIdentifier
state	TokenNameIdentifier
,	TokenNameCOMMA
FieldInfos	TokenNameIdentifier
fieldInfos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
dir	TokenNameIdentifier
=	TokenNameEQUAL
state	TokenNameIdentifier
.	TokenNameDOT
directory	TokenNameIdentifier
;	TokenNameSEMICOLON
segment	TokenNameIdentifier
=	TokenNameEQUAL
state	TokenNameIdentifier
.	TokenNameDOT
segmentName	TokenNameIdentifier
;	TokenNameSEMICOLON
totalNumDocs	TokenNameIdentifier
=	TokenNameEQUAL
state	TokenNameIdentifier
.	TokenNameDOT
numDocs	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
fieldInfos	TokenNameIdentifier
=	TokenNameEQUAL
fieldInfos	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
success	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
termsOut	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TermInfosWriter	TokenNameIdentifier
(	TokenNameLPAREN
dir	TokenNameIdentifier
,	TokenNameCOMMA
segment	TokenNameIdentifier
,	TokenNameCOMMA
fieldInfos	TokenNameIdentifier
,	TokenNameCOMMA
state	TokenNameIdentifier
.	TokenNameDOT
termIndexInterval	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
skipListWriter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultSkipListWriter	TokenNameIdentifier
(	TokenNameLPAREN
termsOut	TokenNameIdentifier
.	TokenNameDOT
skipInterval	TokenNameIdentifier
,	TokenNameCOMMA
termsOut	TokenNameIdentifier
.	TokenNameDOT
maxSkipLevels	TokenNameIdentifier
,	TokenNameCOMMA
totalNumDocs	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
termsWriter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FormatPostingsTermsWriter	TokenNameIdentifier
(	TokenNameLPAREN
state	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
success	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
success	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
IOUtils	TokenNameIdentifier
.	TokenNameDOT
closeWhileHandlingException	TokenNameIdentifier
(	TokenNameLPAREN
termsOut	TokenNameIdentifier
,	TokenNameCOMMA
termsWriter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
FormatPostingsTermsConsumer	TokenNameIdentifier
addField	TokenNameIdentifier
(	TokenNameLPAREN
FieldInfo	TokenNameIdentifier
field	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
termsWriter	TokenNameIdentifier
.	TokenNameDOT
setField	TokenNameIdentifier
(	TokenNameLPAREN
field	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
termsWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
void	TokenNamevoid
finish	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
IOUtils	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
termsOut	TokenNameIdentifier
,	TokenNameCOMMA
termsWriter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
