package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
tokenattributes	TokenNameIdentifier
.	TokenNameDOT
OffsetAttribute	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
document	TokenNameIdentifier
.	TokenNameDOT
Fieldable	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
store	TokenNameIdentifier
.	TokenNameDOT
IndexOutput	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
UnicodeUtil	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
RamUsageEstimator	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
class	TokenNameclass
TermVectorsTermsWriterPerField	TokenNameIdentifier
extends	TokenNameextends
TermsHashConsumerPerField	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
TermVectorsTermsWriterPerThread	TokenNameIdentifier
perThread	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
TermsHashPerField	TokenNameIdentifier
termsHashPerField	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
TermVectorsTermsWriter	TokenNameIdentifier
termsWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
FieldInfo	TokenNameIdentifier
fieldInfo	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
DocumentsWriter	TokenNameIdentifier
.	TokenNameDOT
DocState	TokenNameIdentifier
docState	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
FieldInvertState	TokenNameIdentifier
fieldState	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
doVectors	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
doVectorPositions	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
doVectorOffsets	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
maxNumPostings	TokenNameIdentifier
;	TokenNameSEMICOLON
OffsetAttribute	TokenNameIdentifier
offsetAttribute	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
public	TokenNamepublic
TermVectorsTermsWriterPerField	TokenNameIdentifier
(	TokenNameLPAREN
TermsHashPerField	TokenNameIdentifier
termsHashPerField	TokenNameIdentifier
,	TokenNameCOMMA
TermVectorsTermsWriterPerThread	TokenNameIdentifier
perThread	TokenNameIdentifier
,	TokenNameCOMMA
FieldInfo	TokenNameIdentifier
fieldInfo	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
termsHashPerField	TokenNameIdentifier
=	TokenNameEQUAL
termsHashPerField	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
perThread	TokenNameIdentifier
=	TokenNameEQUAL
perThread	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
termsWriter	TokenNameIdentifier
=	TokenNameEQUAL
perThread	TokenNameIdentifier
.	TokenNameDOT
termsWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
fieldInfo	TokenNameIdentifier
=	TokenNameEQUAL
fieldInfo	TokenNameIdentifier
;	TokenNameSEMICOLON
docState	TokenNameIdentifier
=	TokenNameEQUAL
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
docState	TokenNameIdentifier
;	TokenNameSEMICOLON
fieldState	TokenNameIdentifier
=	TokenNameEQUAL
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
fieldState	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
int	TokenNameint
getStreamCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
boolean	TokenNameboolean
start	TokenNameIdentifier
(	TokenNameLPAREN
Fieldable	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
fields	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
count	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
doVectors	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
doVectorPositions	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
doVectorOffsets	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
count	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
Fieldable	TokenNameIdentifier
field	TokenNameIdentifier
=	TokenNameEQUAL
fields	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
field	TokenNameIdentifier
.	TokenNameDOT
isIndexed	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
field	TokenNameIdentifier
.	TokenNameDOT
isTermVectorStored	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
doVectors	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
doVectorPositions	TokenNameIdentifier
|=	TokenNameOR_EQUAL
field	TokenNameIdentifier
.	TokenNameDOT
isStorePositionWithTermVector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
doVectorOffsets	TokenNameIdentifier
|=	TokenNameOR_EQUAL
field	TokenNameIdentifier
.	TokenNameDOT
isStoreOffsetWithTermVector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
doVectors	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
perThread	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
perThread	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
=	TokenNameEQUAL
termsWriter	TokenNameIdentifier
.	TokenNameDOT
getPerDoc	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perThread	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
.	TokenNameDOT
docID	TokenNameIdentifier
=	TokenNameEQUAL
docState	TokenNameIdentifier
.	TokenNameDOT
docID	TokenNameIdentifier
;	TokenNameSEMICOLON
assert	TokenNameassert
perThread	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
.	TokenNameDOT
numVectorFields	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
assert	TokenNameassert
0	TokenNameIntegerLiteral
==	TokenNameEQUAL_EQUAL
perThread	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
.	TokenNameDOT
perDocTvf	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
0	TokenNameIntegerLiteral
==	TokenNameEQUAL_EQUAL
perThread	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
.	TokenNameDOT
perDocTvf	TokenNameIdentifier
.	TokenNameDOT
getFilePointer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
assert	TokenNameassert
perThread	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
.	TokenNameDOT
docID	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
docState	TokenNameIdentifier
.	TokenNameDOT
docID	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
numPostings	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
reset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perThread	TokenNameIdentifier
.	TokenNameDOT
termsHashPerThread	TokenNameIdentifier
.	TokenNameDOT
reset	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
doVectors	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
abort	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
void	TokenNamevoid
finish	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
assert	TokenNameassert
docState	TokenNameIdentifier
.	TokenNameDOT
testPoint	TokenNameIdentifier
(	TokenNameLPAREN
"TermVectorsTermsWriterPerField.finish start"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
numPostings	TokenNameIdentifier
=	TokenNameEQUAL
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
numPostings	TokenNameIdentifier
;	TokenNameSEMICOLON
assert	TokenNameassert
numPostings	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
doVectors	TokenNameIdentifier
||	TokenNameOR_OR
numPostings	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
numPostings	TokenNameIdentifier
>	TokenNameGREATER
maxNumPostings	TokenNameIdentifier
)	TokenNameRPAREN
maxNumPostings	TokenNameIdentifier
=	TokenNameEQUAL
numPostings	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
IndexOutput	TokenNameIdentifier
tvf	TokenNameIdentifier
=	TokenNameEQUAL
perThread	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
.	TokenNameDOT
perDocTvf	TokenNameIdentifier
;	TokenNameSEMICOLON
assert	TokenNameassert
fieldInfo	TokenNameIdentifier
.	TokenNameDOT
storeTermVector	TokenNameIdentifier
;	TokenNameSEMICOLON
assert	TokenNameassert
perThread	TokenNameIdentifier
.	TokenNameDOT
vectorFieldsInOrder	TokenNameIdentifier
(	TokenNameLPAREN
fieldInfo	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perThread	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
.	TokenNameDOT
addField	TokenNameIdentifier
(	TokenNameLPAREN
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
fieldInfo	TokenNameIdentifier
.	TokenNameDOT
number	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TermVectorsPostingsArray	TokenNameIdentifier
postings	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TermVectorsPostingsArray	TokenNameIdentifier
)	TokenNameRPAREN
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
postingsArray	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
termIDs	TokenNameIdentifier
=	TokenNameEQUAL
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
sortPostings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tvf	TokenNameIdentifier
.	TokenNameDOT
writeVInt	TokenNameIdentifier
(	TokenNameLPAREN
numPostings	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
byte	TokenNamebyte
bits	TokenNameIdentifier
=	TokenNameEQUAL
0x0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
doVectorPositions	TokenNameIdentifier
)	TokenNameRPAREN
bits	TokenNameIdentifier
|=	TokenNameOR_EQUAL
TermVectorsReader	TokenNameIdentifier
.	TokenNameDOT
STORE_POSITIONS_WITH_TERMVECTOR	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
doVectorOffsets	TokenNameIdentifier
)	TokenNameRPAREN
bits	TokenNameIdentifier
|=	TokenNameOR_EQUAL
TermVectorsReader	TokenNameIdentifier
.	TokenNameDOT
STORE_OFFSET_WITH_TERMVECTOR	TokenNameIdentifier
;	TokenNameSEMICOLON
tvf	TokenNameIdentifier
.	TokenNameDOT
writeByte	TokenNameIdentifier
(	TokenNameLPAREN
bits	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
encoderUpto	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
lastTermBytesCount	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
ByteSliceReader	TokenNameIdentifier
reader	TokenNameIdentifier
=	TokenNameEQUAL
perThread	TokenNameIdentifier
.	TokenNameDOT
vectorSliceReader	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
charBuffers	TokenNameIdentifier
=	TokenNameEQUAL
perThread	TokenNameIdentifier
.	TokenNameDOT
termsHashPerThread	TokenNameIdentifier
.	TokenNameDOT
charPool	TokenNameIdentifier
.	TokenNameDOT
buffers	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
j	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
j	TokenNameIdentifier
<	TokenNameLESS
numPostings	TokenNameIdentifier
;	TokenNameSEMICOLON
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
termID	TokenNameIdentifier
=	TokenNameEQUAL
termIDs	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
freq	TokenNameIdentifier
=	TokenNameEQUAL
postings	TokenNameIdentifier
.	TokenNameDOT
freqs	TokenNameIdentifier
[	TokenNameLBRACKET
termID	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
text2	TokenNameIdentifier
=	TokenNameEQUAL
charBuffers	TokenNameIdentifier
[	TokenNameLBRACKET
postings	TokenNameIdentifier
.	TokenNameDOT
textStarts	TokenNameIdentifier
[	TokenNameLBRACKET
termID	TokenNameIdentifier
]	TokenNameRBRACKET
>>	TokenNameRIGHT_SHIFT
DocumentsWriter	TokenNameIdentifier
.	TokenNameDOT
CHAR_BLOCK_SHIFT	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
start2	TokenNameIdentifier
=	TokenNameEQUAL
postings	TokenNameIdentifier
.	TokenNameDOT
textStarts	TokenNameIdentifier
[	TokenNameLBRACKET
termID	TokenNameIdentifier
]	TokenNameRBRACKET
&	TokenNameAND
DocumentsWriter	TokenNameIdentifier
.	TokenNameDOT
CHAR_BLOCK_MASK	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
UnicodeUtil	TokenNameIdentifier
.	TokenNameDOT
UTF8Result	TokenNameIdentifier
utf8Result	TokenNameIdentifier
=	TokenNameEQUAL
perThread	TokenNameIdentifier
.	TokenNameDOT
utf8Results	TokenNameIdentifier
[	TokenNameLBRACKET
encoderUpto	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
UnicodeUtil	TokenNameIdentifier
.	TokenNameDOT
UTF16toUTF8	TokenNameIdentifier
(	TokenNameLPAREN
text2	TokenNameIdentifier
,	TokenNameCOMMA
start2	TokenNameIdentifier
,	TokenNameCOMMA
utf8Result	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
termBytesCount	TokenNameIdentifier
=	TokenNameEQUAL
utf8Result	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
prefix	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
j	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
byte	TokenNamebyte
[	TokenNameLBRACKET
]	TokenNameRBRACKET
lastTermBytes	TokenNameIdentifier
=	TokenNameEQUAL
perThread	TokenNameIdentifier
.	TokenNameDOT
utf8Results	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
-	TokenNameMINUS
encoderUpto	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
result	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
byte	TokenNamebyte
[	TokenNameLBRACKET
]	TokenNameRBRACKET
termBytes	TokenNameIdentifier
=	TokenNameEQUAL
perThread	TokenNameIdentifier
.	TokenNameDOT
utf8Results	TokenNameIdentifier
[	TokenNameLBRACKET
encoderUpto	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
result	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
prefix	TokenNameIdentifier
<	TokenNameLESS
lastTermBytesCount	TokenNameIdentifier
&&	TokenNameAND_AND
prefix	TokenNameIdentifier
<	TokenNameLESS
termBytesCount	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
lastTermBytes	TokenNameIdentifier
[	TokenNameLBRACKET
prefix	TokenNameIdentifier
]	TokenNameRBRACKET
!=	TokenNameNOT_EQUAL
termBytes	TokenNameIdentifier
[	TokenNameLBRACKET
prefix	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
prefix	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
encoderUpto	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
-	TokenNameMINUS
encoderUpto	TokenNameIdentifier
;	TokenNameSEMICOLON
lastTermBytesCount	TokenNameIdentifier
=	TokenNameEQUAL
termBytesCount	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
suffix	TokenNameIdentifier
=	TokenNameEQUAL
termBytesCount	TokenNameIdentifier
-	TokenNameMINUS
prefix	TokenNameIdentifier
;	TokenNameSEMICOLON
tvf	TokenNameIdentifier
.	TokenNameDOT
writeVInt	TokenNameIdentifier
(	TokenNameLPAREN
prefix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tvf	TokenNameIdentifier
.	TokenNameDOT
writeVInt	TokenNameIdentifier
(	TokenNameLPAREN
suffix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tvf	TokenNameIdentifier
.	TokenNameDOT
writeBytes	TokenNameIdentifier
(	TokenNameLPAREN
utf8Result	TokenNameIdentifier
.	TokenNameDOT
result	TokenNameIdentifier
,	TokenNameCOMMA
prefix	TokenNameIdentifier
,	TokenNameCOMMA
suffix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tvf	TokenNameIdentifier
.	TokenNameDOT
writeVInt	TokenNameIdentifier
(	TokenNameLPAREN
freq	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
doVectorPositions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
initReader	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
,	TokenNameCOMMA
termID	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reader	TokenNameIdentifier
.	TokenNameDOT
writeTo	TokenNameIdentifier
(	TokenNameLPAREN
tvf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
doVectorOffsets	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
initReader	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
,	TokenNameCOMMA
termID	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reader	TokenNameIdentifier
.	TokenNameDOT
writeTo	TokenNameIdentifier
(	TokenNameLPAREN
tvf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
reset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perThread	TokenNameIdentifier
.	TokenNameDOT
termsHashPerThread	TokenNameIdentifier
.	TokenNameDOT
reset	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
void	TokenNamevoid
shrinkHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
shrinkHash	TokenNameIdentifier
(	TokenNameLPAREN
maxNumPostings	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
maxNumPostings	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
void	TokenNamevoid
start	TokenNameIdentifier
(	TokenNameLPAREN
Fieldable	TokenNameIdentifier
f	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
doVectorOffsets	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
offsetAttribute	TokenNameIdentifier
=	TokenNameEQUAL
fieldState	TokenNameIdentifier
.	TokenNameDOT
attributeSource	TokenNameIdentifier
.	TokenNameDOT
addAttribute	TokenNameIdentifier
(	TokenNameLPAREN
OffsetAttribute	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
offsetAttribute	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
void	TokenNamevoid
newTerm	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
termID	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
docState	TokenNameIdentifier
.	TokenNameDOT
testPoint	TokenNameIdentifier
(	TokenNameLPAREN
"TermVectorsTermsWriterPerField.newTerm start"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TermVectorsPostingsArray	TokenNameIdentifier
postings	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TermVectorsPostingsArray	TokenNameIdentifier
)	TokenNameRPAREN
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
postingsArray	TokenNameIdentifier
;	TokenNameSEMICOLON
postings	TokenNameIdentifier
.	TokenNameDOT
freqs	TokenNameIdentifier
[	TokenNameLBRACKET
termID	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
doVectorOffsets	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
fieldState	TokenNameIdentifier
.	TokenNameDOT
offset	TokenNameIdentifier
+	TokenNamePLUS
offsetAttribute	TokenNameIdentifier
.	TokenNameDOT
startOffset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
fieldState	TokenNameIdentifier
.	TokenNameDOT
offset	TokenNameIdentifier
+	TokenNamePLUS
offsetAttribute	TokenNameIdentifier
.	TokenNameDOT
endOffset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
writeVInt	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
startOffset	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
writeVInt	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
endOffset	TokenNameIdentifier
-	TokenNameMINUS
startOffset	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
postings	TokenNameIdentifier
.	TokenNameDOT
lastOffsets	TokenNameIdentifier
[	TokenNameLBRACKET
termID	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
endOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
doVectorPositions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
writeVInt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fieldState	TokenNameIdentifier
.	TokenNameDOT
position	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
postings	TokenNameIdentifier
.	TokenNameDOT
lastPositions	TokenNameIdentifier
[	TokenNameLBRACKET
termID	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
fieldState	TokenNameIdentifier
.	TokenNameDOT
position	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
void	TokenNamevoid
addTerm	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
termID	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
docState	TokenNameIdentifier
.	TokenNameDOT
testPoint	TokenNameIdentifier
(	TokenNameLPAREN
"TermVectorsTermsWriterPerField.addTerm start"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TermVectorsPostingsArray	TokenNameIdentifier
postings	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TermVectorsPostingsArray	TokenNameIdentifier
)	TokenNameRPAREN
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
postingsArray	TokenNameIdentifier
;	TokenNameSEMICOLON
postings	TokenNameIdentifier
.	TokenNameDOT
freqs	TokenNameIdentifier
[	TokenNameLBRACKET
termID	TokenNameIdentifier
]	TokenNameRBRACKET
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
doVectorOffsets	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
fieldState	TokenNameIdentifier
.	TokenNameDOT
offset	TokenNameIdentifier
+	TokenNamePLUS
offsetAttribute	TokenNameIdentifier
.	TokenNameDOT
startOffset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
fieldState	TokenNameIdentifier
.	TokenNameDOT
offset	TokenNameIdentifier
+	TokenNamePLUS
offsetAttribute	TokenNameIdentifier
.	TokenNameDOT
endOffset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
writeVInt	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
startOffset	TokenNameIdentifier
-	TokenNameMINUS
postings	TokenNameIdentifier
.	TokenNameDOT
lastOffsets	TokenNameIdentifier
[	TokenNameLBRACKET
termID	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
writeVInt	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
endOffset	TokenNameIdentifier
-	TokenNameMINUS
startOffset	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
postings	TokenNameIdentifier
.	TokenNameDOT
lastOffsets	TokenNameIdentifier
[	TokenNameLBRACKET
termID	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
endOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
doVectorPositions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
termsHashPerField	TokenNameIdentifier
.	TokenNameDOT
writeVInt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fieldState	TokenNameIdentifier
.	TokenNameDOT
position	TokenNameIdentifier
-	TokenNameMINUS
postings	TokenNameIdentifier
.	TokenNameDOT
lastPositions	TokenNameIdentifier
[	TokenNameLBRACKET
termID	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
postings	TokenNameIdentifier
.	TokenNameDOT
lastPositions	TokenNameIdentifier
[	TokenNameLBRACKET
termID	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
fieldState	TokenNameIdentifier
.	TokenNameDOT
position	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
void	TokenNamevoid
skippingLongTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
ParallelPostingsArray	TokenNameIdentifier
createPostingsArray	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
size	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
TermVectorsPostingsArray	TokenNameIdentifier
(	TokenNameLPAREN
size	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
final	TokenNamefinal
class	TokenNameclass
TermVectorsPostingsArray	TokenNameIdentifier
extends	TokenNameextends
ParallelPostingsArray	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
TermVectorsPostingsArray	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
size	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
size	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
freqs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
size	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
lastOffsets	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
size	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
lastPositions	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
size	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
freqs	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
lastOffsets	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
lastPositions	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Override	TokenNameIdentifier
ParallelPostingsArray	TokenNameIdentifier
newInstance	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
size	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
TermVectorsPostingsArray	TokenNameIdentifier
(	TokenNameLPAREN
size	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
void	TokenNamevoid
copyTo	TokenNameIdentifier
(	TokenNameLPAREN
ParallelPostingsArray	TokenNameIdentifier
toArray	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
numToCopy	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
toArray	TokenNameIdentifier
instanceof	TokenNameinstanceof
TermVectorsPostingsArray	TokenNameIdentifier
;	TokenNameSEMICOLON
TermVectorsPostingsArray	TokenNameIdentifier
to	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TermVectorsPostingsArray	TokenNameIdentifier
)	TokenNameRPAREN
toArray	TokenNameIdentifier
;	TokenNameSEMICOLON
super	TokenNamesuper
.	TokenNameDOT
copyTo	TokenNameIdentifier
(	TokenNameLPAREN
toArray	TokenNameIdentifier
,	TokenNameCOMMA
numToCopy	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
freqs	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
to	TokenNameIdentifier
.	TokenNameDOT
freqs	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
size	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
lastOffsets	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
to	TokenNameIdentifier
.	TokenNameDOT
lastOffsets	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
size	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
lastPositions	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
to	TokenNameIdentifier
.	TokenNameDOT
lastPositions	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
size	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
int	TokenNameint
bytesPerPosting	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
super	TokenNamesuper
.	TokenNameDOT
bytesPerPosting	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
3	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
RamUsageEstimator	TokenNameIdentifier
.	TokenNameDOT
NUM_BYTES_INT	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
