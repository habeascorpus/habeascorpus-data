package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
tokenattributes	TokenNameIdentifier
.	TokenNameDOT
TermAttributeImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
tokenattributes	TokenNameIdentifier
.	TokenNameDOT
OffsetAttribute	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
tokenattributes	TokenNameIdentifier
.	TokenNameDOT
FlagsAttribute	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
tokenattributes	TokenNameIdentifier
.	TokenNameDOT
PayloadAttribute	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
tokenattributes	TokenNameIdentifier
.	TokenNameDOT
PositionIncrementAttribute	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
tokenattributes	TokenNameIdentifier
.	TokenNameDOT
PositionLengthAttribute	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
analysis	TokenNameIdentifier
.	TokenNameDOT
tokenattributes	TokenNameIdentifier
.	TokenNameDOT
TypeAttribute	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
Payload	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
TermPositions	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Attribute	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
AttributeSource	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
AttributeImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
AttributeReflector	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
Token	TokenNameIdentifier
extends	TokenNameextends
TermAttributeImpl	TokenNameIdentifier
implements	TokenNameimplements
TypeAttribute	TokenNameIdentifier
,	TokenNameCOMMA
PositionIncrementAttribute	TokenNameIdentifier
,	TokenNameCOMMA
FlagsAttribute	TokenNameIdentifier
,	TokenNameCOMMA
OffsetAttribute	TokenNameIdentifier
,	TokenNameCOMMA
PayloadAttribute	TokenNameIdentifier
,	TokenNameCOMMA
PositionLengthAttribute	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
int	TokenNameint
startOffset	TokenNameIdentifier
,	TokenNameCOMMA
endOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
type	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
flags	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
Payload	TokenNameIdentifier
payload	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
positionIncrement	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
positionLength	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
Token	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
Token	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
start	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Token	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
start	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
end	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
typ	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
typ	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Token	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
start	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
end	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
flags	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
flags	TokenNameIdentifier
=	TokenNameEQUAL
flags	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Token	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
text	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
start	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
append	TokenNameIdentifier
(	TokenNameLPAREN
text	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Token	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
text	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
start	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
end	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
typ	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
append	TokenNameIdentifier
(	TokenNameLPAREN
text	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
typ	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Token	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
text	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
start	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
end	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
flags	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
append	TokenNameIdentifier
(	TokenNameLPAREN
text	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
flags	TokenNameIdentifier
=	TokenNameEQUAL
flags	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Token	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
startTermBuffer	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
termBufferOffset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
termBufferLength	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
start	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
copyBuffer	TokenNameIdentifier
(	TokenNameLPAREN
startTermBuffer	TokenNameIdentifier
,	TokenNameCOMMA
termBufferOffset	TokenNameIdentifier
,	TokenNameCOMMA
termBufferLength	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setPositionIncrement	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
positionIncrement	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
positionIncrement	TokenNameIdentifier
<	TokenNameLESS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
"Increment must be zero or greater: "	TokenNameStringLiteral
+	TokenNamePLUS
positionIncrement	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
positionIncrement	TokenNameIdentifier
=	TokenNameEQUAL
positionIncrement	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getPositionIncrement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
positionIncrement	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setPositionLength	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
positionLength	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
positionLength	TokenNameIdentifier
=	TokenNameEQUAL
positionLength	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getPositionLength	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
positionLength	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
int	TokenNameint
startOffset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
startOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setStartOffset	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
offset	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
offset	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
int	TokenNameint
endOffset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
endOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setEndOffset	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
offset	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
offset	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setOffset	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
startOffset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
endOffset	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
startOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
endOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
String	TokenNameIdentifier
type	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
type	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
setType	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
type	TokenNameIdentifier
=	TokenNameEQUAL
type	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getFlags	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
flags	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setFlags	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
flags	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
flags	TokenNameIdentifier
=	TokenNameEQUAL
flags	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Payload	TokenNameIdentifier
getPayload	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
this	TokenNamethis
.	TokenNameDOT
payload	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setPayload	TokenNameIdentifier
(	TokenNameLPAREN
Payload	TokenNameIdentifier
payload	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
payload	TokenNameIdentifier
=	TokenNameEQUAL
payload	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
.	TokenNameDOT
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
payload	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
positionIncrement	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
flags	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
Object	TokenNameIdentifier
clone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Token	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
super	TokenNamesuper
.	TokenNameDOT
clone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
payload	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
t	TokenNameIdentifier
.	TokenNameDOT
payload	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Payload	TokenNameIdentifier
)	TokenNameRPAREN
payload	TokenNameIdentifier
.	TokenNameDOT
clone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
t	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Token	TokenNameIdentifier
clone	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTermBuffer	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newTermOffset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newTermLength	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newStartOffset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newEndOffset	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
Token	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Token	TokenNameIdentifier
(	TokenNameLPAREN
newTermBuffer	TokenNameIdentifier
,	TokenNameCOMMA
newTermOffset	TokenNameIdentifier
,	TokenNameCOMMA
newTermLength	TokenNameIdentifier
,	TokenNameCOMMA
newStartOffset	TokenNameIdentifier
,	TokenNameCOMMA
newEndOffset	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
.	TokenNameDOT
positionIncrement	TokenNameIdentifier
=	TokenNameEQUAL
positionIncrement	TokenNameIdentifier
;	TokenNameSEMICOLON
t	TokenNameIdentifier
.	TokenNameDOT
flags	TokenNameIdentifier
=	TokenNameEQUAL
flags	TokenNameIdentifier
;	TokenNameSEMICOLON
t	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
=	TokenNameEQUAL
type	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
payload	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
t	TokenNameIdentifier
.	TokenNameDOT
payload	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Payload	TokenNameIdentifier
)	TokenNameRPAREN
payload	TokenNameIdentifier
.	TokenNameDOT
clone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
t	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
boolean	TokenNameboolean
equals	TokenNameIdentifier
(	TokenNameLPAREN
Object	TokenNameIdentifier
obj	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
obj	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
this	TokenNamethis
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
obj	TokenNameIdentifier
instanceof	TokenNameinstanceof
Token	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
Token	TokenNameIdentifier
other	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
obj	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
(	TokenNameLPAREN
startOffset	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
other	TokenNameIdentifier
.	TokenNameDOT
startOffset	TokenNameIdentifier
&&	TokenNameAND_AND
endOffset	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
other	TokenNameIdentifier
.	TokenNameDOT
endOffset	TokenNameIdentifier
&&	TokenNameAND_AND
flags	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
other	TokenNameIdentifier
.	TokenNameDOT
flags	TokenNameIdentifier
&&	TokenNameAND_AND
positionIncrement	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
other	TokenNameIdentifier
.	TokenNameDOT
positionIncrement	TokenNameIdentifier
&&	TokenNameAND_AND
(	TokenNameLPAREN
type	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
other	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
:	TokenNameCOLON
type	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
other	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
payload	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
other	TokenNameIdentifier
.	TokenNameDOT
payload	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
:	TokenNameCOLON
payload	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
other	TokenNameIdentifier
.	TokenNameDOT
payload	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
super	TokenNamesuper
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
obj	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
int	TokenNameint
hashCode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
code	TokenNameIdentifier
=	TokenNameEQUAL
super	TokenNamesuper
.	TokenNameDOT
hashCode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
code	TokenNameIdentifier
=	TokenNameEQUAL
code	TokenNameIdentifier
*	TokenNameMULTIPLY
31	TokenNameIntegerLiteral
+	TokenNamePLUS
startOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
code	TokenNameIdentifier
=	TokenNameEQUAL
code	TokenNameIdentifier
*	TokenNameMULTIPLY
31	TokenNameIntegerLiteral
+	TokenNamePLUS
endOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
code	TokenNameIdentifier
=	TokenNameEQUAL
code	TokenNameIdentifier
*	TokenNameMULTIPLY
31	TokenNameIntegerLiteral
+	TokenNamePLUS
flags	TokenNameIdentifier
;	TokenNameSEMICOLON
code	TokenNameIdentifier
=	TokenNameEQUAL
code	TokenNameIdentifier
*	TokenNameMULTIPLY
31	TokenNameIntegerLiteral
+	TokenNamePLUS
positionIncrement	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
type	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
code	TokenNameIdentifier
=	TokenNameEQUAL
code	TokenNameIdentifier
*	TokenNameMULTIPLY
31	TokenNameIntegerLiteral
+	TokenNamePLUS
type	TokenNameIdentifier
.	TokenNameDOT
hashCode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
payload	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
code	TokenNameIdentifier
=	TokenNameEQUAL
code	TokenNameIdentifier
*	TokenNameMULTIPLY
31	TokenNameIntegerLiteral
+	TokenNamePLUS
payload	TokenNameIdentifier
.	TokenNameDOT
hashCode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
code	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
clearNoTermBuffer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
payload	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
positionIncrement	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
flags	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Token	TokenNameIdentifier
reinit	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTermBuffer	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newTermOffset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newTermLength	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newStartOffset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newEndOffset	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
newType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
clearNoTermBuffer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
copyBuffer	TokenNameIdentifier
(	TokenNameLPAREN
newTermBuffer	TokenNameIdentifier
,	TokenNameCOMMA
newTermOffset	TokenNameIdentifier
,	TokenNameCOMMA
newTermLength	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
payload	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
positionIncrement	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
newStartOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
newEndOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
newType	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Token	TokenNameIdentifier
reinit	TokenNameIdentifier
(	TokenNameLPAREN
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTermBuffer	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newTermOffset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newTermLength	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newStartOffset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newEndOffset	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
clearNoTermBuffer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
copyBuffer	TokenNameIdentifier
(	TokenNameLPAREN
newTermBuffer	TokenNameIdentifier
,	TokenNameCOMMA
newTermOffset	TokenNameIdentifier
,	TokenNameCOMMA
newTermLength	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
newStartOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
newEndOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Token	TokenNameIdentifier
reinit	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
newTerm	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newStartOffset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newEndOffset	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
newType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
append	TokenNameIdentifier
(	TokenNameLPAREN
newTerm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
newStartOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
newEndOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
newType	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Token	TokenNameIdentifier
reinit	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
newTerm	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newTermOffset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newTermLength	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newStartOffset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newEndOffset	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
newType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
append	TokenNameIdentifier
(	TokenNameLPAREN
newTerm	TokenNameIdentifier
,	TokenNameCOMMA
newTermOffset	TokenNameIdentifier
,	TokenNameCOMMA
newTermOffset	TokenNameIdentifier
+	TokenNamePLUS
newTermLength	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
newStartOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
newEndOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
newType	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Token	TokenNameIdentifier
reinit	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
newTerm	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newStartOffset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newEndOffset	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
append	TokenNameIdentifier
(	TokenNameLPAREN
newTerm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
newStartOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
newEndOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Token	TokenNameIdentifier
reinit	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
newTerm	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newTermOffset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newTermLength	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newStartOffset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newEndOffset	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
append	TokenNameIdentifier
(	TokenNameLPAREN
newTerm	TokenNameIdentifier
,	TokenNameCOMMA
newTermOffset	TokenNameIdentifier
,	TokenNameCOMMA
newTermOffset	TokenNameIdentifier
+	TokenNamePLUS
newTermLength	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
newStartOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
newEndOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
reinit	TokenNameIdentifier
(	TokenNameLPAREN
Token	TokenNameIdentifier
prototype	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
copyBuffer	TokenNameIdentifier
(	TokenNameLPAREN
prototype	TokenNameIdentifier
.	TokenNameDOT
buffer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
prototype	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
positionIncrement	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
positionIncrement	TokenNameIdentifier
;	TokenNameSEMICOLON
flags	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
flags	TokenNameIdentifier
;	TokenNameSEMICOLON
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
startOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
endOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
;	TokenNameSEMICOLON
payload	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
payload	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
reinit	TokenNameIdentifier
(	TokenNameLPAREN
Token	TokenNameIdentifier
prototype	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
newTerm	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
setEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
newTerm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
positionIncrement	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
positionIncrement	TokenNameIdentifier
;	TokenNameSEMICOLON
flags	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
flags	TokenNameIdentifier
;	TokenNameSEMICOLON
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
startOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
endOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
;	TokenNameSEMICOLON
payload	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
payload	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
reinit	TokenNameIdentifier
(	TokenNameLPAREN
Token	TokenNameIdentifier
prototype	TokenNameIdentifier
,	TokenNameCOMMA
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTermBuffer	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
offset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
copyBuffer	TokenNameIdentifier
(	TokenNameLPAREN
newTermBuffer	TokenNameIdentifier
,	TokenNameCOMMA
offset	TokenNameIdentifier
,	TokenNameCOMMA
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
positionIncrement	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
positionIncrement	TokenNameIdentifier
;	TokenNameSEMICOLON
flags	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
flags	TokenNameIdentifier
;	TokenNameSEMICOLON
startOffset	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
startOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
endOffset	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
endOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
;	TokenNameSEMICOLON
payload	TokenNameIdentifier
=	TokenNameEQUAL
prototype	TokenNameIdentifier
.	TokenNameDOT
payload	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
copyTo	TokenNameIdentifier
(	TokenNameLPAREN
AttributeImpl	TokenNameIdentifier
target	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
target	TokenNameIdentifier
instanceof	TokenNameinstanceof
Token	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
Token	TokenNameIdentifier
to	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
target	TokenNameIdentifier
;	TokenNameSEMICOLON
to	TokenNameIdentifier
.	TokenNameDOT
reinit	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
payload	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
to	TokenNameIdentifier
.	TokenNameDOT
payload	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Payload	TokenNameIdentifier
)	TokenNameRPAREN
payload	TokenNameIdentifier
.	TokenNameDOT
clone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
super	TokenNamesuper
.	TokenNameDOT
copyTo	TokenNameIdentifier
(	TokenNameLPAREN
target	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
(	TokenNameLPAREN
(	TokenNameLPAREN
OffsetAttribute	TokenNameIdentifier
)	TokenNameRPAREN
target	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setOffset	TokenNameIdentifier
(	TokenNameLPAREN
startOffset	TokenNameIdentifier
,	TokenNameCOMMA
endOffset	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
(	TokenNameLPAREN
(	TokenNameLPAREN
PositionIncrementAttribute	TokenNameIdentifier
)	TokenNameRPAREN
target	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setPositionIncrement	TokenNameIdentifier
(	TokenNameLPAREN
positionIncrement	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
(	TokenNameLPAREN
(	TokenNameLPAREN
PayloadAttribute	TokenNameIdentifier
)	TokenNameRPAREN
target	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setPayload	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
payload	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
null	TokenNamenull
:	TokenNameCOLON
(	TokenNameLPAREN
Payload	TokenNameIdentifier
)	TokenNameRPAREN
payload	TokenNameIdentifier
.	TokenNameDOT
clone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
(	TokenNameLPAREN
(	TokenNameLPAREN
FlagsAttribute	TokenNameIdentifier
)	TokenNameRPAREN
target	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setFlags	TokenNameIdentifier
(	TokenNameLPAREN
flags	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
(	TokenNameLPAREN
(	TokenNameLPAREN
TypeAttribute	TokenNameIdentifier
)	TokenNameRPAREN
target	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setType	TokenNameIdentifier
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
reflectWith	TokenNameIdentifier
(	TokenNameLPAREN
AttributeReflector	TokenNameIdentifier
reflector	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
.	TokenNameDOT
reflectWith	TokenNameIdentifier
(	TokenNameLPAREN
reflector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reflector	TokenNameIdentifier
.	TokenNameDOT
reflect	TokenNameIdentifier
(	TokenNameLPAREN
OffsetAttribute	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
"startOffset"	TokenNameStringLiteral
,	TokenNameCOMMA
startOffset	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reflector	TokenNameIdentifier
.	TokenNameDOT
reflect	TokenNameIdentifier
(	TokenNameLPAREN
OffsetAttribute	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
"endOffset"	TokenNameStringLiteral
,	TokenNameCOMMA
endOffset	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reflector	TokenNameIdentifier
.	TokenNameDOT
reflect	TokenNameIdentifier
(	TokenNameLPAREN
PositionIncrementAttribute	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
"positionIncrement"	TokenNameStringLiteral
,	TokenNameCOMMA
positionIncrement	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reflector	TokenNameIdentifier
.	TokenNameDOT
reflect	TokenNameIdentifier
(	TokenNameLPAREN
PayloadAttribute	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
"payload"	TokenNameStringLiteral
,	TokenNameCOMMA
payload	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reflector	TokenNameIdentifier
.	TokenNameDOT
reflect	TokenNameIdentifier
(	TokenNameLPAREN
FlagsAttribute	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
"flags"	TokenNameStringLiteral
,	TokenNameCOMMA
flags	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reflector	TokenNameIdentifier
.	TokenNameDOT
reflect	TokenNameIdentifier
(	TokenNameLPAREN
TypeAttribute	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
"type"	TokenNameStringLiteral
,	TokenNameCOMMA
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
AttributeSource	TokenNameIdentifier
.	TokenNameDOT
AttributeFactory	TokenNameIdentifier
TOKEN_ATTRIBUTE_FACTORY	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TokenAttributeFactory	TokenNameIdentifier
(	TokenNameLPAREN
AttributeSource	TokenNameIdentifier
.	TokenNameDOT
AttributeFactory	TokenNameIdentifier
.	TokenNameDOT
DEFAULT_ATTRIBUTE_FACTORY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
class	TokenNameclass
TokenAttributeFactory	TokenNameIdentifier
extends	TokenNameextends
AttributeSource	TokenNameIdentifier
.	TokenNameDOT
AttributeFactory	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
final	TokenNamefinal
AttributeSource	TokenNameIdentifier
.	TokenNameDOT
AttributeFactory	TokenNameIdentifier
delegate	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
TokenAttributeFactory	TokenNameIdentifier
(	TokenNameLPAREN
AttributeSource	TokenNameIdentifier
.	TokenNameDOT
AttributeFactory	TokenNameIdentifier
delegate	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
delegate	TokenNameIdentifier
=	TokenNameEQUAL
delegate	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
AttributeImpl	TokenNameIdentifier
createAttributeInstance	TokenNameIdentifier
(	TokenNameLPAREN
Class	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
extends	TokenNameextends
Attribute	TokenNameIdentifier
>	TokenNameGREATER
attClass	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
attClass	TokenNameIdentifier
.	TokenNameDOT
isAssignableFrom	TokenNameIdentifier
(	TokenNameLPAREN
Token	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
?	TokenNameQUESTION
new	TokenNamenew
Token	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
delegate	TokenNameIdentifier
.	TokenNameDOT
createAttributeInstance	TokenNameIdentifier
(	TokenNameLPAREN
attClass	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
boolean	TokenNameboolean
equals	TokenNameIdentifier
(	TokenNameLPAREN
Object	TokenNameIdentifier
other	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
this	TokenNamethis
==	TokenNameEQUAL_EQUAL
other	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
other	TokenNameIdentifier
instanceof	TokenNameinstanceof
TokenAttributeFactory	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
TokenAttributeFactory	TokenNameIdentifier
af	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TokenAttributeFactory	TokenNameIdentifier
)	TokenNameRPAREN
other	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
.	TokenNameDOT
delegate	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
af	TokenNameIdentifier
.	TokenNameDOT
delegate	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
int	TokenNameint
hashCode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
delegate	TokenNameIdentifier
.	TokenNameDOT
hashCode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
^	TokenNameXOR
0x0a45aa31	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
