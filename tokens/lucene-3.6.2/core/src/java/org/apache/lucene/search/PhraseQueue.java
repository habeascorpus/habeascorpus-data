package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
PriorityQueue	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
class	TokenNameclass
PhraseQueue	TokenNameIdentifier
extends	TokenNameextends
PriorityQueue	TokenNameIdentifier
<	TokenNameLESS
PhrasePositions	TokenNameIdentifier
>	TokenNameGREATER
{	TokenNameLBRACE
PhraseQueue	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
size	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
initialize	TokenNameIdentifier
(	TokenNameLPAREN
size	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
protected	TokenNameprotected
final	TokenNamefinal
boolean	TokenNameboolean
lessThan	TokenNameIdentifier
(	TokenNameLPAREN
PhrasePositions	TokenNameIdentifier
pp1	TokenNameIdentifier
,	TokenNameCOMMA
PhrasePositions	TokenNameIdentifier
pp2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
pp1	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
pp2	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
pp1	TokenNameIdentifier
.	TokenNameDOT
position	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
pp2	TokenNameIdentifier
.	TokenNameDOT
position	TokenNameIdentifier
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
pp1	TokenNameIdentifier
.	TokenNameDOT
offset	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
pp2	TokenNameIdentifier
.	TokenNameDOT
offset	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
pp1	TokenNameIdentifier
.	TokenNameDOT
ord	TokenNameIdentifier
<	TokenNameLESS
pp2	TokenNameIdentifier
.	TokenNameDOT
ord	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
pp1	TokenNameIdentifier
.	TokenNameDOT
offset	TokenNameIdentifier
<	TokenNameLESS
pp2	TokenNameIdentifier
.	TokenNameDOT
offset	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
pp1	TokenNameIdentifier
.	TokenNameDOT
position	TokenNameIdentifier
<	TokenNameLESS
pp2	TokenNameIdentifier
.	TokenNameDOT
position	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
pp1	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
<	TokenNameLESS
pp2	TokenNameIdentifier
.	TokenNameDOT
doc	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
