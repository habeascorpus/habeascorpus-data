package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
Closeable	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
IOUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
UnicodeUtil	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
FieldInfo	TokenNameIdentifier
.	TokenNameDOT
IndexOptions	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
store	TokenNameIdentifier
.	TokenNameDOT
IndexOutput	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
class	TokenNameclass
FormatPostingsDocsWriter	TokenNameIdentifier
extends	TokenNameextends
FormatPostingsDocsConsumer	TokenNameIdentifier
implements	TokenNameimplements
Closeable	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
IndexOutput	TokenNameIdentifier
out	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
FormatPostingsTermsWriter	TokenNameIdentifier
parent	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
FormatPostingsPositionsWriter	TokenNameIdentifier
posWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
DefaultSkipListWriter	TokenNameIdentifier
skipListWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
skipInterval	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
totalNumDocs	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
omitTermFreqAndPositions	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
storePayloads	TokenNameIdentifier
;	TokenNameSEMICOLON
long	TokenNamelong
freqStart	TokenNameIdentifier
;	TokenNameSEMICOLON
FieldInfo	TokenNameIdentifier
fieldInfo	TokenNameIdentifier
;	TokenNameSEMICOLON
FormatPostingsDocsWriter	TokenNameIdentifier
(	TokenNameLPAREN
SegmentWriteState	TokenNameIdentifier
state	TokenNameIdentifier
,	TokenNameCOMMA
FormatPostingsTermsWriter	TokenNameIdentifier
parent	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
parent	TokenNameIdentifier
=	TokenNameEQUAL
parent	TokenNameIdentifier
;	TokenNameSEMICOLON
out	TokenNameIdentifier
=	TokenNameEQUAL
parent	TokenNameIdentifier
.	TokenNameDOT
parent	TokenNameIdentifier
.	TokenNameDOT
dir	TokenNameIdentifier
.	TokenNameDOT
createOutput	TokenNameIdentifier
(	TokenNameLPAREN
IndexFileNames	TokenNameIdentifier
.	TokenNameDOT
segmentFileName	TokenNameIdentifier
(	TokenNameLPAREN
parent	TokenNameIdentifier
.	TokenNameDOT
parent	TokenNameIdentifier
.	TokenNameDOT
segment	TokenNameIdentifier
,	TokenNameCOMMA
IndexFileNames	TokenNameIdentifier
.	TokenNameDOT
FREQ_EXTENSION	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
success	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
totalNumDocs	TokenNameIdentifier
=	TokenNameEQUAL
parent	TokenNameIdentifier
.	TokenNameDOT
parent	TokenNameIdentifier
.	TokenNameDOT
totalNumDocs	TokenNameIdentifier
;	TokenNameSEMICOLON
skipInterval	TokenNameIdentifier
=	TokenNameEQUAL
parent	TokenNameIdentifier
.	TokenNameDOT
parent	TokenNameIdentifier
.	TokenNameDOT
termsOut	TokenNameIdentifier
.	TokenNameDOT
skipInterval	TokenNameIdentifier
;	TokenNameSEMICOLON
skipListWriter	TokenNameIdentifier
=	TokenNameEQUAL
parent	TokenNameIdentifier
.	TokenNameDOT
parent	TokenNameIdentifier
.	TokenNameDOT
skipListWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
skipListWriter	TokenNameIdentifier
.	TokenNameDOT
setFreqOutput	TokenNameIdentifier
(	TokenNameLPAREN
out	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
posWriter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FormatPostingsPositionsWriter	TokenNameIdentifier
(	TokenNameLPAREN
state	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
success	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
success	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
IOUtils	TokenNameIdentifier
.	TokenNameDOT
closeWhileHandlingException	TokenNameIdentifier
(	TokenNameLPAREN
out	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
void	TokenNamevoid
setField	TokenNameIdentifier
(	TokenNameLPAREN
FieldInfo	TokenNameIdentifier
fieldInfo	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
fieldInfo	TokenNameIdentifier
=	TokenNameEQUAL
fieldInfo	TokenNameIdentifier
;	TokenNameSEMICOLON
omitTermFreqAndPositions	TokenNameIdentifier
=	TokenNameEQUAL
fieldInfo	TokenNameIdentifier
.	TokenNameDOT
indexOptions	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
IndexOptions	TokenNameIdentifier
.	TokenNameDOT
DOCS_ONLY	TokenNameIdentifier
;	TokenNameSEMICOLON
storePayloads	TokenNameIdentifier
=	TokenNameEQUAL
fieldInfo	TokenNameIdentifier
.	TokenNameDOT
storePayloads	TokenNameIdentifier
;	TokenNameSEMICOLON
posWriter	TokenNameIdentifier
.	TokenNameDOT
setField	TokenNameIdentifier
(	TokenNameLPAREN
fieldInfo	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
lastDocID	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
df	TokenNameIdentifier
;	TokenNameSEMICOLON
@	TokenNameAT
Override	TokenNameIdentifier
FormatPostingsPositionsConsumer	TokenNameIdentifier
addDoc	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
docID	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
termDocFreq	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
delta	TokenNameIdentifier
=	TokenNameEQUAL
docID	TokenNameIdentifier
-	TokenNameMINUS
lastDocID	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
docID	TokenNameIdentifier
<	TokenNameLESS
0	TokenNameIntegerLiteral
||	TokenNameOR_OR
(	TokenNameLPAREN
df	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
&&	TokenNameAND_AND
delta	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
CorruptIndexException	TokenNameIdentifier
(	TokenNameLPAREN
"docs out of order ("	TokenNameStringLiteral
+	TokenNamePLUS
docID	TokenNameIdentifier
+	TokenNamePLUS
" <= "	TokenNameStringLiteral
+	TokenNamePLUS
lastDocID	TokenNameIdentifier
+	TokenNamePLUS
" ) (out: "	TokenNameStringLiteral
+	TokenNamePLUS
out	TokenNameIdentifier
+	TokenNamePLUS
")"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
++	TokenNamePLUS_PLUS
df	TokenNameIdentifier
%	TokenNameREMAINDER
skipInterval	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
skipListWriter	TokenNameIdentifier
.	TokenNameDOT
setSkipData	TokenNameIdentifier
(	TokenNameLPAREN
lastDocID	TokenNameIdentifier
,	TokenNameCOMMA
storePayloads	TokenNameIdentifier
,	TokenNameCOMMA
posWriter	TokenNameIdentifier
.	TokenNameDOT
lastPayloadLength	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
skipListWriter	TokenNameIdentifier
.	TokenNameDOT
bufferSkip	TokenNameIdentifier
(	TokenNameLPAREN
df	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
assert	TokenNameassert
docID	TokenNameIdentifier
<	TokenNameLESS
totalNumDocs	TokenNameIdentifier
:	TokenNameCOLON
"docID="	TokenNameStringLiteral
+	TokenNamePLUS
docID	TokenNameIdentifier
+	TokenNamePLUS
" totalNumDocs="	TokenNameStringLiteral
+	TokenNamePLUS
totalNumDocs	TokenNameIdentifier
;	TokenNameSEMICOLON
lastDocID	TokenNameIdentifier
=	TokenNameEQUAL
docID	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
omitTermFreqAndPositions	TokenNameIdentifier
)	TokenNameRPAREN
out	TokenNameIdentifier
.	TokenNameDOT
writeVInt	TokenNameIdentifier
(	TokenNameLPAREN
delta	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
==	TokenNameEQUAL_EQUAL
termDocFreq	TokenNameIdentifier
)	TokenNameRPAREN
out	TokenNameIdentifier
.	TokenNameDOT
writeVInt	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
delta	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
{	TokenNameLBRACE
out	TokenNameIdentifier
.	TokenNameDOT
writeVInt	TokenNameIdentifier
(	TokenNameLPAREN
delta	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
out	TokenNameIdentifier
.	TokenNameDOT
writeVInt	TokenNameIdentifier
(	TokenNameLPAREN
termDocFreq	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
posWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
final	TokenNamefinal
TermInfo	TokenNameIdentifier
termInfo	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TermInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
UnicodeUtil	TokenNameIdentifier
.	TokenNameDOT
UTF8Result	TokenNameIdentifier
utf8	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
UnicodeUtil	TokenNameIdentifier
.	TokenNameDOT
UTF8Result	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
@	TokenNameAT
Override	TokenNameIdentifier
void	TokenNamevoid
finish	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
long	TokenNamelong
skipPointer	TokenNameIdentifier
=	TokenNameEQUAL
skipListWriter	TokenNameIdentifier
.	TokenNameDOT
writeSkip	TokenNameIdentifier
(	TokenNameLPAREN
out	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
termInfo	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
df	TokenNameIdentifier
,	TokenNameCOMMA
parent	TokenNameIdentifier
.	TokenNameDOT
freqStart	TokenNameIdentifier
,	TokenNameCOMMA
parent	TokenNameIdentifier
.	TokenNameDOT
proxStart	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
(	TokenNameLPAREN
skipPointer	TokenNameIdentifier
-	TokenNameMINUS
parent	TokenNameIdentifier
.	TokenNameDOT
freqStart	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
UnicodeUtil	TokenNameIdentifier
.	TokenNameDOT
UTF16toUTF8	TokenNameIdentifier
(	TokenNameLPAREN
parent	TokenNameIdentifier
.	TokenNameDOT
currentTerm	TokenNameIdentifier
,	TokenNameCOMMA
parent	TokenNameIdentifier
.	TokenNameDOT
currentTermStart	TokenNameIdentifier
,	TokenNameCOMMA
utf8	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
df	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
parent	TokenNameIdentifier
.	TokenNameDOT
termsOut	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
fieldInfo	TokenNameIdentifier
.	TokenNameDOT
number	TokenNameIdentifier
,	TokenNameCOMMA
utf8	TokenNameIdentifier
.	TokenNameDOT
result	TokenNameIdentifier
,	TokenNameCOMMA
utf8	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
,	TokenNameCOMMA
termInfo	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
lastDocID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
df	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
IOUtils	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
out	TokenNameIdentifier
,	TokenNameCOMMA
posWriter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
