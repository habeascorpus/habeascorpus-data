package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
class	TokenNameclass
FieldInfo	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
final	TokenNamefinal
String	TokenNameIdentifier
name	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
int	TokenNameint
number	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
boolean	TokenNameboolean
isIndexed	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
boolean	TokenNameboolean
storeTermVector	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
boolean	TokenNameboolean
omitNorms	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
IndexOptions	TokenNameIdentifier
indexOptions	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
boolean	TokenNameboolean
storePayloads	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
enum	TokenNameenum
IndexOptions	TokenNameIdentifier
{	TokenNameLBRACE
DOCS_ONLY	TokenNameIdentifier
,	TokenNameCOMMA
DOCS_AND_FREQS	TokenNameIdentifier
,	TokenNameCOMMA
DOCS_AND_FREQS_AND_POSITIONS	TokenNameIdentifier
}	TokenNameRBRACE
;	TokenNameSEMICOLON
FieldInfo	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
na	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
tk	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
nu	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
storeTermVector	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
omitNorms	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
storePayloads	TokenNameIdentifier
,	TokenNameCOMMA
IndexOptions	TokenNameIdentifier
indexOptions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
name	TokenNameIdentifier
=	TokenNameEQUAL
na	TokenNameIdentifier
;	TokenNameSEMICOLON
isIndexed	TokenNameIdentifier
=	TokenNameEQUAL
tk	TokenNameIdentifier
;	TokenNameSEMICOLON
number	TokenNameIdentifier
=	TokenNameEQUAL
nu	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isIndexed	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
storeTermVector	TokenNameIdentifier
=	TokenNameEQUAL
storeTermVector	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
storePayloads	TokenNameIdentifier
=	TokenNameEQUAL
storePayloads	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
omitNorms	TokenNameIdentifier
=	TokenNameEQUAL
omitNorms	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
indexOptions	TokenNameIdentifier
=	TokenNameEQUAL
indexOptions	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
storeTermVector	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
storePayloads	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
omitNorms	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
indexOptions	TokenNameIdentifier
=	TokenNameEQUAL
IndexOptions	TokenNameIdentifier
.	TokenNameDOT
DOCS_AND_FREQS_AND_POSITIONS	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
assert	TokenNameassert
indexOptions	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
IndexOptions	TokenNameIdentifier
.	TokenNameDOT
DOCS_AND_FREQS_AND_POSITIONS	TokenNameIdentifier
||	TokenNameOR_OR
!	TokenNameNOT
storePayloads	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
Object	TokenNameIdentifier
clone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
FieldInfo	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
isIndexed	TokenNameIdentifier
,	TokenNameCOMMA
number	TokenNameIdentifier
,	TokenNameCOMMA
storeTermVector	TokenNameIdentifier
,	TokenNameCOMMA
omitNorms	TokenNameIdentifier
,	TokenNameCOMMA
storePayloads	TokenNameIdentifier
,	TokenNameCOMMA
indexOptions	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
void	TokenNamevoid
update	TokenNameIdentifier
(	TokenNameLPAREN
boolean	TokenNameboolean
isIndexed	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
storeTermVector	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
omitNorms	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
storePayloads	TokenNameIdentifier
,	TokenNameCOMMA
IndexOptions	TokenNameIdentifier
indexOptions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
this	TokenNamethis
.	TokenNameDOT
isIndexed	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
isIndexed	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
isIndexed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
isIndexed	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
this	TokenNamethis
.	TokenNameDOT
storeTermVector	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
storeTermVector	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
storeTermVector	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
this	TokenNamethis
.	TokenNameDOT
storePayloads	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
storePayloads	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
storePayloads	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
this	TokenNamethis
.	TokenNameDOT
omitNorms	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
omitNorms	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
omitNorms	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
this	TokenNamethis
.	TokenNameDOT
indexOptions	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
indexOptions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
indexOptions	TokenNameIdentifier
=	TokenNameEQUAL
this	TokenNamethis
.	TokenNameDOT
indexOptions	TokenNameIdentifier
.	TokenNameDOT
compareTo	TokenNameIdentifier
(	TokenNameLPAREN
indexOptions	TokenNameIdentifier
)	TokenNameRPAREN
<	TokenNameLESS
0	TokenNameIntegerLiteral
?	TokenNameQUESTION
this	TokenNamethis
.	TokenNameDOT
indexOptions	TokenNameIdentifier
:	TokenNameCOLON
indexOptions	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
storePayloads	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
assert	TokenNameassert
this	TokenNamethis
.	TokenNameDOT
indexOptions	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
IndexOptions	TokenNameIdentifier
.	TokenNameDOT
DOCS_AND_FREQS_AND_POSITIONS	TokenNameIdentifier
||	TokenNameOR_OR
!	TokenNameNOT
this	TokenNamethis
.	TokenNameDOT
storePayloads	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
