package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Collection	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Map	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
HashMap	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
class	TokenNameclass
DocFieldProcessor	TokenNameIdentifier
extends	TokenNameextends
DocConsumer	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
DocumentsWriter	TokenNameIdentifier
docWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
FieldInfos	TokenNameIdentifier
fieldInfos	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
DocFieldConsumer	TokenNameIdentifier
consumer	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
StoredFieldsWriter	TokenNameIdentifier
fieldsWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
DocFieldProcessor	TokenNameIdentifier
(	TokenNameLPAREN
DocumentsWriter	TokenNameIdentifier
docWriter	TokenNameIdentifier
,	TokenNameCOMMA
DocFieldConsumer	TokenNameIdentifier
consumer	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
docWriter	TokenNameIdentifier
=	TokenNameEQUAL
docWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
consumer	TokenNameIdentifier
=	TokenNameEQUAL
consumer	TokenNameIdentifier
;	TokenNameSEMICOLON
fieldInfos	TokenNameIdentifier
=	TokenNameEQUAL
docWriter	TokenNameIdentifier
.	TokenNameDOT
getFieldInfos	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
consumer	TokenNameIdentifier
.	TokenNameDOT
setFieldInfos	TokenNameIdentifier
(	TokenNameLPAREN
fieldInfos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fieldsWriter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StoredFieldsWriter	TokenNameIdentifier
(	TokenNameLPAREN
docWriter	TokenNameIdentifier
,	TokenNameCOMMA
fieldInfos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
flush	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
DocConsumerPerThread	TokenNameIdentifier
>	TokenNameGREATER
threads	TokenNameIdentifier
,	TokenNameCOMMA
SegmentWriteState	TokenNameIdentifier
state	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Map	TokenNameIdentifier
<	TokenNameLESS
DocFieldConsumerPerThread	TokenNameIdentifier
,	TokenNameCOMMA
Collection	TokenNameIdentifier
<	TokenNameLESS
DocFieldConsumerPerField	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
childThreadsAndFields	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
DocFieldConsumerPerThread	TokenNameIdentifier
,	TokenNameCOMMA
Collection	TokenNameIdentifier
<	TokenNameLESS
DocFieldConsumerPerField	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
DocConsumerPerThread	TokenNameIdentifier
thread	TokenNameIdentifier
:	TokenNameCOLON
threads	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
DocFieldProcessorPerThread	TokenNameIdentifier
perThread	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
DocFieldProcessorPerThread	TokenNameIdentifier
)	TokenNameRPAREN
thread	TokenNameIdentifier
;	TokenNameSEMICOLON
childThreadsAndFields	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
perThread	TokenNameIdentifier
.	TokenNameDOT
consumer	TokenNameIdentifier
,	TokenNameCOMMA
perThread	TokenNameIdentifier
.	TokenNameDOT
fields	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perThread	TokenNameIdentifier
.	TokenNameDOT
trimFields	TokenNameIdentifier
(	TokenNameLPAREN
state	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fieldsWriter	TokenNameIdentifier
.	TokenNameDOT
flush	TokenNameIdentifier
(	TokenNameLPAREN
state	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
consumer	TokenNameIdentifier
.	TokenNameDOT
flush	TokenNameIdentifier
(	TokenNameLPAREN
childThreadsAndFields	TokenNameIdentifier
,	TokenNameCOMMA
state	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
fileName	TokenNameIdentifier
=	TokenNameEQUAL
IndexFileNames	TokenNameIdentifier
.	TokenNameDOT
segmentFileName	TokenNameIdentifier
(	TokenNameLPAREN
state	TokenNameIdentifier
.	TokenNameDOT
segmentName	TokenNameIdentifier
,	TokenNameCOMMA
IndexFileNames	TokenNameIdentifier
.	TokenNameDOT
FIELD_INFOS_EXTENSION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fieldInfos	TokenNameIdentifier
.	TokenNameDOT
write	TokenNameIdentifier
(	TokenNameLPAREN
state	TokenNameIdentifier
.	TokenNameDOT
directory	TokenNameIdentifier
,	TokenNameCOMMA
fileName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
abort	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
fieldsWriter	TokenNameIdentifier
.	TokenNameDOT
abort	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
consumer	TokenNameIdentifier
.	TokenNameDOT
abort	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
boolean	TokenNameboolean
freeRAM	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
consumer	TokenNameIdentifier
.	TokenNameDOT
freeRAM	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
DocConsumerPerThread	TokenNameIdentifier
addThread	TokenNameIdentifier
(	TokenNameLPAREN
DocumentsWriterThreadState	TokenNameIdentifier
threadState	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
DocFieldProcessorPerThread	TokenNameIdentifier
(	TokenNameLPAREN
threadState	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
