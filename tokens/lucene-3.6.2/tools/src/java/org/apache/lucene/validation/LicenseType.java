package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
lucene	TokenNameIdentifier
.	TokenNameDOT
validation	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
enum	TokenNameenum
LicenseType	TokenNameIdentifier
{	TokenNameLBRACE
ASL	TokenNameIdentifier
(	TokenNameLPAREN
"Apache Software License 2.0"	TokenNameStringLiteral
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
,	TokenNameCOMMA
BSD	TokenNameIdentifier
(	TokenNameLPAREN
"Berkeley Software Distribution"	TokenNameStringLiteral
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
,	TokenNameCOMMA
BSD_LIKE	TokenNameIdentifier
(	TokenNameLPAREN
"BSD like license"	TokenNameStringLiteral
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
,	TokenNameCOMMA
CDDL	TokenNameIdentifier
(	TokenNameLPAREN
"Common Development and Distribution License"	TokenNameStringLiteral
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
,	TokenNameCOMMA
CPL	TokenNameIdentifier
(	TokenNameLPAREN
"Common Public License"	TokenNameStringLiteral
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
,	TokenNameCOMMA
EPL	TokenNameIdentifier
(	TokenNameLPAREN
"Eclipse Public License Version 1.0"	TokenNameStringLiteral
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
,	TokenNameCOMMA
MIT	TokenNameIdentifier
(	TokenNameLPAREN
"Massachusetts Institute of Tech. License"	TokenNameStringLiteral
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
,	TokenNameCOMMA
MPL	TokenNameIdentifier
(	TokenNameLPAREN
"Mozilla Public License"	TokenNameStringLiteral
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
,	TokenNameCOMMA
PD	TokenNameIdentifier
(	TokenNameLPAREN
"Public Domain"	TokenNameStringLiteral
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
,	TokenNameCOMMA
SUN	TokenNameIdentifier
(	TokenNameLPAREN
"Sun Open Source License"	TokenNameStringLiteral
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
,	TokenNameCOMMA
COMPOUND	TokenNameIdentifier
(	TokenNameLPAREN
"Compound license (see NOTICE)."	TokenNameStringLiteral
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
,	TokenNameCOMMA
FAKE	TokenNameIdentifier
(	TokenNameLPAREN
"FAKE license - not needed"	TokenNameStringLiteral
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
display	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
boolean	TokenNameboolean
noticeRequired	TokenNameIdentifier
;	TokenNameSEMICOLON
LicenseType	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
display	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
noticeRequired	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
display	TokenNameIdentifier
=	TokenNameEQUAL
display	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
noticeRequired	TokenNameIdentifier
=	TokenNameEQUAL
noticeRequired	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isNoticeRequired	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
noticeRequired	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getDisplay	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
display	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"LicenseType{"	TokenNameStringLiteral
+	TokenNamePLUS
"display='"	TokenNameStringLiteral
+	TokenNamePLUS
display	TokenNameIdentifier
+	TokenNamePLUS
'\''	TokenNameCharacterLiteral
+	TokenNamePLUS
'}'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
licenseFileSuffix	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"-LICENSE-"	TokenNameStringLiteral
+	TokenNamePLUS
this	TokenNamethis
.	TokenNameDOT
name	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
".txt"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
noticeFileSuffix	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"-NOTICE.txt"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
