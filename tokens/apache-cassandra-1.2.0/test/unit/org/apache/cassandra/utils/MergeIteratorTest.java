package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Arrays	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Iterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
com	TokenNameIdentifier
.	TokenNameDOT
google	TokenNameIdentifier
.	TokenNameDOT
common	TokenNameIdentifier
.	TokenNameDOT
collect	TokenNameIdentifier
.	TokenNameDOT
AbstractIterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
com	TokenNameIdentifier
.	TokenNameDOT
google	TokenNameIdentifier
.	TokenNameDOT
common	TokenNameIdentifier
.	TokenNameDOT
collect	TokenNameIdentifier
.	TokenNameDOT
Iterators	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
com	TokenNameIdentifier
.	TokenNameDOT
google	TokenNameIdentifier
.	TokenNameDOT
common	TokenNameIdentifier
.	TokenNameDOT
collect	TokenNameIdentifier
.	TokenNameDOT
Ordering	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
junit	TokenNameIdentifier
.	TokenNameDOT
Before	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
junit	TokenNameIdentifier
.	TokenNameDOT
Test	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
MergeIteratorTest	TokenNameIdentifier
{	TokenNameLBRACE
CLI	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
all	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
,	TokenNameCOMMA
cat	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
,	TokenNameCOMMA
a	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
,	TokenNameCOMMA
b	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
,	TokenNameCOMMA
c	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
,	TokenNameCOMMA
d	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
@	TokenNameAT
Before	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
all	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CLI	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
,	TokenNameCOMMA
"2"	TokenNameStringLiteral
,	TokenNameCOMMA
"3"	TokenNameStringLiteral
,	TokenNameCOMMA
"3"	TokenNameStringLiteral
,	TokenNameCOMMA
"4"	TokenNameStringLiteral
,	TokenNameCOMMA
"5"	TokenNameStringLiteral
,	TokenNameCOMMA
"6"	TokenNameStringLiteral
,	TokenNameCOMMA
"7"	TokenNameStringLiteral
,	TokenNameCOMMA
"8"	TokenNameStringLiteral
,	TokenNameCOMMA
"8"	TokenNameStringLiteral
,	TokenNameCOMMA
"9"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cat	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CLI	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
,	TokenNameCOMMA
"2"	TokenNameStringLiteral
,	TokenNameCOMMA
"33"	TokenNameStringLiteral
,	TokenNameCOMMA
"4"	TokenNameStringLiteral
,	TokenNameCOMMA
"5"	TokenNameStringLiteral
,	TokenNameCOMMA
"6"	TokenNameStringLiteral
,	TokenNameCOMMA
"7"	TokenNameStringLiteral
,	TokenNameCOMMA
"88"	TokenNameStringLiteral
,	TokenNameCOMMA
"9"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
a	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CLI	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
,	TokenNameCOMMA
"3"	TokenNameStringLiteral
,	TokenNameCOMMA
"5"	TokenNameStringLiteral
,	TokenNameCOMMA
"8"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
b	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CLI	TokenNameIdentifier
(	TokenNameLPAREN
"2"	TokenNameStringLiteral
,	TokenNameCOMMA
"4"	TokenNameStringLiteral
,	TokenNameCOMMA
"6"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CLI	TokenNameIdentifier
(	TokenNameLPAREN
"3"	TokenNameStringLiteral
,	TokenNameCOMMA
"7"	TokenNameStringLiteral
,	TokenNameCOMMA
"8"	TokenNameStringLiteral
,	TokenNameCOMMA
"9"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
d	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CLI	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testManyToOne	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
MergeIterator	TokenNameIdentifier
.	TokenNameDOT
Reducer	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
reducer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MergeIterator	TokenNameIdentifier
.	TokenNameDOT
Reducer	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
concatted	TokenNameIdentifier
=	TokenNameEQUAL
""	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
void	TokenNamevoid
reduce	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
concatted	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
value	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getReduced	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
tmp	TokenNameIdentifier
=	TokenNameEQUAL
concatted	TokenNameIdentifier
;	TokenNameSEMICOLON
concatted	TokenNameIdentifier
=	TokenNameEQUAL
""	TokenNameStringLiteral
;	TokenNameSEMICOLON
return	TokenNamereturn
tmp	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
IMergeIterator	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
smi	TokenNameIdentifier
=	TokenNameEQUAL
MergeIterator	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
,	TokenNameCOMMA
b	TokenNameIdentifier
,	TokenNameCOMMA
c	TokenNameIdentifier
,	TokenNameCOMMA
d	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
Ordering	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
natural	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
reducer	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
Iterators	TokenNameIdentifier
.	TokenNameDOT
elementsEqual	TokenNameIdentifier
(	TokenNameLPAREN
cat	TokenNameIdentifier
,	TokenNameCOMMA
smi	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
smi	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
a	TokenNameIdentifier
.	TokenNameDOT
closed	TokenNameIdentifier
&&	TokenNameAND_AND
b	TokenNameIdentifier
.	TokenNameDOT
closed	TokenNameIdentifier
&&	TokenNameAND_AND
c	TokenNameIdentifier
.	TokenNameDOT
closed	TokenNameIdentifier
&&	TokenNameAND_AND
d	TokenNameIdentifier
.	TokenNameDOT
closed	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
CLI	TokenNameIdentifier
<	TokenNameLESS
E	TokenNameIdentifier
>	TokenNameGREATER
extends	TokenNameextends
AbstractIterator	TokenNameIdentifier
<	TokenNameLESS
E	TokenNameIdentifier
>	TokenNameGREATER
implements	TokenNameimplements
CloseableIterator	TokenNameIdentifier
<	TokenNameLESS
E	TokenNameIdentifier
>	TokenNameGREATER
{	TokenNameLBRACE
Iterator	TokenNameIdentifier
<	TokenNameLESS
E	TokenNameIdentifier
>	TokenNameGREATER
iter	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
closed	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
public	TokenNamepublic
CLI	TokenNameIdentifier
(	TokenNameLPAREN
E	TokenNameIdentifier
...	TokenNameELLIPSIS
items	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
iter	TokenNameIdentifier
=	TokenNameEQUAL
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
items	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
E	TokenNameIdentifier
computeNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
iter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
endOfData	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
iter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
!	TokenNameNOT
this	TokenNamethis
.	TokenNameDOT
closed	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
closed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
