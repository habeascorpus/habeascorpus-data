package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
dht	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
nio	TokenNameIdentifier
.	TokenNameDOT
ByteBuffer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
HashSet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Set	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
static	TokenNamestatic
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
commons	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
StringUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
junit	TokenNameIdentifier
.	TokenNameDOT
Test	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
RowPosition	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
static	TokenNamestatic
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
Util	TokenNameIdentifier
.	TokenNameDOT
range	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
RangeTest	TokenNameIdentifier
{	TokenNameLBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testContains	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
left	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
left	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
left	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
left	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
left	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"101"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testContainsWrapping	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
range	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
range	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
range	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
range	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
range	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"101"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
range	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
range	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
range	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
range	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
range	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"200"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testContainsRange	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
one	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"2"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
two	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"2"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"5"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
thr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"5"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
fou	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"12"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
one	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
two	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
one	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
thr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
one	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
fou	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
two	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
one	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
two	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
thr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
two	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
fou	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
thr	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
one	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
thr	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
two	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
thr	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
fou	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
fou	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
one	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
fou	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
two	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
fou	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
thr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testContainsRangeWrapping	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
one	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"2"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
two	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"5"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"3"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
thr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"12"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
fou	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"2"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"6"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
fiv	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
one	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
two	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
one	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
thr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
one	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
fou	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
two	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
one	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
two	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
thr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
two	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
fou	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
thr	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
one	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
thr	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
two	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
thr	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
fou	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
fou	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
one	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
fou	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
two	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
fou	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
thr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
fiv	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
one	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
fiv	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
two	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
fiv	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
thr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
fiv	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
fou	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testContainsRangeOneWrapping	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
wrap1	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
wrap2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"2"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
nowrap1	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"2"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
nowrap2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"2"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
nowrap3	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
wrap1	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
nowrap1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
wrap1	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
nowrap2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
wrap1	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
nowrap3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
wrap2	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
nowrap1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
wrap2	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
nowrap2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
wrap2	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
nowrap3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testIntersects	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
all	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
one	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"2"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
two	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"8"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
not	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"12"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
all	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
one	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
all	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
two	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
one	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
two	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
two	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
one	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
one	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
not	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
not	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
one	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
two	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
not	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
not	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
two	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testIntersectsWrapping	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
onewrap	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"2"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
onecomplement	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
onewrap	TokenNameIdentifier
.	TokenNameDOT
right	TokenNameIdentifier
,	TokenNameCOMMA
onewrap	TokenNameIdentifier
.	TokenNameDOT
left	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
onestartswith	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
onewrap	TokenNameIdentifier
.	TokenNameDOT
left	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"12"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
oneendswith	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
onewrap	TokenNameIdentifier
.	TokenNameDOT
right	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
twowrap	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"5"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"3"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
not	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"2"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"6"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
onewrap	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
onecomplement	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
onewrap	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
onestartswith	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
onewrap	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
oneendswith	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
onewrap	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
twowrap	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
twowrap	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
onewrap	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
onewrap	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
not	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
not	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
onewrap	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
twowrap	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
not	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
not	TokenNameIdentifier
.	TokenNameDOT
intersects	TokenNameIdentifier
(	TokenNameLPAREN
twowrap	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
<	TokenNameLESS
T	TokenNameIdentifier
extends	TokenNameextends
RingPosition	TokenNameIdentifier
>	TokenNameGREATER
void	TokenNamevoid
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
Range	TokenNameIdentifier
one	TokenNameIdentifier
,	TokenNameCOMMA
Range	TokenNameIdentifier
two	TokenNameIdentifier
,	TokenNameCOMMA
Range	TokenNameIdentifier
<	TokenNameLESS
T	TokenNameIdentifier
>	TokenNameGREATER
...	TokenNameELLIPSIS
ranges	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
<	TokenNameLESS
T	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
correct	TokenNameIdentifier
=	TokenNameEQUAL
Range	TokenNameIdentifier
.	TokenNameDOT
rangeSet	TokenNameIdentifier
(	TokenNameLPAREN
ranges	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
>	TokenNameGREATER
result1	TokenNameIdentifier
=	TokenNameEQUAL
one	TokenNameIdentifier
.	TokenNameDOT
intersectionWith	TokenNameIdentifier
(	TokenNameLPAREN
two	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
result1	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
correct	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"%s != %s"	TokenNameStringLiteral
,	TokenNameCOMMA
StringUtils	TokenNameIdentifier
.	TokenNameDOT
join	TokenNameIdentifier
(	TokenNameLPAREN
result1	TokenNameIdentifier
,	TokenNameCOMMA
","	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
StringUtils	TokenNameIdentifier
.	TokenNameDOT
join	TokenNameIdentifier
(	TokenNameLPAREN
correct	TokenNameIdentifier
,	TokenNameCOMMA
","	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
>	TokenNameGREATER
result2	TokenNameIdentifier
=	TokenNameEQUAL
two	TokenNameIdentifier
.	TokenNameDOT
intersectionWith	TokenNameIdentifier
(	TokenNameLPAREN
one	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
result2	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
correct	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"%s != %s"	TokenNameStringLiteral
,	TokenNameCOMMA
StringUtils	TokenNameIdentifier
.	TokenNameDOT
join	TokenNameIdentifier
(	TokenNameLPAREN
result2	TokenNameIdentifier
,	TokenNameCOMMA
","	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
StringUtils	TokenNameIdentifier
.	TokenNameDOT
join	TokenNameIdentifier
(	TokenNameLPAREN
correct	TokenNameIdentifier
,	TokenNameCOMMA
","	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
assertNoIntersection	TokenNameIdentifier
(	TokenNameLPAREN
Range	TokenNameIdentifier
wraps1	TokenNameIdentifier
,	TokenNameCOMMA
Range	TokenNameIdentifier
nowrap3	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps1	TokenNameIdentifier
,	TokenNameCOMMA
nowrap3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testIntersectionWithAll	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
all0	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
all10	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
all100	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
all1000	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"1000"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"1000"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
wraps	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
all0	TokenNameIdentifier
,	TokenNameCOMMA
wraps	TokenNameIdentifier
,	TokenNameCOMMA
wraps	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
all10	TokenNameIdentifier
,	TokenNameCOMMA
wraps	TokenNameIdentifier
,	TokenNameCOMMA
wraps	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
all100	TokenNameIdentifier
,	TokenNameCOMMA
wraps	TokenNameIdentifier
,	TokenNameCOMMA
wraps	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
all1000	TokenNameIdentifier
,	TokenNameCOMMA
wraps	TokenNameIdentifier
,	TokenNameCOMMA
wraps	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testIntersectionContains	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
wraps1	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
wraps2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"90"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"20"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
wraps3	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"90"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
nowrap1	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"110"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
nowrap2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
nowrap3	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"9"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps1	TokenNameIdentifier
,	TokenNameCOMMA
wraps2	TokenNameIdentifier
,	TokenNameCOMMA
wraps1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps3	TokenNameIdentifier
,	TokenNameCOMMA
wraps2	TokenNameIdentifier
,	TokenNameCOMMA
wraps3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps1	TokenNameIdentifier
,	TokenNameCOMMA
nowrap1	TokenNameIdentifier
,	TokenNameCOMMA
nowrap1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps1	TokenNameIdentifier
,	TokenNameCOMMA
nowrap2	TokenNameIdentifier
,	TokenNameCOMMA
nowrap2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
nowrap2	TokenNameIdentifier
,	TokenNameCOMMA
nowrap3	TokenNameIdentifier
,	TokenNameCOMMA
nowrap3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps1	TokenNameIdentifier
,	TokenNameCOMMA
wraps1	TokenNameIdentifier
,	TokenNameCOMMA
wraps1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
nowrap1	TokenNameIdentifier
,	TokenNameCOMMA
nowrap1	TokenNameIdentifier
,	TokenNameCOMMA
nowrap1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
nowrap2	TokenNameIdentifier
,	TokenNameCOMMA
nowrap2	TokenNameIdentifier
,	TokenNameCOMMA
nowrap2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps3	TokenNameIdentifier
,	TokenNameCOMMA
wraps3	TokenNameIdentifier
,	TokenNameCOMMA
wraps3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testNoIntersection	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
wraps1	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
wraps2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
nowrap1	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
nowrap2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"200"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
nowrap3	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNoIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps1	TokenNameIdentifier
,	TokenNameCOMMA
nowrap3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNoIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps2	TokenNameIdentifier
,	TokenNameCOMMA
nowrap1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNoIntersection	TokenNameIdentifier
(	TokenNameLPAREN
nowrap1	TokenNameIdentifier
,	TokenNameCOMMA
nowrap2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testIntersectionOneWraps	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
wraps1	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
wraps2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
nowrap1	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"200"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
nowrap2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps1	TokenNameIdentifier
,	TokenNameCOMMA
nowrap1	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"200"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps2	TokenNameIdentifier
,	TokenNameCOMMA
nowrap1	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"200"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps1	TokenNameIdentifier
,	TokenNameCOMMA
nowrap2	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testIntersectionTwoWraps	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
wraps1	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"20"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
wraps2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"120"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"90"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
wraps3	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"120"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"110"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
wraps4	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
wraps5	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Range	TokenNameIdentifier
wraps6	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"30"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps1	TokenNameIdentifier
,	TokenNameCOMMA
wraps2	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"120"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"20"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps1	TokenNameIdentifier
,	TokenNameCOMMA
wraps3	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"120"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"20"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"110"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps1	TokenNameIdentifier
,	TokenNameCOMMA
wraps4	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"20"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps1	TokenNameIdentifier
,	TokenNameCOMMA
wraps5	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"20"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertIntersection	TokenNameIdentifier
(	TokenNameLPAREN
wraps1	TokenNameIdentifier
,	TokenNameCOMMA
wraps6	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"100"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testByteTokensCompare	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Token	TokenNameIdentifier
t1	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BytesToken	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
.	TokenNameDOT
wrap	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
byte	TokenNamebyte
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
t2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BytesToken	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
.	TokenNameDOT
wrap	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
byte	TokenNamebyte
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
t3	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BytesToken	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
.	TokenNameDOT
wrap	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
byte	TokenNamebyte
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
t1	TokenNameIdentifier
.	TokenNameDOT
compareTo	TokenNameIdentifier
(	TokenNameLPAREN
t2	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
assert	TokenNameassert
t1	TokenNameIdentifier
.	TokenNameDOT
compareTo	TokenNameIdentifier
(	TokenNameLPAREN
t3	TokenNameIdentifier
)	TokenNameRPAREN
<	TokenNameLESS
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
assert	TokenNameassert
t3	TokenNameIdentifier
.	TokenNameDOT
compareTo	TokenNameIdentifier
(	TokenNameLPAREN
t1	TokenNameIdentifier
)	TokenNameRPAREN
>	TokenNameGREATER
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
assert	TokenNameassert
t1	TokenNameIdentifier
.	TokenNameDOT
compareTo	TokenNameIdentifier
(	TokenNameLPAREN
t1	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
t4	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BytesToken	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
byte	TokenNamebyte
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
t5	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BytesToken	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
byte	TokenNamebyte
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
6	TokenNameIntegerLiteral
,	TokenNameCOMMA
7	TokenNameIntegerLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
t4	TokenNameIdentifier
.	TokenNameDOT
compareTo	TokenNameIdentifier
(	TokenNameLPAREN
t5	TokenNameIdentifier
)	TokenNameRPAREN
<	TokenNameLESS
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
assert	TokenNameassert
t5	TokenNameIdentifier
.	TokenNameDOT
compareTo	TokenNameIdentifier
(	TokenNameLPAREN
t4	TokenNameIdentifier
)	TokenNameRPAREN
>	TokenNameGREATER
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
assert	TokenNameassert
t1	TokenNameIdentifier
.	TokenNameDOT
compareTo	TokenNameIdentifier
(	TokenNameLPAREN
t4	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Range	TokenNameIdentifier
makeRange	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
token1	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
token2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Range	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
token1	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
BigIntegerToken	TokenNameIdentifier
(	TokenNameLPAREN
token2	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Set	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
>	TokenNameGREATER
makeRanges	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
tokenPairs	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
>	TokenNameGREATER
ranges	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
tokenPairs	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
ranges	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
makeRange	TokenNameIdentifier
(	TokenNameLPAREN
tokenPairs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
tokenPairs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
ranges	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
Range	TokenNameIdentifier
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
>	TokenNameGREATER
ranges	TokenNameIdentifier
=	TokenNameEQUAL
makeRanges	TokenNameIdentifier
(	TokenNameLPAREN
newTokens	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Range	TokenNameIdentifier
newRange	TokenNameIdentifier
:	TokenNameCOLON
ranges	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
>	TokenNameGREATER
diff	TokenNameIdentifier
=	TokenNameEQUAL
oldRange	TokenNameIdentifier
.	TokenNameDOT
differenceToFetch	TokenNameIdentifier
(	TokenNameLPAREN
newRange	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
diff	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
makeRanges	TokenNameIdentifier
(	TokenNameLPAREN
expected	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
" "	TokenNameStringLiteral
+	TokenNamePLUS
"Old range: "	TokenNameStringLiteral
+	TokenNamePLUS
oldRange	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
" "	TokenNameStringLiteral
+	TokenNamePLUS
"New range: "	TokenNameStringLiteral
+	TokenNamePLUS
newRange	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
" "	TokenNameStringLiteral
+	TokenNamePLUS
"Difference: (result) "	TokenNameStringLiteral
+	TokenNamePLUS
diff	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
" != "	TokenNameStringLiteral
+	TokenNamePLUS
makeRanges	TokenNameIdentifier
(	TokenNameLPAREN
expected	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
" (expected)"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testDifferenceToFetchNoWrap	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
oldRange	TokenNameIdentifier
=	TokenNameEQUAL
makeRange	TokenNameIdentifier
(	TokenNameLPAREN
"10"	TokenNameStringLiteral
,	TokenNameCOMMA
"40"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens1	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"20"	TokenNameStringLiteral
,	TokenNameCOMMA
"30"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"10"	TokenNameStringLiteral
,	TokenNameCOMMA
"20"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"10"	TokenNameStringLiteral
,	TokenNameCOMMA
"40"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"20"	TokenNameStringLiteral
,	TokenNameCOMMA
"40"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected1	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens1	TokenNameIdentifier
,	TokenNameCOMMA
expected1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens2	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"10"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"20"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"40"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected2	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"40"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens2	TokenNameIdentifier
,	TokenNameCOMMA
expected2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens3	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"0"	TokenNameStringLiteral
,	TokenNameCOMMA
"10"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"0"	TokenNameStringLiteral
,	TokenNameCOMMA
"20"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"0"	TokenNameStringLiteral
,	TokenNameCOMMA
"40"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected3	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"0"	TokenNameStringLiteral
,	TokenNameCOMMA
"10"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens3	TokenNameIdentifier
,	TokenNameCOMMA
expected3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens4	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"0"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected4	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"0"	TokenNameStringLiteral
,	TokenNameCOMMA
"10"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"40"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens4	TokenNameIdentifier
,	TokenNameCOMMA
expected4	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testDifferenceToFetchBothWrap	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
oldRange	TokenNameIdentifier
=	TokenNameEQUAL
makeRange	TokenNameIdentifier
(	TokenNameLPAREN
"1010"	TokenNameStringLiteral
,	TokenNameCOMMA
"40"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens1	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"1020"	TokenNameStringLiteral
,	TokenNameCOMMA
"30"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"1010"	TokenNameStringLiteral
,	TokenNameCOMMA
"20"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"1010"	TokenNameStringLiteral
,	TokenNameCOMMA
"40"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"1020"	TokenNameStringLiteral
,	TokenNameCOMMA
"40"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected1	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens1	TokenNameIdentifier
,	TokenNameCOMMA
expected1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens2	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"1010"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"1020"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"1040"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected2	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"40"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens2	TokenNameIdentifier
,	TokenNameCOMMA
expected2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens3	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"1000"	TokenNameStringLiteral
,	TokenNameCOMMA
"10"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"1000"	TokenNameStringLiteral
,	TokenNameCOMMA
"20"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"1000"	TokenNameStringLiteral
,	TokenNameCOMMA
"40"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected3	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"1000"	TokenNameStringLiteral
,	TokenNameCOMMA
"1010"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens3	TokenNameIdentifier
,	TokenNameCOMMA
expected3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens4	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"1000"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected4	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"1000"	TokenNameStringLiteral
,	TokenNameCOMMA
"1010"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"40"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens4	TokenNameIdentifier
,	TokenNameCOMMA
expected4	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testDifferenceToFetchOldWraps	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
oldRange	TokenNameIdentifier
=	TokenNameEQUAL
makeRange	TokenNameIdentifier
(	TokenNameLPAREN
"1010"	TokenNameStringLiteral
,	TokenNameCOMMA
"40"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens1	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"0"	TokenNameStringLiteral
,	TokenNameCOMMA
"30"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"0"	TokenNameStringLiteral
,	TokenNameCOMMA
"40"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"10"	TokenNameStringLiteral
,	TokenNameCOMMA
"40"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected1	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens1	TokenNameIdentifier
,	TokenNameCOMMA
expected1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens2	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"0"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"10"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"40"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected2	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"40"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens2	TokenNameIdentifier
,	TokenNameCOMMA
expected2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens3	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"50"	TokenNameStringLiteral
,	TokenNameCOMMA
"90"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected3	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"50"	TokenNameStringLiteral
,	TokenNameCOMMA
"90"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens3	TokenNameIdentifier
,	TokenNameCOMMA
expected3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens4	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"10"	TokenNameStringLiteral
,	TokenNameCOMMA
"1010"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"40"	TokenNameStringLiteral
,	TokenNameCOMMA
"1010"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"10"	TokenNameStringLiteral
,	TokenNameCOMMA
"1030"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"40"	TokenNameStringLiteral
,	TokenNameCOMMA
"1030"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected4	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"40"	TokenNameStringLiteral
,	TokenNameCOMMA
"1010"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens4	TokenNameIdentifier
,	TokenNameCOMMA
expected4	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens5	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"60"	TokenNameStringLiteral
,	TokenNameCOMMA
"1010"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"60"	TokenNameStringLiteral
,	TokenNameCOMMA
"1030"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected5	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"60"	TokenNameStringLiteral
,	TokenNameCOMMA
"1010"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens5	TokenNameIdentifier
,	TokenNameCOMMA
expected5	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testDifferenceToFetchNewWraps	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
oldRange	TokenNameIdentifier
=	TokenNameEQUAL
makeRange	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
,	TokenNameCOMMA
"40"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens1	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"1010"	TokenNameStringLiteral
,	TokenNameCOMMA
"0"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"1010"	TokenNameStringLiteral
,	TokenNameCOMMA
"10"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"1010"	TokenNameStringLiteral
,	TokenNameCOMMA
"40"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected1	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"1010"	TokenNameStringLiteral
,	TokenNameCOMMA
"0"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens1	TokenNameIdentifier
,	TokenNameCOMMA
expected1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens2	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"1010"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected2	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"1010"	TokenNameStringLiteral
,	TokenNameCOMMA
"0"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"40"	TokenNameStringLiteral
,	TokenNameCOMMA
"50"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens2	TokenNameIdentifier
,	TokenNameCOMMA
expected2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
oldRange	TokenNameIdentifier
=	TokenNameEQUAL
makeRange	TokenNameIdentifier
(	TokenNameLPAREN
"20"	TokenNameStringLiteral
,	TokenNameCOMMA
"40"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens3	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"1010"	TokenNameStringLiteral
,	TokenNameCOMMA
"0"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected3	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"1010"	TokenNameStringLiteral
,	TokenNameCOMMA
"0"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens3	TokenNameIdentifier
,	TokenNameCOMMA
expected3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens4	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"1010"	TokenNameStringLiteral
,	TokenNameCOMMA
"20"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected4	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"1010"	TokenNameStringLiteral
,	TokenNameCOMMA
"20"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens4	TokenNameIdentifier
,	TokenNameCOMMA
expected4	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens5	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"30"	TokenNameStringLiteral
,	TokenNameCOMMA
"0"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"40"	TokenNameStringLiteral
,	TokenNameCOMMA
"0"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected5	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"40"	TokenNameStringLiteral
,	TokenNameCOMMA
"0"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens5	TokenNameIdentifier
,	TokenNameCOMMA
expected5	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newTokens6	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"30"	TokenNameStringLiteral
,	TokenNameCOMMA
"20"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"40"	TokenNameStringLiteral
,	TokenNameCOMMA
"20"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
expected6	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
{	TokenNameLBRACE
"40"	TokenNameStringLiteral
,	TokenNameCOMMA
"20"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
checkDifference	TokenNameIdentifier
(	TokenNameLPAREN
oldRange	TokenNameIdentifier
,	TokenNameCOMMA
newTokens6	TokenNameIdentifier
,	TokenNameCOMMA
expected6	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
<	TokenNameLESS
T	TokenNameIdentifier
extends	TokenNameextends
RingPosition	TokenNameIdentifier
>	TokenNameGREATER
void	TokenNamevoid
assertNormalize	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
<	TokenNameLESS
T	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
input	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
<	TokenNameLESS
T	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
expected	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
<	TokenNameLESS
T	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
result	TokenNameIdentifier
=	TokenNameEQUAL
Range	TokenNameIdentifier
.	TokenNameDOT
normalize	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
result	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
expected	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
"Expecting "	TokenNameStringLiteral
+	TokenNamePLUS
expected	TokenNameIdentifier
+	TokenNamePLUS
" but got "	TokenNameStringLiteral
+	TokenNamePLUS
result	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testNormalizeNoop	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
<	TokenNameLESS
RowPosition	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
l	TokenNameIdentifier
;	TokenNameSEMICOLON
l	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
,	TokenNameCOMMA
"3"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"4"	TokenNameStringLiteral
,	TokenNameCOMMA
"5"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNormalize	TokenNameIdentifier
(	TokenNameLPAREN
l	TokenNameIdentifier
,	TokenNameCOMMA
l	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testNormalizeSimpleOverlap	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
<	TokenNameLESS
RowPosition	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
input	TokenNameIdentifier
,	TokenNameCOMMA
expected	TokenNameIdentifier
;	TokenNameSEMICOLON
input	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
,	TokenNameCOMMA
"4"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"3"	TokenNameStringLiteral
,	TokenNameCOMMA
"5"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expected	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
,	TokenNameCOMMA
"5"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNormalize	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
expected	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
input	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
,	TokenNameCOMMA
"4"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
,	TokenNameCOMMA
"4"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expected	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
,	TokenNameCOMMA
"4"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNormalize	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
expected	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testNormalizeSort	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
<	TokenNameLESS
RowPosition	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
input	TokenNameIdentifier
,	TokenNameCOMMA
expected	TokenNameIdentifier
;	TokenNameSEMICOLON
input	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
"4"	TokenNameStringLiteral
,	TokenNameCOMMA
"5"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
,	TokenNameCOMMA
"3"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expected	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
,	TokenNameCOMMA
"3"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"4"	TokenNameStringLiteral
,	TokenNameCOMMA
"5"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNormalize	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
expected	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testNormalizeUnwrap	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
<	TokenNameLESS
RowPosition	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
input	TokenNameIdentifier
,	TokenNameCOMMA
expected	TokenNameIdentifier
;	TokenNameSEMICOLON
input	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
"9"	TokenNameStringLiteral
,	TokenNameCOMMA
"2"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expected	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
"2"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"9"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNormalize	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
expected	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Test	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
testNormalizeComplex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
<	TokenNameLESS
RowPosition	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
input	TokenNameIdentifier
,	TokenNameCOMMA
expected	TokenNameIdentifier
;	TokenNameSEMICOLON
input	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
"8"	TokenNameStringLiteral
,	TokenNameCOMMA
"2"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"7"	TokenNameStringLiteral
,	TokenNameCOMMA
"9"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"4"	TokenNameStringLiteral
,	TokenNameCOMMA
"5"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expected	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
"2"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"4"	TokenNameStringLiteral
,	TokenNameCOMMA
"5"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"7"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNormalize	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
expected	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
input	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
"5"	TokenNameStringLiteral
,	TokenNameCOMMA
"9"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"2"	TokenNameStringLiteral
,	TokenNameCOMMA
"5"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expected	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
"2"	TokenNameStringLiteral
,	TokenNameCOMMA
"9"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNormalize	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
expected	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
input	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
"1"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"9"	TokenNameStringLiteral
,	TokenNameCOMMA
"2"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"4"	TokenNameStringLiteral
,	TokenNameCOMMA
"5"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expected	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNormalize	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
expected	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
input	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
"1"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
,	TokenNameCOMMA
"4"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"4"	TokenNameStringLiteral
,	TokenNameCOMMA
"5"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
(	TokenNameLPAREN
"5"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expected	TokenNameIdentifier
=	TokenNameEQUAL
asList	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNormalize	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
expected	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
