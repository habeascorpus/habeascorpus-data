package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
config	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
reflect	TokenNameIdentifier
.	TokenNameDOT
Constructor	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
reflect	TokenNameIdentifier
.	TokenNameDOT
InvocationTargetException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
nio	TokenNameIdentifier
.	TokenNameDOT
ByteBuffer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
com	TokenNameIdentifier
.	TokenNameDOT
google	TokenNameIdentifier
.	TokenNameDOT
common	TokenNameIdentifier
.	TokenNameDOT
collect	TokenNameIdentifier
.	TokenNameDOT
MapDifference	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
com	TokenNameIdentifier
.	TokenNameDOT
google	TokenNameIdentifier
.	TokenNameDOT
common	TokenNameIdentifier
.	TokenNameDOT
collect	TokenNameIdentifier
.	TokenNameDOT
Maps	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
commons	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
ArrayUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
commons	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
StringUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
commons	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
builder	TokenNameIdentifier
.	TokenNameDOT
EqualsBuilder	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
commons	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
builder	TokenNameIdentifier
.	TokenNameDOT
HashCodeBuilder	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
commons	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
builder	TokenNameIdentifier
.	TokenNameDOT
ToStringBuilder	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
slf4j	TokenNameIdentifier
.	TokenNameDOT
Logger	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
slf4j	TokenNameIdentifier
.	TokenNameDOT
LoggerFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
auth	TokenNameIdentifier
.	TokenNameDOT
Auth	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql3	TokenNameIdentifier
.	TokenNameDOT
CFDefinition	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql3	TokenNameIdentifier
.	TokenNameDOT
QueryProcessor	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql3	TokenNameIdentifier
.	TokenNameDOT
UntypedResultSet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql3	TokenNameIdentifier
.	TokenNameDOT
statements	TokenNameIdentifier
.	TokenNameDOT
CreateColumnFamilyStatement	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
compaction	TokenNameIdentifier
.	TokenNameDOT
AbstractCompactionStrategy	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
compaction	TokenNameIdentifier
.	TokenNameDOT
LeveledCompactionStrategy	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
compaction	TokenNameIdentifier
.	TokenNameDOT
SizeTieredCompactionStrategy	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
SecondaryIndex	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
marshal	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
exceptions	TokenNameIdentifier
.	TokenNameDOT
ConfigurationException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
exceptions	TokenNameIdentifier
.	TokenNameDOT
InvalidRequestException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
exceptions	TokenNameIdentifier
.	TokenNameDOT
RequestValidationException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
exceptions	TokenNameIdentifier
.	TokenNameDOT
SyntaxException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IColumnSerializer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
compress	TokenNameIdentifier
.	TokenNameDOT
CompressionParameters	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
compress	TokenNameIdentifier
.	TokenNameDOT
SnappyCompressor	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
IndexType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
tracing	TokenNameIdentifier
.	TokenNameDOT
Tracing	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
ByteBufferUtil	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
FBUtilities	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
static	TokenNamestatic
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
FBUtilities	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
class	TokenNameclass
CFMetaData	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
Logger	TokenNameIdentifier
logger	TokenNameIdentifier
=	TokenNameEQUAL
LoggerFactory	TokenNameIdentifier
.	TokenNameDOT
getLogger	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
static	TokenNamestatic
double	TokenNamedouble
DEFAULT_READ_REPAIR_CHANCE	TokenNameIdentifier
=	TokenNameEQUAL
0.1	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
static	TokenNamestatic
double	TokenNamedouble
DEFAULT_DCLOCAL_READ_REPAIR_CHANCE	TokenNameIdentifier
=	TokenNameEQUAL
0.0	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
static	TokenNamestatic
boolean	TokenNameboolean
DEFAULT_REPLICATE_ON_WRITE	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
static	TokenNamestatic
int	TokenNameint
DEFAULT_GC_GRACE_SECONDS	TokenNameIdentifier
=	TokenNameEQUAL
864000	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
static	TokenNamestatic
int	TokenNameint
DEFAULT_MIN_COMPACTION_THRESHOLD	TokenNameIdentifier
=	TokenNameEQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
static	TokenNamestatic
int	TokenNameint
DEFAULT_MAX_COMPACTION_THRESHOLD	TokenNameIdentifier
=	TokenNameEQUAL
32	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
static	TokenNamestatic
Class	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
extends	TokenNameextends
AbstractCompactionStrategy	TokenNameIdentifier
>	TokenNameGREATER
DEFAULT_COMPACTION_STRATEGY_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
SizeTieredCompactionStrategy	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
static	TokenNamestatic
ByteBuffer	TokenNameIdentifier
DEFAULT_KEY_NAME	TokenNameIdentifier
=	TokenNameEQUAL
ByteBufferUtil	TokenNameIdentifier
.	TokenNameDOT
bytes	TokenNameIdentifier
(	TokenNameLPAREN
"KEY"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
static	TokenNamestatic
Caching	TokenNameIdentifier
DEFAULT_CACHING_STRATEGY	TokenNameIdentifier
=	TokenNameEQUAL
Caching	TokenNameIdentifier
.	TokenNameDOT
KEYS_ONLY	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
static	TokenNamestatic
String	TokenNameIdentifier
DEFAULT_COMPRESSOR	TokenNameIdentifier
=	TokenNameEQUAL
SnappyCompressor	TokenNameIdentifier
.	TokenNameDOT
isAvailable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
SnappyCompressor	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
.	TokenNameDOT
getCanonicalName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
;	TokenNameSEMICOLON
@	TokenNameAT
Deprecated	TokenNameIdentifier
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
OldStatusCf	TokenNameIdentifier
=	TokenNameEQUAL
newSystemMetadata	TokenNameIdentifier
(	TokenNameLPAREN
Table	TokenNameIdentifier
.	TokenNameDOT
SYSTEM_KS	TokenNameIdentifier
,	TokenNameCOMMA
SystemTable	TokenNameIdentifier
.	TokenNameDOT
OLD_STATUS_CF	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
"unused"	TokenNameStringLiteral
,	TokenNameCOMMA
BytesType	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
@	TokenNameAT
Deprecated	TokenNameIdentifier
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
OldHintsCf	TokenNameIdentifier
=	TokenNameEQUAL
newSystemMetadata	TokenNameIdentifier
(	TokenNameLPAREN
Table	TokenNameIdentifier
.	TokenNameDOT
SYSTEM_KS	TokenNameIdentifier
,	TokenNameCOMMA
SystemTable	TokenNameIdentifier
.	TokenNameDOT
OLD_HINTS_CF	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
"unused"	TokenNameStringLiteral
,	TokenNameCOMMA
BytesType	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
,	TokenNameCOMMA
BytesType	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
@	TokenNameAT
Deprecated	TokenNameIdentifier
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
OldMigrationsCf	TokenNameIdentifier
=	TokenNameEQUAL
newSystemMetadata	TokenNameIdentifier
(	TokenNameLPAREN
Table	TokenNameIdentifier
.	TokenNameDOT
SYSTEM_KS	TokenNameIdentifier
,	TokenNameCOMMA
DefsTable	TokenNameIdentifier
.	TokenNameDOT
OLD_MIGRATIONS_CF	TokenNameIdentifier
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
"unused"	TokenNameStringLiteral
,	TokenNameCOMMA
TimeUUIDType	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
@	TokenNameAT
Deprecated	TokenNameIdentifier
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
OldSchemaCf	TokenNameIdentifier
=	TokenNameEQUAL
newSystemMetadata	TokenNameIdentifier
(	TokenNameLPAREN
Table	TokenNameIdentifier
.	TokenNameDOT
SYSTEM_KS	TokenNameIdentifier
,	TokenNameCOMMA
DefsTable	TokenNameIdentifier
.	TokenNameDOT
OLD_SCHEMA_CF	TokenNameIdentifier
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
"unused"	TokenNameStringLiteral
,	TokenNameCOMMA
UTF8Type	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
IndexCf	TokenNameIdentifier
=	TokenNameEQUAL
compile	TokenNameIdentifier
(	TokenNameLPAREN
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
"CREATE TABLE ""	TokenNameStringLiteral
+	TokenNamePLUS
SystemTable	TokenNameIdentifier
.	TokenNameDOT
INDEX_CF	TokenNameIdentifier
+	TokenNamePLUS
"" ("	TokenNameStringLiteral
+	TokenNamePLUS
"table_name text,"	TokenNameStringLiteral
+	TokenNamePLUS
"index_name text,"	TokenNameStringLiteral
+	TokenNamePLUS
"PRIMARY KEY (table_name, index_name)"	TokenNameStringLiteral
+	TokenNamePLUS
") WITH COMPACT STORAGE AND COMMENT='indexes that have been completed'"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
CounterIdCf	TokenNameIdentifier
=	TokenNameEQUAL
compile	TokenNameIdentifier
(	TokenNameLPAREN
6	TokenNameIntegerLiteral
,	TokenNameCOMMA
"CREATE TABLE ""	TokenNameStringLiteral
+	TokenNamePLUS
SystemTable	TokenNameIdentifier
.	TokenNameDOT
COUNTER_ID_CF	TokenNameIdentifier
+	TokenNamePLUS
"" ("	TokenNameStringLiteral
+	TokenNamePLUS
"key text,"	TokenNameStringLiteral
+	TokenNamePLUS
"id timeuuid,"	TokenNameStringLiteral
+	TokenNamePLUS
"PRIMARY KEY (key, id)"	TokenNameStringLiteral
+	TokenNamePLUS
") WITH COMPACT STORAGE AND COMMENT='counter node IDs'"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
SchemaKeyspacesCf	TokenNameIdentifier
=	TokenNameEQUAL
compile	TokenNameIdentifier
(	TokenNameLPAREN
8	TokenNameIntegerLiteral
,	TokenNameCOMMA
"CREATE TABLE "	TokenNameStringLiteral
+	TokenNamePLUS
SystemTable	TokenNameIdentifier
.	TokenNameDOT
SCHEMA_KEYSPACES_CF	TokenNameIdentifier
+	TokenNamePLUS
"("	TokenNameStringLiteral
+	TokenNamePLUS
"keyspace_name text PRIMARY KEY,"	TokenNameStringLiteral
+	TokenNamePLUS
"durable_writes boolean,"	TokenNameStringLiteral
+	TokenNamePLUS
"strategy_class text,"	TokenNameStringLiteral
+	TokenNamePLUS
"strategy_options text"	TokenNameStringLiteral
+	TokenNamePLUS
") WITH COMPACT STORAGE AND COMMENT='keyspace definitions' AND gc_grace_seconds=8640"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
SchemaColumnFamiliesCf	TokenNameIdentifier
=	TokenNameEQUAL
compile	TokenNameIdentifier
(	TokenNameLPAREN
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
"CREATE TABLE "	TokenNameStringLiteral
+	TokenNamePLUS
SystemTable	TokenNameIdentifier
.	TokenNameDOT
SCHEMA_COLUMNFAMILIES_CF	TokenNameIdentifier
+	TokenNamePLUS
"("	TokenNameStringLiteral
+	TokenNamePLUS
"keyspace_name text,"	TokenNameStringLiteral
+	TokenNamePLUS
"columnfamily_name text,"	TokenNameStringLiteral
+	TokenNamePLUS
"id int,"	TokenNameStringLiteral
+	TokenNamePLUS
"type text,"	TokenNameStringLiteral
+	TokenNamePLUS
"comparator text,"	TokenNameStringLiteral
+	TokenNamePLUS
"subcomparator text,"	TokenNameStringLiteral
+	TokenNamePLUS
"comment text,"	TokenNameStringLiteral
+	TokenNamePLUS
"read_repair_chance double,"	TokenNameStringLiteral
+	TokenNamePLUS
"local_read_repair_chance double,"	TokenNameStringLiteral
+	TokenNamePLUS
"replicate_on_write boolean,"	TokenNameStringLiteral
+	TokenNamePLUS
"gc_grace_seconds int,"	TokenNameStringLiteral
+	TokenNamePLUS
"default_validator text,"	TokenNameStringLiteral
+	TokenNamePLUS
"key_validator text,"	TokenNameStringLiteral
+	TokenNamePLUS
"min_compaction_threshold int,"	TokenNameStringLiteral
+	TokenNamePLUS
"max_compaction_threshold int,"	TokenNameStringLiteral
+	TokenNamePLUS
"key_alias text,"	TokenNameStringLiteral
+	TokenNamePLUS
"key_aliases text,"	TokenNameStringLiteral
+	TokenNamePLUS
"bloom_filter_fp_chance double,"	TokenNameStringLiteral
+	TokenNamePLUS
"caching text,"	TokenNameStringLiteral
+	TokenNamePLUS
"compaction_strategy_class text,"	TokenNameStringLiteral
+	TokenNamePLUS
"compression_parameters text,"	TokenNameStringLiteral
+	TokenNamePLUS
"value_alias text,"	TokenNameStringLiteral
+	TokenNamePLUS
"column_aliases text,"	TokenNameStringLiteral
+	TokenNamePLUS
"compaction_strategy_options text,"	TokenNameStringLiteral
+	TokenNamePLUS
"default_read_consistency text,"	TokenNameStringLiteral
+	TokenNamePLUS
"default_write_consistency text,"	TokenNameStringLiteral
+	TokenNamePLUS
"PRIMARY KEY (keyspace_name, columnfamily_name)"	TokenNameStringLiteral
+	TokenNamePLUS
") WITH COMMENT='ColumnFamily definitions' AND gc_grace_seconds=8640"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
SchemaColumnsCf	TokenNameIdentifier
=	TokenNameEQUAL
compile	TokenNameIdentifier
(	TokenNameLPAREN
10	TokenNameIntegerLiteral
,	TokenNameCOMMA
"CREATE TABLE "	TokenNameStringLiteral
+	TokenNamePLUS
SystemTable	TokenNameIdentifier
.	TokenNameDOT
SCHEMA_COLUMNS_CF	TokenNameIdentifier
+	TokenNamePLUS
"("	TokenNameStringLiteral
+	TokenNamePLUS
"keyspace_name text,"	TokenNameStringLiteral
+	TokenNamePLUS
"columnfamily_name text,"	TokenNameStringLiteral
+	TokenNamePLUS
"column_name text,"	TokenNameStringLiteral
+	TokenNamePLUS
"validator text,"	TokenNameStringLiteral
+	TokenNamePLUS
"index_type text,"	TokenNameStringLiteral
+	TokenNamePLUS
"index_options text,"	TokenNameStringLiteral
+	TokenNamePLUS
"index_name text,"	TokenNameStringLiteral
+	TokenNamePLUS
"component_index int,"	TokenNameStringLiteral
+	TokenNamePLUS
"PRIMARY KEY(keyspace_name, columnfamily_name, column_name)"	TokenNameStringLiteral
+	TokenNamePLUS
") WITH COMMENT='ColumnFamily column attributes' AND gc_grace_seconds=8640"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
HintsCf	TokenNameIdentifier
=	TokenNameEQUAL
compile	TokenNameIdentifier
(	TokenNameLPAREN
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
"CREATE TABLE "	TokenNameStringLiteral
+	TokenNamePLUS
SystemTable	TokenNameIdentifier
.	TokenNameDOT
HINTS_CF	TokenNameIdentifier
+	TokenNamePLUS
" ("	TokenNameStringLiteral
+	TokenNamePLUS
"target_id uuid,"	TokenNameStringLiteral
+	TokenNamePLUS
"hint_id timeuuid,"	TokenNameStringLiteral
+	TokenNamePLUS
"message_version int,"	TokenNameStringLiteral
+	TokenNamePLUS
"mutation blob,"	TokenNameStringLiteral
+	TokenNamePLUS
"PRIMARY KEY (target_id, hint_id, message_version)"	TokenNameStringLiteral
+	TokenNamePLUS
") WITH COMPACT STORAGE "	TokenNameStringLiteral
+	TokenNamePLUS
"AND COMPACTION={'class' : 'SizeTieredCompactionStrategy', 'min_threshold' : 0, 'max_threshold' : 0} "	TokenNameStringLiteral
+	TokenNamePLUS
"AND COMMENT='hints awaiting delivery'"	TokenNameStringLiteral
+	TokenNamePLUS
"AND gc_grace_seconds=0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
PeersCf	TokenNameIdentifier
=	TokenNameEQUAL
compile	TokenNameIdentifier
(	TokenNameLPAREN
12	TokenNameIntegerLiteral
,	TokenNameCOMMA
"CREATE TABLE "	TokenNameStringLiteral
+	TokenNamePLUS
SystemTable	TokenNameIdentifier
.	TokenNameDOT
PEERS_CF	TokenNameIdentifier
+	TokenNamePLUS
" ("	TokenNameStringLiteral
+	TokenNamePLUS
"peer inet PRIMARY KEY,"	TokenNameStringLiteral
+	TokenNamePLUS
"host_id uuid,"	TokenNameStringLiteral
+	TokenNamePLUS
"tokens set<varchar>,"	TokenNameStringLiteral
+	TokenNamePLUS
"schema_version uuid,"	TokenNameStringLiteral
+	TokenNamePLUS
"release_version text,"	TokenNameStringLiteral
+	TokenNamePLUS
"rpc_address inet,"	TokenNameStringLiteral
+	TokenNamePLUS
"data_center text,"	TokenNameStringLiteral
+	TokenNamePLUS
"rack text"	TokenNameStringLiteral
+	TokenNamePLUS
") WITH COMMENT='known peers in the cluster'"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
LocalCf	TokenNameIdentifier
=	TokenNameEQUAL
compile	TokenNameIdentifier
(	TokenNameLPAREN
13	TokenNameIntegerLiteral
,	TokenNameCOMMA
"CREATE TABLE "	TokenNameStringLiteral
+	TokenNamePLUS
SystemTable	TokenNameIdentifier
.	TokenNameDOT
LOCAL_CF	TokenNameIdentifier
+	TokenNamePLUS
" ("	TokenNameStringLiteral
+	TokenNamePLUS
"key text PRIMARY KEY,"	TokenNameStringLiteral
+	TokenNamePLUS
"tokens set<varchar>,"	TokenNameStringLiteral
+	TokenNamePLUS
"cluster_name text,"	TokenNameStringLiteral
+	TokenNamePLUS
"gossip_generation int,"	TokenNameStringLiteral
+	TokenNamePLUS
"bootstrapped text,"	TokenNameStringLiteral
+	TokenNamePLUS
"host_id uuid,"	TokenNameStringLiteral
+	TokenNamePLUS
"release_version text,"	TokenNameStringLiteral
+	TokenNamePLUS
"thrift_version text,"	TokenNameStringLiteral
+	TokenNamePLUS
"cql_version text,"	TokenNameStringLiteral
+	TokenNamePLUS
"data_center text,"	TokenNameStringLiteral
+	TokenNamePLUS
"rack text,"	TokenNameStringLiteral
+	TokenNamePLUS
"partitioner text,"	TokenNameStringLiteral
+	TokenNamePLUS
"schema_version uuid,"	TokenNameStringLiteral
+	TokenNamePLUS
"truncated_at map<uuid, blob>"	TokenNameStringLiteral
+	TokenNamePLUS
") WITH COMMENT='information about the local node'"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
TraceSessionsCf	TokenNameIdentifier
=	TokenNameEQUAL
compile	TokenNameIdentifier
(	TokenNameLPAREN
14	TokenNameIntegerLiteral
,	TokenNameCOMMA
"CREATE TABLE "	TokenNameStringLiteral
+	TokenNamePLUS
Tracing	TokenNameIdentifier
.	TokenNameDOT
SESSIONS_CF	TokenNameIdentifier
+	TokenNamePLUS
" ("	TokenNameStringLiteral
+	TokenNamePLUS
"  session_id uuid PRIMARY KEY,"	TokenNameStringLiteral
+	TokenNamePLUS
"  coordinator inet,"	TokenNameStringLiteral
+	TokenNamePLUS
"  request text,"	TokenNameStringLiteral
+	TokenNamePLUS
"  started_at timestamp,"	TokenNameStringLiteral
+	TokenNamePLUS
"  parameters map<text, text>,"	TokenNameStringLiteral
+	TokenNamePLUS
"  duration int"	TokenNameStringLiteral
+	TokenNamePLUS
") WITH COMMENT='traced sessions'"	TokenNameStringLiteral
,	TokenNameCOMMA
Tracing	TokenNameIdentifier
.	TokenNameDOT
TRACE_KS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
TraceEventsCf	TokenNameIdentifier
=	TokenNameEQUAL
compile	TokenNameIdentifier
(	TokenNameLPAREN
15	TokenNameIntegerLiteral
,	TokenNameCOMMA
"CREATE TABLE "	TokenNameStringLiteral
+	TokenNamePLUS
Tracing	TokenNameIdentifier
.	TokenNameDOT
EVENTS_CF	TokenNameIdentifier
+	TokenNamePLUS
" ("	TokenNameStringLiteral
+	TokenNamePLUS
"  session_id uuid,"	TokenNameStringLiteral
+	TokenNamePLUS
"  event_id timeuuid,"	TokenNameStringLiteral
+	TokenNamePLUS
"  source inet,"	TokenNameStringLiteral
+	TokenNamePLUS
"  thread text,"	TokenNameStringLiteral
+	TokenNamePLUS
"  activity text,"	TokenNameStringLiteral
+	TokenNamePLUS
"  source_elapsed int,"	TokenNameStringLiteral
+	TokenNamePLUS
"  PRIMARY KEY (session_id, event_id)"	TokenNameStringLiteral
+	TokenNamePLUS
");"	TokenNameStringLiteral
,	TokenNameCOMMA
Tracing	TokenNameIdentifier
.	TokenNameDOT
TRACE_KS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
BatchlogCF	TokenNameIdentifier
=	TokenNameEQUAL
compile	TokenNameIdentifier
(	TokenNameLPAREN
16	TokenNameIntegerLiteral
,	TokenNameCOMMA
"CREATE TABLE "	TokenNameStringLiteral
+	TokenNamePLUS
SystemTable	TokenNameIdentifier
.	TokenNameDOT
BATCHLOG_CF	TokenNameIdentifier
+	TokenNamePLUS
" ("	TokenNameStringLiteral
+	TokenNamePLUS
"id uuid PRIMARY KEY,"	TokenNameStringLiteral
+	TokenNamePLUS
"written_at timestamp,"	TokenNameStringLiteral
+	TokenNamePLUS
"data blob"	TokenNameStringLiteral
+	TokenNamePLUS
") WITH COMMENT='uncommited batches' AND gc_grace_seconds=0 "	TokenNameStringLiteral
+	TokenNamePLUS
"AND COMPACTION={'class' : 'SizeTieredCompactionStrategy', 'min_threshold' : 2}"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
RangeXfersCf	TokenNameIdentifier
=	TokenNameEQUAL
compile	TokenNameIdentifier
(	TokenNameLPAREN
17	TokenNameIntegerLiteral
,	TokenNameCOMMA
"CREATE TABLE "	TokenNameStringLiteral
+	TokenNamePLUS
SystemTable	TokenNameIdentifier
.	TokenNameDOT
RANGE_XFERS_CF	TokenNameIdentifier
+	TokenNamePLUS
" ("	TokenNameStringLiteral
+	TokenNamePLUS
"token_bytes blob PRIMARY KEY,"	TokenNameStringLiteral
+	TokenNamePLUS
"requested_at timestamp"	TokenNameStringLiteral
+	TokenNamePLUS
") WITH COMMENT='ranges requested for transfer here'"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
AuthUsersCf	TokenNameIdentifier
=	TokenNameEQUAL
compile	TokenNameIdentifier
(	TokenNameLPAREN
18	TokenNameIntegerLiteral
,	TokenNameCOMMA
"CREATE TABLE "	TokenNameStringLiteral
+	TokenNamePLUS
Auth	TokenNameIdentifier
.	TokenNameDOT
USERS_CF	TokenNameIdentifier
+	TokenNamePLUS
" ("	TokenNameStringLiteral
+	TokenNamePLUS
"name text PRIMARY KEY,"	TokenNameStringLiteral
+	TokenNamePLUS
"super boolean"	TokenNameStringLiteral
+	TokenNamePLUS
") WITH gc_grace_seconds=864000;"	TokenNameStringLiteral
,	TokenNameCOMMA
Auth	TokenNameIdentifier
.	TokenNameDOT
AUTH_KS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
enum	TokenNameenum
Caching	TokenNameIdentifier
{	TokenNameLBRACE
ALL	TokenNameIdentifier
,	TokenNameCOMMA
KEYS_ONLY	TokenNameIdentifier
,	TokenNameCOMMA
ROWS_ONLY	TokenNameIdentifier
,	TokenNameCOMMA
NONE	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
Caching	TokenNameIdentifier
fromString	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
cache	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ConfigurationException	TokenNameIdentifier
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
valueOf	TokenNameIdentifier
(	TokenNameLPAREN
cache	TokenNameIdentifier
.	TokenNameDOT
toUpperCase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
IllegalArgumentException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"%s not found, available types: %s."	TokenNameStringLiteral
,	TokenNameCOMMA
cache	TokenNameIdentifier
,	TokenNameCOMMA
StringUtils	TokenNameIdentifier
.	TokenNameDOT
join	TokenNameIdentifier
(	TokenNameLPAREN
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
", "	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
UUID	TokenNameIdentifier
cfId	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
String	TokenNameIdentifier
ksName	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
String	TokenNameIdentifier
cfName	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
ColumnFamilyType	TokenNameIdentifier
cfType	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
volatile	TokenNamevolatile
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
comparator	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
volatile	TokenNamevolatile
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
subcolumnComparator	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
String	TokenNameIdentifier
comment	TokenNameIdentifier
=	TokenNameEQUAL
""	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
double	TokenNamedouble
readRepairChance	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_READ_REPAIR_CHANCE	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
double	TokenNamedouble
dcLocalReadRepairChance	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_DCLOCAL_READ_REPAIR_CHANCE	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
boolean	TokenNameboolean
replicateOnWrite	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_REPLICATE_ON_WRITE	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
int	TokenNameint
gcGraceSeconds	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_GC_GRACE_SECONDS	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
defaultValidator	TokenNameIdentifier
=	TokenNameEQUAL
BytesType	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
keyValidator	TokenNameIdentifier
=	TokenNameEQUAL
BytesType	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
int	TokenNameint
minCompactionThreshold	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_MIN_COMPACTION_THRESHOLD	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
int	TokenNameint
maxCompactionThreshold	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_MAX_COMPACTION_THRESHOLD	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
List	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
keyAliases	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
List	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
columnAliases	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
ByteBuffer	TokenNameIdentifier
valueAlias	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
Double	TokenNameIdentifier
bloomFilterFpChance	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
Caching	TokenNameIdentifier
caching	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_CACHING_STRATEGY	TokenNameIdentifier
;	TokenNameSEMICOLON
volatile	TokenNamevolatile
Map	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
ColumnDefinition	TokenNameIdentifier
>	TokenNameGREATER
column_metadata	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
ColumnDefinition	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
volatile	TokenNamevolatile
Class	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
extends	TokenNameextends
AbstractCompactionStrategy	TokenNameIdentifier
>	TokenNameGREATER
compactionStrategyClass	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_COMPACTION_STRATEGY_CLASS	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
volatile	TokenNamevolatile
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
compactionStrategyOptions	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
volatile	TokenNamevolatile
CompressionParameters	TokenNameIdentifier
compressionParameters	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CompressionParameters	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
CFDefinition	TokenNameIdentifier
cqlCfDef	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
comment	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
comment	TokenNameIdentifier
=	TokenNameEQUAL
enforceCommentNotNull	TokenNameIdentifier
(	TokenNameLPAREN
prop	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
readRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
readRepairChance	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
dcLocalReadRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
dcLocalReadRepairChance	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
replicateOnWrite	TokenNameIdentifier
(	TokenNameLPAREN
boolean	TokenNameboolean
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
replicateOnWrite	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
gcGraceSeconds	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
gcGraceSeconds	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
defaultValidator	TokenNameIdentifier
(	TokenNameLPAREN
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
defaultValidator	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
updateCfDef	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
keyValidator	TokenNameIdentifier
(	TokenNameLPAREN
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
keyValidator	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
updateCfDef	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
minCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
minCompactionThreshold	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
maxCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
maxCompactionThreshold	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
keyAliases	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
keyAliases	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
updateCfDef	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
columnAliases	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
columnAliases	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
updateCfDef	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
valueAlias	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
valueAlias	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
updateCfDef	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
columnMetadata	TokenNameIdentifier
(	TokenNameLPAREN
Map	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
ColumnDefinition	TokenNameIdentifier
>	TokenNameGREATER
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
column_metadata	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
updateCfDef	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
compactionStrategyClass	TokenNameIdentifier
(	TokenNameLPAREN
Class	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
extends	TokenNameextends
AbstractCompactionStrategy	TokenNameIdentifier
>	TokenNameGREATER
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
compactionStrategyClass	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
compactionStrategyOptions	TokenNameIdentifier
(	TokenNameLPAREN
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
compactionStrategyOptions	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
compressionParameters	TokenNameIdentifier
(	TokenNameLPAREN
CompressionParameters	TokenNameIdentifier
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
compressionParameters	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
bloomFilterFpChance	TokenNameIdentifier
(	TokenNameLPAREN
Double	TokenNameIdentifier
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
bloomFilterFpChance	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
caching	TokenNameIdentifier
(	TokenNameLPAREN
Caching	TokenNameIdentifier
prop	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
caching	TokenNameIdentifier
=	TokenNameEQUAL
prop	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
name	TokenNameIdentifier
,	TokenNameCOMMA
ColumnFamilyType	TokenNameIdentifier
type	TokenNameIdentifier
,	TokenNameCOMMA
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
comp	TokenNameIdentifier
,	TokenNameCOMMA
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
subcc	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
name	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
,	TokenNameCOMMA
comp	TokenNameIdentifier
,	TokenNameCOMMA
subcc	TokenNameIdentifier
,	TokenNameCOMMA
getId	TokenNameIdentifier
(	TokenNameLPAREN
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
name	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
CFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
name	TokenNameIdentifier
,	TokenNameCOMMA
ColumnFamilyType	TokenNameIdentifier
type	TokenNameIdentifier
,	TokenNameCOMMA
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
comp	TokenNameIdentifier
,	TokenNameCOMMA
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
subcc	TokenNameIdentifier
,	TokenNameCOMMA
UUID	TokenNameIdentifier
id	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ksName	TokenNameIdentifier
=	TokenNameEQUAL
keyspace	TokenNameIdentifier
;	TokenNameSEMICOLON
cfName	TokenNameIdentifier
=	TokenNameEQUAL
name	TokenNameIdentifier
;	TokenNameSEMICOLON
cfType	TokenNameIdentifier
=	TokenNameEQUAL
type	TokenNameIdentifier
;	TokenNameSEMICOLON
comparator	TokenNameIdentifier
=	TokenNameEQUAL
comp	TokenNameIdentifier
;	TokenNameSEMICOLON
subcolumnComparator	TokenNameIdentifier
=	TokenNameEQUAL
enforceSubccDefault	TokenNameIdentifier
(	TokenNameLPAREN
type	TokenNameIdentifier
,	TokenNameCOMMA
subcc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfId	TokenNameIdentifier
=	TokenNameEQUAL
id	TokenNameIdentifier
;	TokenNameSEMICOLON
updateCfDef	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
CFMetaData	TokenNameIdentifier
compile	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
id	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cql	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
CreateColumnFamilyStatement	TokenNameIdentifier
statement	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
CreateColumnFamilyStatement	TokenNameIdentifier
)	TokenNameRPAREN
QueryProcessor	TokenNameIdentifier
.	TokenNameDOT
parseStatement	TokenNameIdentifier
(	TokenNameLPAREN
cql	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
prepare	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
statement	TokenNameIdentifier
;	TokenNameSEMICOLON
CFMetaData	TokenNameIdentifier
cfmd	TokenNameIdentifier
=	TokenNameEQUAL
newSystemMetadata	TokenNameIdentifier
(	TokenNameLPAREN
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
statement	TokenNameIdentifier
.	TokenNameDOT
columnFamily	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
id	TokenNameIdentifier
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
statement	TokenNameIdentifier
.	TokenNameDOT
comparator	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
statement	TokenNameIdentifier
.	TokenNameDOT
applyPropertiesTo	TokenNameIdentifier
(	TokenNameLPAREN
cfmd	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
cfmd	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RequestValidationException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
CFMetaData	TokenNameIdentifier
compile	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
id	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cql	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
compile	TokenNameIdentifier
(	TokenNameLPAREN
id	TokenNameIdentifier
,	TokenNameCOMMA
cql	TokenNameIdentifier
,	TokenNameCOMMA
Table	TokenNameIdentifier
.	TokenNameDOT
SYSTEM_KS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
enforceSubccDefault	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamilyType	TokenNameIdentifier
cftype	TokenNameIdentifier
,	TokenNameCOMMA
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
subcc	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
subcc	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
cftype	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ColumnFamilyType	TokenNameIdentifier
.	TokenNameDOT
Super	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
BytesType	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
:	TokenNameCOLON
subcc	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
String	TokenNameIdentifier
enforceCommentNotNull	TokenNameIdentifier
(	TokenNameLPAREN
CharSequence	TokenNameIdentifier
comment	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
comment	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
""	TokenNameStringLiteral
:	TokenNameCOLON
comment	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
UUID	TokenNameIdentifier
getId	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
ksName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cfName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
UUID	TokenNameIdentifier
.	TokenNameDOT
nameUUIDFromBytes	TokenNameIdentifier
(	TokenNameLPAREN
ArrayUtils	TokenNameIdentifier
.	TokenNameDOT
addAll	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
.	TokenNameDOT
getBytes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
cfName	TokenNameIdentifier
.	TokenNameDOT
getBytes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
init	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
updateCfDef	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
CFMetaData	TokenNameIdentifier
newSystemMetadata	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cfName	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
oldCfId	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
comment	TokenNameIdentifier
,	TokenNameCOMMA
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
comparator	TokenNameIdentifier
,	TokenNameCOMMA
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
subcc	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ColumnFamilyType	TokenNameIdentifier
type	TokenNameIdentifier
=	TokenNameEQUAL
subcc	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
ColumnFamilyType	TokenNameIdentifier
.	TokenNameDOT
Standard	TokenNameIdentifier
:	TokenNameCOLON
ColumnFamilyType	TokenNameIdentifier
.	TokenNameDOT
Super	TokenNameIdentifier
;	TokenNameSEMICOLON
CFMetaData	TokenNameIdentifier
newCFMD	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
,	TokenNameCOMMA
comparator	TokenNameIdentifier
,	TokenNameCOMMA
subcc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
addOldCfIdMapping	TokenNameIdentifier
(	TokenNameLPAREN
oldCfId	TokenNameIdentifier
,	TokenNameCOMMA
newCFMD	TokenNameIdentifier
.	TokenNameDOT
cfId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
newCFMD	TokenNameIdentifier
.	TokenNameDOT
comment	TokenNameIdentifier
(	TokenNameLPAREN
comment	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
readRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
.	TokenNameDOT
dcLocalReadRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
.	TokenNameDOT
gcGraceSeconds	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
CFMetaData	TokenNameIdentifier
newIndexMetadata	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
parent	TokenNameIdentifier
,	TokenNameCOMMA
ColumnDefinition	TokenNameIdentifier
info	TokenNameIdentifier
,	TokenNameCOMMA
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
columnComparator	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Caching	TokenNameIdentifier
indexCaching	TokenNameIdentifier
=	TokenNameEQUAL
parent	TokenNameIdentifier
.	TokenNameDOT
getCaching	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
Caching	TokenNameIdentifier
.	TokenNameDOT
ALL	TokenNameIdentifier
||	TokenNameOR_OR
parent	TokenNameIdentifier
.	TokenNameDOT
getCaching	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
Caching	TokenNameIdentifier
.	TokenNameDOT
KEYS_ONLY	TokenNameIdentifier
?	TokenNameQUESTION
Caching	TokenNameIdentifier
.	TokenNameDOT
KEYS_ONLY	TokenNameIdentifier
:	TokenNameCOLON
Caching	TokenNameIdentifier
.	TokenNameDOT
NONE	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
CFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
parent	TokenNameIdentifier
.	TokenNameDOT
ksName	TokenNameIdentifier
,	TokenNameCOMMA
parent	TokenNameIdentifier
.	TokenNameDOT
indexColumnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
info	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
ColumnFamilyType	TokenNameIdentifier
.	TokenNameDOT
Standard	TokenNameIdentifier
,	TokenNameCOMMA
columnComparator	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
.	TokenNameDOT
keyValidator	TokenNameIdentifier
(	TokenNameLPAREN
info	TokenNameIdentifier
.	TokenNameDOT
getValidator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
readRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
0.0	TokenNameDoubleLiteral
)	TokenNameRPAREN
.	TokenNameDOT
dcLocalReadRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
0.0	TokenNameDoubleLiteral
)	TokenNameRPAREN
.	TokenNameDOT
gcGraceSeconds	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
.	TokenNameDOT
caching	TokenNameIdentifier
(	TokenNameLPAREN
indexCaching	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
compactionStrategyClass	TokenNameIdentifier
(	TokenNameLPAREN
parent	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyClass	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
compactionStrategyOptions	TokenNameIdentifier
(	TokenNameLPAREN
parent	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyOptions	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
reloadSecondaryIndexMetadata	TokenNameIdentifier
(	TokenNameLPAREN
parent	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
reloadSecondaryIndexMetadata	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
parent	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
minCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
parent	TokenNameIdentifier
.	TokenNameDOT
minCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
maxCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
parent	TokenNameIdentifier
.	TokenNameDOT
maxCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
compactionStrategyClass	TokenNameIdentifier
(	TokenNameLPAREN
parent	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyClass	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
compactionStrategyOptions	TokenNameIdentifier
(	TokenNameLPAREN
parent	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyOptions	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
compressionParameters	TokenNameIdentifier
(	TokenNameLPAREN
parent	TokenNameIdentifier
.	TokenNameDOT
compressionParameters	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
clone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
copyOpts	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
CFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
cfType	TokenNameIdentifier
,	TokenNameCOMMA
comparator	TokenNameIdentifier
,	TokenNameCOMMA
subcolumnComparator	TokenNameIdentifier
,	TokenNameCOMMA
cfId	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
CFMetaData	TokenNameIdentifier
rename	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
cfm	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
newName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
copyOpts	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
CFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
cfm	TokenNameIdentifier
.	TokenNameDOT
ksName	TokenNameIdentifier
,	TokenNameCOMMA
newName	TokenNameIdentifier
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
cfType	TokenNameIdentifier
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
comparator	TokenNameIdentifier
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
subcolumnComparator	TokenNameIdentifier
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
cfId	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
cfm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
CFMetaData	TokenNameIdentifier
copyOpts	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
newCFMD	TokenNameIdentifier
,	TokenNameCOMMA
CFMetaData	TokenNameIdentifier
oldCFMD	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Map	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
ColumnDefinition	TokenNameIdentifier
>	TokenNameGREATER
clonedColumns	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
ColumnDefinition	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
cd	TokenNameIdentifier
:	TokenNameCOLON
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
column_metadata	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ColumnDefinition	TokenNameIdentifier
cloned	TokenNameIdentifier
=	TokenNameEQUAL
cd	TokenNameIdentifier
.	TokenNameDOT
clone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
clonedColumns	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
cloned	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
cloned	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
newCFMD	TokenNameIdentifier
.	TokenNameDOT
comment	TokenNameIdentifier
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
comment	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
readRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
readRepairChance	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
dcLocalReadRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
dcLocalReadRepairChance	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
replicateOnWrite	TokenNameIdentifier
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
replicateOnWrite	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
gcGraceSeconds	TokenNameIdentifier
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
gcGraceSeconds	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
defaultValidator	TokenNameIdentifier
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
defaultValidator	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
keyValidator	TokenNameIdentifier
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
keyValidator	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
minCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
minCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
maxCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
maxCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
keyAliases	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
keyAliases	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
columnAliases	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
columnAliases	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
valueAlias	TokenNameIdentifier
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
valueAlias	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
columnMetadata	TokenNameIdentifier
(	TokenNameLPAREN
clonedColumns	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
compactionStrategyClass	TokenNameIdentifier
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyClass	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
compactionStrategyOptions	TokenNameIdentifier
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyOptions	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
compressionParameters	TokenNameIdentifier
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
compressionParameters	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
bloomFilterFpChance	TokenNameIdentifier
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
bloomFilterFpChance	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
caching	TokenNameIdentifier
(	TokenNameLPAREN
oldCFMD	TokenNameIdentifier
.	TokenNameDOT
caching	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
indexColumnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
info	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
cfName	TokenNameIdentifier
+	TokenNamePLUS
Directories	TokenNameIdentifier
.	TokenNameDOT
SECONDARY_INDEX_NAME_SEPARATOR	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
info	TokenNameIdentifier
.	TokenNameDOT
getIndexName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
ByteBufferUtil	TokenNameIdentifier
.	TokenNameDOT
bytesToHex	TokenNameIdentifier
(	TokenNameLPAREN
info	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
info	TokenNameIdentifier
.	TokenNameDOT
getIndexName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getComment	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
comment	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
getReadRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
readRepairChance	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
getDcLocalReadRepair	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
dcLocalReadRepairChance	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
getReplicateOnWrite	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
replicateOnWrite	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getGcGraceSeconds	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
gcGraceSeconds	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
getDefaultValidator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
defaultValidator	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
getKeyValidator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
keyValidator	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Integer	TokenNameIdentifier
getMinCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
minCompactionThreshold	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Integer	TokenNameIdentifier
getMaxCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
maxCompactionThreshold	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ByteBuffer	TokenNameIdentifier
getKeyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
keyAliases	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
IllegalStateException	TokenNameIdentifier
(	TokenNameLPAREN
"Cannot acces column family with composite key from CQL < 3.0.0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
keyAliases	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
DEFAULT_KEY_NAME	TokenNameIdentifier
:	TokenNameCOLON
keyAliases	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
getKeyAliases	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
keyAliases	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
getColumnAliases	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
columnAliases	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ByteBuffer	TokenNameIdentifier
getValueAlias	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
valueAlias	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CompressionParameters	TokenNameIdentifier
compressionParameters	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
compressionParameters	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Map	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
ColumnDefinition	TokenNameIdentifier
>	TokenNameGREATER
getColumn_metadata	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
Collections	TokenNameIdentifier
.	TokenNameDOT
unmodifiableMap	TokenNameIdentifier
(	TokenNameLPAREN
column_metadata	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
getComparatorFor	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
superColumnName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
superColumnName	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
comparator	TokenNameIdentifier
:	TokenNameCOLON
subcolumnComparator	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
getBloomFilterFpChance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
bloomFilterFpChance	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
compactionStrategyClass	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
LeveledCompactionStrategy	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
?	TokenNameQUESTION
0.1	TokenNameDoubleLiteral
:	TokenNameCOLON
0.01	TokenNameDoubleLiteral
:	TokenNameCOLON
bloomFilterFpChance	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Caching	TokenNameIdentifier
getCaching	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
caching	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
equals	TokenNameIdentifier
(	TokenNameLPAREN
Object	TokenNameIdentifier
obj	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
obj	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
this	TokenNamethis
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
obj	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
obj	TokenNameIdentifier
.	TokenNameDOT
getClass	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
getClass	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
CFMetaData	TokenNameIdentifier
rhs	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
)	TokenNameRPAREN
obj	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
EqualsBuilder	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
ksName	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
cfName	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
cfName	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
cfType	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
cfType	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
comparator	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
comparator	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
subcolumnComparator	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
subcolumnComparator	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
comment	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
comment	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
readRepairChance	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
readRepairChance	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
dcLocalReadRepairChance	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
dcLocalReadRepairChance	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
replicateOnWrite	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
replicateOnWrite	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
gcGraceSeconds	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
gcGraceSeconds	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
defaultValidator	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
defaultValidator	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
keyValidator	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
keyValidator	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
minCompactionThreshold	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
minCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
maxCompactionThreshold	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
maxCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
cfId	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
cfId	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
column_metadata	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
column_metadata	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
keyAliases	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
keyAliases	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
columnAliases	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
columnAliases	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
valueAlias	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
valueAlias	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
compactionStrategyClass	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyClass	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
compactionStrategyOptions	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyOptions	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
compressionParameters	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
compressionParameters	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
bloomFilterFpChance	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
bloomFilterFpChance	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
caching	TokenNameIdentifier
,	TokenNameCOMMA
rhs	TokenNameIdentifier
.	TokenNameDOT
caching	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
isEquals	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
hashCode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
HashCodeBuilder	TokenNameIdentifier
(	TokenNameLPAREN
29	TokenNameIntegerLiteral
,	TokenNameCOMMA
1597	TokenNameIntegerLiteral
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
cfName	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
cfType	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
comparator	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
subcolumnComparator	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
comment	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
readRepairChance	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
dcLocalReadRepairChance	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
replicateOnWrite	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
gcGraceSeconds	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
defaultValidator	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
keyValidator	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
minCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
maxCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
cfId	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
column_metadata	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
keyAliases	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
columnAliases	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
valueAlias	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
compactionStrategyClass	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
compactionStrategyOptions	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
compressionParameters	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
bloomFilterFpChance	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
caching	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
toHashCode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
getValueValidator	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
column	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getValueValidator	TokenNameIdentifier
(	TokenNameLPAREN
getColumnDefinition	TokenNameIdentifier
(	TokenNameLPAREN
column	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
getValueValidator	TokenNameIdentifier
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
columnDefinition	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
columnDefinition	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
defaultValidator	TokenNameIdentifier
:	TokenNameCOLON
columnDefinition	TokenNameIdentifier
.	TokenNameDOT
getValidator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
applyImplicitDefaults	TokenNameIdentifier
(	TokenNameLPAREN
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
CfDef	TokenNameIdentifier
cf_def	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetComment	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
setComment	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetReplicate_on_write	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
setReplicate_on_write	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
.	TokenNameDOT
DEFAULT_REPLICATE_ON_WRITE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetMin_compaction_threshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
setMin_compaction_threshold	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
.	TokenNameDOT
DEFAULT_MIN_COMPACTION_THRESHOLD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetMax_compaction_threshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
setMax_compaction_threshold	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
.	TokenNameDOT
DEFAULT_MAX_COMPACTION_THRESHOLD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
compaction_strategy	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
compaction_strategy	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_COMPACTION_STRATEGY_CLASS	TokenNameIdentifier
.	TokenNameDOT
getSimpleName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
compaction_strategy_options	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
compaction_strategy_options	TokenNameIdentifier
=	TokenNameEQUAL
Collections	TokenNameIdentifier
.	TokenNameDOT
emptyMap	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetCompression_options	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
cf_def	TokenNameIdentifier
.	TokenNameDOT
setCompression_options	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
DEFAULT_COMPRESSOR	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
put	TokenNameIdentifier
(	TokenNameLPAREN
CompressionParameters	TokenNameIdentifier
.	TokenNameDOT
SSTABLE_COMPRESSION	TokenNameIdentifier
,	TokenNameCOMMA
DEFAULT_COMPRESSOR	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetDclocal_read_repair_chance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
setDclocal_read_repair_chance	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
.	TokenNameDOT
DEFAULT_DCLOCAL_READ_REPAIR_CHANCE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
CFMetaData	TokenNameIdentifier
fromThrift	TokenNameIdentifier
(	TokenNameLPAREN
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
CfDef	TokenNameIdentifier
cf_def	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
InvalidRequestException	TokenNameIdentifier
,	TokenNameCOMMA
ConfigurationException	TokenNameIdentifier
{	TokenNameLBRACE
ColumnFamilyType	TokenNameIdentifier
cfType	TokenNameIdentifier
=	TokenNameEQUAL
ColumnFamilyType	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
column_type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cfType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
InvalidRequestException	TokenNameIdentifier
(	TokenNameLPAREN
"Invalid column type "	TokenNameStringLiteral
+	TokenNamePLUS
cf_def	TokenNameIdentifier
.	TokenNameDOT
column_type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
applyImplicitDefaults	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
CFMetaData	TokenNameIdentifier
newCFMD	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
cf_def	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
cfType	TokenNameIdentifier
,	TokenNameCOMMA
TypeParser	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
comparator_type	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
cf_def	TokenNameIdentifier
.	TokenNameDOT
subcomparator_type	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
null	TokenNamenull
:	TokenNameCOLON
TypeParser	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
subcomparator_type	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetGc_grace_seconds	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
newCFMD	TokenNameIdentifier
.	TokenNameDOT
gcGraceSeconds	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
gc_grace_seconds	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetMin_compaction_threshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
newCFMD	TokenNameIdentifier
.	TokenNameDOT
minCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
min_compaction_threshold	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetMax_compaction_threshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
newCFMD	TokenNameIdentifier
.	TokenNameDOT
maxCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
max_compaction_threshold	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetKey_alias	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
newCFMD	TokenNameIdentifier
.	TokenNameDOT
keyAliases	TokenNameIdentifier
(	TokenNameLPAREN
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
singletonList	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
key_alias	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetKey_validation_class	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
newCFMD	TokenNameIdentifier
.	TokenNameDOT
keyValidator	TokenNameIdentifier
(	TokenNameLPAREN
TypeParser	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
key_validation_class	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetCompaction_strategy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
newCFMD	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyClass	TokenNameIdentifier
=	TokenNameEQUAL
createCompactionStrategy	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
compaction_strategy	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetCompaction_strategy_options	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
newCFMD	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyOptions	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
compaction_strategy_options	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetBloom_filter_fp_chance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
newCFMD	TokenNameIdentifier
.	TokenNameDOT
bloomFilterFpChance	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
bloom_filter_fp_chance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetCaching	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
newCFMD	TokenNameIdentifier
.	TokenNameDOT
caching	TokenNameIdentifier
(	TokenNameLPAREN
Caching	TokenNameIdentifier
.	TokenNameDOT
fromString	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
caching	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetRead_repair_chance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
newCFMD	TokenNameIdentifier
.	TokenNameDOT
readRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
read_repair_chance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
isSetDclocal_read_repair_chance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
newCFMD	TokenNameIdentifier
.	TokenNameDOT
dcLocalReadRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
dclocal_read_repair_chance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CompressionParameters	TokenNameIdentifier
cp	TokenNameIdentifier
=	TokenNameEQUAL
CompressionParameters	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
compression_options	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
newCFMD	TokenNameIdentifier
.	TokenNameDOT
comment	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
comment	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
replicateOnWrite	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
replicate_on_write	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
defaultValidator	TokenNameIdentifier
(	TokenNameLPAREN
TypeParser	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
default_validation_class	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
keyValidator	TokenNameIdentifier
(	TokenNameLPAREN
TypeParser	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
key_validation_class	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
columnMetadata	TokenNameIdentifier
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
.	TokenNameDOT
fromThrift	TokenNameIdentifier
(	TokenNameLPAREN
cf_def	TokenNameIdentifier
.	TokenNameDOT
column_metadata	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
compressionParameters	TokenNameIdentifier
(	TokenNameLPAREN
cp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
SyntaxException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MarshalException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
reload	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Row	TokenNameIdentifier
cfDefRow	TokenNameIdentifier
=	TokenNameEQUAL
SystemTable	TokenNameIdentifier
.	TokenNameDOT
readSchemaRow	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cfDefRow	TokenNameIdentifier
.	TokenNameDOT
cf	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
cfDefRow	TokenNameIdentifier
.	TokenNameDOT
cf	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"%s not found in the schema definitions table."	TokenNameStringLiteral
,	TokenNameCOMMA
ksName	TokenNameIdentifier
+	TokenNamePLUS
":"	TokenNameStringLiteral
+	TokenNamePLUS
cfName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
apply	TokenNameIdentifier
(	TokenNameLPAREN
fromSchema	TokenNameIdentifier
(	TokenNameLPAREN
cfDefRow	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ConfigurationException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
apply	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
cfm	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ConfigurationException	TokenNameIdentifier
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"applying {} to {}"	TokenNameStringLiteral
,	TokenNameCOMMA
cfm	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
validateCompatility	TokenNameIdentifier
(	TokenNameLPAREN
cfm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
comparator	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
comparator	TokenNameIdentifier
;	TokenNameSEMICOLON
subcolumnComparator	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
subcolumnComparator	TokenNameIdentifier
;	TokenNameSEMICOLON
comment	TokenNameIdentifier
=	TokenNameEQUAL
enforceCommentNotNull	TokenNameIdentifier
(	TokenNameLPAREN
cfm	TokenNameIdentifier
.	TokenNameDOT
comment	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
readRepairChance	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
readRepairChance	TokenNameIdentifier
;	TokenNameSEMICOLON
dcLocalReadRepairChance	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
dcLocalReadRepairChance	TokenNameIdentifier
;	TokenNameSEMICOLON
replicateOnWrite	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
replicateOnWrite	TokenNameIdentifier
;	TokenNameSEMICOLON
gcGraceSeconds	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
gcGraceSeconds	TokenNameIdentifier
;	TokenNameSEMICOLON
defaultValidator	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
defaultValidator	TokenNameIdentifier
;	TokenNameSEMICOLON
keyValidator	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
keyValidator	TokenNameIdentifier
;	TokenNameSEMICOLON
minCompactionThreshold	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
minCompactionThreshold	TokenNameIdentifier
;	TokenNameSEMICOLON
maxCompactionThreshold	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
maxCompactionThreshold	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfm	TokenNameIdentifier
.	TokenNameDOT
keyAliases	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
keyAliases	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
keyAliases	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfm	TokenNameIdentifier
.	TokenNameDOT
columnAliases	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
columnAliases	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
columnAliases	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cfm	TokenNameIdentifier
.	TokenNameDOT
valueAlias	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
valueAlias	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
valueAlias	TokenNameIdentifier
;	TokenNameSEMICOLON
bloomFilterFpChance	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
bloomFilterFpChance	TokenNameIdentifier
;	TokenNameSEMICOLON
caching	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
caching	TokenNameIdentifier
;	TokenNameSEMICOLON
MapDifference	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
ColumnDefinition	TokenNameIdentifier
>	TokenNameGREATER
columnDiff	TokenNameIdentifier
=	TokenNameEQUAL
Maps	TokenNameIdentifier
.	TokenNameDOT
difference	TokenNameIdentifier
(	TokenNameLPAREN
column_metadata	TokenNameIdentifier
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
column_metadata	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
cd	TokenNameIdentifier
:	TokenNameCOLON
columnDiff	TokenNameIdentifier
.	TokenNameDOT
entriesOnlyOnLeft	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
column_metadata	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
cd	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
cd	TokenNameIdentifier
:	TokenNameCOLON
columnDiff	TokenNameIdentifier
.	TokenNameDOT
entriesOnlyOnRight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
column_metadata	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
cd	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
cd	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
name	TokenNameIdentifier
:	TokenNameCOLON
columnDiff	TokenNameIdentifier
.	TokenNameDOT
entriesDiffering	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
keySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ColumnDefinition	TokenNameIdentifier
oldDef	TokenNameIdentifier
=	TokenNameEQUAL
column_metadata	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ColumnDefinition	TokenNameIdentifier
def	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
column_metadata	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
oldDef	TokenNameIdentifier
.	TokenNameDOT
apply	TokenNameIdentifier
(	TokenNameLPAREN
def	TokenNameIdentifier
,	TokenNameCOMMA
getColumnDefinitionComparator	TokenNameIdentifier
(	TokenNameLPAREN
oldDef	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
compactionStrategyClass	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyClass	TokenNameIdentifier
;	TokenNameSEMICOLON
compactionStrategyOptions	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyOptions	TokenNameIdentifier
;	TokenNameSEMICOLON
compressionParameters	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
compressionParameters	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
updateCfDef	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"application result is {}"	TokenNameStringLiteral
,	TokenNameCOMMA
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
validateCompatility	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
cfm	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ConfigurationException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfm	TokenNameIdentifier
.	TokenNameDOT
ksName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Keyspace mismatch (found %s; expected %s)"	TokenNameStringLiteral
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
ksName	TokenNameIdentifier
,	TokenNameCOMMA
ksName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfm	TokenNameIdentifier
.	TokenNameDOT
cfName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
cfName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Column family mismatch (found %s; expected %s)"	TokenNameStringLiteral
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
cfName	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfm	TokenNameIdentifier
.	TokenNameDOT
cfId	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
cfId	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Column family ID mismatch (found %s; expected %s)"	TokenNameStringLiteral
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
cfId	TokenNameIdentifier
,	TokenNameCOMMA
cfId	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfm	TokenNameIdentifier
.	TokenNameDOT
cfType	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
cfType	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"types do not match."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfm	TokenNameIdentifier
.	TokenNameDOT
comparator	TokenNameIdentifier
.	TokenNameDOT
isCompatibleWith	TokenNameIdentifier
(	TokenNameLPAREN
comparator	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"comparators do not match or are not compatible."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cfm	TokenNameIdentifier
.	TokenNameDOT
subcolumnComparator	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
subcolumnComparator	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"subcolumncomparators do not match."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfm	TokenNameIdentifier
.	TokenNameDOT
subcolumnComparator	TokenNameIdentifier
.	TokenNameDOT
isCompatibleWith	TokenNameIdentifier
(	TokenNameLPAREN
subcolumnComparator	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"subcolumncomparators do not match or are note compatible."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Class	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
extends	TokenNameextends
AbstractCompactionStrategy	TokenNameIdentifier
>	TokenNameGREATER
createCompactionStrategy	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
className	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ConfigurationException	TokenNameIdentifier
{	TokenNameLBRACE
className	TokenNameIdentifier
=	TokenNameEQUAL
className	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
"."	TokenNameStringLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
className	TokenNameIdentifier
:	TokenNameCOLON
"org.apache.cassandra.db.compaction."	TokenNameStringLiteral
+	TokenNamePLUS
className	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
FBUtilities	TokenNameIdentifier
.	TokenNameDOT
classForName	TokenNameIdentifier
(	TokenNameLPAREN
className	TokenNameIdentifier
,	TokenNameCOMMA
"compaction strategy"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
AbstractCompactionStrategy	TokenNameIdentifier
createCompactionStrategyInstance	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamilyStore	TokenNameIdentifier
cfs	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
Constructor	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
extends	TokenNameextends
AbstractCompactionStrategy	TokenNameIdentifier
>	TokenNameGREATER
constructor	TokenNameIdentifier
=	TokenNameEQUAL
compactionStrategyClass	TokenNameIdentifier
.	TokenNameDOT
getConstructor	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Class	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
ColumnFamilyStore	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
Map	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
constructor	TokenNameIdentifier
.	TokenNameDOT
newInstance	TokenNameIdentifier
(	TokenNameLPAREN
cfs	TokenNameIdentifier
,	TokenNameCOMMA
compactionStrategyOptions	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
NoSuchMethodException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
InstantiationException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
IllegalAccessException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
InvocationTargetException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
CfDef	TokenNameIdentifier
toThrift	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
CfDef	TokenNameIdentifier
def	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
CfDef	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setColumn_type	TokenNameIdentifier
(	TokenNameLPAREN
cfType	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setComparator_type	TokenNameIdentifier
(	TokenNameLPAREN
comparator	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
subcolumnComparator	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
cfType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ColumnFamilyType	TokenNameIdentifier
.	TokenNameDOT
Super	TokenNameIdentifier
:	TokenNameCOLON
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"%s CF %s should not have subcomparator %s defined"	TokenNameStringLiteral
,	TokenNameCOMMA
cfType	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
subcolumnComparator	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setSubcomparator_type	TokenNameIdentifier
(	TokenNameLPAREN
subcolumnComparator	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
def	TokenNameIdentifier
.	TokenNameDOT
setComment	TokenNameIdentifier
(	TokenNameLPAREN
enforceCommentNotNull	TokenNameIdentifier
(	TokenNameLPAREN
comment	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setRead_repair_chance	TokenNameIdentifier
(	TokenNameLPAREN
readRepairChance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setDclocal_read_repair_chance	TokenNameIdentifier
(	TokenNameLPAREN
dcLocalReadRepairChance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setReplicate_on_write	TokenNameIdentifier
(	TokenNameLPAREN
replicateOnWrite	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setGc_grace_seconds	TokenNameIdentifier
(	TokenNameLPAREN
gcGraceSeconds	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setDefault_validation_class	TokenNameIdentifier
(	TokenNameLPAREN
defaultValidator	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
null	TokenNamenull
:	TokenNameCOLON
defaultValidator	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setKey_validation_class	TokenNameIdentifier
(	TokenNameLPAREN
keyValidator	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setMin_compaction_threshold	TokenNameIdentifier
(	TokenNameLPAREN
minCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setMax_compaction_threshold	TokenNameIdentifier
(	TokenNameLPAREN
maxCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
keyAliases	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
def	TokenNameIdentifier
.	TokenNameDOT
setKey_alias	TokenNameIdentifier
(	TokenNameLPAREN
keyAliases	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
ColumnDef	TokenNameIdentifier
>	TokenNameGREATER
column_meta	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
ColumnDef	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
column_metadata	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
cd	TokenNameIdentifier
:	TokenNameCOLON
column_metadata	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
column_meta	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
cd	TokenNameIdentifier
.	TokenNameDOT
toThrift	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setColumn_metadata	TokenNameIdentifier
(	TokenNameLPAREN
column_meta	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setCompaction_strategy	TokenNameIdentifier
(	TokenNameLPAREN
compactionStrategyClass	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setCompaction_strategy_options	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
compactionStrategyOptions	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setCompression_options	TokenNameIdentifier
(	TokenNameLPAREN
compressionParameters	TokenNameIdentifier
.	TokenNameDOT
asThriftOptions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
bloomFilterFpChance	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
def	TokenNameIdentifier
.	TokenNameDOT
setBloom_filter_fp_chance	TokenNameIdentifier
(	TokenNameLPAREN
bloomFilterFpChance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
def	TokenNameIdentifier
.	TokenNameDOT
setCaching	TokenNameIdentifier
(	TokenNameLPAREN
caching	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
def	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ColumnDefinition	TokenNameIdentifier
getColumnDefinition	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
column_metadata	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ColumnDefinition	TokenNameIdentifier
getColumnDefinitionFromColumnName	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
columnName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
comparator	TokenNameIdentifier
instanceof	TokenNameinstanceof
CompositeType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
CompositeType	TokenNameIdentifier
composite	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
CompositeType	TokenNameIdentifier
)	TokenNameRPAREN
comparator	TokenNameIdentifier
;	TokenNameSEMICOLON
ByteBuffer	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
components	TokenNameIdentifier
=	TokenNameEQUAL
composite	TokenNameIdentifier
.	TokenNameDOT
split	TokenNameIdentifier
(	TokenNameLPAREN
columnName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
def	TokenNameIdentifier
:	TokenNameCOLON
column_metadata	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ByteBuffer	TokenNameIdentifier
toCompare	TokenNameIdentifier
=	TokenNameEQUAL
def	TokenNameIdentifier
.	TokenNameDOT
componentIndex	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
columnName	TokenNameIdentifier
:	TokenNameCOLON
components	TokenNameIdentifier
[	TokenNameLBRACKET
def	TokenNameIdentifier
.	TokenNameDOT
componentIndex	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
def	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
toCompare	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
def	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
column_metadata	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
columnName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
ColumnDefinition	TokenNameIdentifier
getColumnDefinitionForIndex	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
indexName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
def	TokenNameIdentifier
:	TokenNameCOLON
column_metadata	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
indexName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
def	TokenNameIdentifier
.	TokenNameDOT
getIndexName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
def	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addDefaultIndexNames	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
ConfigurationException	TokenNameIdentifier
{	TokenNameLBRACE
UUID	TokenNameIdentifier
cfId	TokenNameIdentifier
=	TokenNameEQUAL
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getId	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cfId	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
CFMetaData	TokenNameIdentifier
cfm	TokenNameIdentifier
=	TokenNameEQUAL
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getCFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
cfId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
ColumnDefinition	TokenNameIdentifier
>	TokenNameGREATER
entry	TokenNameIdentifier
:	TokenNameCOLON
column_metadata	TokenNameIdentifier
.	TokenNameDOT
entrySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ColumnDefinition	TokenNameIdentifier
newDef	TokenNameIdentifier
=	TokenNameEQUAL
entry	TokenNameIdentifier
.	TokenNameDOT
getValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfm	TokenNameIdentifier
.	TokenNameDOT
column_metadata	TokenNameIdentifier
.	TokenNameDOT
containsKey	TokenNameIdentifier
(	TokenNameLPAREN
entry	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
newDef	TokenNameIdentifier
.	TokenNameDOT
getIndexType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
continue	TokenNamecontinue
;	TokenNameSEMICOLON
String	TokenNameIdentifier
oldIndexName	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
.	TokenNameDOT
column_metadata	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
entry	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getIndexName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
oldIndexName	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
continue	TokenNamecontinue
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
newDef	TokenNameIdentifier
.	TokenNameDOT
getIndexName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
!	TokenNameNOT
oldIndexName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
newDef	TokenNameIdentifier
.	TokenNameDOT
getIndexName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"Can't modify index name: was '"	TokenNameStringLiteral
+	TokenNamePLUS
oldIndexName	TokenNameIdentifier
+	TokenNamePLUS
"' changed to '"	TokenNameStringLiteral
+	TokenNamePLUS
newDef	TokenNameIdentifier
.	TokenNameDOT
getIndexName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
"'."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
newDef	TokenNameIdentifier
.	TokenNameDOT
setIndexName	TokenNameIdentifier
(	TokenNameLPAREN
oldIndexName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
existingNames	TokenNameIdentifier
=	TokenNameEQUAL
existingIndexNames	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
column	TokenNameIdentifier
:	TokenNameCOLON
column_metadata	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
getIndexType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
column	TokenNameIdentifier
.	TokenNameDOT
getIndexName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
baseName	TokenNameIdentifier
=	TokenNameEQUAL
getDefaultIndexName	TokenNameIdentifier
(	TokenNameLPAREN
cfName	TokenNameIdentifier
,	TokenNameCOMMA
getColumnDefinitionComparator	TokenNameIdentifier
(	TokenNameLPAREN
column	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
column	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
indexName	TokenNameIdentifier
=	TokenNameEQUAL
baseName	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
existingNames	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
indexName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
indexName	TokenNameIdentifier
=	TokenNameEQUAL
baseName	TokenNameIdentifier
+	TokenNamePLUS
'_'	TokenNameCharacterLiteral
+	TokenNamePLUS
(	TokenNameLPAREN
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
column	TokenNameIdentifier
.	TokenNameDOT
setIndexName	TokenNameIdentifier
(	TokenNameLPAREN
indexName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getDefaultIndexName	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
cfName	TokenNameIdentifier
,	TokenNameCOMMA
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
comparator	TokenNameIdentifier
,	TokenNameCOMMA
ByteBuffer	TokenNameIdentifier
columnName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
cfName	TokenNameIdentifier
+	TokenNamePLUS
"_"	TokenNameStringLiteral
+	TokenNamePLUS
comparator	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
columnName	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
"_idx"	TokenNameStringLiteral
)	TokenNameRPAREN
.	TokenNameDOT
replaceAll	TokenNameIdentifier
(	TokenNameLPAREN
"\W"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
IColumnSerializer	TokenNameIdentifier
getColumnSerializer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cfType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ColumnFamilyType	TokenNameIdentifier
.	TokenNameDOT
Standard	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
Column	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
SuperColumn	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
(	TokenNameLPAREN
subcolumnComparator	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
OnDiskAtom	TokenNameIdentifier
.	TokenNameDOT
Serializer	TokenNameIdentifier
getOnDiskSerializer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cfType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ColumnFamilyType	TokenNameIdentifier
.	TokenNameDOT
Standard	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
Column	TokenNameIdentifier
.	TokenNameDOT
onDiskSerializer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
SuperColumn	TokenNameIdentifier
.	TokenNameDOT
onDiskSerializer	TokenNameIdentifier
(	TokenNameLPAREN
subcolumnComparator	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isNameValid	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
name	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
!	TokenNameNOT
name	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
name	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
<=	TokenNameLESS_EQUAL
Schema	TokenNameIdentifier
.	TokenNameDOT
NAME_LENGTH	TokenNameIdentifier
&&	TokenNameAND_AND
name	TokenNameIdentifier
.	TokenNameDOT
matches	TokenNameIdentifier
(	TokenNameLPAREN
"\w+"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isIndexNameValid	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
name	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
!	TokenNameNOT
name	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
name	TokenNameIdentifier
.	TokenNameDOT
matches	TokenNameIdentifier
(	TokenNameLPAREN
"\w+"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
validate	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
ConfigurationException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isNameValid	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Keyspace name must not be empty, more than %s characters long, or contain non-alphanumeric-underscore characters (got "%s")"	TokenNameStringLiteral
,	TokenNameCOMMA
Schema	TokenNameIdentifier
.	TokenNameDOT
NAME_LENGTH	TokenNameIdentifier
,	TokenNameCOMMA
ksName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isNameValid	TokenNameIdentifier
(	TokenNameLPAREN
cfName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"ColumnFamily name must not be empty, more than %s characters long, or contain non-alphanumeric-underscore characters (got "%s")"	TokenNameStringLiteral
,	TokenNameCOMMA
Schema	TokenNameIdentifier
.	TokenNameDOT
NAME_LENGTH	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cfType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Invalid column family type for %s"	TokenNameStringLiteral
,	TokenNameCOMMA
cfName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cfType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ColumnFamilyType	TokenNameIdentifier
.	TokenNameDOT
Super	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
subcolumnComparator	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Missing subcolumn comparator for super column family %s"	TokenNameStringLiteral
,	TokenNameCOMMA
cfName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
subcolumnComparator	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Subcolumn comparator (%s) is invalid for standard column family %s"	TokenNameStringLiteral
,	TokenNameCOMMA
subcolumnComparator	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
comparator	TokenNameIdentifier
instanceof	TokenNameinstanceof
CounterColumnType	TokenNameIdentifier
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"CounterColumnType is not a valid comparator"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
subcolumnComparator	TokenNameIdentifier
instanceof	TokenNameinstanceof
CounterColumnType	TokenNameIdentifier
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"CounterColumnType is not a valid sub-column comparator"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
keyValidator	TokenNameIdentifier
instanceof	TokenNameinstanceof
CounterColumnType	TokenNameIdentifier
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"CounterColumnType is not a valid key validator"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
defaultValidator	TokenNameIdentifier
instanceof	TokenNameinstanceof
CounterColumnType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
def	TokenNameIdentifier
:	TokenNameCOLON
column_metadata	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
(	TokenNameLPAREN
def	TokenNameIdentifier
.	TokenNameDOT
getValidator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
instanceof	TokenNameinstanceof
CounterColumnType	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"Cannot add a non counter column ("	TokenNameStringLiteral
+	TokenNamePLUS
getColumnDefinitionComparator	TokenNameIdentifier
(	TokenNameLPAREN
def	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
def	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
") in a counter column family"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
def	TokenNameIdentifier
:	TokenNameCOLON
column_metadata	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
def	TokenNameIdentifier
.	TokenNameDOT
getValidator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
instanceof	TokenNameinstanceof
CounterColumnType	TokenNameIdentifier
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"Cannot add a counter column ("	TokenNameStringLiteral
+	TokenNamePLUS
getColumnDefinitionComparator	TokenNameIdentifier
(	TokenNameLPAREN
def	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
def	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
") in a non counter column family"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
columndef	TokenNameIdentifier
:	TokenNameCOLON
column_metadata	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
alias	TokenNameIdentifier
:	TokenNameCOLON
keyAliases	TokenNameIdentifier
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
alias	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
columndef	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"Cannot have key alias equals to a column name: "	TokenNameStringLiteral
+	TokenNamePLUS
UTF8Type	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
compose	TokenNameIdentifier
(	TokenNameLPAREN
alias	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
alias	TokenNameIdentifier
:	TokenNameCOLON
columnAliases	TokenNameIdentifier
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
alias	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
columndef	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"Cannot have column alias equals to a column name: "	TokenNameStringLiteral
+	TokenNamePLUS
UTF8Type	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
compose	TokenNameIdentifier
(	TokenNameLPAREN
alias	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
valueAlias	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
valueAlias	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
columndef	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"Cannot have value alias equals to a column name: "	TokenNameStringLiteral
+	TokenNamePLUS
UTF8Type	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
compose	TokenNameIdentifier
(	TokenNameLPAREN
valueAlias	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
alias	TokenNameIdentifier
:	TokenNameCOLON
keyAliases	TokenNameIdentifier
)	TokenNameRPAREN
validateAlias	TokenNameIdentifier
(	TokenNameLPAREN
alias	TokenNameIdentifier
,	TokenNameCOMMA
"Key"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
alias	TokenNameIdentifier
:	TokenNameCOLON
columnAliases	TokenNameIdentifier
)	TokenNameRPAREN
validateAlias	TokenNameIdentifier
(	TokenNameLPAREN
alias	TokenNameIdentifier
,	TokenNameCOMMA
"Column"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
validateAlias	TokenNameIdentifier
(	TokenNameLPAREN
valueAlias	TokenNameIdentifier
,	TokenNameCOMMA
"Value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
indexNames	TokenNameIdentifier
=	TokenNameEQUAL
existingIndexNames	TokenNameIdentifier
(	TokenNameLPAREN
cfName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
c	TokenNameIdentifier
:	TokenNameCOLON
column_metadata	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
comparator	TokenNameIdentifier
=	TokenNameEQUAL
getColumnDefinitionComparator	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
comparator	TokenNameIdentifier
.	TokenNameDOT
validate	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MarshalException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Column name %s is not valid for comparator %s"	TokenNameStringLiteral
,	TokenNameCOMMA
ByteBufferUtil	TokenNameIdentifier
.	TokenNameDOT
bytesToHex	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
comparator	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
c	TokenNameIdentifier
.	TokenNameDOT
getIndexType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
c	TokenNameIdentifier
.	TokenNameDOT
getIndexName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"Index name cannot be set without index type"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cfType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ColumnFamilyType	TokenNameIdentifier
.	TokenNameDOT
Super	TokenNameIdentifier
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"Secondary indexes are not supported on super column families"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isIndexNameValid	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
.	TokenNameDOT
getIndexName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"Illegal index name "	TokenNameStringLiteral
+	TokenNamePLUS
c	TokenNameIdentifier
.	TokenNameDOT
getIndexName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
indexNames	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
.	TokenNameDOT
getIndexName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"Duplicate index name "	TokenNameStringLiteral
+	TokenNamePLUS
c	TokenNameIdentifier
.	TokenNameDOT
getIndexName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
indexNames	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
.	TokenNameDOT
getIndexName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
c	TokenNameIdentifier
.	TokenNameDOT
getIndexType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
IndexType	TokenNameIdentifier
.	TokenNameDOT
CUSTOM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
c	TokenNameIdentifier
.	TokenNameDOT
getIndexOptions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
!	TokenNameNOT
c	TokenNameIdentifier
.	TokenNameDOT
getIndexOptions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
containsKey	TokenNameIdentifier
(	TokenNameLPAREN
SecondaryIndex	TokenNameIdentifier
.	TokenNameDOT
CUSTOM_INDEX_OPTION_NAME	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
"Required index option missing: "	TokenNameStringLiteral
+	TokenNamePLUS
SecondaryIndex	TokenNameIdentifier
.	TokenNameDOT
CUSTOM_INDEX_OPTION_NAME	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
SecondaryIndex	TokenNameIdentifier
.	TokenNameDOT
createInstance	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
c	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
validateCompactionThresholds	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
existingIndexNames	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
cfToExclude	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
indexNames	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnFamilyStore	TokenNameIdentifier
cfs	TokenNameIdentifier
:	TokenNameCOLON
ColumnFamilyStore	TokenNameIdentifier
.	TokenNameDOT
all	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cfToExclude	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
!	TokenNameNOT
cfs	TokenNameIdentifier
.	TokenNameDOT
getColumnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
cfToExclude	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
cd	TokenNameIdentifier
:	TokenNameCOLON
cfs	TokenNameIdentifier
.	TokenNameDOT
metadata	TokenNameIdentifier
.	TokenNameDOT
getColumn_metadata	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
indexNames	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
cd	TokenNameIdentifier
.	TokenNameDOT
getIndexName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
indexNames	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
void	TokenNamevoid
validateAlias	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
alias	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
msg	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ConfigurationException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
alias	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
UTF8Type	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
validate	TokenNameIdentifier
(	TokenNameLPAREN
alias	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MarshalException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
msg	TokenNameIdentifier
+	TokenNamePLUS
" alias must be UTF8"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
validateCompactionThresholds	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
ConfigurationException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
maxCompactionThreshold	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
minCompactionThreshold	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Min compaction threshold cannot be less than 2 (got %d)."	TokenNameStringLiteral
,	TokenNameCOMMA
minCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
minCompactionThreshold	TokenNameIdentifier
>	TokenNameGREATER
maxCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ConfigurationException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Min compaction threshold (got %d) cannot be greater than max compaction threshold (got %d)"	TokenNameStringLiteral
,	TokenNameCOMMA
minCompactionThreshold	TokenNameIdentifier
,	TokenNameCOMMA
maxCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
RowMutation	TokenNameIdentifier
toSchemaUpdate	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
newState	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
modificationTimestamp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
RowMutation	TokenNameIdentifier
rm	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
RowMutation	TokenNameIdentifier
(	TokenNameLPAREN
Table	TokenNameIdentifier
.	TokenNameDOT
SYSTEM_KS	TokenNameIdentifier
,	TokenNameCOMMA
SystemTable	TokenNameIdentifier
.	TokenNameDOT
getSchemaKSKey	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
newState	TokenNameIdentifier
.	TokenNameDOT
toSchemaNoColumns	TokenNameIdentifier
(	TokenNameLPAREN
rm	TokenNameIdentifier
,	TokenNameCOMMA
modificationTimestamp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MapDifference	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
ColumnDefinition	TokenNameIdentifier
>	TokenNameGREATER
columnDiff	TokenNameIdentifier
=	TokenNameEQUAL
Maps	TokenNameIdentifier
.	TokenNameDOT
difference	TokenNameIdentifier
(	TokenNameLPAREN
column_metadata	TokenNameIdentifier
,	TokenNameCOMMA
newState	TokenNameIdentifier
.	TokenNameDOT
column_metadata	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
cd	TokenNameIdentifier
:	TokenNameCOLON
columnDiff	TokenNameIdentifier
.	TokenNameDOT
entriesOnlyOnLeft	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
cd	TokenNameIdentifier
.	TokenNameDOT
deleteFromSchema	TokenNameIdentifier
(	TokenNameLPAREN
rm	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
getColumnDefinitionComparator	TokenNameIdentifier
(	TokenNameLPAREN
cd	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
modificationTimestamp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
cd	TokenNameIdentifier
:	TokenNameCOLON
columnDiff	TokenNameIdentifier
.	TokenNameDOT
entriesOnlyOnRight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
cd	TokenNameIdentifier
.	TokenNameDOT
toSchema	TokenNameIdentifier
(	TokenNameLPAREN
rm	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
getColumnDefinitionComparator	TokenNameIdentifier
(	TokenNameLPAREN
cd	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
modificationTimestamp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
name	TokenNameIdentifier
:	TokenNameCOLON
columnDiff	TokenNameIdentifier
.	TokenNameDOT
entriesDiffering	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
keySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ColumnDefinition	TokenNameIdentifier
cd	TokenNameIdentifier
=	TokenNameEQUAL
newState	TokenNameIdentifier
.	TokenNameDOT
getColumnDefinition	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cd	TokenNameIdentifier
.	TokenNameDOT
toSchema	TokenNameIdentifier
(	TokenNameLPAREN
rm	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
getColumnDefinitionComparator	TokenNameIdentifier
(	TokenNameLPAREN
cd	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
modificationTimestamp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
rm	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
RowMutation	TokenNameIdentifier
dropFromSchema	TokenNameIdentifier
(	TokenNameLPAREN
long	TokenNamelong
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
RowMutation	TokenNameIdentifier
rm	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
RowMutation	TokenNameIdentifier
(	TokenNameLPAREN
Table	TokenNameIdentifier
.	TokenNameDOT
SYSTEM_KS	TokenNameIdentifier
,	TokenNameCOMMA
SystemTable	TokenNameIdentifier
.	TokenNameDOT
getSchemaKSKey	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
rm	TokenNameIdentifier
.	TokenNameDOT
addOrGet	TokenNameIdentifier
(	TokenNameLPAREN
SystemTable	TokenNameIdentifier
.	TokenNameDOT
SCHEMA_COLUMNFAMILIES_CF	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
ldt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
/	TokenNameDIVIDE
1000	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"id"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"type"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"comparator"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"subcomparator"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"comment"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"read_repair_chance"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"local_read_repair_chance"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"replicate_on_write"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"gc_grace_seconds"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"default_validator"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"key_validator"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"min_compaction_threshold"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"max_compaction_threshold"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"key_alias"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"key_aliases"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"bloom_filter_fp_chance"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"caching"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"compaction_strategy_class"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"compression_parameters"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"value_alias"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"column_aliases"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"compaction_strategy_options"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
cd	TokenNameIdentifier
:	TokenNameCOLON
column_metadata	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
cd	TokenNameIdentifier
.	TokenNameDOT
deleteFromSchema	TokenNameIdentifier
(	TokenNameLPAREN
rm	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
getColumnDefinitionComparator	TokenNameIdentifier
(	TokenNameLPAREN
cd	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
rm	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
toSchema	TokenNameIdentifier
(	TokenNameLPAREN
RowMutation	TokenNameIdentifier
rm	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
toSchemaNoColumns	TokenNameIdentifier
(	TokenNameLPAREN
rm	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
cd	TokenNameIdentifier
:	TokenNameCOLON
column_metadata	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
cd	TokenNameIdentifier
.	TokenNameDOT
toSchema	TokenNameIdentifier
(	TokenNameLPAREN
rm	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
getColumnDefinitionComparator	TokenNameIdentifier
(	TokenNameLPAREN
cd	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
toSchemaNoColumns	TokenNameIdentifier
(	TokenNameLPAREN
RowMutation	TokenNameIdentifier
rm	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
rm	TokenNameIdentifier
.	TokenNameDOT
addOrGet	TokenNameIdentifier
(	TokenNameLPAREN
SystemTable	TokenNameIdentifier
.	TokenNameDOT
SCHEMA_COLUMNFAMILIES_CF	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
ldt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
/	TokenNameDIVIDE
1000	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Integer	TokenNameIdentifier
oldId	TokenNameIdentifier
=	TokenNameEQUAL
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
convertNewCfId	TokenNameIdentifier
(	TokenNameLPAREN
cfId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
oldId	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
oldId	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"id"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
cfType	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"type"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
comparator	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"comparator"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
subcolumnComparator	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
subcolumnComparator	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"subcomparator"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
comment	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"comment"	TokenNameStringLiteral
)	TokenNameRPAREN
:	TokenNameCOLON
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
comment	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"comment"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
readRepairChance	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"read_repair_chance"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
dcLocalReadRepairChance	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"local_read_repair_chance"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
replicateOnWrite	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"replicate_on_write"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
gcGraceSeconds	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"gc_grace_seconds"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
defaultValidator	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"default_validator"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
keyValidator	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"key_validator"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
minCompactionThreshold	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"min_compaction_threshold"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
maxCompactionThreshold	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"max_compaction_threshold"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
json	TokenNameIdentifier
(	TokenNameLPAREN
aliasesAsStrings	TokenNameIdentifier
(	TokenNameLPAREN
keyAliases	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"key_aliases"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
bloomFilterFpChance	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"bloomFilterFpChance"	TokenNameStringLiteral
)	TokenNameRPAREN
:	TokenNameCOLON
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
bloomFilterFpChance	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"bloom_filter_fp_chance"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
caching	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"caching"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
compactionStrategyClass	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"compaction_strategy_class"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
json	TokenNameIdentifier
(	TokenNameLPAREN
compressionParameters	TokenNameIdentifier
.	TokenNameDOT
asThriftOptions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"compression_parameters"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
valueAlias	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
DeletedColumn	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
ldt	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"value_alias"	TokenNameStringLiteral
)	TokenNameRPAREN
:	TokenNameCOLON
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
valueAlias	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"value_alias"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
json	TokenNameIdentifier
(	TokenNameLPAREN
aliasesAsStrings	TokenNameIdentifier
(	TokenNameLPAREN
columnAliases	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"column_aliases"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
Column	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
json	TokenNameIdentifier
(	TokenNameLPAREN
compactionStrategyOptions	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
"compaction_strategy_options"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
CFMetaData	TokenNameIdentifier
fromSchemaNoColumns	TokenNameIdentifier
(	TokenNameLPAREN
UntypedResultSet	TokenNameIdentifier
.	TokenNameDOT
Row	TokenNameIdentifier
result	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
CFMetaData	TokenNameIdentifier
cfm	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
"keyspace_name"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
result	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
"columnfamily_name"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
ColumnFamilyType	TokenNameIdentifier
.	TokenNameDOT
valueOf	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
"type"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
TypeParser	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
"comparator"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
result	TokenNameIdentifier
.	TokenNameDOT
has	TokenNameIdentifier
(	TokenNameLPAREN
"subcomparator"	TokenNameStringLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
TypeParser	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
"subcomparator"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
has	TokenNameIdentifier
(	TokenNameLPAREN
"id"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
addOldCfIdMapping	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getInt	TokenNameIdentifier
(	TokenNameLPAREN
"id"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
cfId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
readRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getDouble	TokenNameIdentifier
(	TokenNameLPAREN
"read_repair_chance"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
dcLocalReadRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getDouble	TokenNameIdentifier
(	TokenNameLPAREN
"local_read_repair_chance"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
replicateOnWrite	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"replicate_on_write"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
gcGraceSeconds	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getInt	TokenNameIdentifier
(	TokenNameLPAREN
"gc_grace_seconds"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
defaultValidator	TokenNameIdentifier
(	TokenNameLPAREN
TypeParser	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
"default_validator"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
keyValidator	TokenNameIdentifier
(	TokenNameLPAREN
TypeParser	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
"key_validator"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
minCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getInt	TokenNameIdentifier
(	TokenNameLPAREN
"min_compaction_threshold"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
maxCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getInt	TokenNameIdentifier
(	TokenNameLPAREN
"max_compaction_threshold"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
has	TokenNameIdentifier
(	TokenNameLPAREN
"comment"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
cfm	TokenNameIdentifier
.	TokenNameDOT
comment	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
"comment"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
has	TokenNameIdentifier
(	TokenNameLPAREN
"key_aliases"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
cfm	TokenNameIdentifier
.	TokenNameDOT
keyAliases	TokenNameIdentifier
(	TokenNameLPAREN
aliasesFromStrings	TokenNameIdentifier
(	TokenNameLPAREN
fromJsonList	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
"key_aliases"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
has	TokenNameIdentifier
(	TokenNameLPAREN
"key_alias"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
cfm	TokenNameIdentifier
.	TokenNameDOT
keyAliases	TokenNameIdentifier
(	TokenNameLPAREN
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
singletonList	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getBytes	TokenNameIdentifier
(	TokenNameLPAREN
"key_alias"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
has	TokenNameIdentifier
(	TokenNameLPAREN
"bloom_filter_fp_chance"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
cfm	TokenNameIdentifier
.	TokenNameDOT
bloomFilterFpChance	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getDouble	TokenNameIdentifier
(	TokenNameLPAREN
"bloom_filter_fp_chance"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
caching	TokenNameIdentifier
(	TokenNameLPAREN
Caching	TokenNameIdentifier
.	TokenNameDOT
valueOf	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
"caching"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyClass	TokenNameIdentifier
(	TokenNameLPAREN
createCompactionStrategy	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
"compaction_strategy_class"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
compressionParameters	TokenNameIdentifier
(	TokenNameLPAREN
CompressionParameters	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
fromJsonMap	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
"compression_parameters"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
columnAliases	TokenNameIdentifier
(	TokenNameLPAREN
aliasesFromStrings	TokenNameIdentifier
(	TokenNameLPAREN
fromJsonList	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
"column_aliases"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
has	TokenNameIdentifier
(	TokenNameLPAREN
"value_alias"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
cfm	TokenNameIdentifier
.	TokenNameDOT
valueAlias	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getBytes	TokenNameIdentifier
(	TokenNameLPAREN
"value_alias"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyOptions	TokenNameIdentifier
(	TokenNameLPAREN
fromJsonMap	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
"compaction_strategy_options"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
cfm	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
SyntaxException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ConfigurationException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
CFMetaData	TokenNameIdentifier
fromSchema	TokenNameIdentifier
(	TokenNameLPAREN
UntypedResultSet	TokenNameIdentifier
.	TokenNameDOT
Row	TokenNameIdentifier
result	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
CFMetaData	TokenNameIdentifier
cfDef	TokenNameIdentifier
=	TokenNameEQUAL
fromSchemaNoColumns	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Row	TokenNameIdentifier
serializedColumnDefinitions	TokenNameIdentifier
=	TokenNameEQUAL
ColumnDefinition	TokenNameIdentifier
.	TokenNameDOT
readSchema	TokenNameIdentifier
(	TokenNameLPAREN
cfDef	TokenNameIdentifier
.	TokenNameDOT
ksName	TokenNameIdentifier
,	TokenNameCOMMA
cfDef	TokenNameIdentifier
.	TokenNameDOT
cfName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
addColumnDefinitionSchema	TokenNameIdentifier
(	TokenNameLPAREN
cfDef	TokenNameIdentifier
,	TokenNameCOMMA
serializedColumnDefinitions	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
updateCfDef	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
CFMetaData	TokenNameIdentifier
fromSchema	TokenNameIdentifier
(	TokenNameLPAREN
Row	TokenNameIdentifier
row	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
UntypedResultSet	TokenNameIdentifier
.	TokenNameDOT
Row	TokenNameIdentifier
result	TokenNameIdentifier
=	TokenNameEQUAL
QueryProcessor	TokenNameIdentifier
.	TokenNameDOT
resultify	TokenNameIdentifier
(	TokenNameLPAREN
"SELECT * FROM system.schema_columnfamilies"	TokenNameStringLiteral
,	TokenNameCOMMA
row	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
one	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
fromSchema	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
aliasesAsStrings	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
rawAliases	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
aliases	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
rawAliases	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
rawAlias	TokenNameIdentifier
:	TokenNameCOLON
rawAliases	TokenNameIdentifier
)	TokenNameRPAREN
aliases	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
UTF8Type	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
compose	TokenNameIdentifier
(	TokenNameLPAREN
rawAlias	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
aliases	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
List	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
aliasesFromStrings	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
aliases	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
rawAliases	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
aliases	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
String	TokenNameIdentifier
alias	TokenNameIdentifier
:	TokenNameCOLON
aliases	TokenNameIdentifier
)	TokenNameRPAREN
rawAliases	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
UTF8Type	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
decompose	TokenNameIdentifier
(	TokenNameLPAREN
alias	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
rawAliases	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
RowMutation	TokenNameIdentifier
toSchema	TokenNameIdentifier
(	TokenNameLPAREN
long	TokenNamelong
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ConfigurationException	TokenNameIdentifier
{	TokenNameLBRACE
RowMutation	TokenNameIdentifier
rm	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
RowMutation	TokenNameIdentifier
(	TokenNameLPAREN
Table	TokenNameIdentifier
.	TokenNameDOT
SYSTEM_KS	TokenNameIdentifier
,	TokenNameCOMMA
SystemTable	TokenNameIdentifier
.	TokenNameDOT
getSchemaKSKey	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
toSchema	TokenNameIdentifier
(	TokenNameLPAREN
rm	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
rm	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
getColumnDefinitionComparator	TokenNameIdentifier
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
def	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getColumnDefinitionComparator	TokenNameIdentifier
(	TokenNameLPAREN
def	TokenNameIdentifier
.	TokenNameDOT
componentIndex	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
getColumnDefinitionComparator	TokenNameIdentifier
(	TokenNameLPAREN
Integer	TokenNameIdentifier
componentIndex	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
cfComparator	TokenNameIdentifier
=	TokenNameEQUAL
cfType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ColumnFamilyType	TokenNameIdentifier
.	TokenNameDOT
Super	TokenNameIdentifier
?	TokenNameQUESTION
subcolumnComparator	TokenNameIdentifier
:	TokenNameCOLON
comparator	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cfComparator	TokenNameIdentifier
instanceof	TokenNameinstanceof
CompositeType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
componentIndex	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
cfComparator	TokenNameIdentifier
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>>	TokenNameRIGHT_SHIFT
types	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
CompositeType	TokenNameIdentifier
)	TokenNameRPAREN
cfComparator	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
types	TokenNameIdentifier
;	TokenNameSEMICOLON
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
t	TokenNameIdentifier
=	TokenNameEQUAL
types	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
componentIndex	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
:	TokenNameCOLON
"Non-sensical component index"	TokenNameStringLiteral
;	TokenNameSEMICOLON
return	TokenNamereturn
t	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
cfComparator	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
CFMetaData	TokenNameIdentifier
addColumnDefinitionSchema	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
cfDef	TokenNameIdentifier
,	TokenNameCOMMA
Row	TokenNameIdentifier
serializedColumnDefinitions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
cd	TokenNameIdentifier
:	TokenNameCOLON
ColumnDefinition	TokenNameIdentifier
.	TokenNameDOT
fromSchema	TokenNameIdentifier
(	TokenNameLPAREN
serializedColumnDefinitions	TokenNameIdentifier
,	TokenNameCOMMA
cfDef	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
cfDef	TokenNameIdentifier
.	TokenNameDOT
column_metadata	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
cd	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
cd	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
cfDef	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addColumnDefinition	TokenNameIdentifier
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
def	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
column_metadata	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
def	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
def	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
removeColumnDefinition	TokenNameIdentifier
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
def	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
column_metadata	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
def	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
CFMetaData	TokenNameIdentifier
updateCfDef	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
cqlCfDef	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CFDefinition	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFDefinition	TokenNameIdentifier
getCfDef	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
cqlCfDef	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
return	TokenNamereturn
cqlCfDef	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isThriftIncompatible	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cqlCfDef	TokenNameIdentifier
.	TokenNameDOT
isComposite	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
columnDef	TokenNameIdentifier
:	TokenNameCOLON
column_metadata	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
columnDef	TokenNameIdentifier
.	TokenNameDOT
componentIndex	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
ToStringBuilder	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"cfId"	TokenNameStringLiteral
,	TokenNameCOMMA
cfId	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"ksName"	TokenNameStringLiteral
,	TokenNameCOMMA
ksName	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"cfName"	TokenNameStringLiteral
,	TokenNameCOMMA
cfName	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"cfType"	TokenNameStringLiteral
,	TokenNameCOMMA
cfType	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"comparator"	TokenNameStringLiteral
,	TokenNameCOMMA
comparator	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"subcolumncomparator"	TokenNameStringLiteral
,	TokenNameCOMMA
subcolumnComparator	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"comment"	TokenNameStringLiteral
,	TokenNameCOMMA
comment	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"readRepairChance"	TokenNameStringLiteral
,	TokenNameCOMMA
readRepairChance	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"dclocalReadRepairChance"	TokenNameStringLiteral
,	TokenNameCOMMA
dcLocalReadRepairChance	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"replicateOnWrite"	TokenNameStringLiteral
,	TokenNameCOMMA
replicateOnWrite	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"gcGraceSeconds"	TokenNameStringLiteral
,	TokenNameCOMMA
gcGraceSeconds	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"defaultValidator"	TokenNameStringLiteral
,	TokenNameCOMMA
defaultValidator	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"keyValidator"	TokenNameStringLiteral
,	TokenNameCOMMA
keyValidator	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"minCompactionThreshold"	TokenNameStringLiteral
,	TokenNameCOMMA
minCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"maxCompactionThreshold"	TokenNameStringLiteral
,	TokenNameCOMMA
maxCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"keyAliases"	TokenNameStringLiteral
,	TokenNameCOMMA
keyAliases	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"columnAliases"	TokenNameStringLiteral
,	TokenNameCOMMA
columnAliases	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"valueAlias"	TokenNameStringLiteral
,	TokenNameCOMMA
valueAlias	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"column_metadata"	TokenNameStringLiteral
,	TokenNameCOMMA
column_metadata	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"compactionStrategyClass"	TokenNameStringLiteral
,	TokenNameCOMMA
compactionStrategyClass	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"compactionStrategyOptions"	TokenNameStringLiteral
,	TokenNameCOMMA
compactionStrategyOptions	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"compressionOptions"	TokenNameStringLiteral
,	TokenNameCOMMA
compressionParameters	TokenNameIdentifier
.	TokenNameDOT
asThriftOptions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"bloomFilterFpChance"	TokenNameStringLiteral
,	TokenNameCOMMA
bloomFilterFpChance	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"caching"	TokenNameStringLiteral
,	TokenNameCOMMA
caching	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
