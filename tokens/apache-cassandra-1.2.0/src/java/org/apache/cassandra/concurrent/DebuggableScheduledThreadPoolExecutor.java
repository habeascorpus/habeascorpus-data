package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
DebuggableScheduledThreadPoolExecutor	TokenNameIdentifier
extends	TokenNameextends
ScheduledThreadPoolExecutor	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
DebuggableScheduledThreadPoolExecutor	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
corePoolSize	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
threadPoolName	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
priority	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
corePoolSize	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
NamedThreadFactory	TokenNameIdentifier
(	TokenNameLPAREN
threadPoolName	TokenNameIdentifier
,	TokenNameCOMMA
priority	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
DebuggableScheduledThreadPoolExecutor	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
threadPoolName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
threadPoolName	TokenNameIdentifier
,	TokenNameCOMMA
Thread	TokenNameIdentifier
.	TokenNameDOT
NORM_PRIORITY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
afterExecute	TokenNameIdentifier
(	TokenNameLPAREN
Runnable	TokenNameIdentifier
r	TokenNameIdentifier
,	TokenNameCOMMA
Throwable	TokenNameIdentifier
t	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
.	TokenNameDOT
afterExecute	TokenNameIdentifier
(	TokenNameLPAREN
r	TokenNameIdentifier
,	TokenNameCOMMA
t	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DebuggableThreadPoolExecutor	TokenNameIdentifier
.	TokenNameDOT
logExceptionsAfterExecute	TokenNameIdentifier
(	TokenNameLPAREN
r	TokenNameIdentifier
,	TokenNameCOMMA
t	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
ScheduledFuture	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
scheduleAtFixedRate	TokenNameIdentifier
(	TokenNameLPAREN
Runnable	TokenNameIdentifier
command	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
initialDelay	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
period	TokenNameIdentifier
,	TokenNameCOMMA
TimeUnit	TokenNameIdentifier
unit	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
super	TokenNamesuper
.	TokenNameDOT
scheduleAtFixedRate	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
UncomplainingRunnable	TokenNameIdentifier
(	TokenNameLPAREN
command	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
initialDelay	TokenNameIdentifier
,	TokenNameCOMMA
period	TokenNameIdentifier
,	TokenNameCOMMA
unit	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
ScheduledFuture	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
scheduleWithFixedDelay	TokenNameIdentifier
(	TokenNameLPAREN
Runnable	TokenNameIdentifier
command	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
initialDelay	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
delay	TokenNameIdentifier
,	TokenNameCOMMA
TimeUnit	TokenNameIdentifier
unit	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
super	TokenNamesuper
.	TokenNameDOT
scheduleWithFixedDelay	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
UncomplainingRunnable	TokenNameIdentifier
(	TokenNameLPAREN
command	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
initialDelay	TokenNameIdentifier
,	TokenNameCOMMA
delay	TokenNameIdentifier
,	TokenNameCOMMA
unit	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
class	TokenNameclass
UncomplainingRunnable	TokenNameIdentifier
implements	TokenNameimplements
Runnable	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
final	TokenNamefinal
Runnable	TokenNameIdentifier
runnable	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
UncomplainingRunnable	TokenNameIdentifier
(	TokenNameLPAREN
Runnable	TokenNameIdentifier
runnable	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
runnable	TokenNameIdentifier
=	TokenNameEQUAL
runnable	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
run	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
runnable	TokenNameIdentifier
.	TokenNameDOT
run	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Throwable	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
DebuggableThreadPoolExecutor	TokenNameIdentifier
.	TokenNameDOT
handleOrLog	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
