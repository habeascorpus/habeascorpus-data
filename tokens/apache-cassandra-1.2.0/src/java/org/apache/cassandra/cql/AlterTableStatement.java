package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
config	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
marshal	TokenNameIdentifier
.	TokenNameDOT
TypeParser	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
exceptions	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
compress	TokenNameIdentifier
.	TokenNameDOT
CompressionParameters	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
nio	TokenNameIdentifier
.	TokenNameDOT
ByteBuffer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
HashMap	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Map	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
AlterTableStatement	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
enum	TokenNameenum
OperationType	TokenNameIdentifier
{	TokenNameLBRACE
ADD	TokenNameIdentifier
,	TokenNameCOMMA
ALTER	TokenNameIdentifier
,	TokenNameCOMMA
DROP	TokenNameIdentifier
,	TokenNameCOMMA
OPTS	TokenNameIdentifier
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
OperationType	TokenNameIdentifier
oType	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
columnName	TokenNameIdentifier
,	TokenNameCOMMA
validator	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
CFPropDefs	TokenNameIdentifier
cfProps	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CFPropDefs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
AlterTableStatement	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
OperationType	TokenNameIdentifier
type	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
columnName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
,	TokenNameCOMMA
columnName	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
AlterTableStatement	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
OperationType	TokenNameIdentifier
type	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
columnName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
validator	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
,	TokenNameCOMMA
columnName	TokenNameIdentifier
,	TokenNameCOMMA
validator	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
AlterTableStatement	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
OperationType	TokenNameIdentifier
type	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
columnName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
validator	TokenNameIdentifier
,	TokenNameCOMMA
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
propertyMap	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
columnFamily	TokenNameIdentifier
=	TokenNameEQUAL
columnFamily	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
oType	TokenNameIdentifier
=	TokenNameEQUAL
type	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
columnName	TokenNameIdentifier
=	TokenNameEQUAL
columnName	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
validator	TokenNameIdentifier
=	TokenNameEQUAL
CFPropDefs	TokenNameIdentifier
.	TokenNameDOT
comparators	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
validator	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
propertyMap	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
prop	TokenNameIdentifier
:	TokenNameCOLON
propertyMap	TokenNameIdentifier
.	TokenNameDOT
entrySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
cfProps	TokenNameIdentifier
.	TokenNameDOT
addProperty	TokenNameIdentifier
(	TokenNameLPAREN
prop	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
prop	TokenNameIdentifier
.	TokenNameDOT
getValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
getCFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ConfigurationException	TokenNameIdentifier
,	TokenNameCOMMA
InvalidRequestException	TokenNameIdentifier
,	TokenNameCOMMA
SyntaxException	TokenNameIdentifier
{	TokenNameLBRACE
CFMetaData	TokenNameIdentifier
meta	TokenNameIdentifier
=	TokenNameEQUAL
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getCFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CFMetaData	TokenNameIdentifier
cfm	TokenNameIdentifier
=	TokenNameEQUAL
meta	TokenNameIdentifier
.	TokenNameDOT
clone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ByteBuffer	TokenNameIdentifier
columnName	TokenNameIdentifier
=	TokenNameEQUAL
this	TokenNamethis
.	TokenNameDOT
oType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
OperationType	TokenNameIdentifier
.	TokenNameDOT
OPTS	TokenNameIdentifier
?	TokenNameQUESTION
null	TokenNamenull
:	TokenNameCOLON
meta	TokenNameIdentifier
.	TokenNameDOT
comparator	TokenNameIdentifier
.	TokenNameDOT
fromString	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
.	TokenNameDOT
columnName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
oType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
ADD	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfm	TokenNameIdentifier
.	TokenNameDOT
getKeyAliases	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
cfm	TokenNameIdentifier
.	TokenNameDOT
getKeyAliases	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
columnName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
InvalidRequestException	TokenNameIdentifier
(	TokenNameLPAREN
"Invalid column name: "	TokenNameStringLiteral
+	TokenNamePLUS
this	TokenNamethis
.	TokenNameDOT
columnName	TokenNameIdentifier
+	TokenNamePLUS
", because it equals to a key alias."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
addColumnDefinition	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
ColumnDefinition	TokenNameIdentifier
(	TokenNameLPAREN
columnName	TokenNameIdentifier
,	TokenNameCOMMA
TypeParser	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
validator	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
ALTER	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfm	TokenNameIdentifier
.	TokenNameDOT
getKeyAliases	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
cfm	TokenNameIdentifier
.	TokenNameDOT
getKeyAliases	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
columnName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
cfm	TokenNameIdentifier
.	TokenNameDOT
keyValidator	TokenNameIdentifier
(	TokenNameLPAREN
TypeParser	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
validator	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
ColumnDefinition	TokenNameIdentifier
toUpdate	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
columnDef	TokenNameIdentifier
:	TokenNameCOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
getColumn_metadata	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
columnDef	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
columnName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
toUpdate	TokenNameIdentifier
=	TokenNameEQUAL
columnDef	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
toUpdate	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
InvalidRequestException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Column '%s' was not found in CF '%s'"	TokenNameStringLiteral
,	TokenNameCOMMA
this	TokenNamethis
.	TokenNameDOT
columnName	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
toUpdate	TokenNameIdentifier
.	TokenNameDOT
setValidator	TokenNameIdentifier
(	TokenNameLPAREN
TypeParser	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
validator	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
DROP	TokenNameIdentifier
:	TokenNameCOLON
ColumnDefinition	TokenNameIdentifier
toDelete	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
columnDef	TokenNameIdentifier
:	TokenNameCOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
getColumn_metadata	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
columnDef	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
columnName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
toDelete	TokenNameIdentifier
=	TokenNameEQUAL
columnDef	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
toDelete	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
InvalidRequestException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Column '%s' was not found in CF '%s'"	TokenNameStringLiteral
,	TokenNameCOMMA
this	TokenNamethis
.	TokenNameDOT
columnName	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
removeColumnDefinition	TokenNameIdentifier
(	TokenNameLPAREN
toDelete	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OPTS	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
InvalidRequestException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"ALTER COLUMNFAMILY WITH invoked, but no parameters found"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfProps	TokenNameIdentifier
.	TokenNameDOT
validate	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
applyPropertiesToCFMetadata	TokenNameIdentifier
(	TokenNameLPAREN
cfm	TokenNameIdentifier
,	TokenNameCOMMA
cfProps	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
cfm	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"AlterTableStatement(cf=%s, type=%s, column=%s, validator=%s)"	TokenNameStringLiteral
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
oType	TokenNameIdentifier
,	TokenNameCOMMA
columnName	TokenNameIdentifier
,	TokenNameCOMMA
validator	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
applyPropertiesToCFMetadata	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
cfm	TokenNameIdentifier
,	TokenNameCOMMA
CFPropDefs	TokenNameIdentifier
cfProps	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
InvalidRequestException	TokenNameIdentifier
,	TokenNameCOMMA
ConfigurationException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
hasProperty	TokenNameIdentifier
(	TokenNameLPAREN
CFPropDefs	TokenNameIdentifier
.	TokenNameDOT
KW_COMPACTION_STRATEGY_CLASS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
cfm	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyClass	TokenNameIdentifier
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyClass	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
hasProperty	TokenNameIdentifier
(	TokenNameLPAREN
CFPropDefs	TokenNameIdentifier
.	TokenNameDOT
KW_COMPARATOR	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
InvalidRequestException	TokenNameIdentifier
(	TokenNameLPAREN
"Can't change CF comparator after creation"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
hasProperty	TokenNameIdentifier
(	TokenNameLPAREN
CFPropDefs	TokenNameIdentifier
.	TokenNameDOT
KW_COMMENT	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
cfm	TokenNameIdentifier
.	TokenNameDOT
comment	TokenNameIdentifier
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
CFPropDefs	TokenNameIdentifier
.	TokenNameDOT
KW_COMMENT	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
hasProperty	TokenNameIdentifier
(	TokenNameLPAREN
CFPropDefs	TokenNameIdentifier
.	TokenNameDOT
KW_DEFAULTVALIDATION	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
cfm	TokenNameIdentifier
.	TokenNameDOT
defaultValidator	TokenNameIdentifier
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
getValidator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RequestValidationException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
InvalidRequestException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Invalid validation type %s"	TokenNameStringLiteral
,	TokenNameCOMMA
cfProps	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
CFPropDefs	TokenNameIdentifier
.	TokenNameDOT
KW_DEFAULTVALIDATION	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
cfm	TokenNameIdentifier
.	TokenNameDOT
readRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
getPropertyDouble	TokenNameIdentifier
(	TokenNameLPAREN
CFPropDefs	TokenNameIdentifier
.	TokenNameDOT
KW_READREPAIRCHANCE	TokenNameIdentifier
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
getReadRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
dcLocalReadRepairChance	TokenNameIdentifier
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
getPropertyDouble	TokenNameIdentifier
(	TokenNameLPAREN
CFPropDefs	TokenNameIdentifier
.	TokenNameDOT
KW_DCLOCALREADREPAIRCHANCE	TokenNameIdentifier
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
getDcLocalReadRepair	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
gcGraceSeconds	TokenNameIdentifier
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
getPropertyInt	TokenNameIdentifier
(	TokenNameLPAREN
CFPropDefs	TokenNameIdentifier
.	TokenNameDOT
KW_GCGRACESECONDS	TokenNameIdentifier
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
getGcGraceSeconds	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
replicateOnWrite	TokenNameIdentifier
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
getPropertyBoolean	TokenNameIdentifier
(	TokenNameLPAREN
CFPropDefs	TokenNameIdentifier
.	TokenNameDOT
KW_REPLICATEONWRITE	TokenNameIdentifier
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
getReplicateOnWrite	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
minCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
getPropertyInt	TokenNameIdentifier
(	TokenNameLPAREN
CFPropDefs	TokenNameIdentifier
.	TokenNameDOT
KW_MINCOMPACTIONTHRESHOLD	TokenNameIdentifier
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
getMinCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
maxCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
getPropertyInt	TokenNameIdentifier
(	TokenNameLPAREN
CFPropDefs	TokenNameIdentifier
.	TokenNameDOT
KW_MAXCOMPACTIONTHRESHOLD	TokenNameIdentifier
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
getMaxCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
caching	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
.	TokenNameDOT
Caching	TokenNameIdentifier
.	TokenNameDOT
fromString	TokenNameIdentifier
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
getPropertyString	TokenNameIdentifier
(	TokenNameLPAREN
CFPropDefs	TokenNameIdentifier
.	TokenNameDOT
KW_CACHING	TokenNameIdentifier
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
getCaching	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
bloomFilterFpChance	TokenNameIdentifier
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
getPropertyDouble	TokenNameIdentifier
(	TokenNameLPAREN
CFPropDefs	TokenNameIdentifier
.	TokenNameDOT
KW_BF_FP_CHANCE	TokenNameIdentifier
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
getBloomFilterFpChance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfProps	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyOptions	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
cfm	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyOptions	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
entry	TokenNameIdentifier
:	TokenNameCOLON
cfProps	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyOptions	TokenNameIdentifier
.	TokenNameDOT
entrySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
cfm	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyOptions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
entry	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
entry	TokenNameIdentifier
.	TokenNameDOT
getValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfProps	TokenNameIdentifier
.	TokenNameDOT
compressionParameters	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
cfm	TokenNameIdentifier
.	TokenNameDOT
compressionParameters	TokenNameIdentifier
(	TokenNameLPAREN
CompressionParameters	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
cfProps	TokenNameIdentifier
.	TokenNameDOT
compressionParameters	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
