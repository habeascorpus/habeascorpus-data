package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
transport	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
EnumSet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
jboss	TokenNameIdentifier
.	TokenNameDOT
netty	TokenNameIdentifier
.	TokenNameDOT
buffer	TokenNameIdentifier
.	TokenNameDOT
ChannelBuffer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
jboss	TokenNameIdentifier
.	TokenNameDOT
netty	TokenNameIdentifier
.	TokenNameDOT
buffer	TokenNameIdentifier
.	TokenNameDOT
ChannelBuffers	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
jboss	TokenNameIdentifier
.	TokenNameDOT
netty	TokenNameIdentifier
.	TokenNameDOT
channel	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
jboss	TokenNameIdentifier
.	TokenNameDOT
netty	TokenNameIdentifier
.	TokenNameDOT
handler	TokenNameIdentifier
.	TokenNameDOT
codec	TokenNameIdentifier
.	TokenNameDOT
oneone	TokenNameIdentifier
.	TokenNameDOT
OneToOneDecoder	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
jboss	TokenNameIdentifier
.	TokenNameDOT
netty	TokenNameIdentifier
.	TokenNameDOT
handler	TokenNameIdentifier
.	TokenNameDOT
codec	TokenNameIdentifier
.	TokenNameDOT
oneone	TokenNameIdentifier
.	TokenNameDOT
OneToOneEncoder	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
jboss	TokenNameIdentifier
.	TokenNameDOT
netty	TokenNameIdentifier
.	TokenNameDOT
handler	TokenNameIdentifier
.	TokenNameDOT
codec	TokenNameIdentifier
.	TokenNameDOT
frame	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
ByteBufferUtil	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
Frame	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
final	TokenNamefinal
Header	TokenNameIdentifier
header	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
ChannelBuffer	TokenNameIdentifier
body	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
Connection	TokenNameIdentifier
connection	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
Frame	TokenNameIdentifier
(	TokenNameLPAREN
Header	TokenNameIdentifier
header	TokenNameIdentifier
,	TokenNameCOMMA
ChannelBuffer	TokenNameIdentifier
body	TokenNameIdentifier
,	TokenNameCOMMA
Connection	TokenNameIdentifier
connection	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
header	TokenNameIdentifier
=	TokenNameEQUAL
header	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
body	TokenNameIdentifier
=	TokenNameEQUAL
body	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
connection	TokenNameIdentifier
=	TokenNameEQUAL
connection	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Frame	TokenNameIdentifier
create	TokenNameIdentifier
(	TokenNameLPAREN
ChannelBuffer	TokenNameIdentifier
fullFrame	TokenNameIdentifier
,	TokenNameCOMMA
Connection	TokenNameIdentifier
connection	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
fullFrame	TokenNameIdentifier
.	TokenNameDOT
readableBytes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
Header	TokenNameIdentifier
.	TokenNameDOT
LENGTH	TokenNameIdentifier
:	TokenNameCOLON
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Frame too short (%d bytes = %s)"	TokenNameStringLiteral
,	TokenNameCOMMA
fullFrame	TokenNameIdentifier
.	TokenNameDOT
readableBytes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
ByteBufferUtil	TokenNameIdentifier
.	TokenNameDOT
bytesToHex	TokenNameIdentifier
(	TokenNameLPAREN
fullFrame	TokenNameIdentifier
.	TokenNameDOT
toByteBuffer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
version	TokenNameIdentifier
=	TokenNameEQUAL
fullFrame	TokenNameIdentifier
.	TokenNameDOT
readByte	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
flags	TokenNameIdentifier
=	TokenNameEQUAL
fullFrame	TokenNameIdentifier
.	TokenNameDOT
readByte	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
streamId	TokenNameIdentifier
=	TokenNameEQUAL
fullFrame	TokenNameIdentifier
.	TokenNameDOT
readByte	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
opcode	TokenNameIdentifier
=	TokenNameEQUAL
fullFrame	TokenNameIdentifier
.	TokenNameDOT
readByte	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
length	TokenNameIdentifier
=	TokenNameEQUAL
fullFrame	TokenNameIdentifier
.	TokenNameDOT
readInt	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
length	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
fullFrame	TokenNameIdentifier
.	TokenNameDOT
readableBytes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Message	TokenNameIdentifier
.	TokenNameDOT
Direction	TokenNameIdentifier
direction	TokenNameIdentifier
=	TokenNameEQUAL
Message	TokenNameIdentifier
.	TokenNameDOT
Direction	TokenNameIdentifier
.	TokenNameDOT
extractFromVersion	TokenNameIdentifier
(	TokenNameLPAREN
version	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
version	TokenNameIdentifier
=	TokenNameEQUAL
version	TokenNameIdentifier
&	TokenNameAND
0x7F	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Header	TokenNameIdentifier
header	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Header	TokenNameIdentifier
(	TokenNameLPAREN
version	TokenNameIdentifier
,	TokenNameCOMMA
flags	TokenNameIdentifier
,	TokenNameCOMMA
streamId	TokenNameIdentifier
,	TokenNameCOMMA
Message	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
.	TokenNameDOT
fromOpcode	TokenNameIdentifier
(	TokenNameLPAREN
opcode	TokenNameIdentifier
,	TokenNameCOMMA
direction	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
Frame	TokenNameIdentifier
(	TokenNameLPAREN
header	TokenNameIdentifier
,	TokenNameCOMMA
fullFrame	TokenNameIdentifier
,	TokenNameCOMMA
connection	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Frame	TokenNameIdentifier
create	TokenNameIdentifier
(	TokenNameLPAREN
Message	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
type	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
streamId	TokenNameIdentifier
,	TokenNameCOMMA
EnumSet	TokenNameIdentifier
<	TokenNameLESS
Header	TokenNameIdentifier
.	TokenNameDOT
Flag	TokenNameIdentifier
>	TokenNameGREATER
flags	TokenNameIdentifier
,	TokenNameCOMMA
ChannelBuffer	TokenNameIdentifier
body	TokenNameIdentifier
,	TokenNameCOMMA
Connection	TokenNameIdentifier
connection	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Header	TokenNameIdentifier
header	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Header	TokenNameIdentifier
(	TokenNameLPAREN
Header	TokenNameIdentifier
.	TokenNameDOT
CURRENT_VERSION	TokenNameIdentifier
,	TokenNameCOMMA
flags	TokenNameIdentifier
,	TokenNameCOMMA
streamId	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
Frame	TokenNameIdentifier
(	TokenNameLPAREN
header	TokenNameIdentifier
,	TokenNameCOMMA
body	TokenNameIdentifier
,	TokenNameCOMMA
connection	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
Header	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
LENGTH	TokenNameIdentifier
=	TokenNameEQUAL
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
CURRENT_VERSION	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
int	TokenNameint
version	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
EnumSet	TokenNameIdentifier
<	TokenNameLESS
Flag	TokenNameIdentifier
>	TokenNameGREATER
flags	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
int	TokenNameint
streamId	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
Message	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
type	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
Header	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
version	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
flags	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
streamId	TokenNameIdentifier
,	TokenNameCOMMA
Message	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
version	TokenNameIdentifier
,	TokenNameCOMMA
Flag	TokenNameIdentifier
.	TokenNameDOT
deserialize	TokenNameIdentifier
(	TokenNameLPAREN
flags	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
streamId	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Header	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
version	TokenNameIdentifier
,	TokenNameCOMMA
EnumSet	TokenNameIdentifier
<	TokenNameLESS
Flag	TokenNameIdentifier
>	TokenNameGREATER
flags	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
streamId	TokenNameIdentifier
,	TokenNameCOMMA
Message	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
version	TokenNameIdentifier
=	TokenNameEQUAL
version	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
flags	TokenNameIdentifier
=	TokenNameEQUAL
flags	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
streamId	TokenNameIdentifier
=	TokenNameEQUAL
streamId	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
type	TokenNameIdentifier
=	TokenNameEQUAL
type	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
enum	TokenNameenum
Flag	TokenNameIdentifier
{	TokenNameLBRACE
COMPRESSED	TokenNameIdentifier
,	TokenNameCOMMA
TRACING	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
EnumSet	TokenNameIdentifier
<	TokenNameLESS
Flag	TokenNameIdentifier
>	TokenNameGREATER
deserialize	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
flags	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
EnumSet	TokenNameIdentifier
<	TokenNameLESS
Flag	TokenNameIdentifier
>	TokenNameGREATER
set	TokenNameIdentifier
=	TokenNameEQUAL
EnumSet	TokenNameIdentifier
.	TokenNameDOT
noneOf	TokenNameIdentifier
(	TokenNameLPAREN
Flag	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Flag	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
values	TokenNameIdentifier
=	TokenNameEQUAL
Flag	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
n	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
n	TokenNameIdentifier
<	TokenNameLESS
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
n	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
flags	TokenNameIdentifier
&	TokenNameAND
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
n	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
set	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
values	TokenNameIdentifier
[	TokenNameLBRACKET
n	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
set	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
serialize	TokenNameIdentifier
(	TokenNameLPAREN
EnumSet	TokenNameIdentifier
<	TokenNameLESS
Flag	TokenNameIdentifier
>	TokenNameGREATER
flags	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Flag	TokenNameIdentifier
flag	TokenNameIdentifier
:	TokenNameCOLON
flags	TokenNameIdentifier
)	TokenNameRPAREN
i	TokenNameIdentifier
|=	TokenNameOR_EQUAL
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
flag	TokenNameIdentifier
.	TokenNameDOT
ordinal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
i	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
Frame	TokenNameIdentifier
with	TokenNameIdentifier
(	TokenNameLPAREN
ChannelBuffer	TokenNameIdentifier
newBody	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Frame	TokenNameIdentifier
(	TokenNameLPAREN
header	TokenNameIdentifier
,	TokenNameCOMMA
newBody	TokenNameIdentifier
,	TokenNameCOMMA
connection	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
Decoder	TokenNameIdentifier
extends	TokenNameextends
LengthFieldBasedFrameDecoder	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MAX_FRAME_LENTH	TokenNameIdentifier
=	TokenNameEQUAL
256	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
1024	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
1024	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
Connection	TokenNameIdentifier
connection	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
Decoder	TokenNameIdentifier
(	TokenNameLPAREN
Connection	TokenNameIdentifier
.	TokenNameDOT
Tracker	TokenNameIdentifier
tracker	TokenNameIdentifier
,	TokenNameCOMMA
Connection	TokenNameIdentifier
.	TokenNameDOT
Factory	TokenNameIdentifier
factory	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
MAX_FRAME_LENTH	TokenNameIdentifier
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
connection	TokenNameIdentifier
=	TokenNameEQUAL
factory	TokenNameIdentifier
.	TokenNameDOT
newConnection	TokenNameIdentifier
(	TokenNameLPAREN
tracker	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
channelOpen	TokenNameIdentifier
(	TokenNameLPAREN
ChannelHandlerContext	TokenNameIdentifier
ctx	TokenNameIdentifier
,	TokenNameCOMMA
ChannelStateEvent	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
connection	TokenNameIdentifier
.	TokenNameDOT
registerChannel	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getChannel	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
protected	TokenNameprotected
Object	TokenNameIdentifier
decode	TokenNameIdentifier
(	TokenNameLPAREN
ChannelHandlerContext	TokenNameIdentifier
ctx	TokenNameIdentifier
,	TokenNameCOMMA
Channel	TokenNameIdentifier
channel	TokenNameIdentifier
,	TokenNameCOMMA
ChannelBuffer	TokenNameIdentifier
buffer	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
buffer	TokenNameIdentifier
.	TokenNameDOT
readableBytes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
firstByte	TokenNameIdentifier
=	TokenNameEQUAL
buffer	TokenNameIdentifier
.	TokenNameDOT
getByte	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Message	TokenNameIdentifier
.	TokenNameDOT
Direction	TokenNameIdentifier
direction	TokenNameIdentifier
=	TokenNameEQUAL
Message	TokenNameIdentifier
.	TokenNameDOT
Direction	TokenNameIdentifier
.	TokenNameDOT
extractFromVersion	TokenNameIdentifier
(	TokenNameLPAREN
firstByte	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
version	TokenNameIdentifier
=	TokenNameEQUAL
firstByte	TokenNameIdentifier
&	TokenNameAND
0x7F	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
version	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
Header	TokenNameIdentifier
.	TokenNameDOT
CURRENT_VERSION	TokenNameIdentifier
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ProtocolException	TokenNameIdentifier
(	TokenNameLPAREN
"Invalid or unsupported protocol version: "	TokenNameStringLiteral
+	TokenNamePLUS
version	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
buffer	TokenNameIdentifier
.	TokenNameDOT
readableBytes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
4	TokenNameIntegerLiteral
)	TokenNameRPAREN
Message	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
.	TokenNameDOT
fromOpcode	TokenNameIdentifier
(	TokenNameLPAREN
buffer	TokenNameIdentifier
.	TokenNameDOT
getByte	TokenNameIdentifier
(	TokenNameLPAREN
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
direction	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ChannelBuffer	TokenNameIdentifier
frame	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
ChannelBuffer	TokenNameIdentifier
)	TokenNameRPAREN
super	TokenNamesuper
.	TokenNameDOT
decode	TokenNameIdentifier
(	TokenNameLPAREN
ctx	TokenNameIdentifier
,	TokenNameCOMMA
channel	TokenNameIdentifier
,	TokenNameCOMMA
buffer	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
frame	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
Frame	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
frame	TokenNameIdentifier
,	TokenNameCOMMA
connection	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
CorruptedFrameException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
ProtocolException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
TooLongFrameException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
ProtocolException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
Encoder	TokenNameIdentifier
extends	TokenNameextends
OneToOneEncoder	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
Object	TokenNameIdentifier
encode	TokenNameIdentifier
(	TokenNameLPAREN
ChannelHandlerContext	TokenNameIdentifier
ctx	TokenNameIdentifier
,	TokenNameCOMMA
Channel	TokenNameIdentifier
channel	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
msg	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
assert	TokenNameassert
msg	TokenNameIdentifier
instanceof	TokenNameinstanceof
Frame	TokenNameIdentifier
:	TokenNameCOLON
"Expecting frame, got "	TokenNameStringLiteral
+	TokenNamePLUS
msg	TokenNameIdentifier
;	TokenNameSEMICOLON
Frame	TokenNameIdentifier
frame	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Frame	TokenNameIdentifier
)	TokenNameRPAREN
msg	TokenNameIdentifier
;	TokenNameSEMICOLON
ChannelBuffer	TokenNameIdentifier
header	TokenNameIdentifier
=	TokenNameEQUAL
ChannelBuffers	TokenNameIdentifier
.	TokenNameDOT
buffer	TokenNameIdentifier
(	TokenNameLPAREN
Frame	TokenNameIdentifier
.	TokenNameDOT
Header	TokenNameIdentifier
.	TokenNameDOT
LENGTH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Message	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
type	TokenNameIdentifier
=	TokenNameEQUAL
frame	TokenNameIdentifier
.	TokenNameDOT
header	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
;	TokenNameSEMICOLON
header	TokenNameIdentifier
.	TokenNameDOT
writeByte	TokenNameIdentifier
(	TokenNameLPAREN
type	TokenNameIdentifier
.	TokenNameDOT
direction	TokenNameIdentifier
.	TokenNameDOT
addToVersion	TokenNameIdentifier
(	TokenNameLPAREN
frame	TokenNameIdentifier
.	TokenNameDOT
header	TokenNameIdentifier
.	TokenNameDOT
version	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
header	TokenNameIdentifier
.	TokenNameDOT
writeByte	TokenNameIdentifier
(	TokenNameLPAREN
Header	TokenNameIdentifier
.	TokenNameDOT
Flag	TokenNameIdentifier
.	TokenNameDOT
serialize	TokenNameIdentifier
(	TokenNameLPAREN
frame	TokenNameIdentifier
.	TokenNameDOT
header	TokenNameIdentifier
.	TokenNameDOT
flags	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
header	TokenNameIdentifier
.	TokenNameDOT
writeByte	TokenNameIdentifier
(	TokenNameLPAREN
frame	TokenNameIdentifier
.	TokenNameDOT
header	TokenNameIdentifier
.	TokenNameDOT
streamId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
header	TokenNameIdentifier
.	TokenNameDOT
writeByte	TokenNameIdentifier
(	TokenNameLPAREN
type	TokenNameIdentifier
.	TokenNameDOT
opcode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
header	TokenNameIdentifier
.	TokenNameDOT
writeInt	TokenNameIdentifier
(	TokenNameLPAREN
frame	TokenNameIdentifier
.	TokenNameDOT
body	TokenNameIdentifier
.	TokenNameDOT
readableBytes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
ChannelBuffers	TokenNameIdentifier
.	TokenNameDOT
wrappedBuffer	TokenNameIdentifier
(	TokenNameLPAREN
header	TokenNameIdentifier
,	TokenNameCOMMA
frame	TokenNameIdentifier
.	TokenNameDOT
body	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
Decompressor	TokenNameIdentifier
extends	TokenNameextends
OneToOneDecoder	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
Object	TokenNameIdentifier
decode	TokenNameIdentifier
(	TokenNameLPAREN
ChannelHandlerContext	TokenNameIdentifier
ctx	TokenNameIdentifier
,	TokenNameCOMMA
Channel	TokenNameIdentifier
channel	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
msg	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
assert	TokenNameassert
msg	TokenNameIdentifier
instanceof	TokenNameinstanceof
Frame	TokenNameIdentifier
:	TokenNameCOLON
"Expecting frame, got "	TokenNameStringLiteral
+	TokenNamePLUS
msg	TokenNameIdentifier
;	TokenNameSEMICOLON
Frame	TokenNameIdentifier
frame	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Frame	TokenNameIdentifier
)	TokenNameRPAREN
msg	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
frame	TokenNameIdentifier
.	TokenNameDOT
header	TokenNameIdentifier
.	TokenNameDOT
flags	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
Header	TokenNameIdentifier
.	TokenNameDOT
Flag	TokenNameIdentifier
.	TokenNameDOT
COMPRESSED	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
frame	TokenNameIdentifier
;	TokenNameSEMICOLON
FrameCompressor	TokenNameIdentifier
compressor	TokenNameIdentifier
=	TokenNameEQUAL
frame	TokenNameIdentifier
.	TokenNameDOT
connection	TokenNameIdentifier
.	TokenNameDOT
getCompressor	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
compressor	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
frame	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
compressor	TokenNameIdentifier
.	TokenNameDOT
decompress	TokenNameIdentifier
(	TokenNameLPAREN
frame	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
Compressor	TokenNameIdentifier
extends	TokenNameextends
OneToOneEncoder	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
Object	TokenNameIdentifier
encode	TokenNameIdentifier
(	TokenNameLPAREN
ChannelHandlerContext	TokenNameIdentifier
ctx	TokenNameIdentifier
,	TokenNameCOMMA
Channel	TokenNameIdentifier
channel	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
msg	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
assert	TokenNameassert
msg	TokenNameIdentifier
instanceof	TokenNameinstanceof
Frame	TokenNameIdentifier
:	TokenNameCOLON
"Expecting frame, got "	TokenNameStringLiteral
+	TokenNamePLUS
msg	TokenNameIdentifier
;	TokenNameSEMICOLON
Frame	TokenNameIdentifier
frame	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Frame	TokenNameIdentifier
)	TokenNameRPAREN
msg	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
frame	TokenNameIdentifier
.	TokenNameDOT
header	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
Message	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
.	TokenNameDOT
STARTUP	TokenNameIdentifier
||	TokenNameOR_OR
frame	TokenNameIdentifier
.	TokenNameDOT
connection	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
frame	TokenNameIdentifier
;	TokenNameSEMICOLON
FrameCompressor	TokenNameIdentifier
compressor	TokenNameIdentifier
=	TokenNameEQUAL
frame	TokenNameIdentifier
.	TokenNameDOT
connection	TokenNameIdentifier
.	TokenNameDOT
getCompressor	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
compressor	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
frame	TokenNameIdentifier
;	TokenNameSEMICOLON
frame	TokenNameIdentifier
.	TokenNameDOT
header	TokenNameIdentifier
.	TokenNameDOT
flags	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
Header	TokenNameIdentifier
.	TokenNameDOT
Flag	TokenNameIdentifier
.	TokenNameDOT
COMPRESSED	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
compressor	TokenNameIdentifier
.	TokenNameDOT
compress	TokenNameIdentifier
(	TokenNameLPAREN
frame	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
