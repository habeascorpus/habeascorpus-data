package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
transport	TokenNameIdentifier
.	TokenNameDOT
messages	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
jboss	TokenNameIdentifier
.	TokenNameDOT
netty	TokenNameIdentifier
.	TokenNameDOT
buffer	TokenNameIdentifier
.	TokenNameDOT
ChannelBuffer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
jboss	TokenNameIdentifier
.	TokenNameDOT
netty	TokenNameIdentifier
.	TokenNameDOT
buffer	TokenNameIdentifier
.	TokenNameDOT
ChannelBuffers	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql3	TokenNameIdentifier
.	TokenNameDOT
ColumnSpecification	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql3	TokenNameIdentifier
.	TokenNameDOT
ResultSet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
transport	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
marshal	TokenNameIdentifier
.	TokenNameDOT
TypeParser	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
CqlPreparedResult	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
CqlResult	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
CqlResultType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
MD5Digest	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
abstract	TokenNameabstract
class	TokenNameclass
ResultMessage	TokenNameIdentifier
extends	TokenNameextends
Message	TokenNameIdentifier
.	TokenNameDOT
Response	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
Message	TokenNameIdentifier
.	TokenNameDOT
Codec	TokenNameIdentifier
<	TokenNameLESS
ResultMessage	TokenNameIdentifier
>	TokenNameGREATER
codec	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Message	TokenNameIdentifier
.	TokenNameDOT
Codec	TokenNameIdentifier
<	TokenNameLESS
ResultMessage	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
ResultMessage	TokenNameIdentifier
decode	TokenNameIdentifier
(	TokenNameLPAREN
ChannelBuffer	TokenNameIdentifier
body	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Kind	TokenNameIdentifier
kind	TokenNameIdentifier
=	TokenNameEQUAL
Kind	TokenNameIdentifier
.	TokenNameDOT
fromId	TokenNameIdentifier
(	TokenNameLPAREN
body	TokenNameIdentifier
.	TokenNameDOT
readInt	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
kind	TokenNameIdentifier
.	TokenNameDOT
subcodec	TokenNameIdentifier
.	TokenNameDOT
decode	TokenNameIdentifier
(	TokenNameLPAREN
body	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ChannelBuffer	TokenNameIdentifier
encode	TokenNameIdentifier
(	TokenNameLPAREN
ResultMessage	TokenNameIdentifier
msg	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ChannelBuffer	TokenNameIdentifier
kcb	TokenNameIdentifier
=	TokenNameEQUAL
ChannelBuffers	TokenNameIdentifier
.	TokenNameDOT
buffer	TokenNameIdentifier
(	TokenNameLPAREN
4	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
kcb	TokenNameIdentifier
.	TokenNameDOT
writeInt	TokenNameIdentifier
(	TokenNameLPAREN
msg	TokenNameIdentifier
.	TokenNameDOT
kind	TokenNameIdentifier
.	TokenNameDOT
id	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ChannelBuffer	TokenNameIdentifier
body	TokenNameIdentifier
=	TokenNameEQUAL
msg	TokenNameIdentifier
.	TokenNameDOT
encodeBody	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
ChannelBuffers	TokenNameIdentifier
.	TokenNameDOT
wrappedBuffer	TokenNameIdentifier
(	TokenNameLPAREN
kcb	TokenNameIdentifier
,	TokenNameCOMMA
body	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
public	TokenNamepublic
enum	TokenNameenum
Kind	TokenNameIdentifier
{	TokenNameLBRACE
VOID	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
Void	TokenNameIdentifier
.	TokenNameDOT
subcodec	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
ROWS	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
Rows	TokenNameIdentifier
.	TokenNameDOT
subcodec	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
SET_KEYSPACE	TokenNameIdentifier
(	TokenNameLPAREN
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
SetKeyspace	TokenNameIdentifier
.	TokenNameDOT
subcodec	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
PREPARED	TokenNameIdentifier
(	TokenNameLPAREN
4	TokenNameIntegerLiteral
,	TokenNameCOMMA
Prepared	TokenNameIdentifier
.	TokenNameDOT
subcodec	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
SCHEMA_CHANGE	TokenNameIdentifier
(	TokenNameLPAREN
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
SchemaChange	TokenNameIdentifier
.	TokenNameDOT
subcodec	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
int	TokenNameint
id	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
Message	TokenNameIdentifier
.	TokenNameDOT
Codec	TokenNameIdentifier
<	TokenNameLESS
ResultMessage	TokenNameIdentifier
>	TokenNameGREATER
subcodec	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
Kind	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
ids	TokenNameIdentifier
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
int	TokenNameint
maxId	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Kind	TokenNameIdentifier
k	TokenNameIdentifier
:	TokenNameCOLON
Kind	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
maxId	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
(	TokenNameLPAREN
maxId	TokenNameIdentifier
,	TokenNameCOMMA
k	TokenNameIdentifier
.	TokenNameDOT
id	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ids	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Kind	TokenNameIdentifier
[	TokenNameLBRACKET
maxId	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Kind	TokenNameIdentifier
k	TokenNameIdentifier
:	TokenNameCOLON
Kind	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
ids	TokenNameIdentifier
[	TokenNameLBRACKET
k	TokenNameIdentifier
.	TokenNameDOT
id	TokenNameIdentifier
]	TokenNameRBRACKET
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
IllegalStateException	TokenNameIdentifier
(	TokenNameLPAREN
"Duplicate kind id"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ids	TokenNameIdentifier
[	TokenNameLBRACKET
k	TokenNameIdentifier
.	TokenNameDOT
id	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
k	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
Kind	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
id	TokenNameIdentifier
,	TokenNameCOMMA
Message	TokenNameIdentifier
.	TokenNameDOT
Codec	TokenNameIdentifier
<	TokenNameLESS
ResultMessage	TokenNameIdentifier
>	TokenNameGREATER
subcodec	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
id	TokenNameIdentifier
=	TokenNameEQUAL
id	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
subcodec	TokenNameIdentifier
=	TokenNameEQUAL
subcodec	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Kind	TokenNameIdentifier
fromId	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
id	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Kind	TokenNameIdentifier
k	TokenNameIdentifier
=	TokenNameEQUAL
ids	TokenNameIdentifier
[	TokenNameLBRACKET
id	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
k	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ProtocolException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Unknown kind id %d in RESULT message"	TokenNameStringLiteral
,	TokenNameCOMMA
id	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
k	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
Kind	TokenNameIdentifier
kind	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
ResultMessage	TokenNameIdentifier
(	TokenNameLPAREN
Kind	TokenNameIdentifier
kind	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
Message	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
.	TokenNameDOT
RESULT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
kind	TokenNameIdentifier
=	TokenNameEQUAL
kind	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ChannelBuffer	TokenNameIdentifier
encode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
codec	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
abstract	TokenNameabstract
ChannelBuffer	TokenNameIdentifier
encodeBody	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
abstract	TokenNameabstract
CqlResult	TokenNameIdentifier
toThriftResult	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
Void	TokenNameIdentifier
extends	TokenNameextends
ResultMessage	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
Void	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
Kind	TokenNameIdentifier
.	TokenNameDOT
VOID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
Message	TokenNameIdentifier
.	TokenNameDOT
Codec	TokenNameIdentifier
<	TokenNameLESS
ResultMessage	TokenNameIdentifier
>	TokenNameGREATER
subcodec	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Message	TokenNameIdentifier
.	TokenNameDOT
Codec	TokenNameIdentifier
<	TokenNameLESS
ResultMessage	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
ResultMessage	TokenNameIdentifier
decode	TokenNameIdentifier
(	TokenNameLPAREN
ChannelBuffer	TokenNameIdentifier
body	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Void	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ChannelBuffer	TokenNameIdentifier
encode	TokenNameIdentifier
(	TokenNameLPAREN
ResultMessage	TokenNameIdentifier
msg	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
msg	TokenNameIdentifier
instanceof	TokenNameinstanceof
Void	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
ChannelBuffers	TokenNameIdentifier
.	TokenNameDOT
EMPTY_BUFFER	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
protected	TokenNameprotected
ChannelBuffer	TokenNameIdentifier
encodeBody	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
subcodec	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CqlResult	TokenNameIdentifier
toThriftResult	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
CqlResult	TokenNameIdentifier
(	TokenNameLPAREN
CqlResultType	TokenNameIdentifier
.	TokenNameDOT
VOID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"EMPTY RESULT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
SetKeyspace	TokenNameIdentifier
extends	TokenNameextends
ResultMessage	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
final	TokenNamefinal
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
SetKeyspace	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
Kind	TokenNameIdentifier
.	TokenNameDOT
SET_KEYSPACE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
keyspace	TokenNameIdentifier
=	TokenNameEQUAL
keyspace	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
Message	TokenNameIdentifier
.	TokenNameDOT
Codec	TokenNameIdentifier
<	TokenNameLESS
ResultMessage	TokenNameIdentifier
>	TokenNameGREATER
subcodec	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Message	TokenNameIdentifier
.	TokenNameDOT
Codec	TokenNameIdentifier
<	TokenNameLESS
ResultMessage	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
ResultMessage	TokenNameIdentifier
decode	TokenNameIdentifier
(	TokenNameLPAREN
ChannelBuffer	TokenNameIdentifier
body	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
=	TokenNameEQUAL
CBUtil	TokenNameIdentifier
.	TokenNameDOT
readString	TokenNameIdentifier
(	TokenNameLPAREN
body	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
SetKeyspace	TokenNameIdentifier
(	TokenNameLPAREN
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ChannelBuffer	TokenNameIdentifier
encode	TokenNameIdentifier
(	TokenNameLPAREN
ResultMessage	TokenNameIdentifier
msg	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
msg	TokenNameIdentifier
instanceof	TokenNameinstanceof
SetKeyspace	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
CBUtil	TokenNameIdentifier
.	TokenNameDOT
stringToCB	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
SetKeyspace	TokenNameIdentifier
)	TokenNameRPAREN
msg	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
protected	TokenNameprotected
ChannelBuffer	TokenNameIdentifier
encodeBody	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
subcodec	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CqlResult	TokenNameIdentifier
toThriftResult	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
CqlResult	TokenNameIdentifier
(	TokenNameLPAREN
CqlResultType	TokenNameIdentifier
.	TokenNameDOT
VOID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"RESULT set keyspace "	TokenNameStringLiteral
+	TokenNamePLUS
keyspace	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
Rows	TokenNameIdentifier
extends	TokenNameextends
ResultMessage	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
Message	TokenNameIdentifier
.	TokenNameDOT
Codec	TokenNameIdentifier
<	TokenNameLESS
ResultMessage	TokenNameIdentifier
>	TokenNameGREATER
subcodec	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Message	TokenNameIdentifier
.	TokenNameDOT
Codec	TokenNameIdentifier
<	TokenNameLESS
ResultMessage	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
ResultMessage	TokenNameIdentifier
decode	TokenNameIdentifier
(	TokenNameLPAREN
ChannelBuffer	TokenNameIdentifier
body	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Rows	TokenNameIdentifier
(	TokenNameLPAREN
ResultSet	TokenNameIdentifier
.	TokenNameDOT
codec	TokenNameIdentifier
.	TokenNameDOT
decode	TokenNameIdentifier
(	TokenNameLPAREN
body	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ChannelBuffer	TokenNameIdentifier
encode	TokenNameIdentifier
(	TokenNameLPAREN
ResultMessage	TokenNameIdentifier
msg	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
msg	TokenNameIdentifier
instanceof	TokenNameinstanceof
Rows	TokenNameIdentifier
;	TokenNameSEMICOLON
Rows	TokenNameIdentifier
rowMsg	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Rows	TokenNameIdentifier
)	TokenNameRPAREN
msg	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
ResultSet	TokenNameIdentifier
.	TokenNameDOT
codec	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
rowMsg	TokenNameIdentifier
.	TokenNameDOT
result	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
ResultSet	TokenNameIdentifier
result	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
Rows	TokenNameIdentifier
(	TokenNameLPAREN
ResultSet	TokenNameIdentifier
result	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
Kind	TokenNameIdentifier
.	TokenNameDOT
ROWS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
result	TokenNameIdentifier
=	TokenNameEQUAL
result	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
ChannelBuffer	TokenNameIdentifier
encodeBody	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
subcodec	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CqlResult	TokenNameIdentifier
toThriftResult	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
result	TokenNameIdentifier
.	TokenNameDOT
toThriftResult	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"ROWS "	TokenNameStringLiteral
+	TokenNamePLUS
result	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
Prepared	TokenNameIdentifier
extends	TokenNameextends
ResultMessage	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
Message	TokenNameIdentifier
.	TokenNameDOT
Codec	TokenNameIdentifier
<	TokenNameLESS
ResultMessage	TokenNameIdentifier
>	TokenNameGREATER
subcodec	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Message	TokenNameIdentifier
.	TokenNameDOT
Codec	TokenNameIdentifier
<	TokenNameLESS
ResultMessage	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
ResultMessage	TokenNameIdentifier
decode	TokenNameIdentifier
(	TokenNameLPAREN
ChannelBuffer	TokenNameIdentifier
body	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
MD5Digest	TokenNameIdentifier
id	TokenNameIdentifier
=	TokenNameEQUAL
MD5Digest	TokenNameIdentifier
.	TokenNameDOT
wrap	TokenNameIdentifier
(	TokenNameLPAREN
CBUtil	TokenNameIdentifier
.	TokenNameDOT
readBytes	TokenNameIdentifier
(	TokenNameLPAREN
body	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
Prepared	TokenNameIdentifier
(	TokenNameLPAREN
id	TokenNameIdentifier
,	TokenNameCOMMA
-	TokenNameMINUS
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
ResultSet	TokenNameIdentifier
.	TokenNameDOT
Metadata	TokenNameIdentifier
.	TokenNameDOT
codec	TokenNameIdentifier
.	TokenNameDOT
decode	TokenNameIdentifier
(	TokenNameLPAREN
body	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ChannelBuffer	TokenNameIdentifier
encode	TokenNameIdentifier
(	TokenNameLPAREN
ResultMessage	TokenNameIdentifier
msg	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
msg	TokenNameIdentifier
instanceof	TokenNameinstanceof
Prepared	TokenNameIdentifier
;	TokenNameSEMICOLON
Prepared	TokenNameIdentifier
prepared	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Prepared	TokenNameIdentifier
)	TokenNameRPAREN
msg	TokenNameIdentifier
;	TokenNameSEMICOLON
assert	TokenNameassert
prepared	TokenNameIdentifier
.	TokenNameDOT
statementId	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
return	TokenNamereturn
ChannelBuffers	TokenNameIdentifier
.	TokenNameDOT
wrappedBuffer	TokenNameIdentifier
(	TokenNameLPAREN
CBUtil	TokenNameIdentifier
.	TokenNameDOT
bytesToCB	TokenNameIdentifier
(	TokenNameLPAREN
prepared	TokenNameIdentifier
.	TokenNameDOT
statementId	TokenNameIdentifier
.	TokenNameDOT
bytes	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
ResultSet	TokenNameIdentifier
.	TokenNameDOT
Metadata	TokenNameIdentifier
.	TokenNameDOT
codec	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
prepared	TokenNameIdentifier
.	TokenNameDOT
metadata	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
MD5Digest	TokenNameIdentifier
statementId	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
ResultSet	TokenNameIdentifier
.	TokenNameDOT
Metadata	TokenNameIdentifier
metadata	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
int	TokenNameint
thriftStatementId	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
Prepared	TokenNameIdentifier
(	TokenNameLPAREN
MD5Digest	TokenNameIdentifier
statementId	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
ColumnSpecification	TokenNameIdentifier
>	TokenNameGREATER
names	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
statementId	TokenNameIdentifier
,	TokenNameCOMMA
-	TokenNameMINUS
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
new	TokenNamenew
ResultSet	TokenNameIdentifier
.	TokenNameDOT
Metadata	TokenNameIdentifier
(	TokenNameLPAREN
names	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Prepared	TokenNameIdentifier
forThrift	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
statementId	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
ColumnSpecification	TokenNameIdentifier
>	TokenNameGREATER
names	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Prepared	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
statementId	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
ResultSet	TokenNameIdentifier
.	TokenNameDOT
Metadata	TokenNameIdentifier
(	TokenNameLPAREN
names	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Prepared	TokenNameIdentifier
(	TokenNameLPAREN
MD5Digest	TokenNameIdentifier
statementId	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
thriftStatementId	TokenNameIdentifier
,	TokenNameCOMMA
ResultSet	TokenNameIdentifier
.	TokenNameDOT
Metadata	TokenNameIdentifier
metadata	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
Kind	TokenNameIdentifier
.	TokenNameDOT
PREPARED	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
statementId	TokenNameIdentifier
=	TokenNameEQUAL
statementId	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
thriftStatementId	TokenNameIdentifier
=	TokenNameEQUAL
thriftStatementId	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
metadata	TokenNameIdentifier
=	TokenNameEQUAL
metadata	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
ChannelBuffer	TokenNameIdentifier
encodeBody	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
subcodec	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CqlResult	TokenNameIdentifier
toThriftResult	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
UnsupportedOperationException	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CqlPreparedResult	TokenNameIdentifier
toThriftPreparedResult	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
namesString	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
metadata	TokenNameIdentifier
.	TokenNameDOT
names	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
typesString	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
metadata	TokenNameIdentifier
.	TokenNameDOT
names	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnSpecification	TokenNameIdentifier
name	TokenNameIdentifier
:	TokenNameCOLON
metadata	TokenNameIdentifier
.	TokenNameDOT
names	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
namesString	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
typesString	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
TypeParser	TokenNameIdentifier
.	TokenNameDOT
getShortName	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
new	TokenNamenew
CqlPreparedResult	TokenNameIdentifier
(	TokenNameLPAREN
thriftStatementId	TokenNameIdentifier
,	TokenNameCOMMA
metadata	TokenNameIdentifier
.	TokenNameDOT
names	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
setVariable_types	TokenNameIdentifier
(	TokenNameLPAREN
typesString	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setVariable_names	TokenNameIdentifier
(	TokenNameLPAREN
namesString	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"RESULT PREPARED "	TokenNameStringLiteral
+	TokenNamePLUS
statementId	TokenNameIdentifier
+	TokenNamePLUS
" "	TokenNameStringLiteral
+	TokenNamePLUS
metadata	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
SchemaChange	TokenNameIdentifier
extends	TokenNameextends
ResultMessage	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
enum	TokenNameenum
Change	TokenNameIdentifier
{	TokenNameLBRACE
CREATED	TokenNameIdentifier
,	TokenNameCOMMA
UPDATED	TokenNameIdentifier
,	TokenNameCOMMA
DROPPED	TokenNameIdentifier
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
Change	TokenNameIdentifier
change	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
SchemaChange	TokenNameIdentifier
(	TokenNameLPAREN
Change	TokenNameIdentifier
change	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
change	TokenNameIdentifier
,	TokenNameCOMMA
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
SchemaChange	TokenNameIdentifier
(	TokenNameLPAREN
Change	TokenNameIdentifier
change	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
Kind	TokenNameIdentifier
.	TokenNameDOT
SCHEMA_CHANGE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
change	TokenNameIdentifier
=	TokenNameEQUAL
change	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
keyspace	TokenNameIdentifier
=	TokenNameEQUAL
keyspace	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
columnFamily	TokenNameIdentifier
=	TokenNameEQUAL
columnFamily	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
Message	TokenNameIdentifier
.	TokenNameDOT
Codec	TokenNameIdentifier
<	TokenNameLESS
ResultMessage	TokenNameIdentifier
>	TokenNameGREATER
subcodec	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Message	TokenNameIdentifier
.	TokenNameDOT
Codec	TokenNameIdentifier
<	TokenNameLESS
ResultMessage	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
ResultMessage	TokenNameIdentifier
decode	TokenNameIdentifier
(	TokenNameLPAREN
ChannelBuffer	TokenNameIdentifier
body	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
cStr	TokenNameIdentifier
=	TokenNameEQUAL
CBUtil	TokenNameIdentifier
.	TokenNameDOT
readString	TokenNameIdentifier
(	TokenNameLPAREN
body	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Change	TokenNameIdentifier
change	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
change	TokenNameIdentifier
=	TokenNameEQUAL
Enum	TokenNameIdentifier
.	TokenNameDOT
valueOf	TokenNameIdentifier
(	TokenNameLPAREN
Change	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
cStr	TokenNameIdentifier
.	TokenNameDOT
toUpperCase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
IllegalStateException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
ProtocolException	TokenNameIdentifier
(	TokenNameLPAREN
"Unknown Schema change action: "	TokenNameStringLiteral
+	TokenNamePLUS
cStr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
=	TokenNameEQUAL
CBUtil	TokenNameIdentifier
.	TokenNameDOT
readString	TokenNameIdentifier
(	TokenNameLPAREN
body	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
=	TokenNameEQUAL
CBUtil	TokenNameIdentifier
.	TokenNameDOT
readString	TokenNameIdentifier
(	TokenNameLPAREN
body	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
SchemaChange	TokenNameIdentifier
(	TokenNameLPAREN
change	TokenNameIdentifier
,	TokenNameCOMMA
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ChannelBuffer	TokenNameIdentifier
encode	TokenNameIdentifier
(	TokenNameLPAREN
ResultMessage	TokenNameIdentifier
msg	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
msg	TokenNameIdentifier
instanceof	TokenNameinstanceof
SchemaChange	TokenNameIdentifier
;	TokenNameSEMICOLON
SchemaChange	TokenNameIdentifier
scm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SchemaChange	TokenNameIdentifier
)	TokenNameRPAREN
msg	TokenNameIdentifier
;	TokenNameSEMICOLON
ChannelBuffer	TokenNameIdentifier
a	TokenNameIdentifier
=	TokenNameEQUAL
CBUtil	TokenNameIdentifier
.	TokenNameDOT
stringToCB	TokenNameIdentifier
(	TokenNameLPAREN
scm	TokenNameIdentifier
.	TokenNameDOT
change	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ChannelBuffer	TokenNameIdentifier
k	TokenNameIdentifier
=	TokenNameEQUAL
CBUtil	TokenNameIdentifier
.	TokenNameDOT
stringToCB	TokenNameIdentifier
(	TokenNameLPAREN
scm	TokenNameIdentifier
.	TokenNameDOT
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ChannelBuffer	TokenNameIdentifier
c	TokenNameIdentifier
=	TokenNameEQUAL
CBUtil	TokenNameIdentifier
.	TokenNameDOT
stringToCB	TokenNameIdentifier
(	TokenNameLPAREN
scm	TokenNameIdentifier
.	TokenNameDOT
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
ChannelBuffers	TokenNameIdentifier
.	TokenNameDOT
wrappedBuffer	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
,	TokenNameCOMMA
k	TokenNameIdentifier
,	TokenNameCOMMA
c	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
protected	TokenNameprotected
ChannelBuffer	TokenNameIdentifier
encodeBody	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
subcodec	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CqlResult	TokenNameIdentifier
toThriftResult	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
CqlResult	TokenNameIdentifier
(	TokenNameLPAREN
CqlResultType	TokenNameIdentifier
.	TokenNameDOT
VOID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"RESULT schema change "	TokenNameStringLiteral
+	TokenNamePLUS
change	TokenNameIdentifier
+	TokenNamePLUS
" on "	TokenNameStringLiteral
+	TokenNamePLUS
keyspace	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
columnFamily	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
""	TokenNameStringLiteral
:	TokenNameCOLON
"."	TokenNameStringLiteral
+	TokenNamePLUS
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
