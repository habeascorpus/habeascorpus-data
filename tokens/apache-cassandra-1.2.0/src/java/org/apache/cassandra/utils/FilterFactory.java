package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
DataInput	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
DataOutput	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
TypeSizes	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
obs	TokenNameIdentifier
.	TokenNameDOT
IBitSet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
obs	TokenNameIdentifier
.	TokenNameDOT
OffHeapBitSet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
obs	TokenNameIdentifier
.	TokenNameDOT
OpenBitSet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
slf4j	TokenNameIdentifier
.	TokenNameDOT
Logger	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
slf4j	TokenNameIdentifier
.	TokenNameDOT
LoggerFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
FilterFactory	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
Logger	TokenNameIdentifier
logger	TokenNameIdentifier
=	TokenNameEQUAL
LoggerFactory	TokenNameIdentifier
.	TokenNameDOT
getLogger	TokenNameIdentifier
(	TokenNameLPAREN
FilterFactory	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
TypeSizes	TokenNameIdentifier
TYPE_SIZES	TokenNameIdentifier
=	TokenNameEQUAL
TypeSizes	TokenNameIdentifier
.	TokenNameDOT
NATIVE	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
long	TokenNamelong
BITSET_EXCESS	TokenNameIdentifier
=	TokenNameEQUAL
20	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
enum	TokenNameenum
Type	TokenNameIdentifier
{	TokenNameLBRACE
SHA	TokenNameIdentifier
,	TokenNameCOMMA
MURMUR2	TokenNameIdentifier
,	TokenNameCOMMA
MURMUR3	TokenNameIdentifier
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
serialize	TokenNameIdentifier
(	TokenNameLPAREN
IFilter	TokenNameIdentifier
bf	TokenNameIdentifier
,	TokenNameCOMMA
DataOutput	TokenNameIdentifier
output	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
serialize	TokenNameIdentifier
(	TokenNameLPAREN
bf	TokenNameIdentifier
,	TokenNameCOMMA
output	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
.	TokenNameDOT
MURMUR3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
serialize	TokenNameIdentifier
(	TokenNameLPAREN
IFilter	TokenNameIdentifier
bf	TokenNameIdentifier
,	TokenNameCOMMA
DataOutput	TokenNameIdentifier
output	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
type	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
SHA	TokenNameIdentifier
:	TokenNameCOLON
LegacyBloomFilter	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
.	TokenNameDOT
serialize	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
LegacyBloomFilter	TokenNameIdentifier
)	TokenNameRPAREN
bf	TokenNameIdentifier
,	TokenNameCOMMA
output	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
MURMUR2	TokenNameIdentifier
:	TokenNameCOLON
Murmur2BloomFilter	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
.	TokenNameDOT
serialize	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
Murmur2BloomFilter	TokenNameIdentifier
)	TokenNameRPAREN
bf	TokenNameIdentifier
,	TokenNameCOMMA
output	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
Murmur3BloomFilter	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
.	TokenNameDOT
serialize	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
Murmur3BloomFilter	TokenNameIdentifier
)	TokenNameRPAREN
bf	TokenNameIdentifier
,	TokenNameCOMMA
output	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
IFilter	TokenNameIdentifier
deserialize	TokenNameIdentifier
(	TokenNameLPAREN
DataInput	TokenNameIdentifier
input	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
type	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
offheap	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
SHA	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
LegacyBloomFilter	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
.	TokenNameDOT
deserialize	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
MURMUR2	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Murmur2BloomFilter	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
.	TokenNameDOT
deserialize	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
offheap	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
Murmur3BloomFilter	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
.	TokenNameDOT
deserialize	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
offheap	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
long	TokenNamelong
serializedSize	TokenNameIdentifier
(	TokenNameLPAREN
IFilter	TokenNameIdentifier
bf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
serializedSize	TokenNameIdentifier
(	TokenNameLPAREN
bf	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
.	TokenNameDOT
MURMUR3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
long	TokenNamelong
serializedSize	TokenNameIdentifier
(	TokenNameLPAREN
IFilter	TokenNameIdentifier
bf	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
SHA	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
LegacyBloomFilter	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
.	TokenNameDOT
serializedSize	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
LegacyBloomFilter	TokenNameIdentifier
)	TokenNameRPAREN
bf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
MURMUR2	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Murmur2BloomFilter	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
.	TokenNameDOT
serializedSize	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
Murmur2BloomFilter	TokenNameIdentifier
)	TokenNameRPAREN
bf	TokenNameIdentifier
,	TokenNameCOMMA
TYPE_SIZES	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
Murmur3BloomFilter	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
.	TokenNameDOT
serializedSize	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
Murmur3BloomFilter	TokenNameIdentifier
)	TokenNameRPAREN
bf	TokenNameIdentifier
,	TokenNameCOMMA
TYPE_SIZES	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
IFilter	TokenNameIdentifier
getFilter	TokenNameIdentifier
(	TokenNameLPAREN
long	TokenNamelong
numElements	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
targetBucketsPerElem	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
offheap	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getFilter	TokenNameIdentifier
(	TokenNameLPAREN
numElements	TokenNameIdentifier
,	TokenNameCOMMA
targetBucketsPerElem	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
.	TokenNameDOT
MURMUR3	TokenNameIdentifier
,	TokenNameCOMMA
offheap	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
IFilter	TokenNameIdentifier
getFilter	TokenNameIdentifier
(	TokenNameLPAREN
long	TokenNamelong
numElements	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
targetBucketsPerElem	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
type	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
offheap	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
maxBucketsPerElement	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
BloomCalculations	TokenNameIdentifier
.	TokenNameDOT
maxBucketsPerElement	TokenNameIdentifier
(	TokenNameLPAREN
numElements	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
bucketsPerElement	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
min	TokenNameIdentifier
(	TokenNameLPAREN
targetBucketsPerElem	TokenNameIdentifier
,	TokenNameCOMMA
maxBucketsPerElement	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
bucketsPerElement	TokenNameIdentifier
<	TokenNameLESS
targetBucketsPerElem	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
warn	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Cannot provide an optimal BloomFilter for %d elements (%d/%d buckets per element)."	TokenNameStringLiteral
,	TokenNameCOMMA
numElements	TokenNameIdentifier
,	TokenNameCOMMA
bucketsPerElement	TokenNameIdentifier
,	TokenNameCOMMA
targetBucketsPerElem	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
BloomCalculations	TokenNameIdentifier
.	TokenNameDOT
BloomSpecification	TokenNameIdentifier
spec	TokenNameIdentifier
=	TokenNameEQUAL
BloomCalculations	TokenNameIdentifier
.	TokenNameDOT
computeBloomSpec	TokenNameIdentifier
(	TokenNameLPAREN
bucketsPerElement	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
createFilter	TokenNameIdentifier
(	TokenNameLPAREN
spec	TokenNameIdentifier
.	TokenNameDOT
K	TokenNameIdentifier
,	TokenNameCOMMA
numElements	TokenNameIdentifier
,	TokenNameCOMMA
spec	TokenNameIdentifier
.	TokenNameDOT
bucketsPerElement	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
,	TokenNameCOMMA
offheap	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
IFilter	TokenNameIdentifier
getFilter	TokenNameIdentifier
(	TokenNameLPAREN
long	TokenNamelong
numElements	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
maxFalsePosProbability	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
offheap	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getFilter	TokenNameIdentifier
(	TokenNameLPAREN
numElements	TokenNameIdentifier
,	TokenNameCOMMA
maxFalsePosProbability	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
.	TokenNameDOT
MURMUR3	TokenNameIdentifier
,	TokenNameCOMMA
offheap	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
IFilter	TokenNameIdentifier
getFilter	TokenNameIdentifier
(	TokenNameLPAREN
long	TokenNamelong
numElements	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
maxFalsePosProbability	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
type	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
offheap	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
maxFalsePosProbability	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
1.0	TokenNameDoubleLiteral
:	TokenNameCOLON
"Invalid probability"	TokenNameStringLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
maxFalsePosProbability	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
1.0	TokenNameDoubleLiteral
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
AlwaysPresentFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
bucketsPerElement	TokenNameIdentifier
=	TokenNameEQUAL
BloomCalculations	TokenNameIdentifier
.	TokenNameDOT
maxBucketsPerElement	TokenNameIdentifier
(	TokenNameLPAREN
numElements	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
BloomCalculations	TokenNameIdentifier
.	TokenNameDOT
BloomSpecification	TokenNameIdentifier
spec	TokenNameIdentifier
=	TokenNameEQUAL
BloomCalculations	TokenNameIdentifier
.	TokenNameDOT
computeBloomSpec	TokenNameIdentifier
(	TokenNameLPAREN
bucketsPerElement	TokenNameIdentifier
,	TokenNameCOMMA
maxFalsePosProbability	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
createFilter	TokenNameIdentifier
(	TokenNameLPAREN
spec	TokenNameIdentifier
.	TokenNameDOT
K	TokenNameIdentifier
,	TokenNameCOMMA
numElements	TokenNameIdentifier
,	TokenNameCOMMA
spec	TokenNameIdentifier
.	TokenNameDOT
bucketsPerElement	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
,	TokenNameCOMMA
offheap	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
IFilter	TokenNameIdentifier
createFilter	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
hash	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
numElements	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
bucketsPer	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
type	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
offheap	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
long	TokenNamelong
numBits	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
numElements	TokenNameIdentifier
*	TokenNameMULTIPLY
bucketsPer	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
BITSET_EXCESS	TokenNameIdentifier
;	TokenNameSEMICOLON
IBitSet	TokenNameIdentifier
bitset	TokenNameIdentifier
=	TokenNameEQUAL
offheap	TokenNameIdentifier
?	TokenNameQUESTION
new	TokenNamenew
OffHeapBitSet	TokenNameIdentifier
(	TokenNameLPAREN
numBits	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
new	TokenNamenew
OpenBitSet	TokenNameIdentifier
(	TokenNameLPAREN
numBits	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
MURMUR2	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
new	TokenNamenew
Murmur2BloomFilter	TokenNameIdentifier
(	TokenNameLPAREN
hash	TokenNameIdentifier
,	TokenNameCOMMA
bitset	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
new	TokenNamenew
Murmur3BloomFilter	TokenNameIdentifier
(	TokenNameLPAREN
hash	TokenNameIdentifier
,	TokenNameCOMMA
bitset	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
