package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
;	TokenNameSEMICOLON
class	TokenNameclass
BloomCalculations	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
minBuckets	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
minK	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
EXCESS	TokenNameIdentifier
=	TokenNameEQUAL
20	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
probs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
1.0	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.393	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.400	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.283	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.237	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.253	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.221	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.155	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.147	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.160	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.181	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.109	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.092	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.092	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.101	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.154	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0804	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0609	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0561	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0578	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0638	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.133	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0618	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0423	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0359	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0347	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0364	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.118	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0489	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0306	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.024	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0217	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0216	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0229	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.105	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0397	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0228	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0166	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0141	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0133	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0135	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0145	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0952	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0329	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0174	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0118	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00943	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00844	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00819	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00846	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0869	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0276	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0136	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00864	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0065	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00552	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00513	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00509	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.08	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0236	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0108	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00646	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00459	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00371	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00329	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00314	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.074	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0203	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00875	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00492	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00332	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00255	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00217	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00199	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00194	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0689	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0177	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00718	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00381	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00244	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00179	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00146	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00129	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00121	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0012	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0645	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0156	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00596	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.003	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00183	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00128	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.001	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000852	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000775	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000744	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0606	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0138	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.005	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00239	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00139	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000935	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000702	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000574	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000505	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00047	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000459	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0571	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0123	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00423	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00193	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00107	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000692	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000499	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000394	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000335	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000302	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000287	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000284	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.054	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0111	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00362	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00158	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000839	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000519	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00036	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000275	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000226	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000198	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000183	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000176	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0513	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00998	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00312	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0013	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000663	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000394	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000264	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000194	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000155	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000132	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000118	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000111	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000109	TokenNameDoubleLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
1.0	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0488	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00906	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.0027	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00108	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00053	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000303	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000196	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.00014	TokenNameDoubleLiteral
,	TokenNameCOMMA
0.000108	TokenNameDoubleLiteral
,	TokenNameCOMMA
8.89e-05	TokenNameDoubleLiteral
,	TokenNameCOMMA
7.77e-05	TokenNameDoubleLiteral
,	TokenNameCOMMA
7.12e-05	TokenNameDoubleLiteral
,	TokenNameCOMMA
6.79e-05	TokenNameDoubleLiteral
,	TokenNameCOMMA
6.71e-05	TokenNameDoubleLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
optKPerBuckets	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
probs	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
probs	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
double	TokenNamedouble
min	TokenNameIdentifier
=	TokenNameEQUAL
Double	TokenNameIdentifier
.	TokenNameDOT
MAX_VALUE	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
prob	TokenNameIdentifier
=	TokenNameEQUAL
probs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
j	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
j	TokenNameIdentifier
<	TokenNameLESS
prob	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
prob	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
<	TokenNameLESS
min	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
min	TokenNameIdentifier
=	TokenNameEQUAL
prob	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
optKPerBuckets	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
(	TokenNameLPAREN
minK	TokenNameIdentifier
,	TokenNameCOMMA
j	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
BloomSpecification	TokenNameIdentifier
computeBloomSpec	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
bucketsPerElement	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
bucketsPerElement	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
assert	TokenNameassert
bucketsPerElement	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
probs	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
BloomSpecification	TokenNameIdentifier
(	TokenNameLPAREN
optKPerBuckets	TokenNameIdentifier
[	TokenNameLBRACKET
bucketsPerElement	TokenNameIdentifier
]	TokenNameRBRACKET
,	TokenNameCOMMA
bucketsPerElement	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
BloomSpecification	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
K	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
bucketsPerElement	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
BloomSpecification	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
k	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
bucketsPerElement	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
K	TokenNameIdentifier
=	TokenNameEQUAL
k	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
bucketsPerElement	TokenNameIdentifier
=	TokenNameEQUAL
bucketsPerElement	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"BloomSpecification(K=%d, bucketsPerElement=%d)"	TokenNameStringLiteral
,	TokenNameCOMMA
K	TokenNameIdentifier
,	TokenNameCOMMA
bucketsPerElement	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
BloomSpecification	TokenNameIdentifier
computeBloomSpec	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
maxBucketsPerElement	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
maxFalsePosProb	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
maxBucketsPerElement	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
assert	TokenNameassert
maxBucketsPerElement	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
probs	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
maxK	TokenNameIdentifier
=	TokenNameEQUAL
probs	TokenNameIdentifier
[	TokenNameLBRACKET
maxBucketsPerElement	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
length	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
maxFalsePosProb	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
probs	TokenNameIdentifier
[	TokenNameLBRACKET
minBuckets	TokenNameIdentifier
]	TokenNameRBRACKET
[	TokenNameLBRACKET
minK	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
BloomSpecification	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
optKPerBuckets	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
maxFalsePosProb	TokenNameIdentifier
<	TokenNameLESS
probs	TokenNameIdentifier
[	TokenNameLBRACKET
maxBucketsPerElement	TokenNameIdentifier
]	TokenNameRBRACKET
[	TokenNameLBRACKET
maxK	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
UnsupportedOperationException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Unable to satisfy %s with %s buckets per element"	TokenNameStringLiteral
,	TokenNameCOMMA
maxFalsePosProb	TokenNameIdentifier
,	TokenNameCOMMA
maxBucketsPerElement	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
bucketsPerElement	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
K	TokenNameIdentifier
=	TokenNameEQUAL
optKPerBuckets	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
probs	TokenNameIdentifier
[	TokenNameLBRACKET
bucketsPerElement	TokenNameIdentifier
]	TokenNameRBRACKET
[	TokenNameLBRACKET
K	TokenNameIdentifier
]	TokenNameRBRACKET
>	TokenNameGREATER
maxFalsePosProb	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
bucketsPerElement	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
K	TokenNameIdentifier
=	TokenNameEQUAL
optKPerBuckets	TokenNameIdentifier
[	TokenNameLBRACKET
bucketsPerElement	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
probs	TokenNameIdentifier
[	TokenNameLBRACKET
bucketsPerElement	TokenNameIdentifier
]	TokenNameRBRACKET
[	TokenNameLBRACKET
K	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
<=	TokenNameLESS_EQUAL
maxFalsePosProb	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
K	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
new	TokenNamenew
BloomSpecification	TokenNameIdentifier
(	TokenNameLPAREN
K	TokenNameIdentifier
,	TokenNameCOMMA
bucketsPerElement	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
maxBucketsPerElement	TokenNameIdentifier
(	TokenNameLPAREN
long	TokenNamelong
numElements	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
numElements	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
numElements	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
v	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Long	TokenNameIdentifier
.	TokenNameDOT
MAX_VALUE	TokenNameIdentifier
-	TokenNameMINUS
EXCESS	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
(	TokenNameLPAREN
double	TokenNamedouble
)	TokenNameRPAREN
numElements	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
v	TokenNameIdentifier
<	TokenNameLESS
1.0	TokenNameDoubleLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
UnsupportedOperationException	TokenNameIdentifier
(	TokenNameLPAREN
"Cannot compute probabilities for "	TokenNameStringLiteral
+	TokenNamePLUS
numElements	TokenNameIdentifier
+	TokenNamePLUS
" elements."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
Math	TokenNameIdentifier
.	TokenNameDOT
min	TokenNameIdentifier
(	TokenNameLPAREN
BloomCalculations	TokenNameIdentifier
.	TokenNameDOT
probs	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
v	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
