package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
nio	TokenNameIdentifier
.	TokenNameDOT
ByteBuffer	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
MurmurHash	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
hash32	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
data	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
offset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
length	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
seed	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
m	TokenNameIdentifier
=	TokenNameEQUAL
0x5bd1e995	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
r	TokenNameIdentifier
=	TokenNameEQUAL
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
h	TokenNameIdentifier
=	TokenNameEQUAL
seed	TokenNameIdentifier
^	TokenNameXOR
length	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
len_4	TokenNameIdentifier
=	TokenNameEQUAL
length	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
len_4	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
i_4	TokenNameIdentifier
=	TokenNameEQUAL
i	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
k	TokenNameIdentifier
=	TokenNameEQUAL
data	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
i_4	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k	TokenNameIdentifier
=	TokenNameEQUAL
k	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
k	TokenNameIdentifier
=	TokenNameEQUAL
k	TokenNameIdentifier
|	TokenNameOR
(	TokenNameLPAREN
data	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
i_4	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k	TokenNameIdentifier
=	TokenNameEQUAL
k	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
k	TokenNameIdentifier
=	TokenNameEQUAL
k	TokenNameIdentifier
|	TokenNameOR
(	TokenNameLPAREN
data	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
i_4	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k	TokenNameIdentifier
=	TokenNameEQUAL
k	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
k	TokenNameIdentifier
=	TokenNameEQUAL
k	TokenNameIdentifier
|	TokenNameOR
(	TokenNameLPAREN
data	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
i_4	TokenNameIdentifier
+	TokenNamePLUS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
m	TokenNameIdentifier
;	TokenNameSEMICOLON
k	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
k	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
r	TokenNameIdentifier
;	TokenNameSEMICOLON
k	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
m	TokenNameIdentifier
;	TokenNameSEMICOLON
h	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
m	TokenNameIdentifier
;	TokenNameSEMICOLON
h	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
k	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
len_m	TokenNameIdentifier
=	TokenNameEQUAL
len_4	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
left	TokenNameIdentifier
=	TokenNameEQUAL
length	TokenNameIdentifier
-	TokenNameMINUS
len_m	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
left	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
left	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
data	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
length	TokenNameIdentifier
-	TokenNameMINUS
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
16	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
left	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
data	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
length	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
left	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
data	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
length	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
h	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
m	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
h	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
h	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
13	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
h	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
m	TokenNameIdentifier
;	TokenNameSEMICOLON
h	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
h	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
15	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
return	TokenNamereturn
h	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
long	TokenNamelong
hash2_64	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
key	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
offset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
length	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
seed	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
long	TokenNamelong
m64	TokenNameIdentifier
=	TokenNameEQUAL
0xc6a4a7935bd1e995L	TokenNameLongLiteral
;	TokenNameSEMICOLON
int	TokenNameint
r64	TokenNameIdentifier
=	TokenNameEQUAL
47	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
long	TokenNamelong
h64	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
seed	TokenNameIdentifier
&	TokenNameAND
0xffffffffL	TokenNameLongLiteral
)	TokenNameRPAREN
^	TokenNameXOR
(	TokenNameLPAREN
m64	TokenNameIdentifier
*	TokenNameMULTIPLY
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
lenLongs	TokenNameIdentifier
=	TokenNameEQUAL
length	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
lenLongs	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
i_8	TokenNameIdentifier
=	TokenNameEQUAL
i	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
long	TokenNamelong
k64	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
i_8	TokenNameIdentifier
+	TokenNamePLUS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
i_8	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
i_8	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
i_8	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
i_8	TokenNameIdentifier
+	TokenNamePLUS
4	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
32	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
i_8	TokenNameIdentifier
+	TokenNamePLUS
5	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
40	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
i_8	TokenNameIdentifier
+	TokenNamePLUS
6	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
48	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
i_8	TokenNameIdentifier
+	TokenNamePLUS
7	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
56	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k64	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
m64	TokenNameIdentifier
;	TokenNameSEMICOLON
k64	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
k64	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
r64	TokenNameIdentifier
;	TokenNameSEMICOLON
k64	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
m64	TokenNameIdentifier
;	TokenNameSEMICOLON
h64	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
k64	TokenNameIdentifier
;	TokenNameSEMICOLON
h64	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
m64	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
rem	TokenNameIdentifier
=	TokenNameEQUAL
length	TokenNameIdentifier
&	TokenNameAND
0x7	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
rem	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
0	TokenNameIntegerLiteral
:	TokenNameCOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
7	TokenNameIntegerLiteral
:	TokenNameCOLON
h64	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
length	TokenNameIdentifier
-	TokenNameMINUS
rem	TokenNameIdentifier
+	TokenNamePLUS
6	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
48	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
6	TokenNameIntegerLiteral
:	TokenNameCOLON
h64	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
length	TokenNameIdentifier
-	TokenNameMINUS
rem	TokenNameIdentifier
+	TokenNamePLUS
5	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
40	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
5	TokenNameIntegerLiteral
:	TokenNameCOLON
h64	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
length	TokenNameIdentifier
-	TokenNameMINUS
rem	TokenNameIdentifier
+	TokenNamePLUS
4	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
32	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
4	TokenNameIntegerLiteral
:	TokenNameCOLON
h64	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
length	TokenNameIdentifier
-	TokenNameMINUS
rem	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
h64	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
length	TokenNameIdentifier
-	TokenNameMINUS
rem	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
16	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
h64	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
length	TokenNameIdentifier
-	TokenNameMINUS
rem	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
h64	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
length	TokenNameIdentifier
-	TokenNameMINUS
rem	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h64	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
m64	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
h64	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
h64	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
r64	TokenNameIdentifier
;	TokenNameSEMICOLON
h64	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
m64	TokenNameIdentifier
;	TokenNameSEMICOLON
h64	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
h64	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
r64	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
h64	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
static	TokenNamestatic
long	TokenNamelong
getblock	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
key	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
offset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
index	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
i_8	TokenNameIdentifier
=	TokenNameEQUAL
index	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
blockOffset	TokenNameIdentifier
=	TokenNameEQUAL
offset	TokenNameIdentifier
+	TokenNamePLUS
i_8	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
blockOffset	TokenNameIdentifier
+	TokenNamePLUS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
blockOffset	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
blockOffset	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
blockOffset	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
blockOffset	TokenNameIdentifier
+	TokenNamePLUS
4	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
32	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
blockOffset	TokenNameIdentifier
+	TokenNamePLUS
5	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
40	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
blockOffset	TokenNameIdentifier
+	TokenNamePLUS
6	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
48	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
blockOffset	TokenNameIdentifier
+	TokenNamePLUS
7	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xff	TokenNameIntegerLiteral
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
56	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
static	TokenNamestatic
long	TokenNamelong
rotl64	TokenNameIdentifier
(	TokenNameLPAREN
long	TokenNamelong
v	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
n	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
(	TokenNameLPAREN
v	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
n	TokenNameIdentifier
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
v	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
(	TokenNameLPAREN
64	TokenNameIntegerLiteral
-	TokenNameMINUS
n	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
static	TokenNamestatic
long	TokenNamelong
fmix	TokenNameIdentifier
(	TokenNameLPAREN
long	TokenNamelong
k	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
k	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
k	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
33	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
k	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
0xff51afd7ed558ccdL	TokenNameLongLiteral
;	TokenNameSEMICOLON
k	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
k	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
33	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
k	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
0xc4ceb9fe1a85ec53L	TokenNameLongLiteral
;	TokenNameSEMICOLON
k	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
k	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
33	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
return	TokenNamereturn
k	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
hash3_x64_128	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
key	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
offset	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
length	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
seed	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
nblocks	TokenNameIdentifier
=	TokenNameEQUAL
length	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
long	TokenNamelong
h1	TokenNameIdentifier
=	TokenNameEQUAL
seed	TokenNameIdentifier
;	TokenNameSEMICOLON
long	TokenNamelong
h2	TokenNameIdentifier
=	TokenNameEQUAL
seed	TokenNameIdentifier
;	TokenNameSEMICOLON
long	TokenNamelong
c1	TokenNameIdentifier
=	TokenNameEQUAL
0x87c37b91114253d5L	TokenNameLongLiteral
;	TokenNameSEMICOLON
long	TokenNamelong
c2	TokenNameIdentifier
=	TokenNameEQUAL
0x4cf5ad432745937fL	TokenNameLongLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
nblocks	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
long	TokenNamelong
k1	TokenNameIdentifier
=	TokenNameEQUAL
getblock	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
,	TokenNameCOMMA
offset	TokenNameIdentifier
,	TokenNameCOMMA
i	TokenNameIdentifier
*	TokenNameMULTIPLY
2	TokenNameIntegerLiteral
+	TokenNamePLUS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
long	TokenNamelong
k2	TokenNameIdentifier
=	TokenNameEQUAL
getblock	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
,	TokenNameCOMMA
offset	TokenNameIdentifier
,	TokenNameCOMMA
i	TokenNameIdentifier
*	TokenNameMULTIPLY
2	TokenNameIntegerLiteral
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k1	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
c1	TokenNameIdentifier
;	TokenNameSEMICOLON
k1	TokenNameIdentifier
=	TokenNameEQUAL
rotl64	TokenNameIdentifier
(	TokenNameLPAREN
k1	TokenNameIdentifier
,	TokenNameCOMMA
31	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k1	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
c2	TokenNameIdentifier
;	TokenNameSEMICOLON
h1	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
k1	TokenNameIdentifier
;	TokenNameSEMICOLON
h1	TokenNameIdentifier
=	TokenNameEQUAL
rotl64	TokenNameIdentifier
(	TokenNameLPAREN
h1	TokenNameIdentifier
,	TokenNameCOMMA
27	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h1	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
h2	TokenNameIdentifier
;	TokenNameSEMICOLON
h1	TokenNameIdentifier
=	TokenNameEQUAL
h1	TokenNameIdentifier
*	TokenNameMULTIPLY
5	TokenNameIntegerLiteral
+	TokenNamePLUS
0x52dce729	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
k2	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
c2	TokenNameIdentifier
;	TokenNameSEMICOLON
k2	TokenNameIdentifier
=	TokenNameEQUAL
rotl64	TokenNameIdentifier
(	TokenNameLPAREN
k2	TokenNameIdentifier
,	TokenNameCOMMA
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k2	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
c1	TokenNameIdentifier
;	TokenNameSEMICOLON
h2	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
k2	TokenNameIdentifier
;	TokenNameSEMICOLON
h2	TokenNameIdentifier
=	TokenNameEQUAL
rotl64	TokenNameIdentifier
(	TokenNameLPAREN
h2	TokenNameIdentifier
,	TokenNameCOMMA
31	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h2	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
h1	TokenNameIdentifier
;	TokenNameSEMICOLON
h2	TokenNameIdentifier
=	TokenNameEQUAL
h2	TokenNameIdentifier
*	TokenNameMULTIPLY
5	TokenNameIntegerLiteral
+	TokenNamePLUS
0x38495ab5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
offset	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
nblocks	TokenNameIdentifier
*	TokenNameMULTIPLY
16	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
long	TokenNamelong
k1	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
long	TokenNamelong
k2	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
length	TokenNameIdentifier
&	TokenNameAND
15	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
15	TokenNameIntegerLiteral
:	TokenNameCOLON
k2	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
14	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
48	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
14	TokenNameIntegerLiteral
:	TokenNameCOLON
k2	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
13	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
40	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
13	TokenNameIntegerLiteral
:	TokenNameCOLON
k2	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
12	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
32	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
12	TokenNameIntegerLiteral
:	TokenNameCOLON
k2	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
11	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
11	TokenNameIntegerLiteral
:	TokenNameCOLON
k2	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
10	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
16	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
10	TokenNameIntegerLiteral
:	TokenNameCOLON
k2	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
9	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
9	TokenNameIntegerLiteral
:	TokenNameCOLON
k2	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
k2	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
c2	TokenNameIdentifier
;	TokenNameSEMICOLON
k2	TokenNameIdentifier
=	TokenNameEQUAL
rotl64	TokenNameIdentifier
(	TokenNameLPAREN
k2	TokenNameIdentifier
,	TokenNameCOMMA
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k2	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
c1	TokenNameIdentifier
;	TokenNameSEMICOLON
h2	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
k2	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
8	TokenNameIntegerLiteral
:	TokenNameCOLON
k1	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
7	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
56	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
7	TokenNameIntegerLiteral
:	TokenNameCOLON
k1	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
6	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
48	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
6	TokenNameIntegerLiteral
:	TokenNameCOLON
k1	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
5	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
40	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
5	TokenNameIntegerLiteral
:	TokenNameCOLON
k1	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
4	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
32	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
4	TokenNameIntegerLiteral
:	TokenNameCOLON
k1	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
k1	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
16	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
k1	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
k1	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
key	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k1	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
c1	TokenNameIdentifier
;	TokenNameSEMICOLON
k1	TokenNameIdentifier
=	TokenNameEQUAL
rotl64	TokenNameIdentifier
(	TokenNameLPAREN
k1	TokenNameIdentifier
,	TokenNameCOMMA
31	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k1	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
c2	TokenNameIdentifier
;	TokenNameSEMICOLON
h1	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
k1	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
;	TokenNameSEMICOLON
h1	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
length	TokenNameIdentifier
;	TokenNameSEMICOLON
h2	TokenNameIdentifier
^=	TokenNameXOR_EQUAL
length	TokenNameIdentifier
;	TokenNameSEMICOLON
h1	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
h2	TokenNameIdentifier
;	TokenNameSEMICOLON
h2	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
h1	TokenNameIdentifier
;	TokenNameSEMICOLON
h1	TokenNameIdentifier
=	TokenNameEQUAL
fmix	TokenNameIdentifier
(	TokenNameLPAREN
h1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h2	TokenNameIdentifier
=	TokenNameEQUAL
fmix	TokenNameIdentifier
(	TokenNameLPAREN
h2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h1	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
h2	TokenNameIdentifier
;	TokenNameSEMICOLON
h2	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
h1	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
h1	TokenNameIdentifier
,	TokenNameCOMMA
h2	TokenNameIdentifier
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
