package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
nio	TokenNameIdentifier
.	TokenNameDOT
ByteBuffer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
obs	TokenNameIdentifier
.	TokenNameDOT
IBitSet	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
Murmur2BloomFilter	TokenNameIdentifier
extends	TokenNameextends
BloomFilter	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
Murmur2BloomFilterSerializer	TokenNameIdentifier
serializer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Murmur2BloomFilterSerializer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
Murmur2BloomFilter	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
hashes	TokenNameIdentifier
,	TokenNameCOMMA
IBitSet	TokenNameIdentifier
bs	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
hashes	TokenNameIdentifier
,	TokenNameCOMMA
bs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
hash	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
b	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
position	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
remaining	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
seed	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
long	TokenNamelong
hash1	TokenNameIdentifier
=	TokenNameEQUAL
MurmurHash	TokenNameIdentifier
.	TokenNameDOT
hash2_64	TokenNameIdentifier
(	TokenNameLPAREN
b	TokenNameIdentifier
,	TokenNameCOMMA
b	TokenNameIdentifier
.	TokenNameDOT
position	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
b	TokenNameIdentifier
.	TokenNameDOT
remaining	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
seed	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
long	TokenNamelong
hash2	TokenNameIdentifier
=	TokenNameEQUAL
MurmurHash	TokenNameIdentifier
.	TokenNameDOT
hash2_64	TokenNameIdentifier
(	TokenNameLPAREN
b	TokenNameIdentifier
,	TokenNameCOMMA
b	TokenNameIdentifier
.	TokenNameDOT
position	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
b	TokenNameIdentifier
.	TokenNameDOT
remaining	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
hash1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
hash1	TokenNameIdentifier
,	TokenNameCOMMA
hash2	TokenNameIdentifier
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
Murmur2BloomFilterSerializer	TokenNameIdentifier
extends	TokenNameextends
BloomFilterSerializer	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
BloomFilter	TokenNameIdentifier
createFilter	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
hashes	TokenNameIdentifier
,	TokenNameCOMMA
IBitSet	TokenNameIdentifier
bs	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Murmur2BloomFilter	TokenNameIdentifier
(	TokenNameLPAREN
hashes	TokenNameIdentifier
,	TokenNameCOMMA
bs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
