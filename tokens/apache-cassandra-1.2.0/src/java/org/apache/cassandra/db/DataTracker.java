package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
File	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
CopyOnWriteArrayList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
atomic	TokenNameIdentifier
.	TokenNameDOT
AtomicReference	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
com	TokenNameIdentifier
.	TokenNameDOT
google	TokenNameIdentifier
.	TokenNameDOT
common	TokenNameIdentifier
.	TokenNameDOT
collect	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
slf4j	TokenNameIdentifier
.	TokenNameDOT
Logger	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
slf4j	TokenNameIdentifier
.	TokenNameDOT
LoggerFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
config	TokenNameIdentifier
.	TokenNameDOT
DatabaseDescriptor	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
compaction	TokenNameIdentifier
.	TokenNameDOT
OperationType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
sstable	TokenNameIdentifier
.	TokenNameDOT
SSTableReader	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
FileUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
metrics	TokenNameIdentifier
.	TokenNameDOT
StorageMetrics	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
notifications	TokenNameIdentifier
.	TokenNameDOT
INotification	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
notifications	TokenNameIdentifier
.	TokenNameDOT
INotificationConsumer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
notifications	TokenNameIdentifier
.	TokenNameDOT
SSTableAddedNotification	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
notifications	TokenNameIdentifier
.	TokenNameDOT
SSTableListChangedNotification	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
service	TokenNameIdentifier
.	TokenNameDOT
StorageService	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
Interval	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
IntervalTree	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
DataTracker	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
Logger	TokenNameIdentifier
logger	TokenNameIdentifier
=	TokenNameEQUAL
LoggerFactory	TokenNameIdentifier
.	TokenNameDOT
getLogger	TokenNameIdentifier
(	TokenNameLPAREN
DataTracker	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
Collection	TokenNameIdentifier
<	TokenNameLESS
INotificationConsumer	TokenNameIdentifier
>	TokenNameGREATER
subscribers	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CopyOnWriteArrayList	TokenNameIdentifier
<	TokenNameLESS
INotificationConsumer	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
ColumnFamilyStore	TokenNameIdentifier
cfstore	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
AtomicReference	TokenNameIdentifier
<	TokenNameLESS
View	TokenNameIdentifier
>	TokenNameGREATER
view	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
DataTracker	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamilyStore	TokenNameIdentifier
cfstore	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
cfstore	TokenNameIdentifier
=	TokenNameEQUAL
cfstore	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
view	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AtomicReference	TokenNameIdentifier
<	TokenNameLESS
View	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
init	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Memtable	TokenNameIdentifier
getMemtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
view	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
memtable	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Set	TokenNameIdentifier
<	TokenNameLESS
Memtable	TokenNameIdentifier
>	TokenNameGREATER
getMemtablesPendingFlush	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
view	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
memtablesPendingFlush	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
getSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
view	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
sstables	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
getUncompactingSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
view	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
nonCompactingSStables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
View	TokenNameIdentifier
getView	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
view	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Memtable	TokenNameIdentifier
switchMemtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Memtable	TokenNameIdentifier
newMemtable	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Memtable	TokenNameIdentifier
(	TokenNameLPAREN
cfstore	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Memtable	TokenNameIdentifier
toFlushMemtable	TokenNameIdentifier
;	TokenNameSEMICOLON
View	TokenNameIdentifier
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
;	TokenNameSEMICOLON
do	TokenNamedo
{	TokenNameLBRACE
currentView	TokenNameIdentifier
=	TokenNameEQUAL
view	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
toFlushMemtable	TokenNameIdentifier
=	TokenNameEQUAL
currentView	TokenNameIdentifier
.	TokenNameDOT
memtable	TokenNameIdentifier
;	TokenNameSEMICOLON
newView	TokenNameIdentifier
=	TokenNameEQUAL
currentView	TokenNameIdentifier
.	TokenNameDOT
switchMemtable	TokenNameIdentifier
(	TokenNameLPAREN
newMemtable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
!	TokenNameNOT
view	TokenNameIdentifier
.	TokenNameDOT
compareAndSet	TokenNameIdentifier
(	TokenNameLPAREN
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
toFlushMemtable	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
renewMemtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Memtable	TokenNameIdentifier
newMemtable	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Memtable	TokenNameIdentifier
(	TokenNameLPAREN
cfstore	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
View	TokenNameIdentifier
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
;	TokenNameSEMICOLON
do	TokenNamedo
{	TokenNameLBRACE
currentView	TokenNameIdentifier
=	TokenNameEQUAL
view	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
newView	TokenNameIdentifier
=	TokenNameEQUAL
currentView	TokenNameIdentifier
.	TokenNameDOT
renewMemtable	TokenNameIdentifier
(	TokenNameLPAREN
newMemtable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
!	TokenNameNOT
view	TokenNameIdentifier
.	TokenNameDOT
compareAndSet	TokenNameIdentifier
(	TokenNameLPAREN
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
replaceFlushed	TokenNameIdentifier
(	TokenNameLPAREN
Memtable	TokenNameIdentifier
memtable	TokenNameIdentifier
,	TokenNameCOMMA
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfstore	TokenNameIdentifier
.	TokenNameDOT
isValid	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
View	TokenNameIdentifier
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
;	TokenNameSEMICOLON
do	TokenNamedo
{	TokenNameLBRACE
currentView	TokenNameIdentifier
=	TokenNameEQUAL
view	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
newView	TokenNameIdentifier
=	TokenNameEQUAL
currentView	TokenNameIdentifier
.	TokenNameDOT
replaceFlushed	TokenNameIdentifier
(	TokenNameLPAREN
memtable	TokenNameIdentifier
,	TokenNameCOMMA
sstable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
sstable	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
newView	TokenNameIdentifier
=	TokenNameEQUAL
newView	TokenNameIdentifier
.	TokenNameDOT
replace	TokenNameIdentifier
(	TokenNameLPAREN
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
emptyList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
!	TokenNameNOT
view	TokenNameIdentifier
.	TokenNameDOT
compareAndSet	TokenNameIdentifier
(	TokenNameLPAREN
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
View	TokenNameIdentifier
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
;	TokenNameSEMICOLON
do	TokenNamedo
{	TokenNameLBRACE
currentView	TokenNameIdentifier
=	TokenNameEQUAL
view	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
newView	TokenNameIdentifier
=	TokenNameEQUAL
currentView	TokenNameIdentifier
.	TokenNameDOT
replaceFlushed	TokenNameIdentifier
(	TokenNameLPAREN
memtable	TokenNameIdentifier
,	TokenNameCOMMA
sstable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
!	TokenNameNOT
view	TokenNameIdentifier
.	TokenNameDOT
compareAndSet	TokenNameIdentifier
(	TokenNameLPAREN
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
sstable	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
addNewSSTablesSize	TokenNameIdentifier
(	TokenNameLPAREN
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
notifyAdded	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
incrementallyBackup	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
incrementallyBackup	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
DatabaseDescriptor	TokenNameIdentifier
.	TokenNameDOT
isIncrementalBackupsEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
Runnable	TokenNameIdentifier
runnable	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Runnable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
void	TokenNamevoid
run	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
File	TokenNameIdentifier
backupsDir	TokenNameIdentifier
=	TokenNameEQUAL
Directories	TokenNameIdentifier
.	TokenNameDOT
getBackupsDirectory	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
.	TokenNameDOT
descriptor	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sstable	TokenNameIdentifier
.	TokenNameDOT
createLinks	TokenNameIdentifier
(	TokenNameLPAREN
FileUtils	TokenNameIdentifier
.	TokenNameDOT
getCanonicalPath	TokenNameIdentifier
(	TokenNameLPAREN
backupsDir	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
StorageService	TokenNameIdentifier
.	TokenNameDOT
tasks	TokenNameIdentifier
.	TokenNameDOT
execute	TokenNameIdentifier
(	TokenNameLPAREN
runnable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
markCompacting	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
sstables	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
!	TokenNameNOT
sstables	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
View	TokenNameIdentifier
currentView	TokenNameIdentifier
=	TokenNameEQUAL
view	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
inactive	TokenNameIdentifier
=	TokenNameEQUAL
Sets	TokenNameIdentifier
.	TokenNameDOT
difference	TokenNameIdentifier
(	TokenNameLPAREN
ImmutableSet	TokenNameIdentifier
.	TokenNameDOT
copyOf	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
currentView	TokenNameIdentifier
.	TokenNameDOT
compacting	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
inactive	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
<	TokenNameLESS
sstables	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
View	TokenNameIdentifier
newView	TokenNameIdentifier
=	TokenNameEQUAL
currentView	TokenNameIdentifier
.	TokenNameDOT
markCompacting	TokenNameIdentifier
(	TokenNameLPAREN
inactive	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
view	TokenNameIdentifier
.	TokenNameDOT
compareAndSet	TokenNameIdentifier
(	TokenNameLPAREN
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
unmarkCompacting	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
unmark	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfstore	TokenNameIdentifier
.	TokenNameDOT
isValid	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
unmark	TokenNameIdentifier
)	TokenNameRPAREN
sstable	TokenNameIdentifier
.	TokenNameDOT
markCompacted	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
View	TokenNameIdentifier
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
;	TokenNameSEMICOLON
do	TokenNamedo
{	TokenNameLBRACE
currentView	TokenNameIdentifier
=	TokenNameEQUAL
view	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
newView	TokenNameIdentifier
=	TokenNameEQUAL
currentView	TokenNameIdentifier
.	TokenNameDOT
unmarkCompacting	TokenNameIdentifier
(	TokenNameLPAREN
unmark	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
!	TokenNameNOT
view	TokenNameIdentifier
.	TokenNameDOT
compareAndSet	TokenNameIdentifier
(	TokenNameLPAREN
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
markCompacted	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
,	TokenNameCOMMA
OperationType	TokenNameIdentifier
compactionType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
replace	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
,	TokenNameCOMMA
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
emptyList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
notifySSTablesChanged	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
,	TokenNameCOMMA
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
emptyList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
compactionType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
replaceCompactedSSTables	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
,	TokenNameCOMMA
Iterable	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
replacements	TokenNameIdentifier
,	TokenNameCOMMA
OperationType	TokenNameIdentifier
compactionType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
replace	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
,	TokenNameCOMMA
replacements	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
notifySSTablesChanged	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
,	TokenNameCOMMA
replacements	TokenNameIdentifier
,	TokenNameCOMMA
compactionType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addInitialSSTables	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
replace	TokenNameIdentifier
(	TokenNameLPAREN
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
emptyList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
sstables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addSSTables	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
replace	TokenNameIdentifier
(	TokenNameLPAREN
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
emptyList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
sstables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
incrementallyBackup	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
notifyAdded	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
unreferenceSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
notCompacting	TokenNameIdentifier
;	TokenNameSEMICOLON
View	TokenNameIdentifier
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
;	TokenNameSEMICOLON
do	TokenNamedo
{	TokenNameLBRACE
currentView	TokenNameIdentifier
=	TokenNameEQUAL
view	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
notCompacting	TokenNameIdentifier
=	TokenNameEQUAL
currentView	TokenNameIdentifier
.	TokenNameDOT
nonCompactingSStables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
newView	TokenNameIdentifier
=	TokenNameEQUAL
currentView	TokenNameIdentifier
.	TokenNameDOT
replace	TokenNameIdentifier
(	TokenNameLPAREN
notCompacting	TokenNameIdentifier
,	TokenNameCOMMA
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
emptySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
!	TokenNameNOT
view	TokenNameIdentifier
.	TokenNameDOT
compareAndSet	TokenNameIdentifier
(	TokenNameLPAREN
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
notCompacting	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
notifySSTablesChanged	TokenNameIdentifier
(	TokenNameLPAREN
notCompacting	TokenNameIdentifier
,	TokenNameCOMMA
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
emptySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
OperationType	TokenNameIdentifier
.	TokenNameDOT
UNKNOWN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
postReplace	TokenNameIdentifier
(	TokenNameLPAREN
notCompacting	TokenNameIdentifier
,	TokenNameCOMMA
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
emptySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
void	TokenNamevoid
removeUnreadableSSTables	TokenNameIdentifier
(	TokenNameLPAREN
File	TokenNameIdentifier
directory	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
View	TokenNameIdentifier
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
remaining	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
do	TokenNamedo
{	TokenNameLBRACE
currentView	TokenNameIdentifier
=	TokenNameEQUAL
view	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
r	TokenNameIdentifier
:	TokenNameCOLON
currentView	TokenNameIdentifier
.	TokenNameDOT
nonCompactingSStables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
r	TokenNameIdentifier
.	TokenNameDOT
descriptor	TokenNameIdentifier
.	TokenNameDOT
directory	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
directory	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
remaining	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
r	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
remaining	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
currentView	TokenNameIdentifier
.	TokenNameDOT
nonCompactingSStables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
newView	TokenNameIdentifier
=	TokenNameEQUAL
currentView	TokenNameIdentifier
.	TokenNameDOT
replace	TokenNameIdentifier
(	TokenNameLPAREN
currentView	TokenNameIdentifier
.	TokenNameDOT
sstables	TokenNameIdentifier
,	TokenNameCOMMA
remaining	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
!	TokenNameNOT
view	TokenNameIdentifier
.	TokenNameDOT
compareAndSet	TokenNameIdentifier
(	TokenNameLPAREN
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
notifySSTablesChanged	TokenNameIdentifier
(	TokenNameLPAREN
remaining	TokenNameIdentifier
,	TokenNameCOMMA
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
emptySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
OperationType	TokenNameIdentifier
.	TokenNameDOT
UNKNOWN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
void	TokenNamevoid
init	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
view	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
View	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Memtable	TokenNameIdentifier
(	TokenNameLPAREN
cfstore	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
Memtable	TokenNameIdentifier
>	TokenNameGREATER
emptySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
emptySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
emptySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
SSTableIntervalTree	TokenNameIdentifier
.	TokenNameDOT
empty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
replace	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
oldSSTables	TokenNameIdentifier
,	TokenNameCOMMA
Iterable	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
replacements	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfstore	TokenNameIdentifier
.	TokenNameDOT
isValid	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
removeOldSSTablesSize	TokenNameIdentifier
(	TokenNameLPAREN
replacements	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
replacements	TokenNameIdentifier
=	TokenNameEQUAL
Collections	TokenNameIdentifier
.	TokenNameDOT
emptyList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
View	TokenNameIdentifier
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
;	TokenNameSEMICOLON
do	TokenNamedo
{	TokenNameLBRACE
currentView	TokenNameIdentifier
=	TokenNameEQUAL
view	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
newView	TokenNameIdentifier
=	TokenNameEQUAL
currentView	TokenNameIdentifier
.	TokenNameDOT
replace	TokenNameIdentifier
(	TokenNameLPAREN
oldSSTables	TokenNameIdentifier
,	TokenNameCOMMA
replacements	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
!	TokenNameNOT
view	TokenNameIdentifier
.	TokenNameDOT
compareAndSet	TokenNameIdentifier
(	TokenNameLPAREN
currentView	TokenNameIdentifier
,	TokenNameCOMMA
newView	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
postReplace	TokenNameIdentifier
(	TokenNameLPAREN
oldSSTables	TokenNameIdentifier
,	TokenNameCOMMA
replacements	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
postReplace	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
oldSSTables	TokenNameIdentifier
,	TokenNameCOMMA
Iterable	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
replacements	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addNewSSTablesSize	TokenNameIdentifier
(	TokenNameLPAREN
replacements	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
removeOldSSTablesSize	TokenNameIdentifier
(	TokenNameLPAREN
oldSSTables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
addNewSSTablesSize	TokenNameIdentifier
(	TokenNameLPAREN
Iterable	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
newSSTables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
newSSTables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
sstable	TokenNameIdentifier
.	TokenNameDOT
getKeySamples	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
isDebugEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"adding %s to list of files tracked for %s.%s"	TokenNameStringLiteral
,	TokenNameCOMMA
sstable	TokenNameIdentifier
.	TokenNameDOT
descriptor	TokenNameIdentifier
,	TokenNameCOMMA
cfstore	TokenNameIdentifier
.	TokenNameDOT
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
cfstore	TokenNameIdentifier
.	TokenNameDOT
getColumnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
long	TokenNamelong
size	TokenNameIdentifier
=	TokenNameEQUAL
sstable	TokenNameIdentifier
.	TokenNameDOT
bytesOnDisk	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StorageMetrics	TokenNameIdentifier
.	TokenNameDOT
load	TokenNameIdentifier
.	TokenNameDOT
inc	TokenNameIdentifier
(	TokenNameLPAREN
size	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfstore	TokenNameIdentifier
.	TokenNameDOT
metric	TokenNameIdentifier
.	TokenNameDOT
liveDiskSpaceUsed	TokenNameIdentifier
.	TokenNameDOT
inc	TokenNameIdentifier
(	TokenNameLPAREN
size	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfstore	TokenNameIdentifier
.	TokenNameDOT
metric	TokenNameIdentifier
.	TokenNameDOT
totalDiskSpaceUsed	TokenNameIdentifier
.	TokenNameDOT
inc	TokenNameIdentifier
(	TokenNameLPAREN
size	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sstable	TokenNameIdentifier
.	TokenNameDOT
setTrackedBy	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
removeOldSSTablesSize	TokenNameIdentifier
(	TokenNameLPAREN
Iterable	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
oldSSTables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
oldSSTables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
isDebugEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"removing %s from list of files tracked for %s.%s"	TokenNameStringLiteral
,	TokenNameCOMMA
sstable	TokenNameIdentifier
.	TokenNameDOT
descriptor	TokenNameIdentifier
,	TokenNameCOMMA
cfstore	TokenNameIdentifier
.	TokenNameDOT
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
cfstore	TokenNameIdentifier
.	TokenNameDOT
getColumnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
long	TokenNamelong
size	TokenNameIdentifier
=	TokenNameEQUAL
sstable	TokenNameIdentifier
.	TokenNameDOT
bytesOnDisk	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StorageMetrics	TokenNameIdentifier
.	TokenNameDOT
load	TokenNameIdentifier
.	TokenNameDOT
dec	TokenNameIdentifier
(	TokenNameLPAREN
size	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfstore	TokenNameIdentifier
.	TokenNameDOT
metric	TokenNameIdentifier
.	TokenNameDOT
liveDiskSpaceUsed	TokenNameIdentifier
.	TokenNameDOT
dec	TokenNameIdentifier
(	TokenNameLPAREN
size	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
firstToCompact	TokenNameIdentifier
=	TokenNameEQUAL
sstable	TokenNameIdentifier
.	TokenNameDOT
markCompacted	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
firstToCompact	TokenNameIdentifier
:	TokenNameCOLON
sstable	TokenNameIdentifier
+	TokenNamePLUS
" was already marked compacted"	TokenNameStringLiteral
;	TokenNameSEMICOLON
sstable	TokenNameIdentifier
.	TokenNameDOT
releaseReference	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
spaceReclaimed	TokenNameIdentifier
(	TokenNameLPAREN
long	TokenNamelong
size	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
cfstore	TokenNameIdentifier
.	TokenNameDOT
metric	TokenNameIdentifier
.	TokenNameDOT
totalDiskSpaceUsed	TokenNameIdentifier
.	TokenNameDOT
dec	TokenNameIdentifier
(	TokenNameLPAREN
size	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
estimatedKeys	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
long	TokenNamelong
n	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
getSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
n	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
sstable	TokenNameIdentifier
.	TokenNameDOT
estimatedKeys	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
n	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getMeanColumns	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
long	TokenNamelong
sum	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
count	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
getSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
sum	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
sstable	TokenNameIdentifier
.	TokenNameDOT
getEstimatedColumnCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
mean	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
count	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
count	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
?	TokenNameQUESTION
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
(	TokenNameLPAREN
sum	TokenNameIdentifier
/	TokenNameDIVIDE
count	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
notifySSTablesChanged	TokenNameIdentifier
(	TokenNameLPAREN
Iterable	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
removed	TokenNameIdentifier
,	TokenNameCOMMA
Iterable	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
added	TokenNameIdentifier
,	TokenNameCOMMA
OperationType	TokenNameIdentifier
compactionType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
INotificationConsumer	TokenNameIdentifier
subscriber	TokenNameIdentifier
:	TokenNameCOLON
subscribers	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
INotification	TokenNameIdentifier
notification	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SSTableListChangedNotification	TokenNameIdentifier
(	TokenNameLPAREN
added	TokenNameIdentifier
,	TokenNameCOMMA
removed	TokenNameIdentifier
,	TokenNameCOMMA
compactionType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
subscriber	TokenNameIdentifier
.	TokenNameDOT
handleNotification	TokenNameIdentifier
(	TokenNameLPAREN
notification	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
notifyAdded	TokenNameIdentifier
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
added	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
INotificationConsumer	TokenNameIdentifier
subscriber	TokenNameIdentifier
:	TokenNameCOLON
subscribers	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
INotification	TokenNameIdentifier
notification	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SSTableAddedNotification	TokenNameIdentifier
(	TokenNameLPAREN
added	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
subscriber	TokenNameIdentifier
.	TokenNameDOT
handleNotification	TokenNameIdentifier
(	TokenNameLPAREN
notification	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
subscribe	TokenNameIdentifier
(	TokenNameLPAREN
INotificationConsumer	TokenNameIdentifier
consumer	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
subscribers	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
consumer	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
unsubscribe	TokenNameIdentifier
(	TokenNameLPAREN
INotificationConsumer	TokenNameIdentifier
consumer	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
boolean	TokenNameboolean
found	TokenNameIdentifier
=	TokenNameEQUAL
subscribers	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
consumer	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
found	TokenNameIdentifier
:	TokenNameCOLON
consumer	TokenNameIdentifier
+	TokenNamePLUS
" not subscribed"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
SSTableIntervalTree	TokenNameIdentifier
buildIntervalTree	TokenNameIdentifier
(	TokenNameLPAREN
Iterable	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Interval	TokenNameIdentifier
<	TokenNameLESS
RowPosition	TokenNameIdentifier
,	TokenNameCOMMA
SSTableReader	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
intervals	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Interval	TokenNameIdentifier
<	TokenNameLESS
RowPosition	TokenNameIdentifier
,	TokenNameCOMMA
SSTableReader	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
(	TokenNameLPAREN
Iterables	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
sstables	TokenNameIdentifier
)	TokenNameRPAREN
intervals	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
Interval	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
RowPosition	TokenNameIdentifier
,	TokenNameCOMMA
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
create	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
.	TokenNameDOT
first	TokenNameIdentifier
,	TokenNameCOMMA
sstable	TokenNameIdentifier
.	TokenNameDOT
last	TokenNameIdentifier
,	TokenNameCOMMA
sstable	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
SSTableIntervalTree	TokenNameIdentifier
(	TokenNameLPAREN
intervals	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
getCompacting	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getView	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
compacting	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
SSTableIntervalTree	TokenNameIdentifier
extends	TokenNameextends
IntervalTree	TokenNameIdentifier
<	TokenNameLESS
RowPosition	TokenNameIdentifier
,	TokenNameCOMMA
SSTableReader	TokenNameIdentifier
,	TokenNameCOMMA
Interval	TokenNameIdentifier
<	TokenNameLESS
RowPosition	TokenNameIdentifier
,	TokenNameCOMMA
SSTableReader	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
SSTableIntervalTree	TokenNameIdentifier
EMPTY	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SSTableIntervalTree	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
SSTableIntervalTree	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
Interval	TokenNameIdentifier
<	TokenNameLESS
RowPosition	TokenNameIdentifier
,	TokenNameCOMMA
SSTableReader	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
intervals	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
intervals	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
SSTableIntervalTree	TokenNameIdentifier
empty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
EMPTY	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
class	TokenNameclass
View	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
final	TokenNamefinal
Memtable	TokenNameIdentifier
memtable	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
Set	TokenNameIdentifier
<	TokenNameLESS
Memtable	TokenNameIdentifier
>	TokenNameGREATER
memtablesPendingFlush	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
compacting	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
SSTableIntervalTree	TokenNameIdentifier
intervalTree	TokenNameIdentifier
;	TokenNameSEMICOLON
View	TokenNameIdentifier
(	TokenNameLPAREN
Memtable	TokenNameIdentifier
memtable	TokenNameIdentifier
,	TokenNameCOMMA
Set	TokenNameIdentifier
<	TokenNameLESS
Memtable	TokenNameIdentifier
>	TokenNameGREATER
pendingFlush	TokenNameIdentifier
,	TokenNameCOMMA
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
,	TokenNameCOMMA
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
compacting	TokenNameIdentifier
,	TokenNameCOMMA
SSTableIntervalTree	TokenNameIdentifier
intervalTree	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
memtable	TokenNameIdentifier
=	TokenNameEQUAL
memtable	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
memtablesPendingFlush	TokenNameIdentifier
=	TokenNameEQUAL
pendingFlush	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
sstables	TokenNameIdentifier
=	TokenNameEQUAL
sstables	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
compacting	TokenNameIdentifier
=	TokenNameEQUAL
compacting	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
intervalTree	TokenNameIdentifier
=	TokenNameEQUAL
intervalTree	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Sets	TokenNameIdentifier
.	TokenNameDOT
SetView	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
nonCompactingSStables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
Sets	TokenNameIdentifier
.	TokenNameDOT
difference	TokenNameIdentifier
(	TokenNameLPAREN
ImmutableSet	TokenNameIdentifier
.	TokenNameDOT
copyOf	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
compacting	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
View	TokenNameIdentifier
switchMemtable	TokenNameIdentifier
(	TokenNameLPAREN
Memtable	TokenNameIdentifier
newMemtable	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
Memtable	TokenNameIdentifier
>	TokenNameGREATER
newPending	TokenNameIdentifier
=	TokenNameEQUAL
ImmutableSet	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
Memtable	TokenNameIdentifier
>	TokenNameGREATER
builder	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
addAll	TokenNameIdentifier
(	TokenNameLPAREN
memtablesPendingFlush	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
memtable	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
build	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
View	TokenNameIdentifier
(	TokenNameLPAREN
newMemtable	TokenNameIdentifier
,	TokenNameCOMMA
newPending	TokenNameIdentifier
,	TokenNameCOMMA
sstables	TokenNameIdentifier
,	TokenNameCOMMA
compacting	TokenNameIdentifier
,	TokenNameCOMMA
intervalTree	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
View	TokenNameIdentifier
renewMemtable	TokenNameIdentifier
(	TokenNameLPAREN
Memtable	TokenNameIdentifier
newMemtable	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
View	TokenNameIdentifier
(	TokenNameLPAREN
newMemtable	TokenNameIdentifier
,	TokenNameCOMMA
memtablesPendingFlush	TokenNameIdentifier
,	TokenNameCOMMA
sstables	TokenNameIdentifier
,	TokenNameCOMMA
compacting	TokenNameIdentifier
,	TokenNameCOMMA
intervalTree	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
View	TokenNameIdentifier
replaceFlushed	TokenNameIdentifier
(	TokenNameLPAREN
Memtable	TokenNameIdentifier
flushedMemtable	TokenNameIdentifier
,	TokenNameCOMMA
SSTableReader	TokenNameIdentifier
newSSTable	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
Memtable	TokenNameIdentifier
>	TokenNameGREATER
newPending	TokenNameIdentifier
=	TokenNameEQUAL
ImmutableSet	TokenNameIdentifier
.	TokenNameDOT
copyOf	TokenNameIdentifier
(	TokenNameLPAREN
Sets	TokenNameIdentifier
.	TokenNameDOT
difference	TokenNameIdentifier
(	TokenNameLPAREN
memtablesPendingFlush	TokenNameIdentifier
,	TokenNameCOMMA
Collections	TokenNameIdentifier
.	TokenNameDOT
singleton	TokenNameIdentifier
(	TokenNameLPAREN
flushedMemtable	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
newSSTables	TokenNameIdentifier
=	TokenNameEQUAL
newSSTable	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
emptySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
newSSTables	TokenNameIdentifier
(	TokenNameLPAREN
newSSTable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SSTableIntervalTree	TokenNameIdentifier
intervalTree	TokenNameIdentifier
=	TokenNameEQUAL
buildIntervalTree	TokenNameIdentifier
(	TokenNameLPAREN
newSSTables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
View	TokenNameIdentifier
(	TokenNameLPAREN
memtable	TokenNameIdentifier
,	TokenNameCOMMA
newPending	TokenNameIdentifier
,	TokenNameCOMMA
newSSTables	TokenNameIdentifier
,	TokenNameCOMMA
compacting	TokenNameIdentifier
,	TokenNameCOMMA
intervalTree	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
View	TokenNameIdentifier
replace	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
oldSSTables	TokenNameIdentifier
,	TokenNameCOMMA
Iterable	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
replacements	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
newSSTables	TokenNameIdentifier
=	TokenNameEQUAL
newSSTables	TokenNameIdentifier
(	TokenNameLPAREN
oldSSTables	TokenNameIdentifier
,	TokenNameCOMMA
replacements	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SSTableIntervalTree	TokenNameIdentifier
intervalTree	TokenNameIdentifier
=	TokenNameEQUAL
buildIntervalTree	TokenNameIdentifier
(	TokenNameLPAREN
newSSTables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
View	TokenNameIdentifier
(	TokenNameLPAREN
memtable	TokenNameIdentifier
,	TokenNameCOMMA
memtablesPendingFlush	TokenNameIdentifier
,	TokenNameCOMMA
newSSTables	TokenNameIdentifier
,	TokenNameCOMMA
compacting	TokenNameIdentifier
,	TokenNameCOMMA
intervalTree	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
View	TokenNameIdentifier
markCompacting	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
tomark	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
compactingNew	TokenNameIdentifier
=	TokenNameEQUAL
ImmutableSet	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
builder	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
addAll	TokenNameIdentifier
(	TokenNameLPAREN
compacting	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
addAll	TokenNameIdentifier
(	TokenNameLPAREN
tomark	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
build	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
View	TokenNameIdentifier
(	TokenNameLPAREN
memtable	TokenNameIdentifier
,	TokenNameCOMMA
memtablesPendingFlush	TokenNameIdentifier
,	TokenNameCOMMA
sstables	TokenNameIdentifier
,	TokenNameCOMMA
compactingNew	TokenNameIdentifier
,	TokenNameCOMMA
intervalTree	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
View	TokenNameIdentifier
unmarkCompacting	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
tounmark	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
compactingNew	TokenNameIdentifier
=	TokenNameEQUAL
ImmutableSet	TokenNameIdentifier
.	TokenNameDOT
copyOf	TokenNameIdentifier
(	TokenNameLPAREN
Sets	TokenNameIdentifier
.	TokenNameDOT
difference	TokenNameIdentifier
(	TokenNameLPAREN
compacting	TokenNameIdentifier
,	TokenNameCOMMA
ImmutableSet	TokenNameIdentifier
.	TokenNameDOT
copyOf	TokenNameIdentifier
(	TokenNameLPAREN
tounmark	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
View	TokenNameIdentifier
(	TokenNameLPAREN
memtable	TokenNameIdentifier
,	TokenNameCOMMA
memtablesPendingFlush	TokenNameIdentifier
,	TokenNameCOMMA
sstables	TokenNameIdentifier
,	TokenNameCOMMA
compactingNew	TokenNameIdentifier
,	TokenNameCOMMA
intervalTree	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
newSSTables	TokenNameIdentifier
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
newSSTable	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
newSSTable	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
return	TokenNamereturn
newSSTables	TokenNameIdentifier
(	TokenNameLPAREN
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
emptyList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
Collections	TokenNameIdentifier
.	TokenNameDOT
singletonList	TokenNameIdentifier
(	TokenNameLPAREN
newSSTable	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
newSSTables	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
oldSSTables	TokenNameIdentifier
,	TokenNameCOMMA
Iterable	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
replacements	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ImmutableSet	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
oldSet	TokenNameIdentifier
=	TokenNameEQUAL
ImmutableSet	TokenNameIdentifier
.	TokenNameDOT
copyOf	TokenNameIdentifier
(	TokenNameLPAREN
oldSSTables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
newSSTablesSize	TokenNameIdentifier
=	TokenNameEQUAL
sstables	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
oldSSTables	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
Iterables	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
replacements	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
newSSTablesSize	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
Iterables	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
replacements	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Incoherent new size %d replacing %s by %s in %s"	TokenNameStringLiteral
,	TokenNameCOMMA
newSSTablesSize	TokenNameIdentifier
,	TokenNameCOMMA
oldSSTables	TokenNameIdentifier
,	TokenNameCOMMA
replacements	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
newSSTables	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
newSSTablesSize	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
oldSet	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
newSSTables	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Iterables	TokenNameIdentifier
.	TokenNameDOT
addAll	TokenNameIdentifier
(	TokenNameLPAREN
newSSTables	TokenNameIdentifier
,	TokenNameCOMMA
replacements	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
newSSTables	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
newSSTablesSize	TokenNameIdentifier
:	TokenNameCOLON
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Expecting new size of %d, got %d while replacing %s by %s in %s"	TokenNameStringLiteral
,	TokenNameCOMMA
newSSTablesSize	TokenNameIdentifier
,	TokenNameCOMMA
newSSTables	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
oldSSTables	TokenNameIdentifier
,	TokenNameCOMMA
replacements	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
ImmutableSet	TokenNameIdentifier
.	TokenNameDOT
copyOf	TokenNameIdentifier
(	TokenNameLPAREN
newSSTables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"View(pending_count=%d, sstables=%s, compacting=%s)"	TokenNameStringLiteral
,	TokenNameCOMMA
memtablesPendingFlush	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
sstables	TokenNameIdentifier
,	TokenNameCOMMA
compacting	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
