package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
DataInput	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
DataOutput	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
reflect	TokenNameIdentifier
.	TokenNameDOT
Constructor	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
nio	TokenNameIdentifier
.	TokenNameDOT
ByteBuffer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
com	TokenNameIdentifier
.	TokenNameDOT
google	TokenNameIdentifier
.	TokenNameDOT
common	TokenNameIdentifier
.	TokenNameDOT
base	TokenNameIdentifier
.	TokenNameDOT
Objects	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
com	TokenNameIdentifier
.	TokenNameDOT
google	TokenNameIdentifier
.	TokenNameDOT
common	TokenNameIdentifier
.	TokenNameDOT
collect	TokenNameIdentifier
.	TokenNameDOT
Iterables	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
marshal	TokenNameIdentifier
.	TokenNameDOT
AbstractType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
ISerializer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
ISSTableSerializer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IVersionedSerializer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
sstable	TokenNameIdentifier
.	TokenNameDOT
Descriptor	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
MessagingService	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
ByteBufferUtil	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
IntervalTree	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
DeletionInfo	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
Serializer	TokenNameIdentifier
serializer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Serializer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
DeletionTime	TokenNameIdentifier
topLevel	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
IntervalTree	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
DeletionTime	TokenNameIdentifier
,	TokenNameCOMMA
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
ranges	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
DeletionInfo	TokenNameIdentifier
LIVE	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DeletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
DeletionTime	TokenNameIdentifier
.	TokenNameDOT
LIVE	TokenNameIdentifier
,	TokenNameCOMMA
IntervalTree	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
DeletionTime	TokenNameIdentifier
,	TokenNameCOMMA
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
emptyTree	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
DeletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
long	TokenNamelong
markedForDeleteAt	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
localDeletionTime	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
new	TokenNamenew
DeletionTime	TokenNameIdentifier
(	TokenNameLPAREN
markedForDeleteAt	TokenNameIdentifier
,	TokenNameCOMMA
localDeletionTime	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
Integer	TokenNameIdentifier
.	TokenNameDOT
MIN_VALUE	TokenNameIdentifier
?	TokenNameQUESTION
Integer	TokenNameIdentifier
.	TokenNameDOT
MAX_VALUE	TokenNameIdentifier
:	TokenNameCOLON
localDeletionTime	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
IntervalTree	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
DeletionTime	TokenNameIdentifier
,	TokenNameCOMMA
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
emptyTree	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
DeletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
start	TokenNameIdentifier
,	TokenNameCOMMA
ByteBuffer	TokenNameIdentifier
end	TokenNameIdentifier
,	TokenNameCOMMA
Comparator	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
comparator	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
markedForDeleteAt	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
localDeletionTime	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
new	TokenNamenew
RangeTombstone	TokenNameIdentifier
(	TokenNameLPAREN
start	TokenNameIdentifier
,	TokenNameCOMMA
end	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
DeletionTime	TokenNameIdentifier
(	TokenNameLPAREN
markedForDeleteAt	TokenNameIdentifier
,	TokenNameCOMMA
localDeletionTime	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
comparator	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
DeletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
RangeTombstone	TokenNameIdentifier
rangeTombstone	TokenNameIdentifier
,	TokenNameCOMMA
Comparator	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
comparator	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
DeletionTime	TokenNameIdentifier
.	TokenNameDOT
LIVE	TokenNameIdentifier
,	TokenNameCOMMA
IntervalTree	TokenNameIdentifier
.	TokenNameDOT
build	TokenNameIdentifier
(	TokenNameLPAREN
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
singletonList	TokenNameIdentifier
(	TokenNameLPAREN
rangeTombstone	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
comparator	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
comparator	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
DeletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
DeletionTime	TokenNameIdentifier
topLevel	TokenNameIdentifier
,	TokenNameCOMMA
IntervalTree	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
DeletionTime	TokenNameIdentifier
,	TokenNameCOMMA
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
ranges	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
topLevel	TokenNameIdentifier
=	TokenNameEQUAL
topLevel	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
ranges	TokenNameIdentifier
=	TokenNameEQUAL
ranges	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Serializer	TokenNameIdentifier
serializer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
serializer	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isLive	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
topLevel	TokenNameIdentifier
.	TokenNameDOT
markedForDeleteAt	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
Long	TokenNameIdentifier
.	TokenNameDOT
MIN_VALUE	TokenNameIdentifier
&&	TokenNameAND_AND
topLevel	TokenNameIdentifier
.	TokenNameDOT
localDeletionTime	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
Integer	TokenNameIdentifier
.	TokenNameDOT
MAX_VALUE	TokenNameIdentifier
&&	TokenNameAND_AND
ranges	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isDeleted	TokenNameIdentifier
(	TokenNameLPAREN
IColumn	TokenNameIdentifier
column	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isDeleted	TokenNameIdentifier
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
column	TokenNameIdentifier
.	TokenNameDOT
mostRecentLiveChangeAt	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isDeleted	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
name	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
isLive	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
timestamp	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
topLevel	TokenNameIdentifier
.	TokenNameDOT
markedForDeleteAt	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
DeletionTime	TokenNameIdentifier
d	TokenNameIdentifier
:	TokenNameCOLON
ranges	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
timestamp	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
d	TokenNameIdentifier
.	TokenNameDOT
markedForDeleteAt	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
DeletionInfo	TokenNameIdentifier
purge	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
ranges	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
topLevel	TokenNameIdentifier
.	TokenNameDOT
localDeletionTime	TokenNameIdentifier
<	TokenNameLESS
gcBefore	TokenNameIdentifier
?	TokenNameQUESTION
LIVE	TokenNameIdentifier
:	TokenNameCOLON
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
nonExpired	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
RangeTombstone	TokenNameIdentifier
range	TokenNameIdentifier
:	TokenNameCOLON
ranges	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
range	TokenNameIdentifier
.	TokenNameDOT
data	TokenNameIdentifier
.	TokenNameDOT
localDeletionTime	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
nonExpired	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
IntervalTree	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
DeletionTime	TokenNameIdentifier
,	TokenNameCOMMA
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
newRanges	TokenNameIdentifier
=	TokenNameEQUAL
nonExpired	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
ranges	TokenNameIdentifier
.	TokenNameDOT
intervalCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
ranges	TokenNameIdentifier
:	TokenNameCOLON
IntervalTree	TokenNameIdentifier
.	TokenNameDOT
build	TokenNameIdentifier
(	TokenNameLPAREN
nonExpired	TokenNameIdentifier
,	TokenNameCOMMA
ranges	TokenNameIdentifier
.	TokenNameDOT
comparator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
topLevel	TokenNameIdentifier
.	TokenNameDOT
localDeletionTime	TokenNameIdentifier
<	TokenNameLESS
gcBefore	TokenNameIdentifier
?	TokenNameQUESTION
new	TokenNamenew
DeletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
DeletionTime	TokenNameIdentifier
.	TokenNameDOT
LIVE	TokenNameIdentifier
,	TokenNameCOMMA
newRanges	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
new	TokenNamenew
DeletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
topLevel	TokenNameIdentifier
,	TokenNameCOMMA
newRanges	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
DeletionInfo	TokenNameIdentifier
add	TokenNameIdentifier
(	TokenNameLPAREN
DeletionInfo	TokenNameIdentifier
newInfo	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
ranges	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
topLevel	TokenNameIdentifier
.	TokenNameDOT
markedForDeleteAt	TokenNameIdentifier
<	TokenNameLESS
newInfo	TokenNameIdentifier
.	TokenNameDOT
topLevel	TokenNameIdentifier
.	TokenNameDOT
markedForDeleteAt	TokenNameIdentifier
?	TokenNameQUESTION
newInfo	TokenNameIdentifier
:	TokenNameCOLON
newInfo	TokenNameIdentifier
.	TokenNameDOT
ranges	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
this	TokenNamethis
:	TokenNameCOLON
new	TokenNamenew
DeletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
topLevel	TokenNameIdentifier
,	TokenNameCOMMA
newInfo	TokenNameIdentifier
.	TokenNameDOT
ranges	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
newInfo	TokenNameIdentifier
.	TokenNameDOT
ranges	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
topLevel	TokenNameIdentifier
.	TokenNameDOT
markedForDeleteAt	TokenNameIdentifier
<	TokenNameLESS
newInfo	TokenNameIdentifier
.	TokenNameDOT
topLevel	TokenNameIdentifier
.	TokenNameDOT
markedForDeleteAt	TokenNameIdentifier
?	TokenNameQUESTION
new	TokenNamenew
DeletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
newInfo	TokenNameIdentifier
.	TokenNameDOT
topLevel	TokenNameIdentifier
,	TokenNameCOMMA
ranges	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
this	TokenNamethis
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
merged	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Iterables	TokenNameIdentifier
.	TokenNameDOT
addAll	TokenNameIdentifier
(	TokenNameLPAREN
merged	TokenNameIdentifier
,	TokenNameCOMMA
Iterables	TokenNameIdentifier
.	TokenNameDOT
concat	TokenNameIdentifier
(	TokenNameLPAREN
ranges	TokenNameIdentifier
,	TokenNameCOMMA
newInfo	TokenNameIdentifier
.	TokenNameDOT
ranges	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
DeletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
topLevel	TokenNameIdentifier
.	TokenNameDOT
markedForDeleteAt	TokenNameIdentifier
<	TokenNameLESS
newInfo	TokenNameIdentifier
.	TokenNameDOT
topLevel	TokenNameIdentifier
.	TokenNameDOT
markedForDeleteAt	TokenNameIdentifier
?	TokenNameQUESTION
newInfo	TokenNameIdentifier
.	TokenNameDOT
topLevel	TokenNameIdentifier
:	TokenNameCOLON
topLevel	TokenNameIdentifier
,	TokenNameCOMMA
IntervalTree	TokenNameIdentifier
.	TokenNameDOT
build	TokenNameIdentifier
(	TokenNameLPAREN
merged	TokenNameIdentifier
,	TokenNameCOMMA
ranges	TokenNameIdentifier
.	TokenNameDOT
comparator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
maxTimestamp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
long	TokenNamelong
maxTimestamp	TokenNameIdentifier
=	TokenNameEQUAL
topLevel	TokenNameIdentifier
.	TokenNameDOT
markedForDeleteAt	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
RangeTombstone	TokenNameIdentifier
i	TokenNameIdentifier
:	TokenNameCOLON
ranges	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
maxTimestamp	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
(	TokenNameLPAREN
maxTimestamp	TokenNameIdentifier
,	TokenNameCOMMA
i	TokenNameIdentifier
.	TokenNameDOT
data	TokenNameIdentifier
.	TokenNameDOT
markedForDeleteAt	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
maxTimestamp	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
DeletionTime	TokenNameIdentifier
getTopLevelDeletion	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
topLevel	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Iterator	TokenNameIdentifier
<	TokenNameLESS
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
rangeIterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ranges	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
dataSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
size	TokenNameIdentifier
=	TokenNameEQUAL
TypeSizes	TokenNameIdentifier
.	TokenNameDOT
NATIVE	TokenNameIdentifier
.	TokenNameDOT
sizeof	TokenNameIdentifier
(	TokenNameLPAREN
topLevel	TokenNameIdentifier
.	TokenNameDOT
markedForDeleteAt	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
RangeTombstone	TokenNameIdentifier
r	TokenNameIdentifier
:	TokenNameCOLON
ranges	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
size	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
r	TokenNameIdentifier
.	TokenNameDOT
min	TokenNameIdentifier
.	TokenNameDOT
remaining	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
r	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
.	TokenNameDOT
remaining	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
size	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
TypeSizes	TokenNameIdentifier
.	TokenNameDOT
NATIVE	TokenNameIdentifier
.	TokenNameDOT
sizeof	TokenNameIdentifier
(	TokenNameLPAREN
r	TokenNameIdentifier
.	TokenNameDOT
data	TokenNameIdentifier
.	TokenNameDOT
markedForDeleteAt	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
size	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
ranges	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"{%s}"	TokenNameStringLiteral
,	TokenNameCOMMA
topLevel	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"{%s, ranges=%s}"	TokenNameStringLiteral
,	TokenNameCOMMA
topLevel	TokenNameIdentifier
,	TokenNameCOMMA
rangesAsString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
String	TokenNameIdentifier
rangesAsString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
!	TokenNameNOT
ranges	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringBuilder	TokenNameIdentifier
sb	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringBuilder	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
AbstractType	TokenNameIdentifier
at	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
AbstractType	TokenNameIdentifier
)	TokenNameRPAREN
ranges	TokenNameIdentifier
.	TokenNameDOT
comparator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
at	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
RangeTombstone	TokenNameIdentifier
i	TokenNameIdentifier
:	TokenNameCOLON
ranges	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
sb	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"["	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sb	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
at	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
.	TokenNameDOT
min	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"-"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sb	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
at	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
", "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sb	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
.	TokenNameDOT
data	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sb	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"]"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
sb	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
boolean	TokenNameboolean
equals	TokenNameIdentifier
(	TokenNameLPAREN
Object	TokenNameIdentifier
o	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
(	TokenNameLPAREN
o	TokenNameIdentifier
instanceof	TokenNameinstanceof
DeletionInfo	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
DeletionInfo	TokenNameIdentifier
that	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
DeletionInfo	TokenNameIdentifier
)	TokenNameRPAREN
o	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
topLevel	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
that	TokenNameIdentifier
.	TokenNameDOT
topLevel	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
ranges	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
that	TokenNameIdentifier
.	TokenNameDOT
ranges	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
final	TokenNamefinal
int	TokenNameint
hashCode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
Objects	TokenNameIdentifier
.	TokenNameDOT
hashCode	TokenNameIdentifier
(	TokenNameLPAREN
topLevel	TokenNameIdentifier
,	TokenNameCOMMA
ranges	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
Serializer	TokenNameIdentifier
implements	TokenNameimplements
IVersionedSerializer	TokenNameIdentifier
<	TokenNameLESS
DeletionInfo	TokenNameIdentifier
>	TokenNameGREATER
,	TokenNameCOMMA
ISSTableSerializer	TokenNameIdentifier
<	TokenNameLESS
DeletionInfo	TokenNameIdentifier
>	TokenNameGREATER
{	TokenNameLBRACE
private	TokenNameprivate
final	TokenNamefinal
static	TokenNamestatic
ISerializer	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
bbSerializer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ISerializer	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
void	TokenNamevoid
serialize	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
bb	TokenNameIdentifier
,	TokenNameCOMMA
DataOutput	TokenNameIdentifier
dos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
ByteBufferUtil	TokenNameIdentifier
.	TokenNameDOT
writeWithShortLength	TokenNameIdentifier
(	TokenNameLPAREN
bb	TokenNameIdentifier
,	TokenNameCOMMA
dos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ByteBuffer	TokenNameIdentifier
deserialize	TokenNameIdentifier
(	TokenNameLPAREN
DataInput	TokenNameIdentifier
dis	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
ByteBufferUtil	TokenNameIdentifier
.	TokenNameDOT
readWithShortLength	TokenNameIdentifier
(	TokenNameLPAREN
dis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
serializedSize	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
bb	TokenNameIdentifier
,	TokenNameCOMMA
TypeSizes	TokenNameIdentifier
typeSizes	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
bbSize	TokenNameIdentifier
=	TokenNameEQUAL
bb	TokenNameIdentifier
.	TokenNameDOT
remaining	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
typeSizes	TokenNameIdentifier
.	TokenNameDOT
sizeof	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
short	TokenNameshort
)	TokenNameRPAREN
bbSize	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
bbSize	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
static	TokenNamestatic
IntervalTree	TokenNameIdentifier
.	TokenNameDOT
Serializer	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
DeletionTime	TokenNameIdentifier
,	TokenNameCOMMA
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
itSerializer	TokenNameIdentifier
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
Constructor	TokenNameIdentifier
<	TokenNameLESS
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
constructor	TokenNameIdentifier
=	TokenNameEQUAL
RangeTombstone	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
.	TokenNameDOT
getConstructor	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
ByteBuffer	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
DeletionTime	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
itSerializer	TokenNameIdentifier
=	TokenNameEQUAL
IntervalTree	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
(	TokenNameLPAREN
bbSerializer	TokenNameIdentifier
,	TokenNameCOMMA
DeletionTime	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
,	TokenNameCOMMA
constructor	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
NoSuchMethodException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
serialize	TokenNameIdentifier
(	TokenNameLPAREN
DeletionInfo	TokenNameIdentifier
info	TokenNameIdentifier
,	TokenNameCOMMA
DataOutput	TokenNameIdentifier
out	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
version	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
DeletionTime	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
.	TokenNameDOT
serialize	TokenNameIdentifier
(	TokenNameLPAREN
info	TokenNameIdentifier
.	TokenNameDOT
topLevel	TokenNameIdentifier
,	TokenNameCOMMA
out	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
version	TokenNameIdentifier
<	TokenNameLESS
MessagingService	TokenNameIdentifier
.	TokenNameDOT
VERSION_12	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
info	TokenNameIdentifier
.	TokenNameDOT
ranges	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Cannot send range tombstone to pre-1.2 node. You should upgrade all node to Cassandra 1.2+ before using range tombstone."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
itSerializer	TokenNameIdentifier
.	TokenNameDOT
serialize	TokenNameIdentifier
(	TokenNameLPAREN
info	TokenNameIdentifier
.	TokenNameDOT
ranges	TokenNameIdentifier
,	TokenNameCOMMA
out	TokenNameIdentifier
,	TokenNameCOMMA
version	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
serializeForSSTable	TokenNameIdentifier
(	TokenNameLPAREN
DeletionInfo	TokenNameIdentifier
info	TokenNameIdentifier
,	TokenNameCOMMA
DataOutput	TokenNameIdentifier
out	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
DeletionTime	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
.	TokenNameDOT
serialize	TokenNameIdentifier
(	TokenNameLPAREN
info	TokenNameIdentifier
.	TokenNameDOT
topLevel	TokenNameIdentifier
,	TokenNameCOMMA
out	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
DeletionInfo	TokenNameIdentifier
deserialize	TokenNameIdentifier
(	TokenNameLPAREN
DataInput	TokenNameIdentifier
in	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
version	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
UnsupportedOperationException	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
DeletionInfo	TokenNameIdentifier
deserialize	TokenNameIdentifier
(	TokenNameLPAREN
DataInput	TokenNameIdentifier
in	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
version	TokenNameIdentifier
,	TokenNameCOMMA
Comparator	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
comparator	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
assert	TokenNameassert
comparator	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
DeletionTime	TokenNameIdentifier
topLevel	TokenNameIdentifier
=	TokenNameEQUAL
DeletionTime	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
.	TokenNameDOT
deserialize	TokenNameIdentifier
(	TokenNameLPAREN
in	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
version	TokenNameIdentifier
<	TokenNameLESS
MessagingService	TokenNameIdentifier
.	TokenNameDOT
VERSION_12	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
DeletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
topLevel	TokenNameIdentifier
,	TokenNameCOMMA
IntervalTree	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
DeletionTime	TokenNameIdentifier
,	TokenNameCOMMA
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
emptyTree	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
IntervalTree	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
DeletionTime	TokenNameIdentifier
,	TokenNameCOMMA
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
ranges	TokenNameIdentifier
=	TokenNameEQUAL
itSerializer	TokenNameIdentifier
.	TokenNameDOT
deserialize	TokenNameIdentifier
(	TokenNameLPAREN
in	TokenNameIdentifier
,	TokenNameCOMMA
version	TokenNameIdentifier
,	TokenNameCOMMA
comparator	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
DeletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
topLevel	TokenNameIdentifier
,	TokenNameCOMMA
ranges	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
DeletionInfo	TokenNameIdentifier
deserializeFromSSTable	TokenNameIdentifier
(	TokenNameLPAREN
DataInput	TokenNameIdentifier
in	TokenNameIdentifier
,	TokenNameCOMMA
Descriptor	TokenNameIdentifier
.	TokenNameDOT
Version	TokenNameIdentifier
version	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
DeletionTime	TokenNameIdentifier
topLevel	TokenNameIdentifier
=	TokenNameEQUAL
DeletionTime	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
.	TokenNameDOT
deserialize	TokenNameIdentifier
(	TokenNameLPAREN
in	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
DeletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
topLevel	TokenNameIdentifier
,	TokenNameCOMMA
IntervalTree	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
DeletionTime	TokenNameIdentifier
,	TokenNameCOMMA
RangeTombstone	TokenNameIdentifier
>	TokenNameGREATER
emptyTree	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
serializedSize	TokenNameIdentifier
(	TokenNameLPAREN
DeletionInfo	TokenNameIdentifier
info	TokenNameIdentifier
,	TokenNameCOMMA
TypeSizes	TokenNameIdentifier
typeSizes	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
version	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
long	TokenNamelong
size	TokenNameIdentifier
=	TokenNameEQUAL
DeletionTime	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
.	TokenNameDOT
serializedSize	TokenNameIdentifier
(	TokenNameLPAREN
info	TokenNameIdentifier
.	TokenNameDOT
topLevel	TokenNameIdentifier
,	TokenNameCOMMA
typeSizes	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
version	TokenNameIdentifier
<	TokenNameLESS
MessagingService	TokenNameIdentifier
.	TokenNameDOT
VERSION_12	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
size	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
size	TokenNameIdentifier
+	TokenNamePLUS
itSerializer	TokenNameIdentifier
.	TokenNameDOT
serializedSize	TokenNameIdentifier
(	TokenNameLPAREN
info	TokenNameIdentifier
.	TokenNameDOT
ranges	TokenNameIdentifier
,	TokenNameCOMMA
typeSizes	TokenNameIdentifier
,	TokenNameCOMMA
version	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
serializedSize	TokenNameIdentifier
(	TokenNameLPAREN
DeletionInfo	TokenNameIdentifier
info	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
version	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
serializedSize	TokenNameIdentifier
(	TokenNameLPAREN
info	TokenNameIdentifier
,	TokenNameCOMMA
TypeSizes	TokenNameIdentifier
.	TokenNameDOT
NATIVE	TokenNameIdentifier
,	TokenNameCOMMA
version	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
