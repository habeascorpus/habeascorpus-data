package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
nio	TokenNameIdentifier
.	TokenNameDOT
ByteBuffer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
security	TokenNameIdentifier
.	TokenNameDOT
MessageDigest	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
UUID	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
sstable	TokenNameIdentifier
.	TokenNameDOT
SSTable	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
commons	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
builder	TokenNameIdentifier
.	TokenNameDOT
HashCodeBuilder	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cache	TokenNameIdentifier
.	TokenNameDOT
IRowCacheEntry	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
config	TokenNameIdentifier
.	TokenNameDOT
CFMetaData	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
config	TokenNameIdentifier
.	TokenNameDOT
Schema	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
filter	TokenNameIdentifier
.	TokenNameDOT
QueryPath	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
marshal	TokenNameIdentifier
.	TokenNameDOT
AbstractType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
marshal	TokenNameIdentifier
.	TokenNameDOT
MarshalException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IColumnSerializer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
sstable	TokenNameIdentifier
.	TokenNameDOT
ColumnStats	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
ColumnFamily	TokenNameIdentifier
extends	TokenNameextends
AbstractColumnContainer	TokenNameIdentifier
implements	TokenNameimplements
IRowCacheEntry	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
ColumnFamilySerializer	TokenNameIdentifier
serializer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ColumnFamilySerializer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
cfm	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
ColumnFamily	TokenNameIdentifier
create	TokenNameIdentifier
(	TokenNameLPAREN
UUID	TokenNameIdentifier
cfId	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
create	TokenNameIdentifier
(	TokenNameLPAREN
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getCFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
cfId	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ColumnFamily	TokenNameIdentifier
create	TokenNameIdentifier
(	TokenNameLPAREN
UUID	TokenNameIdentifier
cfId	TokenNameIdentifier
,	TokenNameCOMMA
ISortedColumns	TokenNameIdentifier
.	TokenNameDOT
Factory	TokenNameIdentifier
factory	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
create	TokenNameIdentifier
(	TokenNameLPAREN
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getCFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
cfId	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
factory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ColumnFamily	TokenNameIdentifier
create	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tableName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cfName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
create	TokenNameIdentifier
(	TokenNameLPAREN
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getCFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
tableName	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ColumnFamily	TokenNameIdentifier
create	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
cfm	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
create	TokenNameIdentifier
(	TokenNameLPAREN
cfm	TokenNameIdentifier
,	TokenNameCOMMA
TreeMapBackedSortedColumns	TokenNameIdentifier
.	TokenNameDOT
factory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ColumnFamily	TokenNameIdentifier
create	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
cfm	TokenNameIdentifier
,	TokenNameCOMMA
ISortedColumns	TokenNameIdentifier
.	TokenNameDOT
Factory	TokenNameIdentifier
factory	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
create	TokenNameIdentifier
(	TokenNameLPAREN
cfm	TokenNameIdentifier
,	TokenNameCOMMA
factory	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ColumnFamily	TokenNameIdentifier
create	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
cfm	TokenNameIdentifier
,	TokenNameCOMMA
ISortedColumns	TokenNameIdentifier
.	TokenNameDOT
Factory	TokenNameIdentifier
factory	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
reversedInsertOrder	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
ColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
cfm	TokenNameIdentifier
,	TokenNameCOMMA
factory	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
cfm	TokenNameIdentifier
.	TokenNameDOT
comparator	TokenNameIdentifier
,	TokenNameCOMMA
reversedInsertOrder	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
ColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
CFMetaData	TokenNameIdentifier
cfm	TokenNameIdentifier
,	TokenNameCOMMA
ISortedColumns	TokenNameIdentifier
map	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
map	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
cfm	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
cfm	TokenNameIdentifier
=	TokenNameEQUAL
cfm	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ColumnFamily	TokenNameIdentifier
cloneMeShallow	TokenNameIdentifier
(	TokenNameLPAREN
ISortedColumns	TokenNameIdentifier
.	TokenNameDOT
Factory	TokenNameIdentifier
factory	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
reversedInsertOrder	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
ColumnFamily	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
cfm	TokenNameIdentifier
,	TokenNameCOMMA
factory	TokenNameIdentifier
,	TokenNameCOMMA
reversedInsertOrder	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
delete	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
cf	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ColumnFamily	TokenNameIdentifier
cloneMeShallow	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
cloneMeShallow	TokenNameIdentifier
(	TokenNameLPAREN
columns	TokenNameIdentifier
.	TokenNameDOT
getFactory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
columns	TokenNameIdentifier
.	TokenNameDOT
isInsertReversed	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
getSubComparator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
IColumnSerializer	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
getColumnSerializer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
(	TokenNameLPAREN
s	TokenNameIdentifier
instanceof	TokenNameinstanceof
SuperColumnSerializer	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
(	TokenNameLPAREN
(	TokenNameLPAREN
SuperColumnSerializer	TokenNameIdentifier
)	TokenNameRPAREN
s	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getComparator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ColumnFamilyType	TokenNameIdentifier
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
cfm	TokenNameIdentifier
.	TokenNameDOT
cfType	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ColumnFamily	TokenNameIdentifier
cloneMe	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
cfm	TokenNameIdentifier
,	TokenNameCOMMA
columns	TokenNameIdentifier
.	TokenNameDOT
cloneMe	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
delete	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
cf	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
UUID	TokenNameIdentifier
id	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
cfm	TokenNameIdentifier
.	TokenNameDOT
cfId	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CFMetaData	TokenNameIdentifier
metadata	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
cfm	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
IColumnSerializer	TokenNameIdentifier
getColumnSerializer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
cfm	TokenNameIdentifier
.	TokenNameDOT
getColumnSerializer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
OnDiskAtom	TokenNameIdentifier
.	TokenNameDOT
Serializer	TokenNameIdentifier
getOnDiskSerializer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
cfm	TokenNameIdentifier
.	TokenNameDOT
getOnDiskSerializer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isSuper	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
ColumnFamilyType	TokenNameIdentifier
.	TokenNameDOT
Super	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addAllWithSCCopy	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
,	TokenNameCOMMA
Allocator	TokenNameIdentifier
allocator	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cf	TokenNameIdentifier
.	TokenNameDOT
isSuper	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
IColumn	TokenNameIdentifier
c	TokenNameIdentifier
:	TokenNameCOLON
cf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
columns	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
SuperColumn	TokenNameIdentifier
)	TokenNameRPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
cloneMe	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
allocator	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
delete	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
addAll	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
allocator	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
QueryPath	TokenNameIdentifier
path	TokenNameIdentifier
,	TokenNameCOMMA
ByteBuffer	TokenNameIdentifier
value	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
path	TokenNameIdentifier
,	TokenNameCOMMA
value	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
QueryPath	TokenNameIdentifier
path	TokenNameIdentifier
,	TokenNameCOMMA
ByteBuffer	TokenNameIdentifier
value	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
timeToLive	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
path	TokenNameIdentifier
.	TokenNameDOT
columnName	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
:	TokenNameCOLON
path	TokenNameIdentifier
;	TokenNameSEMICOLON
assert	TokenNameassert
!	TokenNameNOT
metadata	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getDefaultValidator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isCommutative	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Column	TokenNameIdentifier
column	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
timeToLive	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
column	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ExpiringColumn	TokenNameIdentifier
(	TokenNameLPAREN
path	TokenNameIdentifier
.	TokenNameDOT
columnName	TokenNameIdentifier
,	TokenNameCOMMA
value	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
timeToLive	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
column	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Column	TokenNameIdentifier
(	TokenNameLPAREN
path	TokenNameIdentifier
.	TokenNameDOT
columnName	TokenNameIdentifier
,	TokenNameCOMMA
value	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
path	TokenNameIdentifier
.	TokenNameDOT
superColumnName	TokenNameIdentifier
,	TokenNameCOMMA
column	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addCounter	TokenNameIdentifier
(	TokenNameLPAREN
QueryPath	TokenNameIdentifier
path	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
path	TokenNameIdentifier
.	TokenNameDOT
columnName	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
:	TokenNameCOLON
path	TokenNameIdentifier
;	TokenNameSEMICOLON
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
path	TokenNameIdentifier
.	TokenNameDOT
superColumnName	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
CounterUpdateColumn	TokenNameIdentifier
(	TokenNameLPAREN
path	TokenNameIdentifier
.	TokenNameDOT
columnName	TokenNameIdentifier
,	TokenNameCOMMA
value	TokenNameIdentifier
,	TokenNameCOMMA
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addTombstone	TokenNameIdentifier
(	TokenNameLPAREN
QueryPath	TokenNameIdentifier
path	TokenNameIdentifier
,	TokenNameCOMMA
ByteBuffer	TokenNameIdentifier
localDeletionTime	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
path	TokenNameIdentifier
.	TokenNameDOT
columnName	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
:	TokenNameCOLON
path	TokenNameIdentifier
;	TokenNameSEMICOLON
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
path	TokenNameIdentifier
.	TokenNameDOT
superColumnName	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
DeletedColumn	TokenNameIdentifier
(	TokenNameLPAREN
path	TokenNameIdentifier
.	TokenNameDOT
columnName	TokenNameIdentifier
,	TokenNameCOMMA
localDeletionTime	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addTombstone	TokenNameIdentifier
(	TokenNameLPAREN
QueryPath	TokenNameIdentifier
path	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
localDeletionTime	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
path	TokenNameIdentifier
.	TokenNameDOT
columnName	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
:	TokenNameCOLON
path	TokenNameIdentifier
;	TokenNameSEMICOLON
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
path	TokenNameIdentifier
.	TokenNameDOT
superColumnName	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
DeletedColumn	TokenNameIdentifier
(	TokenNameLPAREN
path	TokenNameIdentifier
.	TokenNameDOT
columnName	TokenNameIdentifier
,	TokenNameCOMMA
localDeletionTime	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addTombstone	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
name	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
localDeletionTime	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
new	TokenNamenew
DeletedColumn	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
localDeletionTime	TokenNameIdentifier
,	TokenNameCOMMA
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
superColumnName	TokenNameIdentifier
,	TokenNameCOMMA
Column	TokenNameIdentifier
column	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
IColumn	TokenNameIdentifier
c	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
superColumnName	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
c	TokenNameIdentifier
=	TokenNameEQUAL
column	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
assert	TokenNameassert
isSuper	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SuperColumn	TokenNameIdentifier
(	TokenNameLPAREN
superColumnName	TokenNameIdentifier
,	TokenNameCOMMA
getSubComparator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
column	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addAtom	TokenNameIdentifier
(	TokenNameLPAREN
OnDiskAtom	TokenNameIdentifier
atom	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
atom	TokenNameIdentifier
instanceof	TokenNameinstanceof
IColumn	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
IColumn	TokenNameIdentifier
)	TokenNameRPAREN
atom	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
assert	TokenNameassert
atom	TokenNameIdentifier
instanceof	TokenNameinstanceof
RangeTombstone	TokenNameIdentifier
;	TokenNameSEMICOLON
delete	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
DeletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
RangeTombstone	TokenNameIdentifier
)	TokenNameRPAREN
atom	TokenNameIdentifier
,	TokenNameCOMMA
getComparator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
columns	TokenNameIdentifier
.	TokenNameDOT
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ColumnFamily	TokenNameIdentifier
diff	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
cfComposite	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
cfComposite	TokenNameIdentifier
.	TokenNameDOT
id	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
id	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ColumnFamily	TokenNameIdentifier
cfDiff	TokenNameIdentifier
=	TokenNameEQUAL
ColumnFamily	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
cfm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfDiff	TokenNameIdentifier
.	TokenNameDOT
delete	TokenNameIdentifier
(	TokenNameLPAREN
cfComposite	TokenNameIdentifier
.	TokenNameDOT
deletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
IColumn	TokenNameIdentifier
columnExternal	TokenNameIdentifier
:	TokenNameCOLON
cfComposite	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ByteBuffer	TokenNameIdentifier
cName	TokenNameIdentifier
=	TokenNameEQUAL
columnExternal	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
IColumn	TokenNameIdentifier
columnInternal	TokenNameIdentifier
=	TokenNameEQUAL
this	TokenNamethis
.	TokenNameDOT
columns	TokenNameIdentifier
.	TokenNameDOT
getColumn	TokenNameIdentifier
(	TokenNameLPAREN
cName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
columnInternal	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
cfDiff	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
columnExternal	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
IColumn	TokenNameIdentifier
columnDiff	TokenNameIdentifier
=	TokenNameEQUAL
columnInternal	TokenNameIdentifier
.	TokenNameDOT
diff	TokenNameIdentifier
(	TokenNameLPAREN
columnExternal	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
columnDiff	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
cfDiff	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
columnDiff	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cfDiff	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
cfDiff	TokenNameIdentifier
.	TokenNameDOT
isMarkedForDelete	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
cfDiff	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
dataSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
size	TokenNameIdentifier
=	TokenNameEQUAL
deletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
dataSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
IColumn	TokenNameIdentifier
column	TokenNameIdentifier
:	TokenNameCOLON
columns	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
size	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
column	TokenNameIdentifier
.	TokenNameDOT
dataSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
size	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
maxTimestamp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
long	TokenNamelong
maxTimestamp	TokenNameIdentifier
=	TokenNameEQUAL
deletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
maxTimestamp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
IColumn	TokenNameIdentifier
column	TokenNameIdentifier
:	TokenNameCOLON
columns	TokenNameIdentifier
)	TokenNameRPAREN
maxTimestamp	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
(	TokenNameLPAREN
maxTimestamp	TokenNameIdentifier
,	TokenNameCOMMA
column	TokenNameIdentifier
.	TokenNameDOT
maxTimestamp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
maxTimestamp	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
int	TokenNameint
hashCode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
HashCodeBuilder	TokenNameIdentifier
(	TokenNameLPAREN
373	TokenNameIntegerLiteral
,	TokenNameCOMMA
75437	TokenNameIntegerLiteral
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
cfm	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
deletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
columns	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
toHashCode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
boolean	TokenNameboolean
equals	TokenNameIdentifier
(	TokenNameLPAREN
Object	TokenNameIdentifier
o	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
this	TokenNamethis
==	TokenNameEQUAL_EQUAL
o	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
o	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
this	TokenNamethis
.	TokenNameDOT
getClass	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
o	TokenNameIdentifier
.	TokenNameDOT
getClass	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
ColumnFamily	TokenNameIdentifier
comparison	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
)	TokenNameRPAREN
o	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
cfm	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
comparison	TokenNameIdentifier
.	TokenNameDOT
cfm	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
deletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
comparison	TokenNameIdentifier
.	TokenNameDOT
deletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
ByteBufferUtil	TokenNameIdentifier
.	TokenNameDOT
compareUnsigned	TokenNameIdentifier
(	TokenNameLPAREN
digest	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
,	TokenNameCOMMA
digest	TokenNameIdentifier
(	TokenNameLPAREN
comparison	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
StringBuilder	TokenNameIdentifier
sb	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringBuilder	TokenNameIdentifier
(	TokenNameLPAREN
"ColumnFamily("	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CFMetaData	TokenNameIdentifier
cfm	TokenNameIdentifier
=	TokenNameEQUAL
metadata	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sb	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
cfm	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
"<anonymous>"	TokenNameStringLiteral
:	TokenNameCOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
cfName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isMarkedForDelete	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
sb	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
" -"	TokenNameStringLiteral
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
deletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"-"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sb	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
" ["	TokenNameStringLiteral
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
getComparator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getColumnsString	TokenNameIdentifier
(	TokenNameLPAREN
getSortedColumns	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"])"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
sb	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ByteBuffer	TokenNameIdentifier
digest	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
MessageDigest	TokenNameIdentifier
digest	TokenNameIdentifier
=	TokenNameEQUAL
FBUtilities	TokenNameIdentifier
.	TokenNameDOT
threadLocalMD5Digest	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cf	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
cf	TokenNameIdentifier
.	TokenNameDOT
updateDigest	TokenNameIdentifier
(	TokenNameLPAREN
digest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
ByteBuffer	TokenNameIdentifier
.	TokenNameDOT
wrap	TokenNameIdentifier
(	TokenNameLPAREN
digest	TokenNameIdentifier
.	TokenNameDOT
digest	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
updateDigest	TokenNameIdentifier
(	TokenNameLPAREN
MessageDigest	TokenNameIdentifier
digest	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
IColumn	TokenNameIdentifier
column	TokenNameIdentifier
:	TokenNameCOLON
columns	TokenNameIdentifier
)	TokenNameRPAREN
column	TokenNameIdentifier
.	TokenNameDOT
updateDigest	TokenNameIdentifier
(	TokenNameLPAREN
digest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
getComparatorFor	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
table	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
columnFamilyName	TokenNameIdentifier
,	TokenNameCOMMA
ByteBuffer	TokenNameIdentifier
superColumnName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
superColumnName	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getComparator	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
,	TokenNameCOMMA
columnFamilyName	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getSubComparator	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
,	TokenNameCOMMA
columnFamilyName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ColumnFamily	TokenNameIdentifier
diff	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
cf1	TokenNameIdentifier
,	TokenNameCOMMA
ColumnFamily	TokenNameIdentifier
cf2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cf1	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
cf2	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
cf1	TokenNameIdentifier
.	TokenNameDOT
diff	TokenNameIdentifier
(	TokenNameLPAREN
cf2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
resolve	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
resolve	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
HeapAllocator	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
resolve	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
,	TokenNameCOMMA
Allocator	TokenNameIdentifier
allocator	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cf	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
addAll	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
allocator	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
validateColumnFields	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
MarshalException	TokenNameIdentifier
{	TokenNameLBRACE
CFMetaData	TokenNameIdentifier
metadata	TokenNameIdentifier
=	TokenNameEQUAL
metadata	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
IColumn	TokenNameIdentifier
column	TokenNameIdentifier
:	TokenNameCOLON
this	TokenNamethis
)	TokenNameRPAREN
{	TokenNameLBRACE
column	TokenNameIdentifier
.	TokenNameDOT
validateFields	TokenNameIdentifier
(	TokenNameLPAREN
metadata	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
ColumnStats	TokenNameIdentifier
getColumnStats	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
long	TokenNamelong
maxTimestampSeen	TokenNameIdentifier
=	TokenNameEQUAL
deletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
maxTimestamp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StreamingHistogram	TokenNameIdentifier
tombstones	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StreamingHistogram	TokenNameIdentifier
(	TokenNameLPAREN
SSTable	TokenNameIdentifier
.	TokenNameDOT
TOMBSTONE_HISTOGRAM_BIN_SIZE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
IColumn	TokenNameIdentifier
column	TokenNameIdentifier
:	TokenNameCOLON
columns	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
maxTimestampSeen	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
(	TokenNameLPAREN
maxTimestampSeen	TokenNameIdentifier
,	TokenNameCOMMA
column	TokenNameIdentifier
.	TokenNameDOT
maxTimestamp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
deletionTime	TokenNameIdentifier
=	TokenNameEQUAL
column	TokenNameIdentifier
.	TokenNameDOT
getLocalDeletionTime	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
deletionTime	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
.	TokenNameDOT
MAX_VALUE	TokenNameIdentifier
)	TokenNameRPAREN
tombstones	TokenNameIdentifier
.	TokenNameDOT
update	TokenNameIdentifier
(	TokenNameLPAREN
deletionTime	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
new	TokenNamenew
ColumnStats	TokenNameIdentifier
(	TokenNameLPAREN
getColumnCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
maxTimestampSeen	TokenNameIdentifier
,	TokenNameCOMMA
tombstones	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
