package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
File	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
management	TokenNameIdentifier
.	TokenNameDOT
ManagementFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
nio	TokenNameIdentifier
.	TokenNameDOT
ByteBuffer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
atomic	TokenNameIdentifier
.	TokenNameDOT
AtomicInteger	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
atomic	TokenNameIdentifier
.	TokenNameDOT
AtomicLong	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
regex	TokenNameIdentifier
.	TokenNameDOT
Pattern	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
management	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
com	TokenNameIdentifier
.	TokenNameDOT
google	TokenNameIdentifier
.	TokenNameDOT
common	TokenNameIdentifier
.	TokenNameDOT
collect	TokenNameIdentifier
.	TokenNameDOT
AbstractIterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
com	TokenNameIdentifier
.	TokenNameDOT
google	TokenNameIdentifier
.	TokenNameDOT
common	TokenNameIdentifier
.	TokenNameDOT
collect	TokenNameIdentifier
.	TokenNameDOT
ImmutableSet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
com	TokenNameIdentifier
.	TokenNameDOT
google	TokenNameIdentifier
.	TokenNameDOT
common	TokenNameIdentifier
.	TokenNameDOT
collect	TokenNameIdentifier
.	TokenNameDOT
Iterables	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
com	TokenNameIdentifier
.	TokenNameDOT
google	TokenNameIdentifier
.	TokenNameDOT
common	TokenNameIdentifier
.	TokenNameDOT
collect	TokenNameIdentifier
.	TokenNameDOT
Sets	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
com	TokenNameIdentifier
.	TokenNameDOT
google	TokenNameIdentifier
.	TokenNameDOT
common	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
Futures	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
filter	TokenNameIdentifier
.	TokenNameDOT
IDiskAtomFilter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
tracing	TokenNameIdentifier
.	TokenNameDOT
TraceState	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
tracing	TokenNameIdentifier
.	TokenNameDOT
Tracing	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
cliffc	TokenNameIdentifier
.	TokenNameDOT
high_scale_lib	TokenNameIdentifier
.	TokenNameDOT
NonBlockingHashMap	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
slf4j	TokenNameIdentifier
.	TokenNameDOT
Logger	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
slf4j	TokenNameIdentifier
.	TokenNameDOT
LoggerFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cache	TokenNameIdentifier
.	TokenNameDOT
IRowCacheEntry	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cache	TokenNameIdentifier
.	TokenNameDOT
RowCacheKey	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cache	TokenNameIdentifier
.	TokenNameDOT
RowCacheSentinel	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
JMXEnabledThreadPoolExecutor	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
NamedThreadFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
StageManager	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
config	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
columniterator	TokenNameIdentifier
.	TokenNameDOT
OnDiskAtomIterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
commitlog	TokenNameIdentifier
.	TokenNameDOT
CommitLog	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
commitlog	TokenNameIdentifier
.	TokenNameDOT
ReplayPosition	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
compaction	TokenNameIdentifier
.	TokenNameDOT
AbstractCompactionStrategy	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
compaction	TokenNameIdentifier
.	TokenNameDOT
CompactionManager	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
compaction	TokenNameIdentifier
.	TokenNameDOT
LeveledCompactionStrategy	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
compaction	TokenNameIdentifier
.	TokenNameDOT
OperationType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
filter	TokenNameIdentifier
.	TokenNameDOT
ExtendedFilter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
filter	TokenNameIdentifier
.	TokenNameDOT
QueryFilter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
filter	TokenNameIdentifier
.	TokenNameDOT
QueryPath	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
SecondaryIndex	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
index	TokenNameIdentifier
.	TokenNameDOT
SecondaryIndexManager	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
marshal	TokenNameIdentifier
.	TokenNameDOT
AbstractType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
dht	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
exceptions	TokenNameIdentifier
.	TokenNameDOT
ConfigurationException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
compress	TokenNameIdentifier
.	TokenNameDOT
CompressionParameters	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
sstable	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
sstable	TokenNameIdentifier
.	TokenNameDOT
Descriptor	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
FileUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
metrics	TokenNameIdentifier
.	TokenNameDOT
ColumnFamilyMetrics	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
service	TokenNameIdentifier
.	TokenNameDOT
CacheService	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
service	TokenNameIdentifier
.	TokenNameDOT
StorageService	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
IndexExpression	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
tracing	TokenNameIdentifier
.	TokenNameDOT
Tracing	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
static	TokenNamestatic
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
config	TokenNameIdentifier
.	TokenNameDOT
CFMetaData	TokenNameIdentifier
.	TokenNameDOT
Caching	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
ColumnFamilyStore	TokenNameIdentifier
implements	TokenNameimplements
ColumnFamilyStoreMBean	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
Logger	TokenNameIdentifier
logger	TokenNameIdentifier
=	TokenNameEQUAL
LoggerFactory	TokenNameIdentifier
.	TokenNameDOT
getLogger	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamilyStore	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
ExecutorService	TokenNameIdentifier
flushWriter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
JMXEnabledThreadPoolExecutor	TokenNameIdentifier
(	TokenNameLPAREN
DatabaseDescriptor	TokenNameIdentifier
.	TokenNameDOT
getFlushWriters	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
StageManager	TokenNameIdentifier
.	TokenNameDOT
KEEPALIVE	TokenNameIdentifier
,	TokenNameCOMMA
TimeUnit	TokenNameIdentifier
.	TokenNameDOT
SECONDS	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
LinkedBlockingQueue	TokenNameIdentifier
<	TokenNameLESS
Runnable	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
DatabaseDescriptor	TokenNameIdentifier
.	TokenNameDOT
getFlushQueueSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
NamedThreadFactory	TokenNameIdentifier
(	TokenNameLPAREN
"FlushWriter"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"internal"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
ExecutorService	TokenNameIdentifier
postFlushExecutor	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
JMXEnabledThreadPoolExecutor	TokenNameIdentifier
(	TokenNameLPAREN
"MemtablePostFlusher"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
StorageService	TokenNameIdentifier
.	TokenNameDOT
optionalTasks	TokenNameIdentifier
.	TokenNameDOT
scheduleWithFixedDelay	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
MeteredFlusher	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
1000	TokenNameIntegerLiteral
,	TokenNameCOMMA
1000	TokenNameIntegerLiteral
,	TokenNameCOMMA
TimeUnit	TokenNameIdentifier
.	TokenNameDOT
MILLISECONDS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
Table	TokenNameIdentifier
table	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
CFMetaData	TokenNameIdentifier
metadata	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
IPartitioner	TokenNameIdentifier
partitioner	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
String	TokenNameIdentifier
mbeanName	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
boolean	TokenNameboolean
valid	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
DataTracker	TokenNameIdentifier
data	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
AtomicInteger	TokenNameIdentifier
fileIndexGenerator	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AtomicInteger	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
SecondaryIndexManager	TokenNameIdentifier
indexManager	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
INTERN_CUTOFF	TokenNameIdentifier
=	TokenNameEQUAL
256	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
ConcurrentMap	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
internedNames	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NonBlockingHashMap	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
DefaultInteger	TokenNameIdentifier
minCompactionThreshold	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
DefaultInteger	TokenNameIdentifier
maxCompactionThreshold	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
volatile	TokenNamevolatile
AbstractCompactionStrategy	TokenNameIdentifier
compactionStrategy	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
Directories	TokenNameIdentifier
directories	TokenNameIdentifier
;	TokenNameSEMICOLON
volatile	TokenNamevolatile
double	TokenNamedouble
liveRatio	TokenNameIdentifier
=	TokenNameEQUAL
1.0	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
AtomicLong	TokenNameIdentifier
liveRatioComputedAt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AtomicLong	TokenNameIdentifier
(	TokenNameLPAREN
32	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
ColumnFamilyMetrics	TokenNameIdentifier
metric	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
void	TokenNamevoid
reload	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
minCompactionThreshold	TokenNameIdentifier
.	TokenNameDOT
isModified	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
for	TokenNamefor
(	TokenNameLPAREN
ColumnFamilyStore	TokenNameIdentifier
cfs	TokenNameIdentifier
:	TokenNameCOLON
concatWithIndexes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
cfs	TokenNameIdentifier
.	TokenNameDOT
minCompactionThreshold	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultInteger	TokenNameIdentifier
(	TokenNameLPAREN
metadata	TokenNameIdentifier
.	TokenNameDOT
getMinCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
maxCompactionThreshold	TokenNameIdentifier
.	TokenNameDOT
isModified	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
for	TokenNamefor
(	TokenNameLPAREN
ColumnFamilyStore	TokenNameIdentifier
cfs	TokenNameIdentifier
:	TokenNameCOLON
concatWithIndexes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
cfs	TokenNameIdentifier
.	TokenNameDOT
maxCompactionThreshold	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultInteger	TokenNameIdentifier
(	TokenNameLPAREN
metadata	TokenNameIdentifier
.	TokenNameDOT
getMaxCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
maybeReloadCompactionStrategy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
indexManager	TokenNameIdentifier
.	TokenNameDOT
reload	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
getMemtableThreadSafe	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
initialComparator	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
metadata	TokenNameIdentifier
.	TokenNameDOT
comparator	TokenNameIdentifier
)	TokenNameRPAREN
switchMemtable	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
maybeReloadCompactionStrategy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
metadata	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyClass	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
compactionStrategy	TokenNameIdentifier
.	TokenNameDOT
getClass	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
metadata	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyOptions	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
compactionStrategy	TokenNameIdentifier
.	TokenNameDOT
options	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
CompactionManager	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getCompactionLock	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
lock	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
compactionStrategy	TokenNameIdentifier
.	TokenNameDOT
shutdown	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
compactionStrategy	TokenNameIdentifier
=	TokenNameEQUAL
metadata	TokenNameIdentifier
.	TokenNameDOT
createCompactionStrategyInstance	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
CompactionManager	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getCompactionLock	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
unlock	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setCompactionStrategyClass	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
compactionStrategyClass	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
metadata	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyClass	TokenNameIdentifier
=	TokenNameEQUAL
CFMetaData	TokenNameIdentifier
.	TokenNameDOT
createCompactionStrategy	TokenNameIdentifier
(	TokenNameLPAREN
compactionStrategyClass	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
maybeReloadCompactionStrategy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ConfigurationException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getCompactionStrategyClass	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metadata	TokenNameIdentifier
.	TokenNameDOT
compactionStrategyClass	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
getCompressionParameters	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metadata	TokenNameIdentifier
.	TokenNameDOT
compressionParameters	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
asThriftOptions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setCompressionParameters	TokenNameIdentifier
(	TokenNameLPAREN
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
opts	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
metadata	TokenNameIdentifier
.	TokenNameDOT
compressionParameters	TokenNameIdentifier
=	TokenNameEQUAL
CompressionParameters	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
opts	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ConfigurationException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setCrcCheckChance	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
crcCheckChance	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
table	TokenNameIdentifier
.	TokenNameDOT
getAllSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
sstable	TokenNameIdentifier
.	TokenNameDOT
compression	TokenNameIdentifier
)	TokenNameRPAREN
sstable	TokenNameIdentifier
.	TokenNameDOT
getCompressionMetadata	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
parameters	TokenNameIdentifier
.	TokenNameDOT
setCrcCheckChance	TokenNameIdentifier
(	TokenNameLPAREN
crcCheckChance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ConfigurationException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
ColumnFamilyStore	TokenNameIdentifier
(	TokenNameLPAREN
Table	TokenNameIdentifier
table	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
columnFamilyName	TokenNameIdentifier
,	TokenNameCOMMA
IPartitioner	TokenNameIdentifier
partitioner	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
generation	TokenNameIdentifier
,	TokenNameCOMMA
CFMetaData	TokenNameIdentifier
metadata	TokenNameIdentifier
,	TokenNameCOMMA
Directories	TokenNameIdentifier
directories	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
loadSSTables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
metadata	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
:	TokenNameCOLON
"null metadata for "	TokenNameStringLiteral
+	TokenNamePLUS
table	TokenNameIdentifier
+	TokenNamePLUS
":"	TokenNameStringLiteral
+	TokenNamePLUS
columnFamilyName	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
table	TokenNameIdentifier
=	TokenNameEQUAL
table	TokenNameIdentifier
;	TokenNameSEMICOLON
columnFamily	TokenNameIdentifier
=	TokenNameEQUAL
columnFamilyName	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
metadata	TokenNameIdentifier
=	TokenNameEQUAL
metadata	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
minCompactionThreshold	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultInteger	TokenNameIdentifier
(	TokenNameLPAREN
metadata	TokenNameIdentifier
.	TokenNameDOT
getMinCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
maxCompactionThreshold	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DefaultInteger	TokenNameIdentifier
(	TokenNameLPAREN
metadata	TokenNameIdentifier
.	TokenNameDOT
getMaxCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
partitioner	TokenNameIdentifier
=	TokenNameEQUAL
partitioner	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
directories	TokenNameIdentifier
=	TokenNameEQUAL
directories	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
indexManager	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SecondaryIndexManager	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
metric	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ColumnFamilyMetrics	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fileIndexGenerator	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
generation	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Caching	TokenNameIdentifier
caching	TokenNameIdentifier
=	TokenNameEQUAL
metadata	TokenNameIdentifier
.	TokenNameDOT
getCaching	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
isDebugEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"Starting CFS {}"	TokenNameStringLiteral
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
data	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DataTracker	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
loadSSTables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Directories	TokenNameIdentifier
.	TokenNameDOT
SSTableLister	TokenNameIdentifier
sstableFiles	TokenNameIdentifier
=	TokenNameEQUAL
directories	TokenNameIdentifier
.	TokenNameDOT
sstableLister	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
skipTemporary	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
=	TokenNameEQUAL
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
batchOpen	TokenNameIdentifier
(	TokenNameLPAREN
sstableFiles	TokenNameIdentifier
.	TokenNameDOT
list	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
entrySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
metadata	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
.	TokenNameDOT
partitioner	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
>	TokenNameGREATER
compactedSSTables	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
sstables	TokenNameIdentifier
)	TokenNameRPAREN
compactedSSTables	TokenNameIdentifier
.	TokenNameDOT
addAll	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
.	TokenNameDOT
getAncestors	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
liveSSTables	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
compactedSSTables	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
.	TokenNameDOT
descriptor	TokenNameIdentifier
.	TokenNameDOT
generation	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
sstable	TokenNameIdentifier
.	TokenNameDOT
releaseReference	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
liveSSTables	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
data	TokenNameIdentifier
.	TokenNameDOT
addInitialSSTables	TokenNameIdentifier
(	TokenNameLPAREN
liveSSTables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
caching	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
Caching	TokenNameIdentifier
.	TokenNameDOT
ALL	TokenNameIdentifier
||	TokenNameOR_OR
caching	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
Caching	TokenNameIdentifier
.	TokenNameDOT
KEYS_ONLY	TokenNameIdentifier
)	TokenNameRPAREN
CacheService	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
keyCache	TokenNameIdentifier
.	TokenNameDOT
loadSaved	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
compactionStrategy	TokenNameIdentifier
=	TokenNameEQUAL
metadata	TokenNameIdentifier
.	TokenNameDOT
createCompactionStrategyInstance	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
info	TokenNameIdentifier
:	TokenNameCOLON
metadata	TokenNameIdentifier
.	TokenNameDOT
getColumn_metadata	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
info	TokenNameIdentifier
.	TokenNameDOT
getIndexType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
indexManager	TokenNameIdentifier
.	TokenNameDOT
addIndexedColumn	TokenNameIdentifier
(	TokenNameLPAREN
info	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
String	TokenNameIdentifier
type	TokenNameIdentifier
=	TokenNameEQUAL
this	TokenNamethis
.	TokenNameDOT
partitioner	TokenNameIdentifier
instanceof	TokenNameinstanceof
LocalPartitioner	TokenNameIdentifier
?	TokenNameQUESTION
"IndexColumnFamilies"	TokenNameStringLiteral
:	TokenNameCOLON
"ColumnFamilies"	TokenNameStringLiteral
;	TokenNameSEMICOLON
mbeanName	TokenNameIdentifier
=	TokenNameEQUAL
"org.apache.cassandra.db:type="	TokenNameStringLiteral
+	TokenNamePLUS
type	TokenNameIdentifier
+	TokenNamePLUS
",keyspace="	TokenNameStringLiteral
+	TokenNamePLUS
this	TokenNamethis
.	TokenNameDOT
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
+	TokenNamePLUS
",columnfamily="	TokenNameStringLiteral
+	TokenNamePLUS
columnFamily	TokenNameIdentifier
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
MBeanServer	TokenNameIdentifier
mbs	TokenNameIdentifier
=	TokenNameEQUAL
ManagementFactory	TokenNameIdentifier
.	TokenNameDOT
getPlatformMBeanServer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ObjectName	TokenNameIdentifier
nameObj	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
mbeanName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mbs	TokenNameIdentifier
.	TokenNameDOT
registerMBean	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
,	TokenNameCOMMA
nameObj	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
invalidate	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
valid	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
unregisterMBean	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
data	TokenNameIdentifier
.	TokenNameDOT
unreferenceSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
indexManager	TokenNameIdentifier
.	TokenNameDOT
invalidate	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
warn	TokenNameIdentifier
(	TokenNameLPAREN
"Failed unregistering mbean: "	TokenNameStringLiteral
+	TokenNamePLUS
mbeanName	TokenNameIdentifier
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
void	TokenNamevoid
maybeRemoveUnreadableSSTables	TokenNameIdentifier
(	TokenNameLPAREN
File	TokenNameIdentifier
directory	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
data	TokenNameIdentifier
.	TokenNameDOT
removeUnreadableSSTables	TokenNameIdentifier
(	TokenNameLPAREN
directory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
void	TokenNamevoid
unregisterMBean	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
MalformedObjectNameException	TokenNameIdentifier
,	TokenNameCOMMA
InstanceNotFoundException	TokenNameIdentifier
,	TokenNameCOMMA
MBeanRegistrationException	TokenNameIdentifier
{	TokenNameLBRACE
MBeanServer	TokenNameIdentifier
mbs	TokenNameIdentifier
=	TokenNameEQUAL
ManagementFactory	TokenNameIdentifier
.	TokenNameDOT
getPlatformMBeanServer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ObjectName	TokenNameIdentifier
nameObj	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
mbeanName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
mbs	TokenNameIdentifier
.	TokenNameDOT
isRegistered	TokenNameIdentifier
(	TokenNameLPAREN
nameObj	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
mbs	TokenNameIdentifier
.	TokenNameDOT
unregisterMBean	TokenNameIdentifier
(	TokenNameLPAREN
nameObj	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
metric	TokenNameIdentifier
.	TokenNameDOT
release	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getMinRowSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
minRowSize	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getMaxRowSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
maxRowSize	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getMeanRowSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
meanRowSize	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getMeanColumns	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
data	TokenNameIdentifier
.	TokenNameDOT
getMeanColumns	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ColumnFamilyStore	TokenNameIdentifier
createColumnFamilyStore	TokenNameIdentifier
(	TokenNameLPAREN
Table	TokenNameIdentifier
table	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
loadSSTables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
createColumnFamilyStore	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
StorageService	TokenNameIdentifier
.	TokenNameDOT
getPartitioner	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getCFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
loadSSTables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ColumnFamilyStore	TokenNameIdentifier
createColumnFamilyStore	TokenNameIdentifier
(	TokenNameLPAREN
Table	TokenNameIdentifier
table	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
IPartitioner	TokenNameIdentifier
partitioner	TokenNameIdentifier
,	TokenNameCOMMA
CFMetaData	TokenNameIdentifier
metadata	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
createColumnFamilyStore	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
partitioner	TokenNameIdentifier
,	TokenNameCOMMA
metadata	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
synchronized	TokenNamesynchronized
ColumnFamilyStore	TokenNameIdentifier
createColumnFamilyStore	TokenNameIdentifier
(	TokenNameLPAREN
Table	TokenNameIdentifier
table	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
IPartitioner	TokenNameIdentifier
partitioner	TokenNameIdentifier
,	TokenNameCOMMA
CFMetaData	TokenNameIdentifier
metadata	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
loadSSTables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Directories	TokenNameIdentifier
directories	TokenNameIdentifier
=	TokenNameEQUAL
Directories	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Directories	TokenNameIdentifier
.	TokenNameDOT
SSTableLister	TokenNameIdentifier
lister	TokenNameIdentifier
=	TokenNameEQUAL
directories	TokenNameIdentifier
.	TokenNameDOT
sstableLister	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
includeBackups	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
>	TokenNameGREATER
generations	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
Descriptor	TokenNameIdentifier
,	TokenNameCOMMA
Set	TokenNameIdentifier
<	TokenNameLESS
Component	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
entry	TokenNameIdentifier
:	TokenNameCOLON
lister	TokenNameIdentifier
.	TokenNameDOT
list	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
entrySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Descriptor	TokenNameIdentifier
desc	TokenNameIdentifier
=	TokenNameEQUAL
entry	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
generations	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
desc	TokenNameIdentifier
.	TokenNameDOT
generation	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
desc	TokenNameIdentifier
.	TokenNameDOT
isCompatible	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Can't open incompatible SSTable! Current version %s, found file: %s"	TokenNameStringLiteral
,	TokenNameCOMMA
Descriptor	TokenNameIdentifier
.	TokenNameDOT
Version	TokenNameIdentifier
.	TokenNameDOT
CURRENT	TokenNameIdentifier
,	TokenNameCOMMA
desc	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Collections	TokenNameIdentifier
.	TokenNameDOT
sort	TokenNameIdentifier
(	TokenNameLPAREN
generations	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
value	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
generations	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
(	TokenNameLPAREN
generations	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
generations	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
ColumnFamilyStore	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
partitioner	TokenNameIdentifier
,	TokenNameCOMMA
value	TokenNameIdentifier
,	TokenNameCOMMA
metadata	TokenNameIdentifier
,	TokenNameCOMMA
directories	TokenNameIdentifier
,	TokenNameCOMMA
loadSSTables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
scrubDataDirectories	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
table	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"Removing compacted SSTable files from {} (see http://wiki.apache.org/cassandra/MemtableSSTable)"	TokenNameStringLiteral
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Directories	TokenNameIdentifier
directories	TokenNameIdentifier
=	TokenNameEQUAL
Directories	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
Descriptor	TokenNameIdentifier
,	TokenNameCOMMA
Set	TokenNameIdentifier
<	TokenNameLESS
Component	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
sstableFiles	TokenNameIdentifier
:	TokenNameCOLON
directories	TokenNameIdentifier
.	TokenNameDOT
sstableLister	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
list	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
entrySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Descriptor	TokenNameIdentifier
desc	TokenNameIdentifier
=	TokenNameEQUAL
sstableFiles	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
Component	TokenNameIdentifier
>	TokenNameGREATER
components	TokenNameIdentifier
=	TokenNameEQUAL
sstableFiles	TokenNameIdentifier
.	TokenNameDOT
getValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
components	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
Component	TokenNameIdentifier
.	TokenNameDOT
COMPACTED_MARKER	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
desc	TokenNameIdentifier
.	TokenNameDOT
temporary	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
SSTable	TokenNameIdentifier
.	TokenNameDOT
delete	TokenNameIdentifier
(	TokenNameLPAREN
desc	TokenNameIdentifier
,	TokenNameCOMMA
components	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
File	TokenNameIdentifier
dataFile	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
desc	TokenNameIdentifier
.	TokenNameDOT
filenameFor	TokenNameIdentifier
(	TokenNameLPAREN
Component	TokenNameIdentifier
.	TokenNameDOT
DATA	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
components	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
Component	TokenNameIdentifier
.	TokenNameDOT
DATA	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
dataFile	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
continue	TokenNamecontinue
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
warn	TokenNameIdentifier
(	TokenNameLPAREN
"Removing orphans for {}: {}"	TokenNameStringLiteral
,	TokenNameCOMMA
desc	TokenNameIdentifier
,	TokenNameCOMMA
components	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Component	TokenNameIdentifier
component	TokenNameIdentifier
:	TokenNameCOLON
components	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
FileUtils	TokenNameIdentifier
.	TokenNameDOT
deleteWithConfirm	TokenNameIdentifier
(	TokenNameLPAREN
desc	TokenNameIdentifier
.	TokenNameDOT
filenameFor	TokenNameIdentifier
(	TokenNameLPAREN
component	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
Pattern	TokenNameIdentifier
tmpCacheFilePattern	TokenNameIdentifier
=	TokenNameEQUAL
Pattern	TokenNameIdentifier
.	TokenNameDOT
compile	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
+	TokenNamePLUS
"-"	TokenNameStringLiteral
+	TokenNamePLUS
columnFamily	TokenNameIdentifier
+	TokenNamePLUS
"-(Key|Row)Cache.*\.tmp$"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
File	TokenNameIdentifier
dir	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
DatabaseDescriptor	TokenNameIdentifier
.	TokenNameDOT
getSavedCachesLocation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dir	TokenNameIdentifier
.	TokenNameDOT
exists	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
dir	TokenNameIdentifier
.	TokenNameDOT
isDirectory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
File	TokenNameIdentifier
file	TokenNameIdentifier
:	TokenNameCOLON
dir	TokenNameIdentifier
.	TokenNameDOT
listFiles	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
tmpCacheFilePattern	TokenNameIdentifier
.	TokenNameDOT
matcher	TokenNameIdentifier
(	TokenNameLPAREN
file	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
matches	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
file	TokenNameIdentifier
.	TokenNameDOT
delete	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
warn	TokenNameIdentifier
(	TokenNameLPAREN
"could not delete "	TokenNameStringLiteral
+	TokenNamePLUS
file	TokenNameIdentifier
.	TokenNameDOT
getAbsolutePath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
CFMetaData	TokenNameIdentifier
cfm	TokenNameIdentifier
=	TokenNameEQUAL
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getCFMetaData	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cfm	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
ColumnDefinition	TokenNameIdentifier
def	TokenNameIdentifier
:	TokenNameCOLON
cfm	TokenNameIdentifier
.	TokenNameDOT
getColumn_metadata	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
scrubDataDirectories	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
,	TokenNameCOMMA
cfm	TokenNameIdentifier
.	TokenNameDOT
indexColumnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
def	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
initRowCache	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isRowCacheEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
long	TokenNamelong
start	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
cachedRowsRead	TokenNameIdentifier
=	TokenNameEQUAL
CacheService	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
rowCache	TokenNameIdentifier
.	TokenNameDOT
loadSaved	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cachedRowsRead	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
info	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"completed loading (%d ms; %d keys) row cache for %s.%s"	TokenNameStringLiteral
,	TokenNameCOMMA
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
start	TokenNameIdentifier
,	TokenNameCOMMA
cachedRowsRead	TokenNameIdentifier
,	TokenNameCOMMA
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
synchronized	TokenNamesynchronized
void	TokenNamevoid
loadNewSSTables	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
ksName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cfName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Table	TokenNameIdentifier
table	TokenNameIdentifier
=	TokenNameEQUAL
Table	TokenNameIdentifier
.	TokenNameDOT
open	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
table	TokenNameIdentifier
.	TokenNameDOT
getColumnFamilyStore	TokenNameIdentifier
(	TokenNameLPAREN
cfName	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
loadNewSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
synchronized	TokenNamesynchronized
void	TokenNamevoid
loadNewSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
info	TokenNameIdentifier
(	TokenNameLPAREN
"Loading new SSTables for "	TokenNameStringLiteral
+	TokenNamePLUS
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
+	TokenNamePLUS
"/"	TokenNameStringLiteral
+	TokenNamePLUS
columnFamily	TokenNameIdentifier
+	TokenNamePLUS
"..."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
Descriptor	TokenNameIdentifier
>	TokenNameGREATER
currentDescriptors	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
Descriptor	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
data	TokenNameIdentifier
.	TokenNameDOT
getView	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
sstables	TokenNameIdentifier
)	TokenNameRPAREN
currentDescriptors	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
.	TokenNameDOT
descriptor	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
newSSTables	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Directories	TokenNameIdentifier
.	TokenNameDOT
SSTableLister	TokenNameIdentifier
lister	TokenNameIdentifier
=	TokenNameEQUAL
directories	TokenNameIdentifier
.	TokenNameDOT
sstableLister	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
skipTemporary	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
Descriptor	TokenNameIdentifier
,	TokenNameCOMMA
Set	TokenNameIdentifier
<	TokenNameLESS
Component	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
entry	TokenNameIdentifier
:	TokenNameCOLON
lister	TokenNameIdentifier
.	TokenNameDOT
list	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
entrySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Descriptor	TokenNameIdentifier
descriptor	TokenNameIdentifier
=	TokenNameEQUAL
entry	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
currentDescriptors	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
descriptor	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
continue	TokenNamecontinue
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
descriptor	TokenNameIdentifier
.	TokenNameDOT
temporary	TokenNameIdentifier
)	TokenNameRPAREN
continue	TokenNamecontinue
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
descriptor	TokenNameIdentifier
.	TokenNameDOT
isCompatible	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Can't open incompatible SSTable! Current version %s, found file: %s"	TokenNameStringLiteral
,	TokenNameCOMMA
Descriptor	TokenNameIdentifier
.	TokenNameDOT
Version	TokenNameIdentifier
.	TokenNameDOT
CURRENT	TokenNameIdentifier
,	TokenNameCOMMA
descriptor	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Descriptor	TokenNameIdentifier
newDescriptor	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Descriptor	TokenNameIdentifier
(	TokenNameLPAREN
descriptor	TokenNameIdentifier
.	TokenNameDOT
version	TokenNameIdentifier
,	TokenNameCOMMA
descriptor	TokenNameIdentifier
.	TokenNameDOT
directory	TokenNameIdentifier
,	TokenNameCOMMA
descriptor	TokenNameIdentifier
.	TokenNameDOT
ksname	TokenNameIdentifier
,	TokenNameCOMMA
descriptor	TokenNameIdentifier
.	TokenNameDOT
cfname	TokenNameIdentifier
,	TokenNameCOMMA
fileIndexGenerator	TokenNameIdentifier
.	TokenNameDOT
incrementAndGet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
info	TokenNameIdentifier
(	TokenNameLPAREN
"Renaming new SSTable {} to {}"	TokenNameStringLiteral
,	TokenNameCOMMA
descriptor	TokenNameIdentifier
,	TokenNameCOMMA
newDescriptor	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SSTableWriter	TokenNameIdentifier
.	TokenNameDOT
rename	TokenNameIdentifier
(	TokenNameLPAREN
descriptor	TokenNameIdentifier
,	TokenNameCOMMA
newDescriptor	TokenNameIdentifier
,	TokenNameCOMMA
entry	TokenNameIdentifier
.	TokenNameDOT
getValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SSTableReader	TokenNameIdentifier
reader	TokenNameIdentifier
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
reader	TokenNameIdentifier
=	TokenNameEQUAL
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
open	TokenNameIdentifier
(	TokenNameLPAREN
newDescriptor	TokenNameIdentifier
,	TokenNameCOMMA
entry	TokenNameIdentifier
.	TokenNameDOT
getValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
metadata	TokenNameIdentifier
,	TokenNameCOMMA
partitioner	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
IOException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
logOpenException	TokenNameIdentifier
(	TokenNameLPAREN
entry	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
newSSTables	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
reader	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
newSSTables	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
info	TokenNameIdentifier
(	TokenNameLPAREN
"No new SSTables were found for "	TokenNameStringLiteral
+	TokenNamePLUS
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
+	TokenNamePLUS
"/"	TokenNameStringLiteral
+	TokenNamePLUS
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
info	TokenNameIdentifier
(	TokenNameLPAREN
"Loading new SSTables and building secondary indexes for "	TokenNameStringLiteral
+	TokenNamePLUS
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
+	TokenNamePLUS
"/"	TokenNameStringLiteral
+	TokenNamePLUS
columnFamily	TokenNameIdentifier
+	TokenNamePLUS
": "	TokenNameStringLiteral
+	TokenNamePLUS
newSSTables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
acquireReferences	TokenNameIdentifier
(	TokenNameLPAREN
newSSTables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
data	TokenNameIdentifier
.	TokenNameDOT
addSSTables	TokenNameIdentifier
(	TokenNameLPAREN
newSSTables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
indexManager	TokenNameIdentifier
.	TokenNameDOT
maybeBuildSecondaryIndexes	TokenNameIdentifier
(	TokenNameLPAREN
newSSTables	TokenNameIdentifier
,	TokenNameCOMMA
indexManager	TokenNameIdentifier
.	TokenNameDOT
allIndexesNames	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
releaseReferences	TokenNameIdentifier
(	TokenNameLPAREN
newSSTables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
info	TokenNameIdentifier
(	TokenNameLPAREN
"Done loading load new SSTables for "	TokenNameStringLiteral
+	TokenNamePLUS
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
+	TokenNamePLUS
"/"	TokenNameStringLiteral
+	TokenNamePLUS
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
rebuildSecondaryIndex	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
ksName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cfName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
...	TokenNameELLIPSIS
idxNames	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ColumnFamilyStore	TokenNameIdentifier
cfs	TokenNameIdentifier
=	TokenNameEQUAL
Table	TokenNameIdentifier
.	TokenNameDOT
open	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getColumnFamilyStore	TokenNameIdentifier
(	TokenNameLPAREN
cfName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
indexes	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
idxNames	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
=	TokenNameEQUAL
cfs	TokenNameIdentifier
.	TokenNameDOT
getSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
cfs	TokenNameIdentifier
.	TokenNameDOT
indexManager	TokenNameIdentifier
.	TokenNameDOT
setIndexRemoved	TokenNameIdentifier
(	TokenNameLPAREN
indexes	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
acquireReferences	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
info	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"User Requested secondary index re-build for %s/%s indexes"	TokenNameStringLiteral
,	TokenNameCOMMA
ksName	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfs	TokenNameIdentifier
.	TokenNameDOT
indexManager	TokenNameIdentifier
.	TokenNameDOT
maybeBuildSecondaryIndexes	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
,	TokenNameCOMMA
indexes	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfs	TokenNameIdentifier
.	TokenNameDOT
indexManager	TokenNameIdentifier
.	TokenNameDOT
setIndexBuilt	TokenNameIdentifier
(	TokenNameLPAREN
indexes	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
releaseReferences	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getColumnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
columnFamily	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getTempSSTablePath	TokenNameIdentifier
(	TokenNameLPAREN
File	TokenNameIdentifier
directory	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getTempSSTablePath	TokenNameIdentifier
(	TokenNameLPAREN
directory	TokenNameIdentifier
,	TokenNameCOMMA
Descriptor	TokenNameIdentifier
.	TokenNameDOT
Version	TokenNameIdentifier
.	TokenNameDOT
CURRENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
String	TokenNameIdentifier
getTempSSTablePath	TokenNameIdentifier
(	TokenNameLPAREN
File	TokenNameIdentifier
directory	TokenNameIdentifier
,	TokenNameCOMMA
Descriptor	TokenNameIdentifier
.	TokenNameDOT
Version	TokenNameIdentifier
version	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Descriptor	TokenNameIdentifier
desc	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Descriptor	TokenNameIdentifier
(	TokenNameLPAREN
version	TokenNameIdentifier
,	TokenNameCOMMA
directory	TokenNameIdentifier
,	TokenNameCOMMA
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
fileIndexGenerator	TokenNameIdentifier
.	TokenNameDOT
incrementAndGet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
desc	TokenNameIdentifier
.	TokenNameDOT
filenameFor	TokenNameIdentifier
(	TokenNameLPAREN
Component	TokenNameIdentifier
.	TokenNameDOT
DATA	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Future	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
switchMemtable	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
boolean	TokenNameboolean
writeCommitLog	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
forceSwitch	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Table	TokenNameIdentifier
.	TokenNameDOT
switchLock	TokenNameIdentifier
.	TokenNameDOT
writeLock	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
lock	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
final	TokenNamefinal
Future	TokenNameIdentifier
<	TokenNameLESS
ReplayPosition	TokenNameIdentifier
>	TokenNameGREATER
ctx	TokenNameIdentifier
=	TokenNameEQUAL
writeCommitLog	TokenNameIdentifier
?	TokenNameQUESTION
CommitLog	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getContext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
Futures	TokenNameIdentifier
.	TokenNameDOT
immediateFuture	TokenNameIdentifier
(	TokenNameLPAREN
ReplayPosition	TokenNameIdentifier
.	TokenNameDOT
NONE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
ColumnFamilyStore	TokenNameIdentifier
>	TokenNameGREATER
icc	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
ColumnFamilyStore	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnFamilyStore	TokenNameIdentifier
cfs	TokenNameIdentifier
:	TokenNameCOLON
concatWithIndexes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
forceSwitch	TokenNameIdentifier
||	TokenNameOR_OR
!	TokenNameNOT
cfs	TokenNameIdentifier
.	TokenNameDOT
getMemtableThreadSafe	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isClean	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
icc	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
cfs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
CountDownLatch	TokenNameIdentifier
latch	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CountDownLatch	TokenNameIdentifier
(	TokenNameLPAREN
icc	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnFamilyStore	TokenNameIdentifier
cfs	TokenNameIdentifier
:	TokenNameCOLON
icc	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Memtable	TokenNameIdentifier
memtable	TokenNameIdentifier
=	TokenNameEQUAL
cfs	TokenNameIdentifier
.	TokenNameDOT
data	TokenNameIdentifier
.	TokenNameDOT
switchMemtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
memtable	TokenNameIdentifier
.	TokenNameDOT
isClean	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
cfs	TokenNameIdentifier
.	TokenNameDOT
replaceFlushed	TokenNameIdentifier
(	TokenNameLPAREN
memtable	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
latch	TokenNameIdentifier
.	TokenNameDOT
countDown	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
info	TokenNameIdentifier
(	TokenNameLPAREN
"Enqueuing flush of {}"	TokenNameStringLiteral
,	TokenNameCOMMA
memtable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
memtable	TokenNameIdentifier
.	TokenNameDOT
flushAndSignal	TokenNameIdentifier
(	TokenNameLPAREN
latch	TokenNameIdentifier
,	TokenNameCOMMA
flushWriter	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
metric	TokenNameIdentifier
.	TokenNameDOT
memtableSwitchCount	TokenNameIdentifier
.	TokenNameDOT
count	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
Long	TokenNameIdentifier
.	TokenNameDOT
MAX_VALUE	TokenNameIdentifier
)	TokenNameRPAREN
metric	TokenNameIdentifier
.	TokenNameDOT
memtableSwitchCount	TokenNameIdentifier
.	TokenNameDOT
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
metric	TokenNameIdentifier
.	TokenNameDOT
memtableSwitchCount	TokenNameIdentifier
.	TokenNameDOT
inc	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
postFlushExecutor	TokenNameIdentifier
.	TokenNameDOT
submit	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
WrappedRunnable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
void	TokenNamevoid
runMayThrow	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
InterruptedException	TokenNameIdentifier
,	TokenNameCOMMA
ExecutionException	TokenNameIdentifier
{	TokenNameLBRACE
latch	TokenNameIdentifier
.	TokenNameDOT
await	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
icc	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
SecondaryIndex	TokenNameIdentifier
index	TokenNameIdentifier
:	TokenNameCOLON
indexManager	TokenNameIdentifier
.	TokenNameDOT
getIndexesNotBackedByCfs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
info	TokenNameIdentifier
(	TokenNameLPAREN
"Flushing SecondaryIndex {}"	TokenNameStringLiteral
,	TokenNameCOMMA
index	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
index	TokenNameIdentifier
.	TokenNameDOT
forceBlockingFlush	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
writeCommitLog	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
CommitLog	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
discardCompletedSegments	TokenNameIdentifier
(	TokenNameLPAREN
metadata	TokenNameIdentifier
.	TokenNameDOT
cfId	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
Table	TokenNameIdentifier
.	TokenNameDOT
switchLock	TokenNameIdentifier
.	TokenNameDOT
writeLock	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
unlock	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
Future	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
forceFlush	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
boolean	TokenNameboolean
clean	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ColumnFamilyStore	TokenNameIdentifier
cfs	TokenNameIdentifier
:	TokenNameCOLON
concatWithIndexes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
clean	TokenNameIdentifier
&=	TokenNameAND_EQUAL
cfs	TokenNameIdentifier
.	TokenNameDOT
getMemtableThreadSafe	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isClean	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
clean	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"forceFlush requested but everything is clean in {}"	TokenNameStringLiteral
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
Futures	TokenNameIdentifier
.	TokenNameDOT
immediateCheckedFuture	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
switchMemtable	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
forceBlockingFlush	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
ExecutionException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
forceFlush	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
maybeUpdateRowCache	TokenNameIdentifier
(	TokenNameLPAREN
DecoratedKey	TokenNameIdentifier
key	TokenNameIdentifier
,	TokenNameCOMMA
ColumnFamily	TokenNameIdentifier
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isRowCacheEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
RowCacheKey	TokenNameIdentifier
cacheKey	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
RowCacheKey	TokenNameIdentifier
(	TokenNameLPAREN
metadata	TokenNameIdentifier
.	TokenNameDOT
cfId	TokenNameIdentifier
,	TokenNameCOMMA
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
CacheService	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
rowCache	TokenNameIdentifier
.	TokenNameDOT
isPutCopying	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
invalidateCachedRow	TokenNameIdentifier
(	TokenNameLPAREN
cacheKey	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
IRowCacheEntry	TokenNameIdentifier
cachedRow	TokenNameIdentifier
=	TokenNameEQUAL
getCachedRowInternal	TokenNameIdentifier
(	TokenNameLPAREN
cacheKey	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cachedRow	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cachedRow	TokenNameIdentifier
instanceof	TokenNameinstanceof
RowCacheSentinel	TokenNameIdentifier
)	TokenNameRPAREN
invalidateCachedRow	TokenNameIdentifier
(	TokenNameLPAREN
cacheKey	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
(	TokenNameLPAREN
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
)	TokenNameRPAREN
cachedRow	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
addAllWithSCCopy	TokenNameIdentifier
(	TokenNameLPAREN
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
HeapAllocator	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
apply	TokenNameIdentifier
(	TokenNameLPAREN
DecoratedKey	TokenNameIdentifier
key	TokenNameIdentifier
,	TokenNameCOMMA
ColumnFamily	TokenNameIdentifier
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
SecondaryIndexManager	TokenNameIdentifier
.	TokenNameDOT
Updater	TokenNameIdentifier
indexer	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
long	TokenNamelong
start	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
nanoTime	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Memtable	TokenNameIdentifier
mt	TokenNameIdentifier
=	TokenNameEQUAL
getMemtableThreadSafe	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mt	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
indexer	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
maybeUpdateRowCache	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
metric	TokenNameIdentifier
.	TokenNameDOT
writeLatency	TokenNameIdentifier
.	TokenNameDOT
addNano	TokenNameIdentifier
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
nanoTime	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
start	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
{	TokenNameLBRACE
long	TokenNamelong
last	TokenNameIdentifier
=	TokenNameEQUAL
liveRatioComputedAt	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
long	TokenNamelong
operations	TokenNameIdentifier
=	TokenNameEQUAL
metric	TokenNameIdentifier
.	TokenNameDOT
writeLatency	TokenNameIdentifier
.	TokenNameDOT
latency	TokenNameIdentifier
.	TokenNameDOT
count	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
operations	TokenNameIdentifier
<	TokenNameLESS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
last	TokenNameIdentifier
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
liveRatioComputedAt	TokenNameIdentifier
.	TokenNameDOT
compareAndSet	TokenNameIdentifier
(	TokenNameLPAREN
last	TokenNameIdentifier
,	TokenNameCOMMA
operations	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"computing liveRatio of {} at {} ops"	TokenNameStringLiteral
,	TokenNameCOMMA
this	TokenNamethis
,	TokenNameCOMMA
operations	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mt	TokenNameIdentifier
.	TokenNameDOT
updateLiveRatio	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ColumnFamily	TokenNameIdentifier
removeDeletedCF	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
cf	TokenNameIdentifier
.	TokenNameDOT
maybeResetDeletionTimes	TokenNameIdentifier
(	TokenNameLPAREN
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
cf	TokenNameIdentifier
.	TokenNameDOT
getColumnCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
&&	TokenNameAND_AND
!	TokenNameNOT
cf	TokenNameIdentifier
.	TokenNameDOT
isMarkedForDelete	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
null	TokenNamenull
:	TokenNameCOLON
cf	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ColumnFamily	TokenNameIdentifier
removeDeleted	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
removeDeleted	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
,	TokenNameCOMMA
SecondaryIndexManager	TokenNameIdentifier
.	TokenNameDOT
nullUpdater	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ColumnFamily	TokenNameIdentifier
removeDeleted	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
gcBefore	TokenNameIdentifier
,	TokenNameCOMMA
SecondaryIndexManager	TokenNameIdentifier
.	TokenNameDOT
Updater	TokenNameIdentifier
indexer	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cf	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
removeDeletedColumnsOnly	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
,	TokenNameCOMMA
indexer	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
removeDeletedCF	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
void	TokenNamevoid
removeDeletedColumnsOnly	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
gcBefore	TokenNameIdentifier
,	TokenNameCOMMA
SecondaryIndexManager	TokenNameIdentifier
.	TokenNameDOT
Updater	TokenNameIdentifier
indexer	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cf	TokenNameIdentifier
.	TokenNameDOT
isSuper	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
removeDeletedSuper	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
removeDeletedStandard	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
,	TokenNameCOMMA
indexer	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
removeDeletedColumnsOnly	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
removeDeletedColumnsOnly	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
,	TokenNameCOMMA
SecondaryIndexManager	TokenNameIdentifier
.	TokenNameDOT
nullUpdater	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
void	TokenNamevoid
removeDeletedStandard	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
gcBefore	TokenNameIdentifier
,	TokenNameCOMMA
SecondaryIndexManager	TokenNameIdentifier
.	TokenNameDOT
Updater	TokenNameIdentifier
indexer	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Iterator	TokenNameIdentifier
<	TokenNameLESS
IColumn	TokenNameIdentifier
>	TokenNameGREATER
iter	TokenNameIdentifier
=	TokenNameEQUAL
cf	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
iter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
IColumn	TokenNameIdentifier
c	TokenNameIdentifier
=	TokenNameEQUAL
iter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
c	TokenNameIdentifier
.	TokenNameDOT
getLocalDeletionTime	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
<	TokenNameLESS
gcBefore	TokenNameIdentifier
||	TokenNameOR_OR
cf	TokenNameIdentifier
.	TokenNameDOT
deletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isDeleted	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
iter	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
indexer	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
void	TokenNamevoid
removeDeletedSuper	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Iterator	TokenNameIdentifier
<	TokenNameLESS
IColumn	TokenNameIdentifier
>	TokenNameGREATER
iter	TokenNameIdentifier
=	TokenNameEQUAL
cf	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
iter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
SuperColumn	TokenNameIdentifier
c	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SuperColumn	TokenNameIdentifier
)	TokenNameRPAREN
iter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Iterator	TokenNameIdentifier
<	TokenNameLESS
IColumn	TokenNameIdentifier
>	TokenNameGREATER
subIter	TokenNameIdentifier
=	TokenNameEQUAL
c	TokenNameIdentifier
.	TokenNameDOT
getSubColumns	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
subIter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
IColumn	TokenNameIdentifier
subColumn	TokenNameIdentifier
=	TokenNameEQUAL
subIter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
subColumn	TokenNameIdentifier
.	TokenNameDOT
getLocalDeletionTime	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
<	TokenNameLESS
gcBefore	TokenNameIdentifier
||	TokenNameOR_OR
cf	TokenNameIdentifier
.	TokenNameDOT
deletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isDeleted	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
subColumn	TokenNameIdentifier
.	TokenNameDOT
timestamp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
c	TokenNameIdentifier
.	TokenNameDOT
deletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isDeleted	TokenNameIdentifier
(	TokenNameLPAREN
subColumn	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
subIter	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
c	TokenNameIdentifier
.	TokenNameDOT
maybeResetDeletionTimes	TokenNameIdentifier
(	TokenNameLPAREN
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
c	TokenNameIdentifier
.	TokenNameDOT
getSubColumns	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
c	TokenNameIdentifier
.	TokenNameDOT
isMarkedForDelete	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
iter	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
getOverlappingSSTables	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"Checking for sstables overlapping {}"	TokenNameStringLiteral
,	TokenNameCOMMA
sstables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
sstables	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
ImmutableSet	TokenNameIdentifier
.	TokenNameDOT
of	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DataTracker	TokenNameIdentifier
.	TokenNameDOT
SSTableIntervalTree	TokenNameIdentifier
tree	TokenNameIdentifier
=	TokenNameEQUAL
data	TokenNameIdentifier
.	TokenNameDOT
getView	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
intervalTree	TokenNameIdentifier
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
results	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
overlaps	TokenNameIdentifier
=	TokenNameEQUAL
ImmutableSet	TokenNameIdentifier
.	TokenNameDOT
copyOf	TokenNameIdentifier
(	TokenNameLPAREN
tree	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
(	TokenNameLPAREN
Interval	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
RowPosition	TokenNameIdentifier
,	TokenNameCOMMA
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
create	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
.	TokenNameDOT
first	TokenNameIdentifier
,	TokenNameCOMMA
sstable	TokenNameIdentifier
.	TokenNameDOT
last	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
overlaps	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
results	TokenNameIdentifier
=	TokenNameEQUAL
results	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
overlaps	TokenNameIdentifier
:	TokenNameCOLON
Sets	TokenNameIdentifier
.	TokenNameDOT
union	TokenNameIdentifier
(	TokenNameLPAREN
results	TokenNameIdentifier
,	TokenNameCOMMA
overlaps	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
immutableCopy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
results	TokenNameIdentifier
=	TokenNameEQUAL
Sets	TokenNameIdentifier
.	TokenNameDOT
difference	TokenNameIdentifier
(	TokenNameLPAREN
results	TokenNameIdentifier
,	TokenNameCOMMA
ImmutableSet	TokenNameIdentifier
.	TokenNameDOT
copyOf	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
results	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
getAndReferenceOverlappingSSTables	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
overlapped	TokenNameIdentifier
=	TokenNameEQUAL
getOverlappingSSTables	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
acquireReferences	TokenNameIdentifier
(	TokenNameLPAREN
overlapped	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
overlapped	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addSSTable	TokenNameIdentifier
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
sstable	TokenNameIdentifier
.	TokenNameDOT
getColumnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addSSTables	TokenNameIdentifier
(	TokenNameLPAREN
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addSSTables	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
data	TokenNameIdentifier
.	TokenNameDOT
addSSTables	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CompactionManager	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
submitBackground	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getExpectedCompactedFileSize	TokenNameIdentifier
(	TokenNameLPAREN
Iterable	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
,	TokenNameCOMMA
OperationType	TokenNameIdentifier
operation	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
operation	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
OperationType	TokenNameIdentifier
.	TokenNameDOT
CLEANUP	TokenNameIdentifier
||	TokenNameOR_OR
isIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
SSTable	TokenNameIdentifier
.	TokenNameDOT
getTotalBytes	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
long	TokenNamelong
expectedFileSize	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Collection	TokenNameIdentifier
<	TokenNameLESS
Range	TokenNameIdentifier
<	TokenNameLESS
Token	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
ranges	TokenNameIdentifier
=	TokenNameEQUAL
StorageService	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getLocalRanges	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Pair	TokenNameIdentifier
<	TokenNameLESS
Long	TokenNameIdentifier
,	TokenNameCOMMA
Long	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
positions	TokenNameIdentifier
=	TokenNameEQUAL
sstable	TokenNameIdentifier
.	TokenNameDOT
getPositionsForRanges	TokenNameIdentifier
(	TokenNameLPAREN
ranges	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Pair	TokenNameIdentifier
<	TokenNameLESS
Long	TokenNameIdentifier
,	TokenNameCOMMA
Long	TokenNameIdentifier
>	TokenNameGREATER
position	TokenNameIdentifier
:	TokenNameCOLON
positions	TokenNameIdentifier
)	TokenNameRPAREN
expectedFileSize	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
position	TokenNameIdentifier
.	TokenNameDOT
right	TokenNameIdentifier
-	TokenNameMINUS
position	TokenNameIdentifier
.	TokenNameDOT
left	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
expectedFileSize	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
SSTableReader	TokenNameIdentifier
getMaxSizeFile	TokenNameIdentifier
(	TokenNameLPAREN
Iterable	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
long	TokenNamelong
maxSize	TokenNameIdentifier
=	TokenNameEQUAL
0L	TokenNameLongLiteral
;	TokenNameSEMICOLON
SSTableReader	TokenNameIdentifier
maxFile	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
sstable	TokenNameIdentifier
.	TokenNameDOT
onDiskLength	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
maxSize	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
maxSize	TokenNameIdentifier
=	TokenNameEQUAL
sstable	TokenNameIdentifier
.	TokenNameDOT
onDiskLength	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
maxFile	TokenNameIdentifier
=	TokenNameEQUAL
sstable	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
maxFile	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
forceCleanup	TokenNameIdentifier
(	TokenNameLPAREN
CounterId	TokenNameIdentifier
.	TokenNameDOT
OneShotRenewer	TokenNameIdentifier
renewer	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ExecutionException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
CompactionManager	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
performCleanup	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamilyStore	TokenNameIdentifier
.	TokenNameDOT
this	TokenNamethis
,	TokenNameCOMMA
renewer	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
scrub	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
ExecutionException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
snapshotWithoutFlush	TokenNameIdentifier
(	TokenNameLPAREN
"pre-scrub-"	TokenNameStringLiteral
+	TokenNamePLUS
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CompactionManager	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
performScrub	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamilyStore	TokenNameIdentifier
.	TokenNameDOT
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
sstablesRewrite	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
ExecutionException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
CompactionManager	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
performSSTableRewrite	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamilyStore	TokenNameIdentifier
.	TokenNameDOT
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
markCompacted	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
,	TokenNameCOMMA
OperationType	TokenNameIdentifier
compactionType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
!	TokenNameNOT
sstables	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
data	TokenNameIdentifier
.	TokenNameDOT
markCompacted	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
,	TokenNameCOMMA
compactionType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
replaceCompactedSSTables	TokenNameIdentifier
(	TokenNameLPAREN
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
,	TokenNameCOMMA
Iterable	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
replacements	TokenNameIdentifier
,	TokenNameCOMMA
OperationType	TokenNameIdentifier
compactionType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
data	TokenNameIdentifier
.	TokenNameDOT
replaceCompactedSSTables	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
,	TokenNameCOMMA
replacements	TokenNameIdentifier
,	TokenNameCOMMA
compactionType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
void	TokenNamevoid
replaceFlushed	TokenNameIdentifier
(	TokenNameLPAREN
Memtable	TokenNameIdentifier
memtable	TokenNameIdentifier
,	TokenNameCOMMA
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
data	TokenNameIdentifier
.	TokenNameDOT
replaceFlushed	TokenNameIdentifier
(	TokenNameLPAREN
memtable	TokenNameIdentifier
,	TokenNameCOMMA
sstable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
sstable	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
CompactionManager	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
submitBackground	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isValid	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
valid	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getMemtableColumnsCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
memtableColumnsCount	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getMemtableDataSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
memtableDataSize	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getTotalMemtableLiveSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getMemtableDataSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
indexManager	TokenNameIdentifier
.	TokenNameDOT
getTotalLiveSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getMemtableSwitchCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
metric	TokenNameIdentifier
.	TokenNameDOT
memtableSwitchCount	TokenNameIdentifier
.	TokenNameDOT
count	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Memtable	TokenNameIdentifier
getMemtableThreadSafe	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
data	TokenNameIdentifier
.	TokenNameDOT
getMemtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
DataTracker	TokenNameIdentifier
getDataTracker	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
data	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
getSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
data	TokenNameIdentifier
.	TokenNameDOT
getSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Set	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
getUncompactingSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
data	TokenNameIdentifier
.	TokenNameDOT
getUncompactingSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getRecentSSTablesPerReadHistogram	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
recentSSTablesPerRead	TokenNameIdentifier
.	TokenNameDOT
getBuckets	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getSSTablesPerReadHistogram	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
sstablesPerRead	TokenNameIdentifier
.	TokenNameDOT
getBuckets	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getReadCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
readLatency	TokenNameIdentifier
.	TokenNameDOT
latency	TokenNameIdentifier
.	TokenNameDOT
count	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
getRecentReadLatencyMicros	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
readLatency	TokenNameIdentifier
.	TokenNameDOT
getRecentLatency	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getLifetimeReadLatencyHistogramMicros	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
readLatency	TokenNameIdentifier
.	TokenNameDOT
totalLatencyHistogram	TokenNameIdentifier
.	TokenNameDOT
getBuckets	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getRecentReadLatencyHistogramMicros	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
readLatency	TokenNameIdentifier
.	TokenNameDOT
recentLatencyHistogram	TokenNameIdentifier
.	TokenNameDOT
getBuckets	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getTotalReadLatencyMicros	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
readLatency	TokenNameIdentifier
.	TokenNameDOT
totalLatency	TokenNameIdentifier
.	TokenNameDOT
count	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getPendingTasks	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
pendingTasks	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getWriteCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
writeLatency	TokenNameIdentifier
.	TokenNameDOT
latency	TokenNameIdentifier
.	TokenNameDOT
count	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getTotalWriteLatencyMicros	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
writeLatency	TokenNameIdentifier
.	TokenNameDOT
totalLatency	TokenNameIdentifier
.	TokenNameDOT
count	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
getRecentWriteLatencyMicros	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
writeLatency	TokenNameIdentifier
.	TokenNameDOT
getRecentLatency	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getLifetimeWriteLatencyHistogramMicros	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
writeLatency	TokenNameIdentifier
.	TokenNameDOT
totalLatencyHistogram	TokenNameIdentifier
.	TokenNameDOT
getBuckets	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getRecentWriteLatencyHistogramMicros	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
writeLatency	TokenNameIdentifier
.	TokenNameDOT
recentLatencyHistogram	TokenNameIdentifier
.	TokenNameDOT
getBuckets	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ColumnFamily	TokenNameIdentifier
getColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
DecoratedKey	TokenNameIdentifier
key	TokenNameIdentifier
,	TokenNameCOMMA
QueryPath	TokenNameIdentifier
path	TokenNameIdentifier
,	TokenNameCOMMA
ByteBuffer	TokenNameIdentifier
start	TokenNameIdentifier
,	TokenNameCOMMA
ByteBuffer	TokenNameIdentifier
finish	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
reversed	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
limit	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
QueryFilter	TokenNameIdentifier
.	TokenNameDOT
getSliceFilter	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
,	TokenNameCOMMA
path	TokenNameIdentifier
,	TokenNameCOMMA
start	TokenNameIdentifier
,	TokenNameCOMMA
finish	TokenNameIdentifier
,	TokenNameCOMMA
reversed	TokenNameIdentifier
,	TokenNameCOMMA
limit	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ColumnFamily	TokenNameIdentifier
getColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
QueryFilter	TokenNameIdentifier
filter	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
filter	TokenNameIdentifier
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
gcBefore	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
/	TokenNameDIVIDE
1000	TokenNameIntegerLiteral
)	TokenNameRPAREN
-	TokenNameMINUS
metadata	TokenNameIdentifier
.	TokenNameDOT
getGcGraceSeconds	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
ColumnFamily	TokenNameIdentifier
getThroughCache	TokenNameIdentifier
(	TokenNameLPAREN
UUID	TokenNameIdentifier
cfId	TokenNameIdentifier
,	TokenNameCOMMA
QueryFilter	TokenNameIdentifier
filter	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
isRowCacheEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Row cache is not enabled on column family ["	TokenNameStringLiteral
+	TokenNamePLUS
getColumnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
"]"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
RowCacheKey	TokenNameIdentifier
key	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
RowCacheKey	TokenNameIdentifier
(	TokenNameLPAREN
cfId	TokenNameIdentifier
,	TokenNameCOMMA
filter	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
IRowCacheEntry	TokenNameIdentifier
cached	TokenNameIdentifier
=	TokenNameEQUAL
CacheService	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
rowCache	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cached	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cached	TokenNameIdentifier
instanceof	TokenNameinstanceof
RowCacheSentinel	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Tracing	TokenNameIdentifier
.	TokenNameDOT
trace	TokenNameIdentifier
(	TokenNameLPAREN
"Row cache miss (race)"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
getTopLevelColumns	TokenNameIdentifier
(	TokenNameLPAREN
filter	TokenNameIdentifier
,	TokenNameCOMMA
Integer	TokenNameIdentifier
.	TokenNameDOT
MIN_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Tracing	TokenNameIdentifier
.	TokenNameDOT
trace	TokenNameIdentifier
(	TokenNameLPAREN
"Row cache hit"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
)	TokenNameRPAREN
cached	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Tracing	TokenNameIdentifier
.	TokenNameDOT
trace	TokenNameIdentifier
(	TokenNameLPAREN
"Row cache miss"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
RowCacheSentinel	TokenNameIdentifier
sentinel	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
RowCacheSentinel	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
sentinelSuccess	TokenNameIdentifier
=	TokenNameEQUAL
CacheService	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
rowCache	TokenNameIdentifier
.	TokenNameDOT
putIfAbsent	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
,	TokenNameCOMMA
sentinel	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
ColumnFamily	TokenNameIdentifier
data	TokenNameIdentifier
=	TokenNameEQUAL
getTopLevelColumns	TokenNameIdentifier
(	TokenNameLPAREN
QueryFilter	TokenNameIdentifier
.	TokenNameDOT
getIdentityFilter	TokenNameIdentifier
(	TokenNameLPAREN
filter	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
QueryPath	TokenNameIdentifier
(	TokenNameLPAREN
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
Integer	TokenNameIdentifier
.	TokenNameDOT
MIN_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
sentinelSuccess	TokenNameIdentifier
&&	TokenNameAND_AND
data	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
CacheService	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
rowCache	TokenNameIdentifier
.	TokenNameDOT
replace	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
,	TokenNameCOMMA
sentinel	TokenNameIdentifier
,	TokenNameCOMMA
data	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
data	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
sentinelSuccess	TokenNameIdentifier
&&	TokenNameAND_AND
data	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
CacheService	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
rowCache	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
ColumnFamily	TokenNameIdentifier
getColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
QueryFilter	TokenNameIdentifier
filter	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
columnFamily	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
filter	TokenNameIdentifier
.	TokenNameDOT
getColumnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
filter	TokenNameIdentifier
.	TokenNameDOT
getColumnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ColumnFamily	TokenNameIdentifier
result	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
long	TokenNamelong
start	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
nanoTime	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
isRowCacheEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
UUID	TokenNameIdentifier
cfId	TokenNameIdentifier
=	TokenNameEQUAL
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getId	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cfId	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
trace	TokenNameIdentifier
(	TokenNameLPAREN
"no id found for {}.{}"	TokenNameStringLiteral
,	TokenNameCOMMA
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
ColumnFamily	TokenNameIdentifier
cached	TokenNameIdentifier
=	TokenNameEQUAL
getThroughCache	TokenNameIdentifier
(	TokenNameLPAREN
cfId	TokenNameIdentifier
,	TokenNameCOMMA
filter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cached	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
trace	TokenNameIdentifier
(	TokenNameLPAREN
"cached row is empty"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
result	TokenNameIdentifier
=	TokenNameEQUAL
filterColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
cached	TokenNameIdentifier
,	TokenNameCOMMA
filter	TokenNameIdentifier
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
getTopLevelColumns	TokenNameIdentifier
(	TokenNameLPAREN
filter	TokenNameIdentifier
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cf	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
result	TokenNameIdentifier
=	TokenNameEQUAL
cf	TokenNameIdentifier
.	TokenNameDOT
isSuper	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
removeDeleted	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
removeDeletedCF	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
metric	TokenNameIdentifier
.	TokenNameDOT
readLatency	TokenNameIdentifier
.	TokenNameDOT
addNano	TokenNameIdentifier
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
nanoTime	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
start	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
result	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
ColumnFamily	TokenNameIdentifier
filterColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
cached	TokenNameIdentifier
,	TokenNameCOMMA
QueryFilter	TokenNameIdentifier
filter	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
cached	TokenNameIdentifier
.	TokenNameDOT
cloneMeShallow	TokenNameIdentifier
(	TokenNameLPAREN
ArrayBackedSortedColumns	TokenNameIdentifier
.	TokenNameDOT
factory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
filter	TokenNameIdentifier
.	TokenNameDOT
filter	TokenNameIdentifier
.	TokenNameDOT
isReversed	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
OnDiskAtomIterator	TokenNameIdentifier
ci	TokenNameIdentifier
=	TokenNameEQUAL
filter	TokenNameIdentifier
.	TokenNameDOT
getMemtableColumnIterator	TokenNameIdentifier
(	TokenNameLPAREN
cached	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
filter	TokenNameIdentifier
.	TokenNameDOT
collateOnDiskAtom	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
Collections	TokenNameIdentifier
.	TokenNameDOT
singletonList	TokenNameIdentifier
(	TokenNameLPAREN
ci	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
cf	TokenNameIdentifier
.	TokenNameDOT
isSuper	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
removeDeleted	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
removeDeletedCF	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
DataTracker	TokenNameIdentifier
.	TokenNameDOT
View	TokenNameIdentifier
markCurrentViewReferenced	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
{	TokenNameLBRACE
DataTracker	TokenNameIdentifier
.	TokenNameDOT
View	TokenNameIdentifier
currentView	TokenNameIdentifier
=	TokenNameEQUAL
data	TokenNameIdentifier
.	TokenNameDOT
getView	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
acquireReferences	TokenNameIdentifier
(	TokenNameLPAREN
currentView	TokenNameIdentifier
.	TokenNameDOT
sstables	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
currentView	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
markCurrentSSTablesReferenced	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
markCurrentViewReferenced	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
sstables	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ViewFragment	TokenNameIdentifier
markReferenced	TokenNameIdentifier
(	TokenNameLPAREN
DecoratedKey	TokenNameIdentifier
key	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
!	TokenNameNOT
key	TokenNameIdentifier
.	TokenNameDOT
isMinimum	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DataTracker	TokenNameIdentifier
.	TokenNameDOT
View	TokenNameIdentifier
view	TokenNameIdentifier
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
{	TokenNameLBRACE
view	TokenNameIdentifier
=	TokenNameEQUAL
data	TokenNameIdentifier
.	TokenNameDOT
getView	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sstables	TokenNameIdentifier
=	TokenNameEQUAL
view	TokenNameIdentifier
.	TokenNameDOT
intervalTree	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
acquireReferences	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
new	TokenNamenew
ViewFragment	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
,	TokenNameCOMMA
Iterables	TokenNameIdentifier
.	TokenNameDOT
concat	TokenNameIdentifier
(	TokenNameLPAREN
Collections	TokenNameIdentifier
.	TokenNameDOT
singleton	TokenNameIdentifier
(	TokenNameLPAREN
view	TokenNameIdentifier
.	TokenNameDOT
memtable	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
view	TokenNameIdentifier
.	TokenNameDOT
memtablesPendingFlush	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ViewFragment	TokenNameIdentifier
markReferenced	TokenNameIdentifier
(	TokenNameLPAREN
RowPosition	TokenNameIdentifier
startWith	TokenNameIdentifier
,	TokenNameCOMMA
RowPosition	TokenNameIdentifier
stopAt	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
DataTracker	TokenNameIdentifier
.	TokenNameDOT
View	TokenNameIdentifier
view	TokenNameIdentifier
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
{	TokenNameLBRACE
view	TokenNameIdentifier
=	TokenNameEQUAL
data	TokenNameIdentifier
.	TokenNameDOT
getView	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
view	TokenNameIdentifier
.	TokenNameDOT
intervalTree	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
sstables	TokenNameIdentifier
=	TokenNameEQUAL
Collections	TokenNameIdentifier
.	TokenNameDOT
emptyList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
RowPosition	TokenNameIdentifier
stopInTree	TokenNameIdentifier
=	TokenNameEQUAL
stopAt	TokenNameIdentifier
.	TokenNameDOT
isMinimum	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
view	TokenNameIdentifier
.	TokenNameDOT
intervalTree	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
stopAt	TokenNameIdentifier
;	TokenNameSEMICOLON
sstables	TokenNameIdentifier
=	TokenNameEQUAL
view	TokenNameIdentifier
.	TokenNameDOT
intervalTree	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
(	TokenNameLPAREN
Interval	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
RowPosition	TokenNameIdentifier
,	TokenNameCOMMA
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
create	TokenNameIdentifier
(	TokenNameLPAREN
startWith	TokenNameIdentifier
,	TokenNameCOMMA
stopInTree	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
acquireReferences	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
new	TokenNamenew
ViewFragment	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
,	TokenNameCOMMA
Iterables	TokenNameIdentifier
.	TokenNameDOT
concat	TokenNameIdentifier
(	TokenNameLPAREN
Collections	TokenNameIdentifier
.	TokenNameDOT
singleton	TokenNameIdentifier
(	TokenNameLPAREN
view	TokenNameIdentifier
.	TokenNameDOT
memtable	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
view	TokenNameIdentifier
.	TokenNameDOT
memtablesPendingFlush	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
getSSTablesForKey	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
key	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
DecoratedKey	TokenNameIdentifier
dk	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DecoratedKey	TokenNameIdentifier
(	TokenNameLPAREN
partitioner	TokenNameIdentifier
.	TokenNameDOT
getToken	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
.	TokenNameDOT
wrap	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
.	TokenNameDOT
getBytes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
ByteBuffer	TokenNameIdentifier
.	TokenNameDOT
wrap	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
.	TokenNameDOT
getBytes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ViewFragment	TokenNameIdentifier
view	TokenNameIdentifier
=	TokenNameEQUAL
markReferenced	TokenNameIdentifier
(	TokenNameLPAREN
dk	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
files	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstr	TokenNameIdentifier
:	TokenNameCOLON
view	TokenNameIdentifier
.	TokenNameDOT
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
sstr	TokenNameIdentifier
.	TokenNameDOT
getPosition	TokenNameIdentifier
(	TokenNameLPAREN
dk	TokenNameIdentifier
,	TokenNameCOMMA
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
Operator	TokenNameIdentifier
.	TokenNameDOT
EQ	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
files	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
sstr	TokenNameIdentifier
.	TokenNameDOT
getFilename	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
files	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
releaseReferences	TokenNameIdentifier
(	TokenNameLPAREN
view	TokenNameIdentifier
.	TokenNameDOT
sstables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
ColumnFamily	TokenNameIdentifier
getTopLevelColumns	TokenNameIdentifier
(	TokenNameLPAREN
QueryFilter	TokenNameIdentifier
filter	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
gcBefore	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
forCache	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Tracing	TokenNameIdentifier
.	TokenNameDOT
trace	TokenNameIdentifier
(	TokenNameLPAREN
"Executing single-partition query on {}"	TokenNameStringLiteral
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CollationController	TokenNameIdentifier
controller	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CollationController	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
,	TokenNameCOMMA
forCache	TokenNameIdentifier
,	TokenNameCOMMA
filter	TokenNameIdentifier
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ColumnFamily	TokenNameIdentifier
columns	TokenNameIdentifier
=	TokenNameEQUAL
controller	TokenNameIdentifier
.	TokenNameDOT
getTopLevelColumns	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
metric	TokenNameIdentifier
.	TokenNameDOT
updateSSTableIterated	TokenNameIdentifier
(	TokenNameLPAREN
controller	TokenNameIdentifier
.	TokenNameDOT
getSstablesIterated	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
columns	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
abstract	TokenNameabstract
class	TokenNameclass
AbstractScanIterator	TokenNameIdentifier
extends	TokenNameextends
AbstractIterator	TokenNameIdentifier
<	TokenNameLESS
Row	TokenNameIdentifier
>	TokenNameGREATER
implements	TokenNameimplements
CloseableIterator	TokenNameIdentifier
<	TokenNameLESS
Row	TokenNameIdentifier
>	TokenNameGREATER
{	TokenNameLBRACE
public	TokenNamepublic
boolean	TokenNameboolean
needsFiltering	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
AbstractScanIterator	TokenNameIdentifier
getSequentialIterator	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
superColumn	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
AbstractBounds	TokenNameIdentifier
<	TokenNameLESS
RowPosition	TokenNameIdentifier
>	TokenNameGREATER
range	TokenNameIdentifier
,	TokenNameCOMMA
IDiskAtomFilter	TokenNameIdentifier
columnFilter	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
!	TokenNameNOT
(	TokenNameLPAREN
range	TokenNameIdentifier
instanceof	TokenNameinstanceof
Range	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
!	TokenNameNOT
(	TokenNameLPAREN
(	TokenNameLPAREN
Range	TokenNameIdentifier
)	TokenNameRPAREN
range	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
isWrapAround	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
range	TokenNameIdentifier
.	TokenNameDOT
right	TokenNameIdentifier
.	TokenNameDOT
isMinimum	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
range	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
RowPosition	TokenNameIdentifier
startWith	TokenNameIdentifier
=	TokenNameEQUAL
range	TokenNameIdentifier
.	TokenNameDOT
left	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
RowPosition	TokenNameIdentifier
stopAt	TokenNameIdentifier
=	TokenNameEQUAL
range	TokenNameIdentifier
.	TokenNameDOT
right	TokenNameIdentifier
;	TokenNameSEMICOLON
QueryFilter	TokenNameIdentifier
filter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
QueryFilter	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
new	TokenNamenew
QueryPath	TokenNameIdentifier
(	TokenNameLPAREN
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
superColumn	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
columnFilter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
ViewFragment	TokenNameIdentifier
view	TokenNameIdentifier
=	TokenNameEQUAL
markReferenced	TokenNameIdentifier
(	TokenNameLPAREN
startWith	TokenNameIdentifier
,	TokenNameCOMMA
stopAt	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Tracing	TokenNameIdentifier
.	TokenNameDOT
trace	TokenNameIdentifier
(	TokenNameLPAREN
"Executing seq scan across {} sstables for {}"	TokenNameStringLiteral
,	TokenNameCOMMA
view	TokenNameIdentifier
.	TokenNameDOT
sstables	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
range	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
metadata	TokenNameIdentifier
.	TokenNameDOT
getKeyValidator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
final	TokenNamefinal
CloseableIterator	TokenNameIdentifier
<	TokenNameLESS
Row	TokenNameIdentifier
>	TokenNameGREATER
iterator	TokenNameIdentifier
=	TokenNameEQUAL
RowIteratorFactory	TokenNameIdentifier
.	TokenNameDOT
getIterator	TokenNameIdentifier
(	TokenNameLPAREN
view	TokenNameIdentifier
.	TokenNameDOT
memtables	TokenNameIdentifier
,	TokenNameCOMMA
view	TokenNameIdentifier
.	TokenNameDOT
sstables	TokenNameIdentifier
,	TokenNameCOMMA
startWith	TokenNameIdentifier
,	TokenNameCOMMA
stopAt	TokenNameIdentifier
,	TokenNameCOMMA
filter	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
gcBefore	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
/	TokenNameDIVIDE
1000	TokenNameIntegerLiteral
)	TokenNameRPAREN
-	TokenNameMINUS
metadata	TokenNameIdentifier
.	TokenNameDOT
getGcGraceSeconds	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
AbstractScanIterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
protected	TokenNameprotected
Row	TokenNameIdentifier
computeNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
iterator	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
endOfData	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Row	TokenNameIdentifier
current	TokenNameIdentifier
=	TokenNameEQUAL
iterator	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DecoratedKey	TokenNameIdentifier
key	TokenNameIdentifier
=	TokenNameEQUAL
current	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
stopAt	TokenNameIdentifier
.	TokenNameDOT
isMinimum	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
stopAt	TokenNameIdentifier
.	TokenNameDOT
compareTo	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
)	TokenNameRPAREN
<	TokenNameLESS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
endOfData	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
range	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
computeNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
trace	TokenNameIdentifier
(	TokenNameLPAREN
"scanned {}"	TokenNameStringLiteral
,	TokenNameCOMMA
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
current	TokenNameIdentifier
.	TokenNameDOT
cf	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
current	TokenNameIdentifier
.	TokenNameDOT
cf	TokenNameIdentifier
.	TokenNameDOT
isSuper	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
new	TokenNamenew
Row	TokenNameIdentifier
(	TokenNameLPAREN
current	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
,	TokenNameCOMMA
removeDeleted	TokenNameIdentifier
(	TokenNameLPAREN
current	TokenNameIdentifier
.	TokenNameDOT
cf	TokenNameIdentifier
,	TokenNameCOMMA
gcBefore	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
current	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
releaseReferences	TokenNameIdentifier
(	TokenNameLPAREN
view	TokenNameIdentifier
.	TokenNameDOT
sstables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
iterator	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RuntimeException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
releaseReferences	TokenNameIdentifier
(	TokenNameLPAREN
view	TokenNameIdentifier
.	TokenNameDOT
sstables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
e	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
Row	TokenNameIdentifier
>	TokenNameGREATER
getRangeSlice	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
superColumn	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
AbstractBounds	TokenNameIdentifier
<	TokenNameLESS
RowPosition	TokenNameIdentifier
>	TokenNameGREATER
range	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
maxResults	TokenNameIdentifier
,	TokenNameCOMMA
IDiskAtomFilter	TokenNameIdentifier
columnFilter	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
IndexExpression	TokenNameIdentifier
>	TokenNameGREATER
rowFilter	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getRangeSlice	TokenNameIdentifier
(	TokenNameLPAREN
superColumn	TokenNameIdentifier
,	TokenNameCOMMA
range	TokenNameIdentifier
,	TokenNameCOMMA
maxResults	TokenNameIdentifier
,	TokenNameCOMMA
columnFilter	TokenNameIdentifier
,	TokenNameCOMMA
rowFilter	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
Row	TokenNameIdentifier
>	TokenNameGREATER
getRangeSlice	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
superColumn	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
AbstractBounds	TokenNameIdentifier
<	TokenNameLESS
RowPosition	TokenNameIdentifier
>	TokenNameGREATER
range	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
maxResults	TokenNameIdentifier
,	TokenNameCOMMA
IDiskAtomFilter	TokenNameIdentifier
columnFilter	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
IndexExpression	TokenNameIdentifier
>	TokenNameGREATER
rowFilter	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
countCQL3Rows	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
isPaging	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
filter	TokenNameIdentifier
(	TokenNameLPAREN
getSequentialIterator	TokenNameIdentifier
(	TokenNameLPAREN
superColumn	TokenNameIdentifier
,	TokenNameCOMMA
range	TokenNameIdentifier
,	TokenNameCOMMA
columnFilter	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
ExtendedFilter	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
,	TokenNameCOMMA
columnFilter	TokenNameIdentifier
,	TokenNameCOMMA
rowFilter	TokenNameIdentifier
,	TokenNameCOMMA
maxResults	TokenNameIdentifier
,	TokenNameCOMMA
countCQL3Rows	TokenNameIdentifier
,	TokenNameCOMMA
isPaging	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
Row	TokenNameIdentifier
>	TokenNameGREATER
search	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
IndexExpression	TokenNameIdentifier
>	TokenNameGREATER
clause	TokenNameIdentifier
,	TokenNameCOMMA
AbstractBounds	TokenNameIdentifier
<	TokenNameLESS
RowPosition	TokenNameIdentifier
>	TokenNameGREATER
range	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
maxResults	TokenNameIdentifier
,	TokenNameCOMMA
IDiskAtomFilter	TokenNameIdentifier
dataFilter	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
search	TokenNameIdentifier
(	TokenNameLPAREN
clause	TokenNameIdentifier
,	TokenNameCOMMA
range	TokenNameIdentifier
,	TokenNameCOMMA
maxResults	TokenNameIdentifier
,	TokenNameCOMMA
dataFilter	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
Row	TokenNameIdentifier
>	TokenNameGREATER
search	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
IndexExpression	TokenNameIdentifier
>	TokenNameGREATER
clause	TokenNameIdentifier
,	TokenNameCOMMA
AbstractBounds	TokenNameIdentifier
<	TokenNameLESS
RowPosition	TokenNameIdentifier
>	TokenNameGREATER
range	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
maxResults	TokenNameIdentifier
,	TokenNameCOMMA
IDiskAtomFilter	TokenNameIdentifier
dataFilter	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
countCQL3Rows	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Tracing	TokenNameIdentifier
.	TokenNameDOT
trace	TokenNameIdentifier
(	TokenNameLPAREN
"Executing indexed scan for {}"	TokenNameStringLiteral
,	TokenNameCOMMA
range	TokenNameIdentifier
.	TokenNameDOT
getString	TokenNameIdentifier
(	TokenNameLPAREN
metadata	TokenNameIdentifier
.	TokenNameDOT
getKeyValidator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
indexManager	TokenNameIdentifier
.	TokenNameDOT
search	TokenNameIdentifier
(	TokenNameLPAREN
clause	TokenNameIdentifier
,	TokenNameCOMMA
range	TokenNameIdentifier
,	TokenNameCOMMA
maxResults	TokenNameIdentifier
,	TokenNameCOMMA
dataFilter	TokenNameIdentifier
,	TokenNameCOMMA
countCQL3Rows	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
Row	TokenNameIdentifier
>	TokenNameGREATER
filter	TokenNameIdentifier
(	TokenNameLPAREN
AbstractScanIterator	TokenNameIdentifier
rowIterator	TokenNameIdentifier
,	TokenNameCOMMA
ExtendedFilter	TokenNameIdentifier
filter	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
trace	TokenNameIdentifier
(	TokenNameLPAREN
"Filtering {} for rows matching {}"	TokenNameStringLiteral
,	TokenNameCOMMA
rowIterator	TokenNameIdentifier
,	TokenNameCOMMA
filter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Row	TokenNameIdentifier
>	TokenNameGREATER
rows	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Row	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
columnsCount	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
total	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
matched	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
while	TokenNamewhile
(	TokenNameLPAREN
rowIterator	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
rows	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
<	TokenNameLESS
filter	TokenNameIdentifier
.	TokenNameDOT
maxRows	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
columnsCount	TokenNameIdentifier
<	TokenNameLESS
filter	TokenNameIdentifier
.	TokenNameDOT
maxColumns	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Row	TokenNameIdentifier
rawRow	TokenNameIdentifier
=	TokenNameEQUAL
rowIterator	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
total	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
ColumnFamily	TokenNameIdentifier
data	TokenNameIdentifier
=	TokenNameEQUAL
rawRow	TokenNameIdentifier
.	TokenNameDOT
cf	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
rowIterator	TokenNameIdentifier
.	TokenNameDOT
needsFiltering	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
IDiskAtomFilter	TokenNameIdentifier
extraFilter	TokenNameIdentifier
=	TokenNameEQUAL
filter	TokenNameIdentifier
.	TokenNameDOT
getExtraFilter	TokenNameIdentifier
(	TokenNameLPAREN
data	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
extraFilter	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
QueryPath	TokenNameIdentifier
path	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
QueryPath	TokenNameIdentifier
(	TokenNameLPAREN
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
filter	TokenNameIdentifier
.	TokenNameDOT
cfs	TokenNameIdentifier
.	TokenNameDOT
getColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
QueryFilter	TokenNameIdentifier
(	TokenNameLPAREN
rawRow	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
,	TokenNameCOMMA
path	TokenNameIdentifier
,	TokenNameCOMMA
extraFilter	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cf	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
data	TokenNameIdentifier
.	TokenNameDOT
addAll	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
HeapAllocator	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
filter	TokenNameIdentifier
.	TokenNameDOT
isSatisfiedBy	TokenNameIdentifier
(	TokenNameLPAREN
data	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
continue	TokenNamecontinue
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
trace	TokenNameIdentifier
(	TokenNameLPAREN
"{} satisfies all filter expressions"	TokenNameStringLiteral
,	TokenNameCOMMA
data	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
data	TokenNameIdentifier
=	TokenNameEQUAL
filter	TokenNameIdentifier
.	TokenNameDOT
prune	TokenNameIdentifier
(	TokenNameLPAREN
data	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
rows	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Row	TokenNameIdentifier
(	TokenNameLPAREN
rawRow	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
,	TokenNameCOMMA
data	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
matched	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
data	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
columnsCount	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
filter	TokenNameIdentifier
.	TokenNameDOT
lastCounted	TokenNameIdentifier
(	TokenNameLPAREN
data	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
filter	TokenNameIdentifier
.	TokenNameDOT
updateFilter	TokenNameIdentifier
(	TokenNameLPAREN
columnsCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
rows	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
rowIterator	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Tracing	TokenNameIdentifier
.	TokenNameDOT
trace	TokenNameIdentifier
(	TokenNameLPAREN
"Scanned {} rows and matched {}"	TokenNameStringLiteral
,	TokenNameCOMMA
total	TokenNameIdentifier
,	TokenNameCOMMA
matched	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
IOException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
getComparator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metadata	TokenNameIdentifier
.	TokenNameDOT
comparator	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
snapshotWithoutFlush	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
snapshotName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
ColumnFamilyStore	TokenNameIdentifier
cfs	TokenNameIdentifier
:	TokenNameCOLON
concatWithIndexes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
DataTracker	TokenNameIdentifier
.	TokenNameDOT
View	TokenNameIdentifier
currentView	TokenNameIdentifier
=	TokenNameEQUAL
cfs	TokenNameIdentifier
.	TokenNameDOT
markCurrentViewReferenced	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
ssTable	TokenNameIdentifier
:	TokenNameCOLON
currentView	TokenNameIdentifier
.	TokenNameDOT
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
File	TokenNameIdentifier
snapshotDirectory	TokenNameIdentifier
=	TokenNameEQUAL
Directories	TokenNameIdentifier
.	TokenNameDOT
getSnapshotDirectory	TokenNameIdentifier
(	TokenNameLPAREN
ssTable	TokenNameIdentifier
.	TokenNameDOT
descriptor	TokenNameIdentifier
,	TokenNameCOMMA
snapshotName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ssTable	TokenNameIdentifier
.	TokenNameDOT
createLinks	TokenNameIdentifier
(	TokenNameLPAREN
snapshotDirectory	TokenNameIdentifier
.	TokenNameDOT
getPath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
isDebugEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"Snapshot for "	TokenNameStringLiteral
+	TokenNamePLUS
table	TokenNameIdentifier
+	TokenNamePLUS
" keyspace data file "	TokenNameStringLiteral
+	TokenNamePLUS
ssTable	TokenNameIdentifier
.	TokenNameDOT
getFilename	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
" created in "	TokenNameStringLiteral
+	TokenNamePLUS
snapshotDirectory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
cfs	TokenNameIdentifier
.	TokenNameDOT
compactionStrategy	TokenNameIdentifier
instanceof	TokenNameinstanceof
LeveledCompactionStrategy	TokenNameIdentifier
)	TokenNameRPAREN
cfs	TokenNameIdentifier
.	TokenNameDOT
directories	TokenNameIdentifier
.	TokenNameDOT
snapshotLeveledManifest	TokenNameIdentifier
(	TokenNameLPAREN
snapshotName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
releaseReferences	TokenNameIdentifier
(	TokenNameLPAREN
currentView	TokenNameIdentifier
.	TokenNameDOT
sstables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
getSnapshotSSTableReader	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tag	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Map	TokenNameIdentifier
<	TokenNameLESS
Descriptor	TokenNameIdentifier
,	TokenNameCOMMA
Set	TokenNameIdentifier
<	TokenNameLESS
Component	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
snapshots	TokenNameIdentifier
=	TokenNameEQUAL
directories	TokenNameIdentifier
.	TokenNameDOT
sstableLister	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
snapshots	TokenNameIdentifier
(	TokenNameLPAREN
tag	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
list	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
readers	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
snapshots	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
Descriptor	TokenNameIdentifier
,	TokenNameCOMMA
Set	TokenNameIdentifier
<	TokenNameLESS
Component	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
entries	TokenNameIdentifier
:	TokenNameCOLON
snapshots	TokenNameIdentifier
.	TokenNameDOT
entrySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
readers	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
.	TokenNameDOT
open	TokenNameIdentifier
(	TokenNameLPAREN
entries	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
entries	TokenNameIdentifier
.	TokenNameDOT
getValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
metadata	TokenNameIdentifier
,	TokenNameCOMMA
partitioner	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
readers	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
snapshot	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
snapshotName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
forceBlockingFlush	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ExecutionException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
InterruptedException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
AssertionError	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
snapshotWithoutFlush	TokenNameIdentifier
(	TokenNameLPAREN
snapshotName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
snapshotExists	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
snapshotName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
directories	TokenNameIdentifier
.	TokenNameDOT
snapshotExists	TokenNameIdentifier
(	TokenNameLPAREN
snapshotName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getSnapshotCreationTime	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
snapshotName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
directories	TokenNameIdentifier
.	TokenNameDOT
snapshotCreationTime	TokenNameIdentifier
(	TokenNameLPAREN
snapshotName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
clearSnapshot	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
snapshotName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
directories	TokenNameIdentifier
.	TokenNameDOT
clearSnapshot	TokenNameIdentifier
(	TokenNameLPAREN
snapshotName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
hasUnreclaimedSpace	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getLiveDiskSpaceUsed	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
<	TokenNameLESS
getTotalDiskSpaceUsed	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getTotalDiskSpaceUsed	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
totalDiskSpaceUsed	TokenNameIdentifier
.	TokenNameDOT
count	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getLiveDiskSpaceUsed	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
liveDiskSpaceUsed	TokenNameIdentifier
.	TokenNameDOT
count	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getLiveSSTableCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
liveSSTableCount	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ColumnFamily	TokenNameIdentifier
getRawCachedRow	TokenNameIdentifier
(	TokenNameLPAREN
DecoratedKey	TokenNameIdentifier
key	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
metadata	TokenNameIdentifier
.	TokenNameDOT
cfId	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
IRowCacheEntry	TokenNameIdentifier
cached	TokenNameIdentifier
=	TokenNameEQUAL
getCachedRowInternal	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
RowCacheKey	TokenNameIdentifier
(	TokenNameLPAREN
metadata	TokenNameIdentifier
.	TokenNameDOT
cfId	TokenNameIdentifier
,	TokenNameCOMMA
key	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
cached	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
cached	TokenNameIdentifier
instanceof	TokenNameinstanceof
RowCacheSentinel	TokenNameIdentifier
?	TokenNameQUESTION
null	TokenNamenull
:	TokenNameCOLON
(	TokenNameLPAREN
ColumnFamily	TokenNameIdentifier
)	TokenNameRPAREN
cached	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
IRowCacheEntry	TokenNameIdentifier
getCachedRowInternal	TokenNameIdentifier
(	TokenNameLPAREN
RowCacheKey	TokenNameIdentifier
key	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
CacheService	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
rowCache	TokenNameIdentifier
.	TokenNameDOT
getCapacity	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
?	TokenNameQUESTION
null	TokenNamenull
:	TokenNameCOLON
CacheService	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
rowCache	TokenNameIdentifier
.	TokenNameDOT
getInternal	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
containsCachedRow	TokenNameIdentifier
(	TokenNameLPAREN
DecoratedKey	TokenNameIdentifier
key	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
CacheService	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
rowCache	TokenNameIdentifier
.	TokenNameDOT
getCapacity	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
&&	TokenNameAND_AND
CacheService	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
rowCache	TokenNameIdentifier
.	TokenNameDOT
containsKey	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
RowCacheKey	TokenNameIdentifier
(	TokenNameLPAREN
metadata	TokenNameIdentifier
.	TokenNameDOT
cfId	TokenNameIdentifier
,	TokenNameCOMMA
key	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
invalidateCachedRow	TokenNameIdentifier
(	TokenNameLPAREN
RowCacheKey	TokenNameIdentifier
key	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
CacheService	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
rowCache	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
invalidateCachedRow	TokenNameIdentifier
(	TokenNameLPAREN
DecoratedKey	TokenNameIdentifier
key	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
UUID	TokenNameIdentifier
cfId	TokenNameIdentifier
=	TokenNameEQUAL
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getId	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
.	TokenNameDOT
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cfId	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
invalidateCachedRow	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
RowCacheKey	TokenNameIdentifier
(	TokenNameLPAREN
cfId	TokenNameIdentifier
,	TokenNameCOMMA
key	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
forceMajorCompaction	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
InterruptedException	TokenNameIdentifier
,	TokenNameCOMMA
ExecutionException	TokenNameIdentifier
{	TokenNameLBRACE
CompactionManager	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
performMaximal	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Iterable	TokenNameIdentifier
<	TokenNameLESS
ColumnFamilyStore	TokenNameIdentifier
>	TokenNameGREATER
all	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Iterable	TokenNameIdentifier
<	TokenNameLESS
ColumnFamilyStore	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
stores	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Iterable	TokenNameIdentifier
<	TokenNameLESS
ColumnFamilyStore	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
(	TokenNameLPAREN
Schema	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
getTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Table	TokenNameIdentifier
table	TokenNameIdentifier
:	TokenNameCOLON
Table	TokenNameIdentifier
.	TokenNameDOT
all	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
stores	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
.	TokenNameDOT
getColumnFamilyStores	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
Iterables	TokenNameIdentifier
.	TokenNameDOT
concat	TokenNameIdentifier
(	TokenNameLPAREN
stores	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
List	TokenNameIdentifier
<	TokenNameLESS
ColumnFamilyStore	TokenNameIdentifier
>	TokenNameGREATER
allUserDefined	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
ColumnFamilyStore	TokenNameIdentifier
>	TokenNameGREATER
cfses	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
ColumnFamilyStore	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Table	TokenNameIdentifier
table	TokenNameIdentifier
:	TokenNameCOLON
Sets	TokenNameIdentifier
.	TokenNameDOT
difference	TokenNameIdentifier
(	TokenNameLPAREN
ImmutableSet	TokenNameIdentifier
.	TokenNameDOT
copyOf	TokenNameIdentifier
(	TokenNameLPAREN
Table	TokenNameIdentifier
.	TokenNameDOT
all	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
ImmutableSet	TokenNameIdentifier
.	TokenNameDOT
of	TokenNameIdentifier
(	TokenNameLPAREN
Table	TokenNameIdentifier
.	TokenNameDOT
open	TokenNameIdentifier
(	TokenNameLPAREN
Table	TokenNameIdentifier
.	TokenNameDOT
SYSTEM_KS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
cfses	TokenNameIdentifier
.	TokenNameDOT
addAll	TokenNameIdentifier
(	TokenNameLPAREN
table	TokenNameIdentifier
.	TokenNameDOT
getColumnFamilyStores	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
cfses	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Iterable	TokenNameIdentifier
<	TokenNameLESS
DecoratedKey	TokenNameIdentifier
>	TokenNameGREATER
keySamples	TokenNameIdentifier
(	TokenNameLPAREN
Range	TokenNameIdentifier
<	TokenNameLESS
Token	TokenNameIdentifier
>	TokenNameGREATER
range	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
=	TokenNameEQUAL
getSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Iterable	TokenNameIdentifier
<	TokenNameLESS
DecoratedKey	TokenNameIdentifier
>	TokenNameGREATER
[	TokenNameLBRACKET
]	TokenNameRBRACKET
samples	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Iterable	TokenNameIdentifier
[	TokenNameLBRACKET
sstables	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
samples	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
sstable	TokenNameIdentifier
.	TokenNameDOT
getKeySamples	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
Iterables	TokenNameIdentifier
.	TokenNameDOT
concat	TokenNameIdentifier
(	TokenNameLPAREN
samples	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
clearUnsafe	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
ColumnFamilyStore	TokenNameIdentifier
cfs	TokenNameIdentifier
:	TokenNameCOLON
concatWithIndexes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
cfs	TokenNameIdentifier
.	TokenNameDOT
data	TokenNameIdentifier
.	TokenNameDOT
init	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Future	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
truncate	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
ExecutionException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"truncating {}"	TokenNameStringLiteral
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
DatabaseDescriptor	TokenNameIdentifier
.	TokenNameDOT
isAutoSnapshot	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
forceBlockingFlush	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
long	TokenNamelong
starttime	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
starttime	TokenNameIdentifier
)	TokenNameRPAREN
<	TokenNameLESS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
Thread	TokenNameIdentifier
.	TokenNameDOT
sleep	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
InterruptedException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
AssertionError	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Table	TokenNameIdentifier
.	TokenNameDOT
switchLock	TokenNameIdentifier
.	TokenNameDOT
writeLock	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
lock	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
ColumnFamilyStore	TokenNameIdentifier
cfs	TokenNameIdentifier
:	TokenNameCOLON
concatWithIndexes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Memtable	TokenNameIdentifier
mt	TokenNameIdentifier
=	TokenNameEQUAL
cfs	TokenNameIdentifier
.	TokenNameDOT
getMemtableThreadSafe	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
mt	TokenNameIdentifier
.	TokenNameDOT
isClean	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
mt	TokenNameIdentifier
.	TokenNameDOT
cfs	TokenNameIdentifier
.	TokenNameDOT
data	TokenNameIdentifier
.	TokenNameDOT
renewMemtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
Table	TokenNameIdentifier
.	TokenNameDOT
switchLock	TokenNameIdentifier
.	TokenNameDOT
writeLock	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
unlock	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
long	TokenNamelong
truncatedAt	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
DatabaseDescriptor	TokenNameIdentifier
.	TokenNameDOT
isAutoSnapshot	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
snapshot	TokenNameIdentifier
(	TokenNameLPAREN
Table	TokenNameIdentifier
.	TokenNameDOT
getTimestampedSnapshotName	TokenNameIdentifier
(	TokenNameLPAREN
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
CompactionManager	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
submitTruncate	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
,	TokenNameCOMMA
truncatedAt	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getBloomFilterFalsePositives	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
bloomFilterFalsePositives	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getRecentBloomFilterFalsePositives	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
recentBloomFilterFalsePositives	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
getBloomFilterFalseRatio	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
bloomFilterFalseRatio	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
getRecentBloomFilterFalseRatio	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
recentBloomFilterFalseRatio	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getBloomFilterDiskSpaceUsed	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
bloomFilterDiskSpaceUsed	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"CFS("	TokenNameStringLiteral
+	TokenNamePLUS
"Keyspace='"	TokenNameStringLiteral
+	TokenNamePLUS
table	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
+	TokenNamePLUS
'\''	TokenNameCharacterLiteral
+	TokenNamePLUS
", ColumnFamily='"	TokenNameStringLiteral
+	TokenNamePLUS
columnFamily	TokenNameIdentifier
+	TokenNamePLUS
'\''	TokenNameCharacterLiteral
+	TokenNamePLUS
')'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
disableAutoCompaction	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
minCompactionThreshold	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
maxCompactionThreshold	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
enableAutoCompaction	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
minCompactionThreshold	TokenNameIdentifier
.	TokenNameDOT
reset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
maxCompactionThreshold	TokenNameIdentifier
.	TokenNameDOT
reset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
AbstractCompactionStrategy	TokenNameIdentifier
getCompactionStrategy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
compactionStrategy	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setCompactionThresholds	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
minThreshold	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
maxThreshold	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
validateCompactionThresholds	TokenNameIdentifier
(	TokenNameLPAREN
minThreshold	TokenNameIdentifier
,	TokenNameCOMMA
maxThreshold	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
minCompactionThreshold	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
minThreshold	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
maxCompactionThreshold	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
maxThreshold	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
compactionStrategy	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
CompactionManager	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
submitBackground	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getMinimumCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
minCompactionThreshold	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setMinimumCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
minCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
validateCompactionThresholds	TokenNameIdentifier
(	TokenNameLPAREN
minCompactionThreshold	TokenNameIdentifier
,	TokenNameCOMMA
maxCompactionThreshold	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
minCompactionThreshold	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
minCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getMaximumCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
maxCompactionThreshold	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setMaximumCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
maxCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
validateCompactionThresholds	TokenNameIdentifier
(	TokenNameLPAREN
minCompactionThreshold	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
maxCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
maxCompactionThreshold	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
maxCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
validateCompactionThresholds	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
minThreshold	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
maxThreshold	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
minThreshold	TokenNameIdentifier
>	TokenNameGREATER
maxThreshold	TokenNameIdentifier
&&	TokenNameAND_AND
maxThreshold	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"The min_compaction_threshold cannot be larger than the max_compaction_threshold. "	TokenNameStringLiteral
+	TokenNamePLUS
"Min is '%d', Max is '%d'."	TokenNameStringLiteral
,	TokenNameCOMMA
minThreshold	TokenNameIdentifier
,	TokenNameCOMMA
maxThreshold	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isCompactionDisabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getMinimumCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
<=	TokenNameLESS_EQUAL
0	TokenNameIntegerLiteral
||	TokenNameOR_OR
getMaximumCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
<=	TokenNameLESS_EQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
estimateKeys	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
data	TokenNameIdentifier
.	TokenNameDOT
estimatedKeys	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getEstimatedRowSizeHistogram	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
estimatedRowSizeHistogram	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getEstimatedColumnCountHistogram	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
estimatedColumnCountHistogram	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
getCompressionRatio	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
metric	TokenNameIdentifier
.	TokenNameDOT
compressionRatio	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
partitioner	TokenNameIdentifier
instanceof	TokenNameinstanceof
LocalPartitioner	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
ByteBuffer	TokenNameIdentifier
intern	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ByteBuffer	TokenNameIdentifier
internedName	TokenNameIdentifier
=	TokenNameEQUAL
internedNames	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
internedName	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
internedName	TokenNameIdentifier
=	TokenNameEQUAL
ByteBufferUtil	TokenNameIdentifier
.	TokenNameDOT
clone	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ByteBuffer	TokenNameIdentifier
concurrentName	TokenNameIdentifier
=	TokenNameEQUAL
internedNames	TokenNameIdentifier
.	TokenNameDOT
putIfAbsent	TokenNameIdentifier
(	TokenNameLPAREN
internedName	TokenNameIdentifier
,	TokenNameCOMMA
internedName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
concurrentName	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
internedName	TokenNameIdentifier
=	TokenNameEQUAL
concurrentName	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
internedName	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ByteBuffer	TokenNameIdentifier
internOrCopy	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
name	TokenNameIdentifier
,	TokenNameCOMMA
Allocator	TokenNameIdentifier
allocator	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
internedNames	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
INTERN_CUTOFF	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
allocator	TokenNameIdentifier
.	TokenNameDOT
clone	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
intern	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ByteBuffer	TokenNameIdentifier
maybeIntern	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
internedNames	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
INTERN_CUTOFF	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
return	TokenNamereturn
intern	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
SSTableWriter	TokenNameIdentifier
createCompactionWriter	TokenNameIdentifier
(	TokenNameLPAREN
long	TokenNamelong
estimatedRows	TokenNameIdentifier
,	TokenNameCOMMA
File	TokenNameIdentifier
location	TokenNameIdentifier
,	TokenNameCOMMA
Collection	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ReplayPosition	TokenNameIdentifier
rp	TokenNameIdentifier
=	TokenNameEQUAL
ReplayPosition	TokenNameIdentifier
.	TokenNameDOT
getReplayPosition	TokenNameIdentifier
(	TokenNameLPAREN
sstables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SSTableMetadata	TokenNameIdentifier
.	TokenNameDOT
Collector	TokenNameIdentifier
sstableMetadataCollector	TokenNameIdentifier
=	TokenNameEQUAL
SSTableMetadata	TokenNameIdentifier
.	TokenNameDOT
createCollector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
replayPosition	TokenNameIdentifier
(	TokenNameLPAREN
rp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
sstables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
sstableMetadataCollector	TokenNameIdentifier
.	TokenNameDOT
updateMaxTimestamp	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
.	TokenNameDOT
getMaxTimestamp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sstableMetadataCollector	TokenNameIdentifier
.	TokenNameDOT
addAncestor	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
.	TokenNameDOT
descriptor	TokenNameIdentifier
.	TokenNameDOT
generation	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Integer	TokenNameIdentifier
i	TokenNameIdentifier
:	TokenNameCOLON
sstable	TokenNameIdentifier
.	TokenNameDOT
getAncestors	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
.	TokenNameDOT
descriptor	TokenNameIdentifier
.	TokenNameDOT
withGeneration	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
filenameFor	TokenNameIdentifier
(	TokenNameLPAREN
Component	TokenNameIdentifier
.	TokenNameDOT
DATA	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
exists	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
sstableMetadataCollector	TokenNameIdentifier
.	TokenNameDOT
addAncestor	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
new	TokenNamenew
SSTableWriter	TokenNameIdentifier
(	TokenNameLPAREN
getTempSSTablePath	TokenNameIdentifier
(	TokenNameLPAREN
location	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
estimatedRows	TokenNameIdentifier
,	TokenNameCOMMA
metadata	TokenNameIdentifier
,	TokenNameCOMMA
partitioner	TokenNameIdentifier
,	TokenNameCOMMA
sstableMetadataCollector	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Iterable	TokenNameIdentifier
<	TokenNameLESS
ColumnFamilyStore	TokenNameIdentifier
>	TokenNameGREATER
concatWithIndexes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
Iterables	TokenNameIdentifier
.	TokenNameDOT
concat	TokenNameIdentifier
(	TokenNameLPAREN
indexManager	TokenNameIdentifier
.	TokenNameDOT
getIndexesBackedByCfs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
Collections	TokenNameIdentifier
.	TokenNameDOT
singleton	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Set	TokenNameIdentifier
<	TokenNameLESS
Memtable	TokenNameIdentifier
>	TokenNameGREATER
getMemtablesPendingFlush	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
data	TokenNameIdentifier
.	TokenNameDOT
getMemtablesPendingFlush	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
getBuiltIndexes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
indexManager	TokenNameIdentifier
.	TokenNameDOT
getBuiltIndexes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getUnleveledSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
this	TokenNamethis
.	TokenNameDOT
compactionStrategy	TokenNameIdentifier
instanceof	TokenNameinstanceof
LeveledCompactionStrategy	TokenNameIdentifier
?	TokenNameQUESTION
(	TokenNameLPAREN
(	TokenNameLPAREN
LeveledCompactionStrategy	TokenNameIdentifier
)	TokenNameRPAREN
this	TokenNamethis
.	TokenNameDOT
compactionStrategy	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getLevelSize	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
:	TokenNameCOLON
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getSSTableCountPerLevel	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
compactionStrategy	TokenNameIdentifier
instanceof	TokenNameinstanceof
LeveledCompactionStrategy	TokenNameIdentifier
?	TokenNameQUESTION
(	TokenNameLPAREN
(	TokenNameLPAREN
LeveledCompactionStrategy	TokenNameIdentifier
)	TokenNameRPAREN
compactionStrategy	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getAllLevelSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
ViewFragment	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
Iterable	TokenNameIdentifier
<	TokenNameLESS
Memtable	TokenNameIdentifier
>	TokenNameGREATER
memtables	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
ViewFragment	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
sstables	TokenNameIdentifier
,	TokenNameCOMMA
Iterable	TokenNameIdentifier
<	TokenNameLESS
Memtable	TokenNameIdentifier
>	TokenNameGREATER
memtables	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
sstables	TokenNameIdentifier
=	TokenNameEQUAL
sstables	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
memtables	TokenNameIdentifier
=	TokenNameEQUAL
memtables	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
oldestUnflushedMemtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
DataTracker	TokenNameIdentifier
.	TokenNameDOT
View	TokenNameIdentifier
view	TokenNameIdentifier
=	TokenNameEQUAL
data	TokenNameIdentifier
.	TokenNameDOT
getView	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
long	TokenNamelong
oldest	TokenNameIdentifier
=	TokenNameEQUAL
view	TokenNameIdentifier
.	TokenNameDOT
memtable	TokenNameIdentifier
.	TokenNameDOT
creationTime	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Memtable	TokenNameIdentifier
memtable	TokenNameIdentifier
:	TokenNameCOLON
view	TokenNameIdentifier
.	TokenNameDOT
memtablesPendingFlush	TokenNameIdentifier
)	TokenNameRPAREN
oldest	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
min	TokenNameIdentifier
(	TokenNameLPAREN
oldest	TokenNameIdentifier
,	TokenNameCOMMA
memtable	TokenNameIdentifier
.	TokenNameDOT
creationTime	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
oldest	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
DataTracker	TokenNameIdentifier
.	TokenNameDOT
View	TokenNameIdentifier
view	TokenNameIdentifier
=	TokenNameEQUAL
data	TokenNameIdentifier
.	TokenNameDOT
getView	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
view	TokenNameIdentifier
.	TokenNameDOT
sstables	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
view	TokenNameIdentifier
.	TokenNameDOT
memtable	TokenNameIdentifier
.	TokenNameDOT
getOperations	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
&&	TokenNameAND_AND
view	TokenNameIdentifier
.	TokenNameDOT
memtablesPendingFlush	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
boolean	TokenNameboolean
isRowCacheEnabled	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
!	TokenNameNOT
(	TokenNameLPAREN
metadata	TokenNameIdentifier
.	TokenNameDOT
getCaching	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
Caching	TokenNameIdentifier
.	TokenNameDOT
NONE	TokenNameIdentifier
||	TokenNameOR_OR
metadata	TokenNameIdentifier
.	TokenNameDOT
getCaching	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
Caching	TokenNameIdentifier
.	TokenNameDOT
KEYS_ONLY	TokenNameIdentifier
||	TokenNameOR_OR
CacheService	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
.	TokenNameDOT
rowCache	TokenNameIdentifier
.	TokenNameDOT
getCapacity	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ReplayPosition	TokenNameIdentifier
discardSSTables	TokenNameIdentifier
(	TokenNameLPAREN
long	TokenNamelong
truncatedAt	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
truncatedSSTables	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
SSTableReader	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
SSTableReader	TokenNameIdentifier
sstable	TokenNameIdentifier
:	TokenNameCOLON
getSSTables	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
sstable	TokenNameIdentifier
.	TokenNameDOT
newSince	TokenNameIdentifier
(	TokenNameLPAREN
truncatedAt	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
truncatedSSTables	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
sstable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
truncatedSSTables	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
ReplayPosition	TokenNameIdentifier
.	TokenNameDOT
NONE	TokenNameIdentifier
;	TokenNameSEMICOLON
markCompacted	TokenNameIdentifier
(	TokenNameLPAREN
truncatedSSTables	TokenNameIdentifier
,	TokenNameCOMMA
OperationType	TokenNameIdentifier
.	TokenNameDOT
UNKNOWN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
ReplayPosition	TokenNameIdentifier
.	TokenNameDOT
getReplayPosition	TokenNameIdentifier
(	TokenNameLPAREN
truncatedSSTables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
