package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
exceptions	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
HashMap	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Map	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
transport	TokenNameIdentifier
.	TokenNameDOT
ProtocolException	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
enum	TokenNameenum
ExceptionCode	TokenNameIdentifier
{	TokenNameLBRACE
SERVER_ERROR	TokenNameIdentifier
(	TokenNameLPAREN
0x0000	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
PROTOCOL_ERROR	TokenNameIdentifier
(	TokenNameLPAREN
0x000A	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
BAD_CREDENTIALS	TokenNameIdentifier
(	TokenNameLPAREN
0x0100	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
UNAVAILABLE	TokenNameIdentifier
(	TokenNameLPAREN
0x1000	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
OVERLOADED	TokenNameIdentifier
(	TokenNameLPAREN
0x1001	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
IS_BOOTSTRAPPING	TokenNameIdentifier
(	TokenNameLPAREN
0x1002	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
TRUNCATE_ERROR	TokenNameIdentifier
(	TokenNameLPAREN
0x1003	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
WRITE_TIMEOUT	TokenNameIdentifier
(	TokenNameLPAREN
0x1100	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
READ_TIMEOUT	TokenNameIdentifier
(	TokenNameLPAREN
0x1200	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
SYNTAX_ERROR	TokenNameIdentifier
(	TokenNameLPAREN
0x2000	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
UNAUTHORIZED	TokenNameIdentifier
(	TokenNameLPAREN
0x2100	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
INVALID	TokenNameIdentifier
(	TokenNameLPAREN
0x2200	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
CONFIG_ERROR	TokenNameIdentifier
(	TokenNameLPAREN
0x2300	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
ALREADY_EXISTS	TokenNameIdentifier
(	TokenNameLPAREN
0x2400	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
UNPREPARED	TokenNameIdentifier
(	TokenNameLPAREN
0x2500	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
int	TokenNameint
value	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
Map	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
ExceptionCode	TokenNameIdentifier
>	TokenNameGREATER
valueToCode	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
Integer	TokenNameIdentifier
,	TokenNameCOMMA
ExceptionCode	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
ExceptionCode	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
ExceptionCode	TokenNameIdentifier
code	TokenNameIdentifier
:	TokenNameCOLON
ExceptionCode	TokenNameIdentifier
.	TokenNameDOT
values	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
valueToCode	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
code	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
,	TokenNameCOMMA
code	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
ExceptionCode	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
value	TokenNameIdentifier
=	TokenNameEQUAL
value	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ExceptionCode	TokenNameIdentifier
fromValue	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ExceptionCode	TokenNameIdentifier
code	TokenNameIdentifier
=	TokenNameEQUAL
valueToCode	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
code	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
ProtocolException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Unknown error code %d"	TokenNameStringLiteral
,	TokenNameCOMMA
value	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
code	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
