package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
hadoop	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
File	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
InetAddress	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
nio	TokenNameIdentifier
.	TokenNameDOT
ByteBuffer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
UnknownHostException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
TimeUnit	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
TimeoutException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
slf4j	TokenNameIdentifier
.	TokenNameDOT
Logger	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
slf4j	TokenNameIdentifier
.	TokenNameDOT
LoggerFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
auth	TokenNameIdentifier
.	TokenNameDOT
IAuthenticator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
config	TokenNameIdentifier
.	TokenNameDOT
Config	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
config	TokenNameIdentifier
.	TokenNameDOT
DatabaseDescriptor	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
marshal	TokenNameIdentifier
.	TokenNameDOT
AbstractType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
marshal	TokenNameIdentifier
.	TokenNameDOT
BytesType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
dht	TokenNameIdentifier
.	TokenNameDOT
Range	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
dht	TokenNameIdentifier
.	TokenNameDOT
Token	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
sstable	TokenNameIdentifier
.	TokenNameDOT
SSTableLoader	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
sstable	TokenNameIdentifier
.	TokenNameDOT
SSTableSimpleUnsortedWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
OutputHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
hadoop	TokenNameIdentifier
.	TokenNameDOT
conf	TokenNameIdentifier
.	TokenNameDOT
Configuration	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
hadoop	TokenNameIdentifier
.	TokenNameDOT
mapreduce	TokenNameIdentifier
.	TokenNameDOT
RecordWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
hadoop	TokenNameIdentifier
.	TokenNameDOT
mapreduce	TokenNameIdentifier
.	TokenNameDOT
TaskAttemptContext	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
protocol	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
transport	TokenNameIdentifier
.	TokenNameDOT
TFramedTransport	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
transport	TokenNameIdentifier
.	TokenNameDOT
TSocket	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
transport	TokenNameIdentifier
.	TokenNameDOT
TTransport	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
transport	TokenNameIdentifier
.	TokenNameDOT
TTransportException	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
class	TokenNameclass
BulkRecordWriter	TokenNameIdentifier
extends	TokenNameextends
RecordWriter	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Mutation	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
implements	TokenNameimplements
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
hadoop	TokenNameIdentifier
.	TokenNameDOT
mapred	TokenNameIdentifier
.	TokenNameDOT
RecordWriter	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Mutation	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
{	TokenNameLBRACE
private	TokenNameprivate
final	TokenNamefinal
static	TokenNamestatic
String	TokenNameIdentifier
OUTPUT_LOCATION	TokenNameIdentifier
=	TokenNameEQUAL
"mapreduce.output.bulkoutputformat.localdir"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
static	TokenNamestatic
String	TokenNameIdentifier
BUFFER_SIZE_IN_MB	TokenNameIdentifier
=	TokenNameEQUAL
"mapreduce.output.bulkoutputformat.buffersize"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
static	TokenNamestatic
String	TokenNameIdentifier
STREAM_THROTTLE_MBITS	TokenNameIdentifier
=	TokenNameEQUAL
"mapreduce.output.bulkoutputformat.streamthrottlembits"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
static	TokenNamestatic
String	TokenNameIdentifier
MAX_FAILED_HOSTS	TokenNameIdentifier
=	TokenNameEQUAL
"mapreduce.output.bulkoutputformat.maxfailedhosts"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
Logger	TokenNameIdentifier
logger	TokenNameIdentifier
=	TokenNameEQUAL
LoggerFactory	TokenNameIdentifier
.	TokenNameDOT
getLogger	TokenNameIdentifier
(	TokenNameLPAREN
BulkRecordWriter	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
SSTableSimpleUnsortedWriter	TokenNameIdentifier
writer	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
SSTableLoader	TokenNameIdentifier
loader	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
File	TokenNameIdentifier
outputdir	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
Progressable	TokenNameIdentifier
progress	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
maxFailures	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
enum	TokenNameenum
CFType	TokenNameIdentifier
{	TokenNameLBRACE
NORMAL	TokenNameIdentifier
,	TokenNameCOMMA
SUPER	TokenNameIdentifier
,	TokenNameCOMMA
}	TokenNameRBRACE
private	TokenNameprivate
enum	TokenNameenum
ColType	TokenNameIdentifier
{	TokenNameLBRACE
NORMAL	TokenNameIdentifier
,	TokenNameCOMMA
COUNTER	TokenNameIdentifier
}	TokenNameRBRACE
private	TokenNameprivate
CFType	TokenNameIdentifier
cfType	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
ColType	TokenNameIdentifier
colType	TokenNameIdentifier
;	TokenNameSEMICOLON
BulkRecordWriter	TokenNameIdentifier
(	TokenNameLPAREN
TaskAttemptContext	TokenNameIdentifier
context	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
context	TokenNameIdentifier
.	TokenNameDOT
getConfiguration	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
progress	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Progressable	TokenNameIdentifier
(	TokenNameLPAREN
context	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
BulkRecordWriter	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
Progressable	TokenNameIdentifier
progress	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
progress	TokenNameIdentifier
=	TokenNameEQUAL
progress	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
BulkRecordWriter	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Config	TokenNameIdentifier
.	TokenNameDOT
setLoadYaml	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Config	TokenNameIdentifier
.	TokenNameDOT
setOutboundBindAny	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
conf	TokenNameIdentifier
=	TokenNameEQUAL
conf	TokenNameIdentifier
;	TokenNameSEMICOLON
DatabaseDescriptor	TokenNameIdentifier
.	TokenNameDOT
setStreamThroughputOutboundMegabitsPerSec	TokenNameIdentifier
(	TokenNameLPAREN
Integer	TokenNameIdentifier
.	TokenNameDOT
parseInt	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
STREAM_THROTTLE_MBITS	TokenNameIdentifier
,	TokenNameCOMMA
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
maxFailures	TokenNameIdentifier
=	TokenNameEQUAL
Integer	TokenNameIdentifier
.	TokenNameDOT
parseInt	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
MAX_FAILED_HOSTS	TokenNameIdentifier
,	TokenNameCOMMA
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
String	TokenNameIdentifier
getOutputLocation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
dir	TokenNameIdentifier
=	TokenNameEQUAL
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_LOCATION	TokenNameIdentifier
,	TokenNameCOMMA
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"java.io.tmpdir"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dir	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
IOException	TokenNameIdentifier
(	TokenNameLPAREN
"Output directory not defined, if hadoop is not setting java.io.tmpdir then define "	TokenNameStringLiteral
+	TokenNamePLUS
OUTPUT_LOCATION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
dir	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
setTypes	TokenNameIdentifier
(	TokenNameLPAREN
Mutation	TokenNameIdentifier
mutation	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cfType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
mutation	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isSetSuper_column	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
mutation	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isSetCounter_super_column	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
cfType	TokenNameIdentifier
=	TokenNameEQUAL
CFType	TokenNameIdentifier
.	TokenNameDOT
SUPER	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
cfType	TokenNameIdentifier
=	TokenNameEQUAL
CFType	TokenNameIdentifier
.	TokenNameDOT
NORMAL	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
mutation	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isSetCounter_column	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
mutation	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isSetCounter_super_column	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
colType	TokenNameIdentifier
=	TokenNameEQUAL
ColType	TokenNameIdentifier
.	TokenNameDOT
COUNTER	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
colType	TokenNameIdentifier
=	TokenNameEQUAL
ColType	TokenNameIdentifier
.	TokenNameDOT
NORMAL	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
prepareWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
outputdir	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
=	TokenNameEQUAL
ConfigHelper	TokenNameIdentifier
.	TokenNameDOT
getOutputKeyspace	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
outputdir	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
getOutputLocation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
File	TokenNameIdentifier
.	TokenNameDOT
separator	TokenNameIdentifier
+	TokenNamePLUS
keyspace	TokenNameIdentifier
+	TokenNamePLUS
File	TokenNameIdentifier
.	TokenNameDOT
separator	TokenNameIdentifier
+	TokenNamePLUS
ConfigHelper	TokenNameIdentifier
.	TokenNameDOT
getOutputColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
outputdir	TokenNameIdentifier
.	TokenNameDOT
mkdirs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
writer	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
AbstractType	TokenNameIdentifier
<	TokenNameLESS
?	TokenNameQUESTION
>	TokenNameGREATER
subcomparator	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ExternalClient	TokenNameIdentifier
externalClient	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
String	TokenNameIdentifier
username	TokenNameIdentifier
=	TokenNameEQUAL
ConfigHelper	TokenNameIdentifier
.	TokenNameDOT
getOutputKeyspaceUserName	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
password	TokenNameIdentifier
=	TokenNameEQUAL
ConfigHelper	TokenNameIdentifier
.	TokenNameDOT
getOutputKeyspacePassword	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cfType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
CFType	TokenNameIdentifier
.	TokenNameDOT
SUPER	TokenNameIdentifier
)	TokenNameRPAREN
subcomparator	TokenNameIdentifier
=	TokenNameEQUAL
BytesType	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
writer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SSTableSimpleUnsortedWriter	TokenNameIdentifier
(	TokenNameLPAREN
outputdir	TokenNameIdentifier
,	TokenNameCOMMA
ConfigHelper	TokenNameIdentifier
.	TokenNameDOT
getOutputPartitioner	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
ConfigHelper	TokenNameIdentifier
.	TokenNameDOT
getOutputKeyspace	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
ConfigHelper	TokenNameIdentifier
.	TokenNameDOT
getOutputColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
BytesType	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
,	TokenNameCOMMA
subcomparator	TokenNameIdentifier
,	TokenNameCOMMA
Integer	TokenNameIdentifier
.	TokenNameDOT
parseInt	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
BUFFER_SIZE_IN_MB	TokenNameIdentifier
,	TokenNameCOMMA
"64"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
ConfigHelper	TokenNameIdentifier
.	TokenNameDOT
getOutputCompressionParamaters	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
externalClient	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ExternalClient	TokenNameIdentifier
(	TokenNameLPAREN
ConfigHelper	TokenNameIdentifier
.	TokenNameDOT
getOutputInitialAddress	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
ConfigHelper	TokenNameIdentifier
.	TokenNameDOT
getOutputRpcPort	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
username	TokenNameIdentifier
,	TokenNameCOMMA
password	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
loader	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SSTableLoader	TokenNameIdentifier
(	TokenNameLPAREN
outputdir	TokenNameIdentifier
,	TokenNameCOMMA
externalClient	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
NullOutputHandler	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
write	TokenNameIdentifier
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
keybuff	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Mutation	TokenNameIdentifier
>	TokenNameGREATER
value	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
setTypes	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
prepareWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
writer	TokenNameIdentifier
.	TokenNameDOT
newRow	TokenNameIdentifier
(	TokenNameLPAREN
keybuff	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Mutation	TokenNameIdentifier
mut	TokenNameIdentifier
:	TokenNameCOLON
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cfType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
CFType	TokenNameIdentifier
.	TokenNameDOT
SUPER	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
writer	TokenNameIdentifier
.	TokenNameDOT
newSuperColumn	TokenNameIdentifier
(	TokenNameLPAREN
mut	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getSuper_column	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
colType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ColType	TokenNameIdentifier
.	TokenNameDOT
COUNTER	TokenNameIdentifier
)	TokenNameRPAREN
for	TokenNamefor
(	TokenNameLPAREN
CounterColumn	TokenNameIdentifier
column	TokenNameIdentifier
:	TokenNameCOLON
mut	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getCounter_super_column	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
columns	TokenNameIdentifier
)	TokenNameRPAREN
writer	TokenNameIdentifier
.	TokenNameDOT
addCounterColumn	TokenNameIdentifier
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
column	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
Column	TokenNameIdentifier
column	TokenNameIdentifier
:	TokenNameCOLON
mut	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getSuper_column	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
columns	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
ttl	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
writer	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
column	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
,	TokenNameCOMMA
column	TokenNameIdentifier
.	TokenNameDOT
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
writer	TokenNameIdentifier
.	TokenNameDOT
addExpiringColumn	TokenNameIdentifier
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
column	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
,	TokenNameCOMMA
column	TokenNameIdentifier
.	TokenNameDOT
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
column	TokenNameIdentifier
.	TokenNameDOT
ttl	TokenNameIdentifier
,	TokenNameCOMMA
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
column	TokenNameIdentifier
.	TokenNameDOT
ttl	TokenNameIdentifier
*	TokenNameMULTIPLY
1000	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
colType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ColType	TokenNameIdentifier
.	TokenNameDOT
COUNTER	TokenNameIdentifier
)	TokenNameRPAREN
writer	TokenNameIdentifier
.	TokenNameDOT
addCounterColumn	TokenNameIdentifier
(	TokenNameLPAREN
mut	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
counter_column	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
mut	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
counter_column	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
mut	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
column	TokenNameIdentifier
.	TokenNameDOT
ttl	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
writer	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
mut	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
column	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
mut	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
column	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
,	TokenNameCOMMA
mut	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
column	TokenNameIdentifier
.	TokenNameDOT
timestamp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
writer	TokenNameIdentifier
.	TokenNameDOT
addExpiringColumn	TokenNameIdentifier
(	TokenNameLPAREN
mut	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
column	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
mut	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
column	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
,	TokenNameCOMMA
mut	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
column	TokenNameIdentifier
.	TokenNameDOT
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
mut	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
column	TokenNameIdentifier
.	TokenNameDOT
ttl	TokenNameIdentifier
,	TokenNameCOMMA
System	TokenNameIdentifier
.	TokenNameDOT
currentTimeMillis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
long	TokenNamelong
)	TokenNameRPAREN
(	TokenNameLPAREN
mut	TokenNameIdentifier
.	TokenNameDOT
getColumn_or_supercolumn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
column	TokenNameIdentifier
.	TokenNameDOT
ttl	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
1000	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
progress	TokenNameIdentifier
.	TokenNameDOT
progress	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
@	TokenNameAT
Override	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
close	TokenNameIdentifier
(	TokenNameLPAREN
TaskAttemptContext	TokenNameIdentifier
context	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
@	TokenNameAT
Deprecated	TokenNameIdentifier
public	TokenNamepublic
void	TokenNamevoid
close	TokenNameIdentifier
(	TokenNameLPAREN
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
hadoop	TokenNameIdentifier
.	TokenNameDOT
mapred	TokenNameIdentifier
.	TokenNameDOT
Reporter	TokenNameIdentifier
reporter	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
writer	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
writer	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SSTableLoader	TokenNameIdentifier
.	TokenNameDOT
LoaderFuture	TokenNameIdentifier
future	TokenNameIdentifier
=	TokenNameEQUAL
loader	TokenNameIdentifier
.	TokenNameDOT
stream	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
future	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
1000	TokenNameIntegerLiteral
,	TokenNameCOMMA
TimeUnit	TokenNameIdentifier
.	TokenNameDOT
MILLISECONDS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
TimeoutException	TokenNameIdentifier
te	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
progress	TokenNameIdentifier
.	TokenNameDOT
progress	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
InterruptedException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IOException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
future	TokenNameIdentifier
.	TokenNameDOT
hadFailures	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
future	TokenNameIdentifier
.	TokenNameDOT
getFailedHosts	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
maxFailures	TokenNameIdentifier
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
IOException	TokenNameIdentifier
(	TokenNameLPAREN
"Too many hosts failed: "	TokenNameStringLiteral
+	TokenNamePLUS
future	TokenNameIdentifier
.	TokenNameDOT
getFailedHosts	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
logger	TokenNameIdentifier
.	TokenNameDOT
warn	TokenNameIdentifier
(	TokenNameLPAREN
"Some hosts failed: "	TokenNameStringLiteral
+	TokenNamePLUS
future	TokenNameIdentifier
.	TokenNameDOT
getFailedHosts	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
class	TokenNameclass
ExternalClient	TokenNameIdentifier
extends	TokenNameextends
SSTableLoader	TokenNameIdentifier
.	TokenNameDOT
Client	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
final	TokenNamefinal
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
knownCfs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
String	TokenNameIdentifier
hostlist	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
int	TokenNameint
rpcPort	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
String	TokenNameIdentifier
username	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
String	TokenNameIdentifier
password	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
ExternalClient	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
hostlist	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
port	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
username	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
password	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
hostlist	TokenNameIdentifier
=	TokenNameEQUAL
hostlist	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
rpcPort	TokenNameIdentifier
=	TokenNameEQUAL
port	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
username	TokenNameIdentifier
=	TokenNameEQUAL
username	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
password	TokenNameIdentifier
=	TokenNameEQUAL
password	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
init	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
InetAddress	TokenNameIdentifier
>	TokenNameGREATER
hosts	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
InetAddress	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
nodes	TokenNameIdentifier
=	TokenNameEQUAL
hostlist	TokenNameIdentifier
.	TokenNameDOT
split	TokenNameIdentifier
(	TokenNameLPAREN
","	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
String	TokenNameIdentifier
node	TokenNameIdentifier
:	TokenNameCOLON
nodes	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
hosts	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
InetAddress	TokenNameIdentifier
.	TokenNameDOT
getByName	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
UnknownHostException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
Iterator	TokenNameIdentifier
<	TokenNameLESS
InetAddress	TokenNameIdentifier
>	TokenNameGREATER
hostiter	TokenNameIdentifier
=	TokenNameEQUAL
hosts	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
hostiter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
InetAddress	TokenNameIdentifier
host	TokenNameIdentifier
=	TokenNameEQUAL
hostiter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Cassandra	TokenNameIdentifier
.	TokenNameDOT
Client	TokenNameIdentifier
client	TokenNameIdentifier
=	TokenNameEQUAL
createThriftClient	TokenNameIdentifier
(	TokenNameLPAREN
host	TokenNameIdentifier
.	TokenNameDOT
getHostAddress	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
rpcPort	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
client	TokenNameIdentifier
.	TokenNameDOT
set_keyspace	TokenNameIdentifier
(	TokenNameLPAREN
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
username	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
creds	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
creds	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
IAuthenticator	TokenNameIdentifier
.	TokenNameDOT
USERNAME_KEY	TokenNameIdentifier
,	TokenNameCOMMA
username	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
creds	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
IAuthenticator	TokenNameIdentifier
.	TokenNameDOT
PASSWORD_KEY	TokenNameIdentifier
,	TokenNameCOMMA
password	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
AuthenticationRequest	TokenNameIdentifier
authRequest	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AuthenticationRequest	TokenNameIdentifier
(	TokenNameLPAREN
creds	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
client	TokenNameIdentifier
.	TokenNameDOT
login	TokenNameIdentifier
(	TokenNameLPAREN
authRequest	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
List	TokenNameIdentifier
<	TokenNameLESS
TokenRange	TokenNameIdentifier
>	TokenNameGREATER
tokenRanges	TokenNameIdentifier
=	TokenNameEQUAL
client	TokenNameIdentifier
.	TokenNameDOT
describe_ring	TokenNameIdentifier
(	TokenNameLPAREN
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
KsDef	TokenNameIdentifier
>	TokenNameGREATER
ksDefs	TokenNameIdentifier
=	TokenNameEQUAL
client	TokenNameIdentifier
.	TokenNameDOT
describe_keyspaces	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
setPartitioner	TokenNameIdentifier
(	TokenNameLPAREN
client	TokenNameIdentifier
.	TokenNameDOT
describe_partitioner	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
.	TokenNameDOT
TokenFactory	TokenNameIdentifier
tkFactory	TokenNameIdentifier
=	TokenNameEQUAL
getPartitioner	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getTokenFactory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
TokenRange	TokenNameIdentifier
tr	TokenNameIdentifier
:	TokenNameCOLON
tokenRanges	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Range	TokenNameIdentifier
<	TokenNameLESS
Token	TokenNameIdentifier
>	TokenNameGREATER
range	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Range	TokenNameIdentifier
<	TokenNameLESS
Token	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
tkFactory	TokenNameIdentifier
.	TokenNameDOT
fromString	TokenNameIdentifier
(	TokenNameLPAREN
tr	TokenNameIdentifier
.	TokenNameDOT
start_token	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
tkFactory	TokenNameIdentifier
.	TokenNameDOT
fromString	TokenNameIdentifier
(	TokenNameLPAREN
tr	TokenNameIdentifier
.	TokenNameDOT
end_token	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
String	TokenNameIdentifier
ep	TokenNameIdentifier
:	TokenNameCOLON
tr	TokenNameIdentifier
.	TokenNameDOT
endpoints	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addRangeForEndpoint	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
,	TokenNameCOMMA
InetAddress	TokenNameIdentifier
.	TokenNameDOT
getByName	TokenNameIdentifier
(	TokenNameLPAREN
ep	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
KsDef	TokenNameIdentifier
ksDef	TokenNameIdentifier
:	TokenNameCOLON
ksDefs	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
cfs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashSet	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
CfDef	TokenNameIdentifier
cfDef	TokenNameIdentifier
:	TokenNameCOLON
ksDef	TokenNameIdentifier
.	TokenNameDOT
cf_defs	TokenNameIdentifier
)	TokenNameRPAREN
cfs	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
cfDef	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
knownCfs	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ksDef	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
,	TokenNameCOMMA
cfs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
hostiter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Could not retrieve endpoint ranges: "	TokenNameStringLiteral
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
validateColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cfName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
cfs	TokenNameIdentifier
=	TokenNameEQUAL
knownCfs	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
cfs	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
cfs	TokenNameIdentifier
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
cfName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
Cassandra	TokenNameIdentifier
.	TokenNameDOT
Client	TokenNameIdentifier
createThriftClient	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
host	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
port	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TTransportException	TokenNameIdentifier
{	TokenNameLBRACE
TSocket	TokenNameIdentifier
socket	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TSocket	TokenNameIdentifier
(	TokenNameLPAREN
host	TokenNameIdentifier
,	TokenNameCOMMA
port	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TTransport	TokenNameIdentifier
trans	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TFramedTransport	TokenNameIdentifier
(	TokenNameLPAREN
socket	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
trans	TokenNameIdentifier
.	TokenNameDOT
open	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TProtocol	TokenNameIdentifier
protocol	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
protocol	TokenNameIdentifier
.	TokenNameDOT
TBinaryProtocol	TokenNameIdentifier
(	TokenNameLPAREN
trans	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
Cassandra	TokenNameIdentifier
.	TokenNameDOT
Client	TokenNameIdentifier
(	TokenNameLPAREN
protocol	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
class	TokenNameclass
NullOutputHandler	TokenNameIdentifier
implements	TokenNameimplements
OutputHandler	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
void	TokenNamevoid
output	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
msg	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
debug	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
msg	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
warn	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
msg	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
warn	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
msg	TokenNameIdentifier
,	TokenNameCOMMA
Throwable	TokenNameIdentifier
th	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
