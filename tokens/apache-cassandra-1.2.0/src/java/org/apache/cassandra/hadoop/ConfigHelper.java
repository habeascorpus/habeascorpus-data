package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
hadoop	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ArrayList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
HashMap	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Map	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
compress	TokenNameIdentifier
.	TokenNameDOT
CompressionParameters	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
slf4j	TokenNameIdentifier
.	TokenNameDOT
Logger	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
slf4j	TokenNameIdentifier
.	TokenNameDOT
LoggerFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
exceptions	TokenNameIdentifier
.	TokenNameDOT
ConfigurationException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
dht	TokenNameIdentifier
.	TokenNameDOT
IPartitioner	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
FBUtilities	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
Hex	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
hadoop	TokenNameIdentifier
.	TokenNameDOT
conf	TokenNameIdentifier
.	TokenNameDOT
Configuration	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
TBase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
TDeserializer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
TException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
TSerializer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
transport	TokenNameIdentifier
.	TokenNameDOT
TSocket	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
transport	TokenNameIdentifier
.	TokenNameDOT
TTransport	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
transport	TokenNameIdentifier
.	TokenNameDOT
TTransportException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
security	TokenNameIdentifier
.	TokenNameDOT
auth	TokenNameIdentifier
.	TokenNameDOT
login	TokenNameIdentifier
.	TokenNameDOT
LoginException	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
ConfigHelper	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INPUT_PARTITIONER_CONFIG	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.input.partitioner.class"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
OUTPUT_PARTITIONER_CONFIG	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.output.partitioner.class"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INPUT_KEYSPACE_CONFIG	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.input.keyspace"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
OUTPUT_KEYSPACE_CONFIG	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.output.keyspace"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INPUT_KEYSPACE_USERNAME_CONFIG	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.input.keyspace.username"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INPUT_KEYSPACE_PASSWD_CONFIG	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.input.keyspace.passwd"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
OUTPUT_KEYSPACE_USERNAME_CONFIG	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.output.keyspace.username"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
OUTPUT_KEYSPACE_PASSWD_CONFIG	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.output.keyspace.passwd"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INPUT_COLUMNFAMILY_CONFIG	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.input.columnfamily"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
OUTPUT_COLUMNFAMILY_CONFIG	TokenNameIdentifier
=	TokenNameEQUAL
"mapreduce.output.basename"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INPUT_PREDICATE_CONFIG	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.input.predicate"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INPUT_KEYRANGE_CONFIG	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.input.keyRange"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INPUT_SPLIT_SIZE_CONFIG	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.input.split.size"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INPUT_WIDEROWS_CONFIG	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.input.widerows"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
DEFAULT_SPLIT_SIZE	TokenNameIdentifier
=	TokenNameEQUAL
64	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
1024	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
RANGE_BATCH_SIZE_CONFIG	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.range.batch.size"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
DEFAULT_RANGE_BATCH_SIZE	TokenNameIdentifier
=	TokenNameEQUAL
4096	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INPUT_THRIFT_PORT	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.input.thrift.port"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
OUTPUT_THRIFT_PORT	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.output.thrift.port"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INPUT_INITIAL_THRIFT_ADDRESS	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.input.thrift.address"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
OUTPUT_INITIAL_THRIFT_ADDRESS	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.output.thrift.address"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
READ_CONSISTENCY_LEVEL	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.consistencylevel.read"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WRITE_CONSISTENCY_LEVEL	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.consistencylevel.write"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
OUTPUT_COMPRESSION_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.output.compression.class"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
OUTPUT_COMPRESSION_CHUNK_LENGTH	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.output.compression.length"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INPUT_TRANSPORT_FACTORY_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.input.transport.factory.class"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
OUTPUT_TRANSPORT_FACTORY_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"cassandra.output.transport.factory.class"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
Logger	TokenNameIdentifier
logger	TokenNameIdentifier
=	TokenNameEQUAL
LoggerFactory	TokenNameIdentifier
.	TokenNameDOT
getLogger	TokenNameIdentifier
(	TokenNameLPAREN
ConfigHelper	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setInputColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
widerows	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
keyspace	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
UnsupportedOperationException	TokenNameIdentifier
(	TokenNameLPAREN
"keyspace may not be null"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
columnFamily	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
UnsupportedOperationException	TokenNameIdentifier
(	TokenNameLPAREN
"columnfamily may not be null"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_KEYSPACE_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_COLUMNFAMILY_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_WIDEROWS_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
valueOf	TokenNameIdentifier
(	TokenNameLPAREN
widerows	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setInputColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
setInputColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
,	TokenNameCOMMA
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setOutputKeyspace	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
keyspace	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
UnsupportedOperationException	TokenNameIdentifier
(	TokenNameLPAREN
"keyspace may not be null"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_KEYSPACE_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setOutputColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_COLUMNFAMILY_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setOutputColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
setOutputKeyspace	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
,	TokenNameCOMMA
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
setOutputColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setRangeBatchSize	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
batchsize	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
setInt	TokenNameIdentifier
(	TokenNameLPAREN
RANGE_BATCH_SIZE_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
batchsize	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
getRangeBatchSize	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
getInt	TokenNameIdentifier
(	TokenNameLPAREN
RANGE_BATCH_SIZE_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
DEFAULT_RANGE_BATCH_SIZE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setInputSplitSize	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
splitsize	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
setInt	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_SPLIT_SIZE_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
splitsize	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
getInputSplitSize	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
getInt	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_SPLIT_SIZE_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
DEFAULT_SPLIT_SIZE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setInputSlicePredicate	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
SlicePredicate	TokenNameIdentifier
predicate	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_PREDICATE_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
thriftToString	TokenNameIdentifier
(	TokenNameLPAREN
predicate	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
SlicePredicate	TokenNameIdentifier
getInputSlicePredicate	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_PREDICATE_CONFIG	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
s	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
null	TokenNamenull
:	TokenNameCOLON
predicateFromString	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
String	TokenNameIdentifier
thriftToString	TokenNameIdentifier
(	TokenNameLPAREN
TBase	TokenNameIdentifier
object	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
object	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
TSerializer	TokenNameIdentifier
serializer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TSerializer	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
TBinaryProtocol	TokenNameIdentifier
.	TokenNameDOT
Factory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
Hex	TokenNameIdentifier
.	TokenNameDOT
bytesToHex	TokenNameIdentifier
(	TokenNameLPAREN
serializer	TokenNameIdentifier
.	TokenNameDOT
serialize	TokenNameIdentifier
(	TokenNameLPAREN
object	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
TException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
SlicePredicate	TokenNameIdentifier
predicateFromString	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
st	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
st	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
TDeserializer	TokenNameIdentifier
deserializer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TDeserializer	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
TBinaryProtocol	TokenNameIdentifier
.	TokenNameDOT
Factory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SlicePredicate	TokenNameIdentifier
predicate	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SlicePredicate	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
deserializer	TokenNameIdentifier
.	TokenNameDOT
deserialize	TokenNameIdentifier
(	TokenNameLPAREN
predicate	TokenNameIdentifier
,	TokenNameCOMMA
Hex	TokenNameIdentifier
.	TokenNameDOT
hexToBytes	TokenNameIdentifier
(	TokenNameLPAREN
st	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
TException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
predicate	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setInputRange	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
startToken	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
endToken	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
KeyRange	TokenNameIdentifier
range	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
KeyRange	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
setStart_token	TokenNameIdentifier
(	TokenNameLPAREN
startToken	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setEnd_token	TokenNameIdentifier
(	TokenNameLPAREN
endToken	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_KEYRANGE_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
thriftToString	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setInputRange	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
startToken	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
endToken	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
IndexExpression	TokenNameIdentifier
>	TokenNameGREATER
filter	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
KeyRange	TokenNameIdentifier
range	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
KeyRange	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
setStart_token	TokenNameIdentifier
(	TokenNameLPAREN
startToken	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setEnd_token	TokenNameIdentifier
(	TokenNameLPAREN
endToken	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setRow_filter	TokenNameIdentifier
(	TokenNameLPAREN
filter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_KEYRANGE_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
thriftToString	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setInputRange	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
IndexExpression	TokenNameIdentifier
>	TokenNameGREATER
filter	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
KeyRange	TokenNameIdentifier
range	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
KeyRange	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
setRow_filter	TokenNameIdentifier
(	TokenNameLPAREN
filter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_KEYRANGE_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
thriftToString	TokenNameIdentifier
(	TokenNameLPAREN
range	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
KeyRange	TokenNameIdentifier
getInputKeyRange	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
str	TokenNameIdentifier
=	TokenNameEQUAL
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_KEYRANGE_CONFIG	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
str	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
null	TokenNamenull
:	TokenNameCOLON
keyRangeFromString	TokenNameIdentifier
(	TokenNameLPAREN
str	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
KeyRange	TokenNameIdentifier
keyRangeFromString	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
st	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
assert	TokenNameassert
st	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
TDeserializer	TokenNameIdentifier
deserializer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TDeserializer	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
TBinaryProtocol	TokenNameIdentifier
.	TokenNameDOT
Factory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
KeyRange	TokenNameIdentifier
keyRange	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
KeyRange	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
deserializer	TokenNameIdentifier
.	TokenNameDOT
deserialize	TokenNameIdentifier
(	TokenNameLPAREN
keyRange	TokenNameIdentifier
,	TokenNameCOMMA
Hex	TokenNameIdentifier
.	TokenNameDOT
hexToBytes	TokenNameIdentifier
(	TokenNameLPAREN
st	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
TException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
keyRange	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getInputKeyspace	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_KEYSPACE_CONFIG	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getOutputKeyspace	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_KEYSPACE_CONFIG	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setInputKeyspaceUserNameAndPassword	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
username	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
password	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
setInputKeyspaceUserName	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
,	TokenNameCOMMA
username	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
setInputKeyspacePassword	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
,	TokenNameCOMMA
password	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setInputKeyspaceUserName	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
username	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_KEYSPACE_USERNAME_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
username	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getInputKeyspaceUserName	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_KEYSPACE_USERNAME_CONFIG	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setInputKeyspacePassword	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
password	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_KEYSPACE_PASSWD_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
password	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getInputKeyspacePassword	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_KEYSPACE_PASSWD_CONFIG	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setOutputKeyspaceUserNameAndPassword	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
username	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
password	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
setOutputKeyspaceUserName	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
,	TokenNameCOMMA
username	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
setOutputKeyspacePassword	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
,	TokenNameCOMMA
password	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setOutputKeyspaceUserName	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
username	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_KEYSPACE_USERNAME_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
username	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getOutputKeyspaceUserName	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_KEYSPACE_USERNAME_CONFIG	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setOutputKeyspacePassword	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
password	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_KEYSPACE_PASSWD_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
password	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getOutputKeyspacePassword	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_KEYSPACE_PASSWD_CONFIG	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getInputColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_COLUMNFAMILY_CONFIG	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getOutputColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_COLUMNFAMILY_CONFIG	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_COLUMNFAMILY_CONFIG	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
throw	TokenNamethrow
new	TokenNamenew
UnsupportedOperationException	TokenNameIdentifier
(	TokenNameLPAREN
"You must set the output column family using either setOutputColumnFamily or by adding a named output with MultipleOutputs"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
getInputIsWide	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
Boolean	TokenNameIdentifier
.	TokenNameDOT
parseBoolean	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_WIDEROWS_CONFIG	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getReadConsistencyLevel	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
READ_CONSISTENCY_LEVEL	TokenNameIdentifier
,	TokenNameCOMMA
"ONE"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getWriteConsistencyLevel	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
WRITE_CONSISTENCY_LEVEL	TokenNameIdentifier
,	TokenNameCOMMA
"ONE"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
getInputRpcPort	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
Integer	TokenNameIdentifier
.	TokenNameDOT
parseInt	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_THRIFT_PORT	TokenNameIdentifier
,	TokenNameCOMMA
"9160"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setInputRpcPort	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
port	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_THRIFT_PORT	TokenNameIdentifier
,	TokenNameCOMMA
port	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getInputInitialAddress	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_INITIAL_THRIFT_ADDRESS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setInputInitialAddress	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
address	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_INITIAL_THRIFT_ADDRESS	TokenNameIdentifier
,	TokenNameCOMMA
address	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setInputPartitioner	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
classname	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_PARTITIONER_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
classname	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
IPartitioner	TokenNameIdentifier
getInputPartitioner	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
FBUtilities	TokenNameIdentifier
.	TokenNameDOT
newPartitioner	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_PARTITIONER_CONFIG	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ConfigurationException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
getOutputRpcPort	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
Integer	TokenNameIdentifier
.	TokenNameDOT
parseInt	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_THRIFT_PORT	TokenNameIdentifier
,	TokenNameCOMMA
"9160"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setOutputRpcPort	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
port	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_THRIFT_PORT	TokenNameIdentifier
,	TokenNameCOMMA
port	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getOutputInitialAddress	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_INITIAL_THRIFT_ADDRESS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setOutputInitialAddress	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
address	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_INITIAL_THRIFT_ADDRESS	TokenNameIdentifier
,	TokenNameCOMMA
address	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setOutputPartitioner	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
classname	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_PARTITIONER_CONFIG	TokenNameIdentifier
,	TokenNameCOMMA
classname	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
IPartitioner	TokenNameIdentifier
getOutputPartitioner	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
FBUtilities	TokenNameIdentifier
.	TokenNameDOT
newPartitioner	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_PARTITIONER_CONFIG	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ConfigurationException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getOutputCompressionClass	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_COMPRESSION_CLASS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getOutputCompressionChunkLength	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_COMPRESSION_CHUNK_LENGTH	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
valueOf	TokenNameIdentifier
(	TokenNameLPAREN
CompressionParameters	TokenNameIdentifier
.	TokenNameDOT
DEFAULT_CHUNK_LENGTH	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setOutputCompressionClass	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
classname	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_COMPRESSION_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
classname	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setOutputCompressionChunkLength	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_COMPRESSION_CHUNK_LENGTH	TokenNameIdentifier
,	TokenNameCOMMA
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
CompressionParameters	TokenNameIdentifier
getOutputCompressionParamaters	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
getOutputCompressionClass	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
CompressionParameters	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
options	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
options	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
CompressionParameters	TokenNameIdentifier
.	TokenNameDOT
SSTABLE_COMPRESSION	TokenNameIdentifier
,	TokenNameCOMMA
getOutputCompressionClass	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
options	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
CompressionParameters	TokenNameIdentifier
.	TokenNameDOT
CHUNK_LENGTH_KB	TokenNameIdentifier
,	TokenNameCOMMA
getOutputCompressionChunkLength	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
CompressionParameters	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
options	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ConfigurationException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Cassandra	TokenNameIdentifier
.	TokenNameDOT
Client	TokenNameIdentifier
getClientFromInputAddressList	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
getClientFromAddressList	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
,	TokenNameCOMMA
ConfigHelper	TokenNameIdentifier
.	TokenNameDOT
getInputInitialAddress	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
split	TokenNameIdentifier
(	TokenNameLPAREN
","	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
ConfigHelper	TokenNameIdentifier
.	TokenNameDOT
getInputRpcPort	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Cassandra	TokenNameIdentifier
.	TokenNameDOT
Client	TokenNameIdentifier
getClientFromOutputAddressList	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
getClientFromAddressList	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
,	TokenNameCOMMA
ConfigHelper	TokenNameIdentifier
.	TokenNameDOT
getOutputInitialAddress	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
split	TokenNameIdentifier
(	TokenNameLPAREN
","	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
ConfigHelper	TokenNameIdentifier
.	TokenNameDOT
getOutputRpcPort	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
Cassandra	TokenNameIdentifier
.	TokenNameDOT
Client	TokenNameIdentifier
getClientFromAddressList	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
addresses	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
port	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Cassandra	TokenNameIdentifier
.	TokenNameDOT
Client	TokenNameIdentifier
client	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
IOException	TokenNameIdentifier
>	TokenNameGREATER
exceptions	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
IOException	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
String	TokenNameIdentifier
address	TokenNameIdentifier
:	TokenNameCOLON
addresses	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
client	TokenNameIdentifier
=	TokenNameEQUAL
createConnection	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
,	TokenNameCOMMA
address	TokenNameIdentifier
,	TokenNameCOMMA
port	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
IOException	TokenNameIdentifier
ioe	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
exceptions	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
ioe	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
client	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
"failed to connect to any initial addresses"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
IOException	TokenNameIdentifier
ioe	TokenNameIdentifier
:	TokenNameCOLON
exceptions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logger	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
ioe	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
throw	TokenNamethrow
exceptions	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
exceptions	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
client	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Cassandra	TokenNameIdentifier
.	TokenNameDOT
Client	TokenNameIdentifier
createConnection	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
host	TokenNameIdentifier
,	TokenNameCOMMA
Integer	TokenNameIdentifier
port	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
TSocket	TokenNameIdentifier
socket	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TSocket	TokenNameIdentifier
(	TokenNameLPAREN
host	TokenNameIdentifier
,	TokenNameCOMMA
port	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TTransport	TokenNameIdentifier
transport	TokenNameIdentifier
=	TokenNameEQUAL
getInputTransportFactory	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
openTransport	TokenNameIdentifier
(	TokenNameLPAREN
socket	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
Cassandra	TokenNameIdentifier
.	TokenNameDOT
Client	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
TBinaryProtocol	TokenNameIdentifier
(	TokenNameLPAREN
transport	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
LoginException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IOException	TokenNameIdentifier
(	TokenNameLPAREN
"Unable to login to server "	TokenNameStringLiteral
+	TokenNamePLUS
host	TokenNameIdentifier
+	TokenNamePLUS
":"	TokenNameStringLiteral
+	TokenNamePLUS
port	TokenNameIdentifier
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
TTransportException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IOException	TokenNameIdentifier
(	TokenNameLPAREN
"Unable to connect to server "	TokenNameStringLiteral
+	TokenNamePLUS
host	TokenNameIdentifier
+	TokenNamePLUS
":"	TokenNameStringLiteral
+	TokenNamePLUS
port	TokenNameIdentifier
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ITransportFactory	TokenNameIdentifier
getInputTransportFactory	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getTransportFactory	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_TRANSPORT_FACTORY_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
TFramedTransportFactory	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setInputTransportFactoryClass	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
classname	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
INPUT_TRANSPORT_FACTORY_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
classname	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ITransportFactory	TokenNameIdentifier
getOutputTransportFactory	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getTransportFactory	TokenNameIdentifier
(	TokenNameLPAREN
conf	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_TRANSPORT_FACTORY_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
TFramedTransportFactory	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
setOutputTransportFactoryClass	TokenNameIdentifier
(	TokenNameLPAREN
Configuration	TokenNameIdentifier
conf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
classname	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conf	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
OUTPUT_TRANSPORT_FACTORY_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
classname	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
ITransportFactory	TokenNameIdentifier
getTransportFactory	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
factoryClassName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
ITransportFactory	TokenNameIdentifier
)	TokenNameRPAREN
Class	TokenNameIdentifier
.	TokenNameDOT
forName	TokenNameIdentifier
(	TokenNameLPAREN
factoryClassName	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
newInstance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Failed to instantiate transport factory:"	TokenNameStringLiteral
+	TokenNamePLUS
factoryClassName	TokenNameIdentifier
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
