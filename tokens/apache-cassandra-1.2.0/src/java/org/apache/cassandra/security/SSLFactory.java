package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
security	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
FileInputStream	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
InetAddress	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
InetSocketAddress	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
security	TokenNameIdentifier
.	TokenNameDOT
KeyStore	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Set	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
ssl	TokenNameIdentifier
.	TokenNameDOT
KeyManagerFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
ssl	TokenNameIdentifier
.	TokenNameDOT
SSLContext	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
ssl	TokenNameIdentifier
.	TokenNameDOT
SSLServerSocket	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
ssl	TokenNameIdentifier
.	TokenNameDOT
SSLSocket	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
ssl	TokenNameIdentifier
.	TokenNameDOT
TrustManagerFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
config	TokenNameIdentifier
.	TokenNameDOT
EncryptionOptions	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
FileUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
commons	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
StringUtils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
slf4j	TokenNameIdentifier
.	TokenNameDOT
Logger	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
slf4j	TokenNameIdentifier
.	TokenNameDOT
LoggerFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
com	TokenNameIdentifier
.	TokenNameDOT
google	TokenNameIdentifier
.	TokenNameDOT
common	TokenNameIdentifier
.	TokenNameDOT
collect	TokenNameIdentifier
.	TokenNameDOT
Sets	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
class	TokenNameclass
SSLFactory	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
Logger	TokenNameIdentifier
logger	TokenNameIdentifier
=	TokenNameEQUAL
LoggerFactory	TokenNameIdentifier
.	TokenNameDOT
getLogger	TokenNameIdentifier
(	TokenNameLPAREN
SSLFactory	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
SSLServerSocket	TokenNameIdentifier
getServerSocket	TokenNameIdentifier
(	TokenNameLPAREN
EncryptionOptions	TokenNameIdentifier
options	TokenNameIdentifier
,	TokenNameCOMMA
InetAddress	TokenNameIdentifier
address	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
port	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
SSLContext	TokenNameIdentifier
ctx	TokenNameIdentifier
=	TokenNameEQUAL
createSSLContext	TokenNameIdentifier
(	TokenNameLPAREN
options	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SSLServerSocket	TokenNameIdentifier
serverSocket	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SSLServerSocket	TokenNameIdentifier
)	TokenNameRPAREN
ctx	TokenNameIdentifier
.	TokenNameDOT
getServerSocketFactory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
createServerSocket	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
serverSocket	TokenNameIdentifier
.	TokenNameDOT
setReuseAddress	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
suits	TokenNameIdentifier
=	TokenNameEQUAL
filterCipherSuites	TokenNameIdentifier
(	TokenNameLPAREN
serverSocket	TokenNameIdentifier
.	TokenNameDOT
getSupportedCipherSuites	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
options	TokenNameIdentifier
.	TokenNameDOT
cipher_suites	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
serverSocket	TokenNameIdentifier
.	TokenNameDOT
setEnabledCipherSuites	TokenNameIdentifier
(	TokenNameLPAREN
suits	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
serverSocket	TokenNameIdentifier
.	TokenNameDOT
bind	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
InetSocketAddress	TokenNameIdentifier
(	TokenNameLPAREN
address	TokenNameIdentifier
,	TokenNameCOMMA
port	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
100	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
serverSocket	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
SSLSocket	TokenNameIdentifier
getSocket	TokenNameIdentifier
(	TokenNameLPAREN
EncryptionOptions	TokenNameIdentifier
options	TokenNameIdentifier
,	TokenNameCOMMA
InetAddress	TokenNameIdentifier
address	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
port	TokenNameIdentifier
,	TokenNameCOMMA
InetAddress	TokenNameIdentifier
localAddress	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
localPort	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
SSLContext	TokenNameIdentifier
ctx	TokenNameIdentifier
=	TokenNameEQUAL
createSSLContext	TokenNameIdentifier
(	TokenNameLPAREN
options	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SSLSocket	TokenNameIdentifier
socket	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SSLSocket	TokenNameIdentifier
)	TokenNameRPAREN
ctx	TokenNameIdentifier
.	TokenNameDOT
getSocketFactory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
createSocket	TokenNameIdentifier
(	TokenNameLPAREN
address	TokenNameIdentifier
,	TokenNameCOMMA
port	TokenNameIdentifier
,	TokenNameCOMMA
localAddress	TokenNameIdentifier
,	TokenNameCOMMA
localPort	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
suits	TokenNameIdentifier
=	TokenNameEQUAL
filterCipherSuites	TokenNameIdentifier
(	TokenNameLPAREN
socket	TokenNameIdentifier
.	TokenNameDOT
getSupportedCipherSuites	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
options	TokenNameIdentifier
.	TokenNameDOT
cipher_suites	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
socket	TokenNameIdentifier
.	TokenNameDOT
setEnabledCipherSuites	TokenNameIdentifier
(	TokenNameLPAREN
suits	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
socket	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
SSLSocket	TokenNameIdentifier
getSocket	TokenNameIdentifier
(	TokenNameLPAREN
EncryptionOptions	TokenNameIdentifier
options	TokenNameIdentifier
,	TokenNameCOMMA
InetAddress	TokenNameIdentifier
address	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
port	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
SSLContext	TokenNameIdentifier
ctx	TokenNameIdentifier
=	TokenNameEQUAL
createSSLContext	TokenNameIdentifier
(	TokenNameLPAREN
options	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SSLSocket	TokenNameIdentifier
socket	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SSLSocket	TokenNameIdentifier
)	TokenNameRPAREN
ctx	TokenNameIdentifier
.	TokenNameDOT
getSocketFactory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
createSocket	TokenNameIdentifier
(	TokenNameLPAREN
address	TokenNameIdentifier
,	TokenNameCOMMA
port	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
suits	TokenNameIdentifier
=	TokenNameEQUAL
filterCipherSuites	TokenNameIdentifier
(	TokenNameLPAREN
socket	TokenNameIdentifier
.	TokenNameDOT
getSupportedCipherSuites	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
options	TokenNameIdentifier
.	TokenNameDOT
cipher_suites	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
socket	TokenNameIdentifier
.	TokenNameDOT
setEnabledCipherSuites	TokenNameIdentifier
(	TokenNameLPAREN
suits	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
socket	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
SSLSocket	TokenNameIdentifier
getSocket	TokenNameIdentifier
(	TokenNameLPAREN
EncryptionOptions	TokenNameIdentifier
options	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
SSLContext	TokenNameIdentifier
ctx	TokenNameIdentifier
=	TokenNameEQUAL
createSSLContext	TokenNameIdentifier
(	TokenNameLPAREN
options	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SSLSocket	TokenNameIdentifier
socket	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SSLSocket	TokenNameIdentifier
)	TokenNameRPAREN
ctx	TokenNameIdentifier
.	TokenNameDOT
getSocketFactory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
createSocket	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
suits	TokenNameIdentifier
=	TokenNameEQUAL
filterCipherSuites	TokenNameIdentifier
(	TokenNameLPAREN
socket	TokenNameIdentifier
.	TokenNameDOT
getSupportedCipherSuites	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
options	TokenNameIdentifier
.	TokenNameDOT
cipher_suites	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
socket	TokenNameIdentifier
.	TokenNameDOT
setEnabledCipherSuites	TokenNameIdentifier
(	TokenNameLPAREN
suits	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
socket	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
SSLContext	TokenNameIdentifier
createSSLContext	TokenNameIdentifier
(	TokenNameLPAREN
EncryptionOptions	TokenNameIdentifier
options	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
FileInputStream	TokenNameIdentifier
tsf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FileInputStream	TokenNameIdentifier
(	TokenNameLPAREN
options	TokenNameIdentifier
.	TokenNameDOT
truststore	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
FileInputStream	TokenNameIdentifier
ksf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FileInputStream	TokenNameIdentifier
(	TokenNameLPAREN
options	TokenNameIdentifier
.	TokenNameDOT
keystore	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SSLContext	TokenNameIdentifier
ctx	TokenNameIdentifier
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
ctx	TokenNameIdentifier
=	TokenNameEQUAL
SSLContext	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
options	TokenNameIdentifier
.	TokenNameDOT
protocol	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TrustManagerFactory	TokenNameIdentifier
tmf	TokenNameIdentifier
;	TokenNameSEMICOLON
KeyManagerFactory	TokenNameIdentifier
kmf	TokenNameIdentifier
;	TokenNameSEMICOLON
tmf	TokenNameIdentifier
=	TokenNameEQUAL
TrustManagerFactory	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
options	TokenNameIdentifier
.	TokenNameDOT
algorithm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
KeyStore	TokenNameIdentifier
ts	TokenNameIdentifier
=	TokenNameEQUAL
KeyStore	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
options	TokenNameIdentifier
.	TokenNameDOT
store_type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ts	TokenNameIdentifier
.	TokenNameDOT
load	TokenNameIdentifier
(	TokenNameLPAREN
tsf	TokenNameIdentifier
,	TokenNameCOMMA
options	TokenNameIdentifier
.	TokenNameDOT
truststore_password	TokenNameIdentifier
.	TokenNameDOT
toCharArray	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tmf	TokenNameIdentifier
.	TokenNameDOT
init	TokenNameIdentifier
(	TokenNameLPAREN
ts	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
kmf	TokenNameIdentifier
=	TokenNameEQUAL
KeyManagerFactory	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
options	TokenNameIdentifier
.	TokenNameDOT
algorithm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
KeyStore	TokenNameIdentifier
ks	TokenNameIdentifier
=	TokenNameEQUAL
KeyStore	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
options	TokenNameIdentifier
.	TokenNameDOT
store_type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ks	TokenNameIdentifier
.	TokenNameDOT
load	TokenNameIdentifier
(	TokenNameLPAREN
ksf	TokenNameIdentifier
,	TokenNameCOMMA
options	TokenNameIdentifier
.	TokenNameDOT
keystore_password	TokenNameIdentifier
.	TokenNameDOT
toCharArray	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
kmf	TokenNameIdentifier
.	TokenNameDOT
init	TokenNameIdentifier
(	TokenNameLPAREN
ks	TokenNameIdentifier
,	TokenNameCOMMA
options	TokenNameIdentifier
.	TokenNameDOT
keystore_password	TokenNameIdentifier
.	TokenNameDOT
toCharArray	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ctx	TokenNameIdentifier
.	TokenNameDOT
init	TokenNameIdentifier
(	TokenNameLPAREN
kmf	TokenNameIdentifier
.	TokenNameDOT
getKeyManagers	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
tmf	TokenNameIdentifier
.	TokenNameDOT
getTrustManagers	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IOException	TokenNameIdentifier
(	TokenNameLPAREN
"Error creating the initializing the SSL Context"	TokenNameStringLiteral
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
FileUtils	TokenNameIdentifier
.	TokenNameDOT
closeQuietly	TokenNameIdentifier
(	TokenNameLPAREN
tsf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
FileUtils	TokenNameIdentifier
.	TokenNameDOT
closeQuietly	TokenNameIdentifier
(	TokenNameLPAREN
ksf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
ctx	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
filterCipherSuites	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
supported	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
desired	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
des	TokenNameIdentifier
=	TokenNameEQUAL
Sets	TokenNameIdentifier
.	TokenNameDOT
newHashSet	TokenNameIdentifier
(	TokenNameLPAREN
desired	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
toReturn	TokenNameIdentifier
=	TokenNameEQUAL
Sets	TokenNameIdentifier
.	TokenNameDOT
intersection	TokenNameIdentifier
(	TokenNameLPAREN
Sets	TokenNameIdentifier
.	TokenNameDOT
newHashSet	TokenNameIdentifier
(	TokenNameLPAREN
supported	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
des	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
des	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
toReturn	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
logger	TokenNameIdentifier
.	TokenNameDOT
warn	TokenNameIdentifier
(	TokenNameLPAREN
"Filtering out {} as it isnt supported by the socket"	TokenNameStringLiteral
,	TokenNameCOMMA
StringUtils	TokenNameIdentifier
.	TokenNameDOT
join	TokenNameIdentifier
(	TokenNameLPAREN
Sets	TokenNameIdentifier
.	TokenNameDOT
difference	TokenNameIdentifier
(	TokenNameLPAREN
des	TokenNameIdentifier
,	TokenNameCOMMA
toReturn	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
","	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
toReturn	TokenNameIdentifier
.	TokenNameDOT
toArray	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
toReturn	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
