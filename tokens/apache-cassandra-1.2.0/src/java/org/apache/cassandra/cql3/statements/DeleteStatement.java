package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql3	TokenNameIdentifier
.	TokenNameDOT
statements	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
nio	TokenNameIdentifier
.	TokenNameDOT
ByteBuffer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql3	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
config	TokenNameIdentifier
.	TokenNameDOT
CFMetaData	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql3	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
ListOperation	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql3	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
MapOperation	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql3	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Operation	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql3	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
SetOperation	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
ConsistencyLevel	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
ColumnFamily	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
DeletionInfo	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
RowMutation	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
marshal	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
exceptions	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
thrift	TokenNameIdentifier
.	TokenNameDOT
ThriftValidation	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
Pair	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
DeleteStatement	TokenNameIdentifier
extends	TokenNameextends
ModificationStatement	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
CFDefinition	TokenNameIdentifier
cfDef	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
columns	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
Relation	TokenNameIdentifier
>	TokenNameGREATER
whereClause	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
Pair	TokenNameIdentifier
<	TokenNameLESS
CFDefinition	TokenNameIdentifier
.	TokenNameDOT
Name	TokenNameIdentifier
,	TokenNameCOMMA
Term	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
toRemove	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
Map	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
processedKeys	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
DeleteStatement	TokenNameIdentifier
(	TokenNameLPAREN
CFName	TokenNameIdentifier
name	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
columns	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Relation	TokenNameIdentifier
>	TokenNameGREATER
whereClause	TokenNameIdentifier
,	TokenNameCOMMA
Attributes	TokenNameIdentifier
attrs	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
columns	TokenNameIdentifier
=	TokenNameEQUAL
columns	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
whereClause	TokenNameIdentifier
=	TokenNameEQUAL
whereClause	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
toRemove	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Pair	TokenNameIdentifier
<	TokenNameLESS
CFDefinition	TokenNameIdentifier
.	TokenNameDOT
Name	TokenNameIdentifier
,	TokenNameCOMMA
Term	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
(	TokenNameLPAREN
columns	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
validateConsistency	TokenNameIdentifier
(	TokenNameLPAREN
ConsistencyLevel	TokenNameIdentifier
cl	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
InvalidRequestException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
type	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
Type	TokenNameIdentifier
.	TokenNameDOT
COUNTER	TokenNameIdentifier
)	TokenNameRPAREN
cl	TokenNameIdentifier
.	TokenNameDOT
validateCounterForWrite	TokenNameIdentifier
(	TokenNameLPAREN
cfDef	TokenNameIdentifier
.	TokenNameDOT
cfm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
cl	TokenNameIdentifier
.	TokenNameDOT
validateForWrite	TokenNameIdentifier
(	TokenNameLPAREN
cfDef	TokenNameIdentifier
.	TokenNameDOT
cfm	TokenNameIdentifier
.	TokenNameDOT
ksName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Collection	TokenNameIdentifier
<	TokenNameLESS
RowMutation	TokenNameIdentifier
>	TokenNameGREATER
getMutations	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
variables	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
local	TokenNameIdentifier
,	TokenNameCOMMA
ConsistencyLevel	TokenNameIdentifier
cl	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
now	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RequestExecutionException	TokenNameIdentifier
,	TokenNameCOMMA
RequestValidationException	TokenNameIdentifier
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
keys	TokenNameIdentifier
=	TokenNameEQUAL
UpdateStatement	TokenNameIdentifier
.	TokenNameDOT
buildKeyNames	TokenNameIdentifier
(	TokenNameLPAREN
cfDef	TokenNameIdentifier
,	TokenNameCOMMA
processedKeys	TokenNameIdentifier
,	TokenNameCOMMA
variables	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ColumnNameBuilder	TokenNameIdentifier
builder	TokenNameIdentifier
=	TokenNameEQUAL
cfDef	TokenNameIdentifier
.	TokenNameDOT
getColumnNameBuilder	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CFDefinition	TokenNameIdentifier
.	TokenNameDOT
Name	TokenNameIdentifier
firstEmpty	TokenNameIdentifier
=	TokenNameEQUAL
UpdateStatement	TokenNameIdentifier
.	TokenNameDOT
buildColumnNames	TokenNameIdentifier
(	TokenNameLPAREN
cfDef	TokenNameIdentifier
,	TokenNameCOMMA
processedKeys	TokenNameIdentifier
,	TokenNameCOMMA
builder	TokenNameIdentifier
,	TokenNameCOMMA
variables	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
fullKey	TokenNameIdentifier
=	TokenNameEQUAL
builder	TokenNameIdentifier
.	TokenNameDOT
componentCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
cfDef	TokenNameIdentifier
.	TokenNameDOT
columns	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
isRange	TokenNameIdentifier
=	TokenNameEQUAL
cfDef	TokenNameIdentifier
.	TokenNameDOT
isCompact	TokenNameIdentifier
?	TokenNameQUESTION
!	TokenNameNOT
fullKey	TokenNameIdentifier
:	TokenNameCOLON
(	TokenNameLPAREN
!	TokenNameNOT
fullKey	TokenNameIdentifier
||	TokenNameOR_OR
toRemove	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
toRemove	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
isRange	TokenNameIdentifier
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
InvalidRequestException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Missing mandatory PRIMARY KEY part %s since %s specified"	TokenNameStringLiteral
,	TokenNameCOMMA
firstEmpty	TokenNameIdentifier
,	TokenNameCOMMA
toRemove	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
left	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
toRead	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Pair	TokenNameIdentifier
<	TokenNameLESS
CFDefinition	TokenNameIdentifier
.	TokenNameDOT
Name	TokenNameIdentifier
,	TokenNameCOMMA
Term	TokenNameIdentifier
>	TokenNameGREATER
p	TokenNameIdentifier
:	TokenNameCOLON
toRemove	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
CFDefinition	TokenNameIdentifier
.	TokenNameDOT
Name	TokenNameIdentifier
name	TokenNameIdentifier
=	TokenNameEQUAL
p	TokenNameIdentifier
.	TokenNameDOT
left	TokenNameIdentifier
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
value	TokenNameIdentifier
=	TokenNameEQUAL
p	TokenNameIdentifier
.	TokenNameDOT
right	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
name	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
instanceof	TokenNameinstanceof
ListType	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
value	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
toRead	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
toRead	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TreeSet	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
UTF8Type	TokenNameIdentifier
.	TokenNameDOT
instance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
toRead	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
Map	TokenNameIdentifier
<	TokenNameLESS
ByteBuffer	TokenNameIdentifier
,	TokenNameCOMMA
ColumnGroupMap	TokenNameIdentifier
>	TokenNameGREATER
rows	TokenNameIdentifier
=	TokenNameEQUAL
toRead	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
readRows	TokenNameIdentifier
(	TokenNameLPAREN
keys	TokenNameIdentifier
,	TokenNameCOMMA
builder	TokenNameIdentifier
,	TokenNameCOMMA
toRead	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
CompositeType	TokenNameIdentifier
)	TokenNameRPAREN
cfDef	TokenNameIdentifier
.	TokenNameDOT
cfm	TokenNameIdentifier
.	TokenNameDOT
comparator	TokenNameIdentifier
,	TokenNameCOMMA
local	TokenNameIdentifier
,	TokenNameCOMMA
cl	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
;	TokenNameSEMICOLON
Collection	TokenNameIdentifier
<	TokenNameLESS
RowMutation	TokenNameIdentifier
>	TokenNameGREATER
rowMutations	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
RowMutation	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
keys	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
UpdateParameters	TokenNameIdentifier
params	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
UpdateParameters	TokenNameIdentifier
(	TokenNameLPAREN
variables	TokenNameIdentifier
,	TokenNameCOMMA
getTimestamp	TokenNameIdentifier
(	TokenNameLPAREN
now	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ByteBuffer	TokenNameIdentifier
key	TokenNameIdentifier
:	TokenNameCOLON
keys	TokenNameIdentifier
)	TokenNameRPAREN
rowMutations	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
mutationForKey	TokenNameIdentifier
(	TokenNameLPAREN
cfDef	TokenNameIdentifier
,	TokenNameCOMMA
key	TokenNameIdentifier
,	TokenNameCOMMA
builder	TokenNameIdentifier
,	TokenNameCOMMA
isRange	TokenNameIdentifier
,	TokenNameCOMMA
params	TokenNameIdentifier
,	TokenNameCOMMA
rows	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
null	TokenNamenull
:	TokenNameCOLON
rows	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
rowMutations	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
RowMutation	TokenNameIdentifier
mutationForKey	TokenNameIdentifier
(	TokenNameLPAREN
CFDefinition	TokenNameIdentifier
cfDef	TokenNameIdentifier
,	TokenNameCOMMA
ByteBuffer	TokenNameIdentifier
key	TokenNameIdentifier
,	TokenNameCOMMA
ColumnNameBuilder	TokenNameIdentifier
builder	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
isRange	TokenNameIdentifier
,	TokenNameCOMMA
UpdateParameters	TokenNameIdentifier
params	TokenNameIdentifier
,	TokenNameCOMMA
ColumnGroupMap	TokenNameIdentifier
group	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
InvalidRequestException	TokenNameIdentifier
{	TokenNameLBRACE
QueryProcessor	TokenNameIdentifier
.	TokenNameDOT
validateKey	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
RowMutation	TokenNameIdentifier
rm	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
RowMutation	TokenNameIdentifier
(	TokenNameLPAREN
cfDef	TokenNameIdentifier
.	TokenNameDOT
cfm	TokenNameIdentifier
.	TokenNameDOT
ksName	TokenNameIdentifier
,	TokenNameCOMMA
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ColumnFamily	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
rm	TokenNameIdentifier
.	TokenNameDOT
addOrGet	TokenNameIdentifier
(	TokenNameLPAREN
columnFamily	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
columns	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
builder	TokenNameIdentifier
.	TokenNameDOT
componentCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
cf	TokenNameIdentifier
.	TokenNameDOT
delete	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
DeletionInfo	TokenNameIdentifier
(	TokenNameLPAREN
params	TokenNameIdentifier
.	TokenNameDOT
timestamp	TokenNameIdentifier
,	TokenNameCOMMA
params	TokenNameIdentifier
.	TokenNameDOT
localDeletionTime	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
isRange	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ByteBuffer	TokenNameIdentifier
start	TokenNameIdentifier
=	TokenNameEQUAL
builder	TokenNameIdentifier
.	TokenNameDOT
copy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
build	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ByteBuffer	TokenNameIdentifier
end	TokenNameIdentifier
=	TokenNameEQUAL
builder	TokenNameIdentifier
.	TokenNameDOT
buildAsEndOfRange	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
QueryProcessor	TokenNameIdentifier
.	TokenNameDOT
validateColumnName	TokenNameIdentifier
(	TokenNameLPAREN
start	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addAtom	TokenNameIdentifier
(	TokenNameLPAREN
params	TokenNameIdentifier
.	TokenNameDOT
makeRangeTombstone	TokenNameIdentifier
(	TokenNameLPAREN
start	TokenNameIdentifier
,	TokenNameCOMMA
end	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cfDef	TokenNameIdentifier
.	TokenNameDOT
isCompact	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ByteBuffer	TokenNameIdentifier
columnName	TokenNameIdentifier
=	TokenNameEQUAL
builder	TokenNameIdentifier
.	TokenNameDOT
build	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
QueryProcessor	TokenNameIdentifier
.	TokenNameDOT
validateColumnName	TokenNameIdentifier
(	TokenNameLPAREN
columnName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
params	TokenNameIdentifier
.	TokenNameDOT
makeTombstone	TokenNameIdentifier
(	TokenNameLPAREN
columnName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Iterator	TokenNameIdentifier
<	TokenNameLESS
Pair	TokenNameIdentifier
<	TokenNameLESS
CFDefinition	TokenNameIdentifier
.	TokenNameDOT
Name	TokenNameIdentifier
,	TokenNameCOMMA
Term	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
iter	TokenNameIdentifier
=	TokenNameEQUAL
toRemove	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
iter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Pair	TokenNameIdentifier
<	TokenNameLESS
CFDefinition	TokenNameIdentifier
.	TokenNameDOT
Name	TokenNameIdentifier
,	TokenNameCOMMA
Term	TokenNameIdentifier
>	TokenNameGREATER
p	TokenNameIdentifier
=	TokenNameEQUAL
iter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CFDefinition	TokenNameIdentifier
.	TokenNameDOT
Name	TokenNameIdentifier
column	TokenNameIdentifier
=	TokenNameEQUAL
p	TokenNameIdentifier
.	TokenNameDOT
left	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
.	TokenNameDOT
isCollection	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CollectionType	TokenNameIdentifier
validator	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
CollectionType	TokenNameIdentifier
)	TokenNameRPAREN
column	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
keySelected	TokenNameIdentifier
=	TokenNameEQUAL
p	TokenNameIdentifier
.	TokenNameDOT
right	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
keySelected	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
ByteBuffer	TokenNameIdentifier
start	TokenNameIdentifier
=	TokenNameEQUAL
builder	TokenNameIdentifier
.	TokenNameDOT
copy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
build	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
QueryProcessor	TokenNameIdentifier
.	TokenNameDOT
validateColumnName	TokenNameIdentifier
(	TokenNameLPAREN
start	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ColumnNameBuilder	TokenNameIdentifier
b	TokenNameIdentifier
=	TokenNameEQUAL
iter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
builder	TokenNameIdentifier
.	TokenNameDOT
copy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
builder	TokenNameIdentifier
;	TokenNameSEMICOLON
ByteBuffer	TokenNameIdentifier
end	TokenNameIdentifier
=	TokenNameEQUAL
b	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
buildAsEndOfRange	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addAtom	TokenNameIdentifier
(	TokenNameLPAREN
params	TokenNameIdentifier
.	TokenNameDOT
makeRangeTombstone	TokenNameIdentifier
(	TokenNameLPAREN
start	TokenNameIdentifier
,	TokenNameCOMMA
end	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
builder	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
args	TokenNameIdentifier
=	TokenNameEQUAL
Collections	TokenNameIdentifier
.	TokenNameDOT
singletonList	TokenNameIdentifier
(	TokenNameLPAREN
keySelected	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Operation	TokenNameIdentifier
op	TokenNameIdentifier
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
validator	TokenNameIdentifier
.	TokenNameDOT
kind	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
LIST	TokenNameIdentifier
:	TokenNameCOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
ListOperation	TokenNameIdentifier
.	TokenNameDOT
DiscardKey	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
SET	TokenNameIdentifier
:	TokenNameCOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
SetOperation	TokenNameIdentifier
.	TokenNameDOT
Discard	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
MAP	TokenNameIdentifier
:	TokenNameCOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
MapOperation	TokenNameIdentifier
.	TokenNameDOT
DiscardKey	TokenNameIdentifier
(	TokenNameLPAREN
keySelected	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
throw	TokenNamethrow
new	TokenNamenew
InvalidRequestException	TokenNameIdentifier
(	TokenNameLPAREN
"Unknown collection type: "	TokenNameStringLiteral
+	TokenNamePLUS
validator	TokenNameIdentifier
.	TokenNameDOT
kind	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
op	TokenNameIdentifier
.	TokenNameDOT
execute	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
builder	TokenNameIdentifier
,	TokenNameCOMMA
validator	TokenNameIdentifier
,	TokenNameCOMMA
params	TokenNameIdentifier
,	TokenNameCOMMA
group	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
null	TokenNamenull
:	TokenNameCOLON
group	TokenNameIdentifier
.	TokenNameDOT
getCollection	TokenNameIdentifier
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
ColumnNameBuilder	TokenNameIdentifier
b	TokenNameIdentifier
=	TokenNameEQUAL
iter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
builder	TokenNameIdentifier
.	TokenNameDOT
copy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
builder	TokenNameIdentifier
;	TokenNameSEMICOLON
ByteBuffer	TokenNameIdentifier
columnName	TokenNameIdentifier
=	TokenNameEQUAL
b	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
name	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
build	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
QueryProcessor	TokenNameIdentifier
.	TokenNameDOT
validateColumnName	TokenNameIdentifier
(	TokenNameLPAREN
columnName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
.	TokenNameDOT
addColumn	TokenNameIdentifier
(	TokenNameLPAREN
params	TokenNameIdentifier
.	TokenNameDOT
makeTombstone	TokenNameIdentifier
(	TokenNameLPAREN
columnName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
rm	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ParsedStatement	TokenNameIdentifier
.	TokenNameDOT
Prepared	TokenNameIdentifier
prepare	TokenNameIdentifier
(	TokenNameLPAREN
ColumnSpecification	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
boundNames	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
InvalidRequestException	TokenNameIdentifier
{	TokenNameLBRACE
CFMetaData	TokenNameIdentifier
metadata	TokenNameIdentifier
=	TokenNameEQUAL
ThriftValidation	TokenNameIdentifier
.	TokenNameDOT
validateColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
keyspace	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
metadata	TokenNameIdentifier
.	TokenNameDOT
getDefaultValidator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isCommutative	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
Type	TokenNameIdentifier
.	TokenNameDOT
COUNTER	TokenNameIdentifier
:	TokenNameCOLON
Type	TokenNameIdentifier
.	TokenNameDOT
LOGGED	TokenNameIdentifier
;	TokenNameSEMICOLON
cfDef	TokenNameIdentifier
=	TokenNameEQUAL
metadata	TokenNameIdentifier
.	TokenNameDOT
getCfDef	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
UpdateStatement	TokenNameIdentifier
.	TokenNameDOT
processKeys	TokenNameIdentifier
(	TokenNameLPAREN
cfDef	TokenNameIdentifier
,	TokenNameCOMMA
whereClause	TokenNameIdentifier
,	TokenNameCOMMA
processedKeys	TokenNameIdentifier
,	TokenNameCOMMA
boundNames	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Selector	TokenNameIdentifier
column	TokenNameIdentifier
:	TokenNameCOLON
columns	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
CFDefinition	TokenNameIdentifier
.	TokenNameDOT
Name	TokenNameIdentifier
name	TokenNameIdentifier
=	TokenNameEQUAL
cfDef	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
id	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
name	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
InvalidRequestException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Unknown identifier %s"	TokenNameStringLiteral
,	TokenNameCOMMA
column	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
name	TokenNameIdentifier
.	TokenNameDOT
kind	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
CFDefinition	TokenNameIdentifier
.	TokenNameDOT
Name	TokenNameIdentifier
.	TokenNameDOT
Kind	TokenNameIdentifier
.	TokenNameDOT
COLUMN_METADATA	TokenNameIdentifier
&&	TokenNameAND_AND
name	TokenNameIdentifier
.	TokenNameDOT
kind	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
CFDefinition	TokenNameIdentifier
.	TokenNameDOT
Name	TokenNameIdentifier
.	TokenNameDOT
Kind	TokenNameIdentifier
.	TokenNameDOT
VALUE_ALIAS	TokenNameIdentifier
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
InvalidRequestException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Invalid identifier %s for deletion (should not be a PRIMARY KEY part)"	TokenNameStringLiteral
,	TokenNameCOMMA
column	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
name	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
instanceof	TokenNameinstanceof
ListType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isBindMarker	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
boundNames	TokenNameIdentifier
[	TokenNameLBRACKET
column	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
bindIndex	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
ListOperation	TokenNameIdentifier
.	TokenNameDOT
indexSpecOf	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
name	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
instanceof	TokenNameinstanceof
MapType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
column	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isBindMarker	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
boundNames	TokenNameIdentifier
[	TokenNameLBRACKET
column	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
bindIndex	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
MapOperation	TokenNameIdentifier
.	TokenNameDOT
keySpecOf	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
MapType	TokenNameIdentifier
)	TokenNameRPAREN
name	TokenNameIdentifier
.	TokenNameDOT
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
InvalidRequestException	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"Invalid selection %s since %s is neither a list or a map"	TokenNameStringLiteral
,	TokenNameCOMMA
column	TokenNameIdentifier
,	TokenNameCOMMA
column	TokenNameIdentifier
.	TokenNameDOT
id	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
toRemove	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
Pair	TokenNameIdentifier
.	TokenNameDOT
create	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
column	TokenNameIdentifier
.	TokenNameDOT
key	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
new	TokenNamenew
ParsedStatement	TokenNameIdentifier
.	TokenNameDOT
Prepared	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
,	TokenNameCOMMA
Arrays	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
ColumnSpecification	TokenNameIdentifier
>	TokenNameGREATER
asList	TokenNameIdentifier
(	TokenNameLPAREN
boundNames	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ParsedStatement	TokenNameIdentifier
.	TokenNameDOT
Prepared	TokenNameIdentifier
prepare	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
InvalidRequestException	TokenNameIdentifier
{	TokenNameLBRACE
ColumnSpecification	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
boundNames	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ColumnSpecification	TokenNameIdentifier
[	TokenNameLBRACKET
getBoundsTerms	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
return	TokenNamereturn
prepare	TokenNameIdentifier
(	TokenNameLPAREN
boundNames	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
"DeleteStatement(name=%s, columns=%s, keys=%s)"	TokenNameStringLiteral
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
columns	TokenNameIdentifier
,	TokenNameCOMMA
whereClause	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
