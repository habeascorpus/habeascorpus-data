package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
tools	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
PrintStream	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
management	TokenNameIdentifier
.	TokenNameDOT
ManagementFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
management	TokenNameIdentifier
.	TokenNameDOT
MemoryMXBean	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
management	TokenNameIdentifier
.	TokenNameDOT
MemoryUsage	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
management	TokenNameIdentifier
.	TokenNameDOT
RuntimeMXBean	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
InetAddress	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
UnknownHostException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
ExecutionException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
TimeoutException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
management	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
management	TokenNameIdentifier
.	TokenNameDOT
remote	TokenNameIdentifier
.	TokenNameDOT
JMXConnector	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
management	TokenNameIdentifier
.	TokenNameDOT
remote	TokenNameIdentifier
.	TokenNameDOT
JMXConnectorFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
management	TokenNameIdentifier
.	TokenNameDOT
remote	TokenNameIdentifier
.	TokenNameDOT
JMXServiceURL	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
com	TokenNameIdentifier
.	TokenNameDOT
google	TokenNameIdentifier
.	TokenNameDOT
common	TokenNameIdentifier
.	TokenNameDOT
collect	TokenNameIdentifier
.	TokenNameDOT
Iterables	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
concurrent	TokenNameIdentifier
.	TokenNameDOT
JMXEnabledThreadPoolExecutorMBean	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
ColumnFamilyStoreMBean	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
compaction	TokenNameIdentifier
.	TokenNameDOT
CompactionManager	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
compaction	TokenNameIdentifier
.	TokenNameDOT
CompactionManagerMBean	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
gms	TokenNameIdentifier
.	TokenNameDOT
FailureDetector	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
gms	TokenNameIdentifier
.	TokenNameDOT
FailureDetectorMBean	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
locator	TokenNameIdentifier
.	TokenNameDOT
EndpointSnitchInfoMBean	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
MessagingService	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
MessagingServiceMBean	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
service	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
streaming	TokenNameIdentifier
.	TokenNameDOT
StreamingService	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
streaming	TokenNameIdentifier
.	TokenNameDOT
StreamingServiceMBean	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
NodeProbe	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
fmtUrl	TokenNameIdentifier
=	TokenNameEQUAL
"service:jmx:rmi:///jndi/rmi://%s:%d/jmxrmi"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ssObjName	TokenNameIdentifier
=	TokenNameEQUAL
"org.apache.cassandra.db:type=StorageService"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
defaultPort	TokenNameIdentifier
=	TokenNameEQUAL
7199	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
host	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
port	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
username	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
password	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
JMXConnector	TokenNameIdentifier
jmxc	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
MBeanServerConnection	TokenNameIdentifier
mbeanServerConn	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
CompactionManagerMBean	TokenNameIdentifier
compactionProxy	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
StorageServiceMBean	TokenNameIdentifier
ssProxy	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
MemoryMXBean	TokenNameIdentifier
memProxy	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
RuntimeMXBean	TokenNameIdentifier
runtimeProxy	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
StreamingServiceMBean	TokenNameIdentifier
streamProxy	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
MessagingServiceMBean	TokenNameIdentifier
msProxy	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
FailureDetectorMBean	TokenNameIdentifier
fdProxy	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
CacheServiceMBean	TokenNameIdentifier
cacheService	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
PBSPredictorMBean	TokenNameIdentifier
PBSPredictorProxy	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
StorageProxyMBean	TokenNameIdentifier
spProxy	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
NodeProbe	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
host	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
port	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
username	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
password	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
assert	TokenNameassert
username	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
!	TokenNameNOT
username	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
password	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
!	TokenNameNOT
password	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
"neither username nor password can be blank"	TokenNameStringLiteral
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
host	TokenNameIdentifier
=	TokenNameEQUAL
host	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
port	TokenNameIdentifier
=	TokenNameEQUAL
port	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
username	TokenNameIdentifier
=	TokenNameEQUAL
username	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
password	TokenNameIdentifier
=	TokenNameEQUAL
password	TokenNameIdentifier
;	TokenNameSEMICOLON
connect	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
NodeProbe	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
host	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
port	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
host	TokenNameIdentifier
=	TokenNameEQUAL
host	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
port	TokenNameIdentifier
=	TokenNameEQUAL
port	TokenNameIdentifier
;	TokenNameSEMICOLON
connect	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
NodeProbe	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
host	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
host	TokenNameIdentifier
=	TokenNameEQUAL
host	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
port	TokenNameIdentifier
=	TokenNameEQUAL
defaultPort	TokenNameIdentifier
;	TokenNameSEMICOLON
connect	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
connect	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
JMXServiceURL	TokenNameIdentifier
jmxUrl	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
JMXServiceURL	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
fmtUrl	TokenNameIdentifier
,	TokenNameCOMMA
host	TokenNameIdentifier
,	TokenNameCOMMA
port	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
>	TokenNameGREATER
env	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
username	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
creds	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
username	TokenNameIdentifier
,	TokenNameCOMMA
password	TokenNameIdentifier
}	TokenNameRBRACE
;	TokenNameSEMICOLON
env	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
JMXConnector	TokenNameIdentifier
.	TokenNameDOT
CREDENTIALS	TokenNameIdentifier
,	TokenNameCOMMA
creds	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
jmxc	TokenNameIdentifier
=	TokenNameEQUAL
JMXConnectorFactory	TokenNameIdentifier
.	TokenNameDOT
connect	TokenNameIdentifier
(	TokenNameLPAREN
jmxUrl	TokenNameIdentifier
,	TokenNameCOMMA
env	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mbeanServerConn	TokenNameIdentifier
=	TokenNameEQUAL
jmxc	TokenNameIdentifier
.	TokenNameDOT
getMBeanServerConnection	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
ObjectName	TokenNameIdentifier
name	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
ssObjName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ssProxy	TokenNameIdentifier
=	TokenNameEQUAL
JMX	TokenNameIdentifier
.	TokenNameDOT
newMBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
name	TokenNameIdentifier
,	TokenNameCOMMA
StorageServiceMBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
name	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
PBSPredictor	TokenNameIdentifier
.	TokenNameDOT
MBEAN_NAME	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
PBSPredictorProxy	TokenNameIdentifier
=	TokenNameEQUAL
JMX	TokenNameIdentifier
.	TokenNameDOT
newMBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
name	TokenNameIdentifier
,	TokenNameCOMMA
PBSPredictorMBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
name	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
MessagingService	TokenNameIdentifier
.	TokenNameDOT
MBEAN_NAME	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
msProxy	TokenNameIdentifier
=	TokenNameEQUAL
JMX	TokenNameIdentifier
.	TokenNameDOT
newMBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
name	TokenNameIdentifier
,	TokenNameCOMMA
MessagingServiceMBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
name	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
StreamingService	TokenNameIdentifier
.	TokenNameDOT
MBEAN_OBJECT_NAME	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
streamProxy	TokenNameIdentifier
=	TokenNameEQUAL
JMX	TokenNameIdentifier
.	TokenNameDOT
newMBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
name	TokenNameIdentifier
,	TokenNameCOMMA
StreamingServiceMBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
name	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
CompactionManager	TokenNameIdentifier
.	TokenNameDOT
MBEAN_OBJECT_NAME	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
compactionProxy	TokenNameIdentifier
=	TokenNameEQUAL
JMX	TokenNameIdentifier
.	TokenNameDOT
newMBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
name	TokenNameIdentifier
,	TokenNameCOMMA
CompactionManagerMBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
name	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
FailureDetector	TokenNameIdentifier
.	TokenNameDOT
MBEAN_NAME	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fdProxy	TokenNameIdentifier
=	TokenNameEQUAL
JMX	TokenNameIdentifier
.	TokenNameDOT
newMBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
name	TokenNameIdentifier
,	TokenNameCOMMA
FailureDetectorMBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
name	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
CacheService	TokenNameIdentifier
.	TokenNameDOT
MBEAN_NAME	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cacheService	TokenNameIdentifier
=	TokenNameEQUAL
JMX	TokenNameIdentifier
.	TokenNameDOT
newMBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
name	TokenNameIdentifier
,	TokenNameCOMMA
CacheServiceMBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
name	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
StorageProxy	TokenNameIdentifier
.	TokenNameDOT
MBEAN_NAME	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
spProxy	TokenNameIdentifier
=	TokenNameEQUAL
JMX	TokenNameIdentifier
.	TokenNameDOT
newMBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
name	TokenNameIdentifier
,	TokenNameCOMMA
StorageProxyMBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MalformedObjectNameException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Invalid ObjectName? Please report this as a bug."	TokenNameStringLiteral
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
memProxy	TokenNameIdentifier
=	TokenNameEQUAL
ManagementFactory	TokenNameIdentifier
.	TokenNameDOT
newPlatformMXBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
ManagementFactory	TokenNameIdentifier
.	TokenNameDOT
MEMORY_MXBEAN_NAME	TokenNameIdentifier
,	TokenNameCOMMA
MemoryMXBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
runtimeProxy	TokenNameIdentifier
=	TokenNameEQUAL
ManagementFactory	TokenNameIdentifier
.	TokenNameDOT
newPlatformMXBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
ManagementFactory	TokenNameIdentifier
.	TokenNameDOT
RUNTIME_MXBEAN_NAME	TokenNameIdentifier
,	TokenNameCOMMA
RuntimeMXBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
jmxc	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
forceTableCleanup	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tableName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
...	TokenNameELLIPSIS
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
ExecutionException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
forceTableCleanup	TokenNameIdentifier
(	TokenNameLPAREN
tableName	TokenNameIdentifier
,	TokenNameCOMMA
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
scrub	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tableName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
...	TokenNameELLIPSIS
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
ExecutionException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
scrub	TokenNameIdentifier
(	TokenNameLPAREN
tableName	TokenNameIdentifier
,	TokenNameCOMMA
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
upgradeSSTables	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tableName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
...	TokenNameELLIPSIS
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
ExecutionException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
upgradeSSTables	TokenNameIdentifier
(	TokenNameLPAREN
tableName	TokenNameIdentifier
,	TokenNameCOMMA
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
forceTableCompaction	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tableName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
...	TokenNameELLIPSIS
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
ExecutionException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
forceTableCompaction	TokenNameIdentifier
(	TokenNameLPAREN
tableName	TokenNameIdentifier
,	TokenNameCOMMA
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
forceTableFlush	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tableName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
...	TokenNameELLIPSIS
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
ExecutionException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
forceTableFlush	TokenNameIdentifier
(	TokenNameLPAREN
tableName	TokenNameIdentifier
,	TokenNameCOMMA
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
forceTableRepair	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tableName	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
isSequential	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
isLocal	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
...	TokenNameELLIPSIS
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
forceTableRepair	TokenNameIdentifier
(	TokenNameLPAREN
tableName	TokenNameIdentifier
,	TokenNameCOMMA
isSequential	TokenNameIdentifier
,	TokenNameCOMMA
isLocal	TokenNameIdentifier
,	TokenNameCOMMA
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
forceTableRepairPrimaryRange	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tableName	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
isSequential	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
isLocal	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
...	TokenNameELLIPSIS
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
forceTableRepairPrimaryRange	TokenNameIdentifier
(	TokenNameLPAREN
tableName	TokenNameIdentifier
,	TokenNameCOMMA
isSequential	TokenNameIdentifier
,	TokenNameCOMMA
isLocal	TokenNameIdentifier
,	TokenNameCOMMA
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
forceTableRepairRange	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
beginToken	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
endToken	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
tableName	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
isSequential	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
isLocal	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
...	TokenNameELLIPSIS
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
forceTableRepairRange	TokenNameIdentifier
(	TokenNameLPAREN
beginToken	TokenNameIdentifier
,	TokenNameCOMMA
endToken	TokenNameIdentifier
,	TokenNameCOMMA
tableName	TokenNameIdentifier
,	TokenNameCOMMA
isSequential	TokenNameIdentifier
,	TokenNameCOMMA
isLocal	TokenNameIdentifier
,	TokenNameCOMMA
columnFamilies	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
invalidateKeyCache	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
cacheService	TokenNameIdentifier
.	TokenNameDOT
invalidateKeyCache	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
invalidateRowCache	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
cacheService	TokenNameIdentifier
.	TokenNameDOT
invalidateRowCache	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
drain	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
,	TokenNameCOMMA
ExecutionException	TokenNameIdentifier
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
drain	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
getTokenToEndpointMap	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getTokenToEndpointMap	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
getLiveNodes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getLiveNodes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
getJoiningNodes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getJoiningNodes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
getLeavingNodes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getLeavingNodes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
getMovingNodes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getMovingNodes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
getUnreachableNodes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getUnreachableNodes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
getLoadMap	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getLoadMap	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Map	TokenNameIdentifier
<	TokenNameLESS
InetAddress	TokenNameIdentifier
,	TokenNameCOMMA
Float	TokenNameIdentifier
>	TokenNameGREATER
getOwnership	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getOwnership	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Map	TokenNameIdentifier
<	TokenNameLESS
InetAddress	TokenNameIdentifier
,	TokenNameCOMMA
Float	TokenNameIdentifier
>	TokenNameGREATER
effectiveOwnership	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IllegalStateException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
effectiveOwnership	TokenNameIdentifier
(	TokenNameLPAREN
keyspace	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CacheServiceMBean	TokenNameIdentifier
getCacheServiceMBean	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
cachePath	TokenNameIdentifier
=	TokenNameEQUAL
"org.apache.cassandra.db:type=Caches"	TokenNameStringLiteral
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
JMX	TokenNameIdentifier
.	TokenNameDOT
newMBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
cachePath	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
CacheServiceMBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MalformedObjectNameException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
Iterator	TokenNameIdentifier
<	TokenNameLESS
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ColumnFamilyStoreMBean	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
getColumnFamilyStoreMBeanProxies	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
ColumnFamilyStoreMBeanIterator	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MalformedObjectNameException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Invalid ObjectName? Please report this as a bug."	TokenNameStringLiteral
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
IOException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Could not retrieve list of stat mbeans."	TokenNameStringLiteral
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
CompactionManagerMBean	TokenNameIdentifier
getCompactionManagerProxy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
compactionProxy	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
getTokens	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getTokens	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
getTokens	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
endpoint	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getTokens	TokenNameIdentifier
(	TokenNameLPAREN
endpoint	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
UnknownHostException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getLocalHostId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getLocalHostId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
getHostIdMap	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getHostIdMap	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getLoadString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getLoadString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getReleaseVersion	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getReleaseVersion	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getCurrentGenerationNumber	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getCurrentGenerationNumber	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
long	TokenNamelong
getUptime	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
runtimeProxy	TokenNameIdentifier
.	TokenNameDOT
getUptime	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
MemoryUsage	TokenNameIdentifier
getHeapMemoryUsage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
memProxy	TokenNameIdentifier
.	TokenNameDOT
getHeapMemoryUsage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
takeSnapshot	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
snapshotName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
...	TokenNameELLIPSIS
keyspaces	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
columnFamily	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
keyspaces	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
IOException	TokenNameIdentifier
(	TokenNameLPAREN
"When specifying the column family for a snapshot, you must specify one and only one keyspace"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
takeColumnFamilySnapshot	TokenNameIdentifier
(	TokenNameLPAREN
keyspaces	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
columnFamily	TokenNameIdentifier
,	TokenNameCOMMA
snapshotName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
ssProxy	TokenNameIdentifier
.	TokenNameDOT
takeSnapshot	TokenNameIdentifier
(	TokenNameLPAREN
snapshotName	TokenNameIdentifier
,	TokenNameCOMMA
keyspaces	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
clearSnapshot	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tag	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
...	TokenNameELLIPSIS
keyspaces	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
clearSnapshot	TokenNameIdentifier
(	TokenNameLPAREN
tag	TokenNameIdentifier
,	TokenNameCOMMA
keyspaces	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isJoined	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
isJoined	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
joinRing	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
joinRing	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
decommission	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
decommission	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
move	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
newToken	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
,	TokenNameCOMMA
InterruptedException	TokenNameIdentifier
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
move	TokenNameIdentifier
(	TokenNameLPAREN
newToken	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
removeNode	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
token	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
removeNode	TokenNameIdentifier
(	TokenNameLPAREN
token	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getRemovalStatus	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getRemovalStatus	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
forceRemoveCompletion	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
forceRemoveCompletion	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Iterator	TokenNameIdentifier
<	TokenNameLESS
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
JMXEnabledThreadPoolExecutorMBean	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
getThreadPoolMBeanProxies	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
ThreadPoolProxyMBeanIterator	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MalformedObjectNameException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Invalid ObjectName? Please report this as a bug."	TokenNameStringLiteral
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
IOException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Could not retrieve list of stat mbeans."	TokenNameStringLiteral
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
getCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
PrintStream	TokenNameIdentifier
outs	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
ks	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ColumnFamilyStoreMBean	TokenNameIdentifier
cfsProxy	TokenNameIdentifier
=	TokenNameEQUAL
getCfsProxy	TokenNameIdentifier
(	TokenNameLPAREN
ks	TokenNameIdentifier
,	TokenNameCOMMA
cf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
outs	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Current compaction thresholds for "	TokenNameStringLiteral
+	TokenNamePLUS
ks	TokenNameIdentifier
+	TokenNamePLUS
"/"	TokenNameStringLiteral
+	TokenNamePLUS
cf	TokenNameIdentifier
+	TokenNamePLUS
":  "	TokenNameStringLiteral
+	TokenNamePLUS
" min = "	TokenNameStringLiteral
+	TokenNamePLUS
cfsProxy	TokenNameIdentifier
.	TokenNameDOT
getMinimumCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
", "	TokenNameStringLiteral
+	TokenNamePLUS
" max = "	TokenNameStringLiteral
+	TokenNamePLUS
cfsProxy	TokenNameIdentifier
.	TokenNameDOT
getMaximumCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setCompactionThreshold	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
ks	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cf	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
minimumCompactionThreshold	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
maximumCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ColumnFamilyStoreMBean	TokenNameIdentifier
cfsProxy	TokenNameIdentifier
=	TokenNameEQUAL
getCfsProxy	TokenNameIdentifier
(	TokenNameLPAREN
ks	TokenNameIdentifier
,	TokenNameCOMMA
cf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfsProxy	TokenNameIdentifier
.	TokenNameDOT
setCompactionThresholds	TokenNameIdentifier
(	TokenNameLPAREN
minimumCompactionThreshold	TokenNameIdentifier
,	TokenNameCOMMA
maximumCompactionThreshold	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setCacheCapacities	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
keyCacheCapacity	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
rowCacheCapacity	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
String	TokenNameIdentifier
keyCachePath	TokenNameIdentifier
=	TokenNameEQUAL
"org.apache.cassandra.db:type=Caches"	TokenNameStringLiteral
;	TokenNameSEMICOLON
CacheServiceMBean	TokenNameIdentifier
cacheMBean	TokenNameIdentifier
=	TokenNameEQUAL
JMX	TokenNameIdentifier
.	TokenNameDOT
newMBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
keyCachePath	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
CacheServiceMBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cacheMBean	TokenNameIdentifier
.	TokenNameDOT
setKeyCacheCapacityInMB	TokenNameIdentifier
(	TokenNameLPAREN
keyCacheCapacity	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cacheMBean	TokenNameIdentifier
.	TokenNameDOT
setRowCacheCapacityInMB	TokenNameIdentifier
(	TokenNameLPAREN
rowCacheCapacity	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MalformedObjectNameException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
InetAddress	TokenNameIdentifier
>	TokenNameGREATER
getEndpoints	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
key	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getNaturalEndpoints	TokenNameIdentifier
(	TokenNameLPAREN
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
cf	TokenNameIdentifier
,	TokenNameCOMMA
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
getSSTables	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cf	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
key	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ColumnFamilyStoreMBean	TokenNameIdentifier
cfsProxy	TokenNameIdentifier
=	TokenNameEQUAL
getCfsProxy	TokenNameIdentifier
(	TokenNameLPAREN
keyspace	TokenNameIdentifier
,	TokenNameCOMMA
cf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
cfsProxy	TokenNameIdentifier
.	TokenNameDOT
getSSTablesForKey	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Set	TokenNameIdentifier
<	TokenNameLESS
InetAddress	TokenNameIdentifier
>	TokenNameGREATER
getStreamDestinations	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
streamProxy	TokenNameIdentifier
.	TokenNameDOT
getStreamDestinations	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
getFilesDestinedFor	TokenNameIdentifier
(	TokenNameLPAREN
InetAddress	TokenNameIdentifier
host	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
streamProxy	TokenNameIdentifier
.	TokenNameDOT
getOutgoingFiles	TokenNameIdentifier
(	TokenNameLPAREN
host	TokenNameIdentifier
.	TokenNameDOT
getHostAddress	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Set	TokenNameIdentifier
<	TokenNameLESS
InetAddress	TokenNameIdentifier
>	TokenNameGREATER
getStreamSources	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
streamProxy	TokenNameIdentifier
.	TokenNameDOT
getStreamSources	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
getIncomingFiles	TokenNameIdentifier
(	TokenNameLPAREN
InetAddress	TokenNameIdentifier
host	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
streamProxy	TokenNameIdentifier
.	TokenNameDOT
getIncomingFiles	TokenNameIdentifier
(	TokenNameLPAREN
host	TokenNameIdentifier
.	TokenNameDOT
getHostAddress	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getOperationMode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getOperationMode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
truncate	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tableName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cfName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
truncate	TokenNameIdentifier
(	TokenNameLPAREN
tableName	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
TimeoutException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Error while executing truncate"	TokenNameStringLiteral
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
IOException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Error while executing truncate"	TokenNameStringLiteral
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
EndpointSnitchInfoMBean	TokenNameIdentifier
getEndpointSnitchInfoProxy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
JMX	TokenNameIdentifier
.	TokenNameDOT
newMBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.cassandra.db:type=EndpointSnitchInfo"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
EndpointSnitchInfoMBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MalformedObjectNameException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
ColumnFamilyStoreMBean	TokenNameIdentifier
getCfsProxy	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
ks	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cf	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ColumnFamilyStoreMBean	TokenNameIdentifier
cfsProxy	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
ObjectName	TokenNameIdentifier
>	TokenNameGREATER
beans	TokenNameIdentifier
=	TokenNameEQUAL
mbeanServerConn	TokenNameIdentifier
.	TokenNameDOT
queryNames	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.cassandra.db:type=*ColumnFamilies,keyspace="	TokenNameStringLiteral
+	TokenNamePLUS
ks	TokenNameIdentifier
+	TokenNamePLUS
",columnfamily="	TokenNameStringLiteral
+	TokenNamePLUS
cf	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
beans	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
MalformedObjectNameException	TokenNameIdentifier
(	TokenNameLPAREN
"couldn't find that bean"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assert	TokenNameassert
beans	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
ObjectName	TokenNameIdentifier
bean	TokenNameIdentifier
:	TokenNameCOLON
beans	TokenNameIdentifier
)	TokenNameRPAREN
cfsProxy	TokenNameIdentifier
=	TokenNameEQUAL
JMX	TokenNameIdentifier
.	TokenNameDOT
newMBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
bean	TokenNameIdentifier
,	TokenNameCOMMA
ColumnFamilyStoreMBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MalformedObjectNameException	TokenNameIdentifier
mone	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
err	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"ColumnFamilyStore for "	TokenNameStringLiteral
+	TokenNamePLUS
ks	TokenNameIdentifier
+	TokenNamePLUS
"/"	TokenNameStringLiteral
+	TokenNamePLUS
cf	TokenNameIdentifier
+	TokenNamePLUS
" not found."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
exit	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
IOException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
err	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"ColumnFamilyStore for "	TokenNameStringLiteral
+	TokenNamePLUS
ks	TokenNameIdentifier
+	TokenNamePLUS
"/"	TokenNameStringLiteral
+	TokenNamePLUS
cf	TokenNameIdentifier
+	TokenNamePLUS
" not found: "	TokenNameStringLiteral
+	TokenNamePLUS
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
exit	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
cfsProxy	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
StorageProxyMBean	TokenNameIdentifier
getSpProxy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
spProxy	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getEndpoint	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
stringToken	TokenNameIdentifier
=	TokenNameEQUAL
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getTokens	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
tokenToEndpoint	TokenNameIdentifier
=	TokenNameEQUAL
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getTokenToEndpointMap	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
pair	TokenNameIdentifier
:	TokenNameCOLON
tokenToEndpoint	TokenNameIdentifier
.	TokenNameDOT
entrySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
pair	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
stringToken	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
pair	TokenNameIdentifier
.	TokenNameDOT
getValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Could not find myself in the endpoint list, something is very wrong!  Is the Cassandra node fully started?"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getDataCenter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
getEndpointSnitchInfoProxy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getDatacenter	TokenNameIdentifier
(	TokenNameLPAREN
getEndpoint	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
UnknownHostException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"Unknown"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getRack	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
getEndpointSnitchInfoProxy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getRack	TokenNameIdentifier
(	TokenNameLPAREN
getEndpoint	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
UnknownHostException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"Unknown"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
getKeyspaces	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getKeyspaces	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
stopGossiping	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
stopGossiping	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
startGossiping	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
startGossiping	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
stopThriftServer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
stopRPCServer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
startThriftServer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
startRPCServer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isThriftServerRunning	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
isRPCServerRunning	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isInitialized	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
isInitialized	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setCompactionThroughput	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
setCompactionThroughputMbPerSec	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getCompactionThroughput	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getCompactionThroughputMbPerSec	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getExceptionCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getExceptionCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
Integer	TokenNameIdentifier
>	TokenNameGREATER
getDroppedMessages	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
msProxy	TokenNameIdentifier
.	TokenNameDOT
getDroppedMessages	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
loadNewSSTables	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
ksName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cfName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
loadNewSSTables	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
rebuildIndex	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
ksName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
cfName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
...	TokenNameELLIPSIS
idxNames	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
rebuildSecondaryIndex	TokenNameIdentifier
(	TokenNameLPAREN
ksName	TokenNameIdentifier
,	TokenNameCOMMA
cfName	TokenNameIdentifier
,	TokenNameCOMMA
idxNames	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getGossipInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
fdProxy	TokenNameIdentifier
.	TokenNameDOT
getAllEndpointStates	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
stop	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
string	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
compactionProxy	TokenNameIdentifier
.	TokenNameDOT
stopCompaction	TokenNameIdentifier
(	TokenNameLPAREN
string	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setStreamThroughput	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
setStreamThroughputMbPerSec	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setTraceProbability	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
setTraceProbability	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getSchemaVersion	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
getSchemaVersion	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
describeRing	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
keyspaceName	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
describeRingJMX	TokenNameIdentifier
(	TokenNameLPAREN
keyspaceName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
PBSPredictorMBean	TokenNameIdentifier
getPBSPredictorMBean	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
PBSPredictorProxy	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
rebuild	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
sourceDc	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
rebuild	TokenNameIdentifier
(	TokenNameLPAREN
sourceDc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
sampleKeyRange	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ssProxy	TokenNameIdentifier
.	TokenNameDOT
sampleKeyRange	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
resetLocalSchema	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
ssProxy	TokenNameIdentifier
.	TokenNameDOT
resetLocalSchema	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
class	TokenNameclass
ColumnFamilyStoreMBeanIterator	TokenNameIdentifier
implements	TokenNameimplements
Iterator	TokenNameIdentifier
<	TokenNameLESS
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ColumnFamilyStoreMBean	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
{	TokenNameLBRACE
private	TokenNameprivate
Iterator	TokenNameIdentifier
<	TokenNameLESS
ObjectName	TokenNameIdentifier
>	TokenNameGREATER
resIter	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
MBeanServerConnection	TokenNameIdentifier
mbeanServerConn	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
ColumnFamilyStoreMBeanIterator	TokenNameIdentifier
(	TokenNameLPAREN
MBeanServerConnection	TokenNameIdentifier
mbeanServerConn	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
MalformedObjectNameException	TokenNameIdentifier
,	TokenNameCOMMA
NullPointerException	TokenNameIdentifier
,	TokenNameCOMMA
IOException	TokenNameIdentifier
{	TokenNameLBRACE
ObjectName	TokenNameIdentifier
query	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.cassandra.db:type=ColumnFamilies,*"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
resIter	TokenNameIdentifier
=	TokenNameEQUAL
mbeanServerConn	TokenNameIdentifier
.	TokenNameDOT
queryNames	TokenNameIdentifier
(	TokenNameLPAREN
query	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
mbeanServerConn	TokenNameIdentifier
=	TokenNameEQUAL
mbeanServerConn	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
resIter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Entry	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ColumnFamilyStoreMBean	TokenNameIdentifier
>	TokenNameGREATER
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ObjectName	TokenNameIdentifier
objectName	TokenNameIdentifier
=	TokenNameEQUAL
resIter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
tableName	TokenNameIdentifier
=	TokenNameEQUAL
objectName	TokenNameIdentifier
.	TokenNameDOT
getKeyProperty	TokenNameIdentifier
(	TokenNameLPAREN
"keyspace"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ColumnFamilyStoreMBean	TokenNameIdentifier
cfsProxy	TokenNameIdentifier
=	TokenNameEQUAL
JMX	TokenNameIdentifier
.	TokenNameDOT
newMBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
objectName	TokenNameIdentifier
,	TokenNameCOMMA
ColumnFamilyStoreMBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
AbstractMap	TokenNameIdentifier
.	TokenNameDOT
SimpleImmutableEntry	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
ColumnFamilyStoreMBean	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
tableName	TokenNameIdentifier
,	TokenNameCOMMA
cfsProxy	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
remove	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
UnsupportedOperationException	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
class	TokenNameclass
ThreadPoolProxyMBeanIterator	TokenNameIdentifier
implements	TokenNameimplements
Iterator	TokenNameIdentifier
<	TokenNameLESS
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
JMXEnabledThreadPoolExecutorMBean	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
{	TokenNameLBRACE
private	TokenNameprivate
final	TokenNamefinal
Iterator	TokenNameIdentifier
<	TokenNameLESS
ObjectName	TokenNameIdentifier
>	TokenNameGREATER
resIter	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
MBeanServerConnection	TokenNameIdentifier
mbeanServerConn	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
ThreadPoolProxyMBeanIterator	TokenNameIdentifier
(	TokenNameLPAREN
MBeanServerConnection	TokenNameIdentifier
mbeanServerConn	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
MalformedObjectNameException	TokenNameIdentifier
,	TokenNameCOMMA
NullPointerException	TokenNameIdentifier
,	TokenNameCOMMA
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
ObjectName	TokenNameIdentifier
>	TokenNameGREATER
requests	TokenNameIdentifier
=	TokenNameEQUAL
mbeanServerConn	TokenNameIdentifier
.	TokenNameDOT
queryNames	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.cassandra.request:type=*"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
ObjectName	TokenNameIdentifier
>	TokenNameGREATER
internal	TokenNameIdentifier
=	TokenNameEQUAL
mbeanServerConn	TokenNameIdentifier
.	TokenNameDOT
queryNames	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
ObjectName	TokenNameIdentifier
(	TokenNameLPAREN
"org.apache.cassandra.internal:type=*"	TokenNameStringLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
resIter	TokenNameIdentifier
=	TokenNameEQUAL
Iterables	TokenNameIdentifier
.	TokenNameDOT
concat	TokenNameIdentifier
(	TokenNameLPAREN
requests	TokenNameIdentifier
,	TokenNameCOMMA
internal	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
mbeanServerConn	TokenNameIdentifier
=	TokenNameEQUAL
mbeanServerConn	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
resIter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
JMXEnabledThreadPoolExecutorMBean	TokenNameIdentifier
>	TokenNameGREATER
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ObjectName	TokenNameIdentifier
objectName	TokenNameIdentifier
=	TokenNameEQUAL
resIter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
poolName	TokenNameIdentifier
=	TokenNameEQUAL
objectName	TokenNameIdentifier
.	TokenNameDOT
getKeyProperty	TokenNameIdentifier
(	TokenNameLPAREN
"type"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
JMXEnabledThreadPoolExecutorMBean	TokenNameIdentifier
threadPoolProxy	TokenNameIdentifier
=	TokenNameEQUAL
JMX	TokenNameIdentifier
.	TokenNameDOT
newMBeanProxy	TokenNameIdentifier
(	TokenNameLPAREN
mbeanServerConn	TokenNameIdentifier
,	TokenNameCOMMA
objectName	TokenNameIdentifier
,	TokenNameCOMMA
JMXEnabledThreadPoolExecutorMBean	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
AbstractMap	TokenNameIdentifier
.	TokenNameDOT
SimpleImmutableEntry	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
JMXEnabledThreadPoolExecutorMBean	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
poolName	TokenNameIdentifier
,	TokenNameCOMMA
threadPoolProxy	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
remove	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
UnsupportedOperationException	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
