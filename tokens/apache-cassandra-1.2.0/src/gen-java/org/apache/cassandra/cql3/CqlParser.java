package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql3	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ArrayList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Arrays	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Collections	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
EnumSet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
HashMap	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
LinkedHashMap	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Map	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Set	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
auth	TokenNameIdentifier
.	TokenNameDOT
Permission	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
auth	TokenNameIdentifier
.	TokenNameDOT
DataResource	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
auth	TokenNameIdentifier
.	TokenNameDOT
IResource	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql3	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
cql3	TokenNameIdentifier
.	TokenNameDOT
statements	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
db	TokenNameIdentifier
.	TokenNameDOT
marshal	TokenNameIdentifier
.	TokenNameDOT
CollectionType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
exceptions	TokenNameIdentifier
.	TokenNameDOT
ConfigurationException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
exceptions	TokenNameIdentifier
.	TokenNameDOT
InvalidRequestException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
exceptions	TokenNameIdentifier
.	TokenNameDOT
SyntaxException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
cassandra	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
Pair	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
antlr	TokenNameIdentifier
.	TokenNameDOT
runtime	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Stack	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ArrayList	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
CqlParser	TokenNameIdentifier
extends	TokenNameextends
Parser	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
tokenNames	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"<invalid>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<EOR>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<DOWN>"	TokenNameStringLiteral
,	TokenNameCOMMA
"<UP>"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_USE"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_SELECT"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_COUNT"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_FROM"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_WHERE"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_ORDER"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_BY"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_LIMIT"	TokenNameStringLiteral
,	TokenNameCOMMA
"INTEGER"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_ALLOW"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_FILTERING"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_WRITETIME"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_TTL"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_AND"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_ASC"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_DESC"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_INSERT"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_INTO"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_VALUES"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_USING"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_TIMESTAMP"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_UPDATE"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_SET"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_DELETE"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_BEGIN"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_UNLOGGED"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_COUNTER"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_BATCH"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_APPLY"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_CREATE"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_KEYSPACE"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_WITH"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_COLUMNFAMILY"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_PRIMARY"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_KEY"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_COMPACT"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_STORAGE"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_CLUSTERING"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_INDEX"	TokenNameStringLiteral
,	TokenNameCOMMA
"IDENT"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_ON"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_ALTER"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_TYPE"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_ADD"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_RENAME"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_TO"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_DROP"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_TRUNCATE"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_GRANT"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_REVOKE"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_LIST"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_OF"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_NORECURSIVE"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_MODIFY"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_AUTHORIZE"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_ALL"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_PERMISSIONS"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_PERMISSION"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_KEYSPACES"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_USER"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_SUPERUSER"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_NOSUPERUSER"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_USERS"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_PASSWORD"	TokenNameStringLiteral
,	TokenNameCOMMA
"STRING_LITERAL"	TokenNameStringLiteral
,	TokenNameCOMMA
"QUOTED_NAME"	TokenNameStringLiteral
,	TokenNameCOMMA
"QMARK"	TokenNameStringLiteral
,	TokenNameCOMMA
"UUID"	TokenNameStringLiteral
,	TokenNameCOMMA
"FLOAT"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_TRUE"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_FALSE"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_TOKEN"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_IN"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_ASCII"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_BIGINT"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_BLOB"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_BOOLEAN"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_DECIMAL"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_DOUBLE"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_FLOAT"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_INET"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_INT"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_TEXT"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_UUID"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_VARCHAR"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_VARINT"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_TIMEUUID"	TokenNameStringLiteral
,	TokenNameCOMMA
"K_MAP"	TokenNameStringLiteral
,	TokenNameCOMMA
"S"	TokenNameStringLiteral
,	TokenNameCOMMA
"E"	TokenNameStringLiteral
,	TokenNameCOMMA
"L"	TokenNameStringLiteral
,	TokenNameCOMMA
"C"	TokenNameStringLiteral
,	TokenNameCOMMA
"T"	TokenNameStringLiteral
,	TokenNameCOMMA
"F"	TokenNameStringLiteral
,	TokenNameCOMMA
"R"	TokenNameStringLiteral
,	TokenNameCOMMA
"O"	TokenNameStringLiteral
,	TokenNameCOMMA
"M"	TokenNameStringLiteral
,	TokenNameCOMMA
"W"	TokenNameStringLiteral
,	TokenNameCOMMA
"H"	TokenNameStringLiteral
,	TokenNameCOMMA
"A"	TokenNameStringLiteral
,	TokenNameCOMMA
"N"	TokenNameStringLiteral
,	TokenNameCOMMA
"D"	TokenNameStringLiteral
,	TokenNameCOMMA
"K"	TokenNameStringLiteral
,	TokenNameCOMMA
"Y"	TokenNameStringLiteral
,	TokenNameCOMMA
"I"	TokenNameStringLiteral
,	TokenNameCOMMA
"U"	TokenNameStringLiteral
,	TokenNameCOMMA
"P"	TokenNameStringLiteral
,	TokenNameCOMMA
"G"	TokenNameStringLiteral
,	TokenNameCOMMA
"B"	TokenNameStringLiteral
,	TokenNameCOMMA
"X"	TokenNameStringLiteral
,	TokenNameCOMMA
"V"	TokenNameStringLiteral
,	TokenNameCOMMA
"Z"	TokenNameStringLiteral
,	TokenNameCOMMA
"J"	TokenNameStringLiteral
,	TokenNameCOMMA
"Q"	TokenNameStringLiteral
,	TokenNameCOMMA
"DIGIT"	TokenNameStringLiteral
,	TokenNameCOMMA
"LETTER"	TokenNameStringLiteral
,	TokenNameCOMMA
"HEX"	TokenNameStringLiteral
,	TokenNameCOMMA
"WS"	TokenNameStringLiteral
,	TokenNameCOMMA
"COMMENT"	TokenNameStringLiteral
,	TokenNameCOMMA
"MULTILINE_COMMENT"	TokenNameStringLiteral
,	TokenNameCOMMA
"';'"	TokenNameStringLiteral
,	TokenNameCOMMA
"'('"	TokenNameStringLiteral
,	TokenNameCOMMA
"')'"	TokenNameStringLiteral
,	TokenNameCOMMA
"','"	TokenNameStringLiteral
,	TokenNameCOMMA
"'\*'"	TokenNameStringLiteral
,	TokenNameCOMMA
"'['"	TokenNameStringLiteral
,	TokenNameCOMMA
"']'"	TokenNameStringLiteral
,	TokenNameCOMMA
"'.'"	TokenNameStringLiteral
,	TokenNameCOMMA
"'{'"	TokenNameStringLiteral
,	TokenNameCOMMA
"'}'"	TokenNameStringLiteral
,	TokenNameCOMMA
"':'"	TokenNameStringLiteral
,	TokenNameCOMMA
"'='"	TokenNameStringLiteral
,	TokenNameCOMMA
"'+'"	TokenNameStringLiteral
,	TokenNameCOMMA
"'-'"	TokenNameStringLiteral
,	TokenNameCOMMA
"'<'"	TokenNameStringLiteral
,	TokenNameCOMMA
"'<='"	TokenNameStringLiteral
,	TokenNameCOMMA
"'>='"	TokenNameStringLiteral
,	TokenNameCOMMA
"'>'"	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_FALSE	TokenNameIdentifier
=	TokenNameEQUAL
74	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_TRUE	TokenNameIdentifier
=	TokenNameEQUAL
73	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_PERMISSIONS	TokenNameIdentifier
=	TokenNameEQUAL
60	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
LETTER	TokenNameIdentifier
=	TokenNameEQUAL
119	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_INT	TokenNameIdentifier
=	TokenNameEQUAL
85	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_PERMISSION	TokenNameIdentifier
=	TokenNameEQUAL
61	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_CREATE	TokenNameIdentifier
=	TokenNameEQUAL
33	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_CLUSTERING	TokenNameIdentifier
=	TokenNameEQUAL
41	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_WRITETIME	TokenNameIdentifier
=	TokenNameEQUAL
15	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
EOF	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_PRIMARY	TokenNameIdentifier
=	TokenNameEQUAL
37	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_AUTHORIZE	TokenNameIdentifier
=	TokenNameEQUAL
58	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_VALUES	TokenNameIdentifier
=	TokenNameEQUAL
22	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_USE	TokenNameIdentifier
=	TokenNameEQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
STRING_LITERAL	TokenNameIdentifier
=	TokenNameEQUAL
68	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_GRANT	TokenNameIdentifier
=	TokenNameEQUAL
52	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_ON	TokenNameIdentifier
=	TokenNameEQUAL
44	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_USING	TokenNameIdentifier
=	TokenNameEQUAL
23	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_ADD	TokenNameIdentifier
=	TokenNameEQUAL
47	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_ASC	TokenNameIdentifier
=	TokenNameEQUAL
18	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_KEY	TokenNameIdentifier
=	TokenNameEQUAL
38	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
COMMENT	TokenNameIdentifier
=	TokenNameEQUAL
122	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_TRUNCATE	TokenNameIdentifier
=	TokenNameEQUAL
51	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_ORDER	TokenNameIdentifier
=	TokenNameEQUAL
9	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_OF	TokenNameIdentifier
=	TokenNameEQUAL
55	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_ALL	TokenNameIdentifier
=	TokenNameEQUAL
59	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
D	TokenNameIdentifier
=	TokenNameEQUAL
105	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__139	TokenNameIdentifier
=	TokenNameEQUAL
139	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
E	TokenNameIdentifier
=	TokenNameEQUAL
93	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__138	TokenNameIdentifier
=	TokenNameEQUAL
138	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
F	TokenNameIdentifier
=	TokenNameEQUAL
97	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__137	TokenNameIdentifier
=	TokenNameEQUAL
137	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
G	TokenNameIdentifier
=	TokenNameEQUAL
111	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__136	TokenNameIdentifier
=	TokenNameEQUAL
136	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_COUNT	TokenNameIdentifier
=	TokenNameEQUAL
6	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_KEYSPACE	TokenNameIdentifier
=	TokenNameEQUAL
34	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
46	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
A	TokenNameIdentifier
=	TokenNameEQUAL
103	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
B	TokenNameIdentifier
=	TokenNameEQUAL
112	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
C	TokenNameIdentifier
=	TokenNameEQUAL
95	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
L	TokenNameIdentifier
=	TokenNameEQUAL
94	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
M	TokenNameIdentifier
=	TokenNameEQUAL
100	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
N	TokenNameIdentifier
=	TokenNameEQUAL
104	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
O	TokenNameIdentifier
=	TokenNameEQUAL
99	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
H	TokenNameIdentifier
=	TokenNameEQUAL
102	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
I	TokenNameIdentifier
=	TokenNameEQUAL
108	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
J	TokenNameIdentifier
=	TokenNameEQUAL
116	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_UPDATE	TokenNameIdentifier
=	TokenNameEQUAL
25	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K	TokenNameIdentifier
=	TokenNameEQUAL
106	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_FILTERING	TokenNameIdentifier
=	TokenNameEQUAL
14	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
U	TokenNameIdentifier
=	TokenNameEQUAL
109	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T	TokenNameIdentifier
=	TokenNameEQUAL
96	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
W	TokenNameIdentifier
=	TokenNameEQUAL
101	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_TEXT	TokenNameIdentifier
=	TokenNameEQUAL
86	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
V	TokenNameIdentifier
=	TokenNameEQUAL
114	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
Q	TokenNameIdentifier
=	TokenNameEQUAL
117	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
P	TokenNameIdentifier
=	TokenNameEQUAL
110	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_COMPACT	TokenNameIdentifier
=	TokenNameEQUAL
39	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
S	TokenNameIdentifier
=	TokenNameEQUAL
92	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
R	TokenNameIdentifier
=	TokenNameEQUAL
98	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__141	TokenNameIdentifier
=	TokenNameEQUAL
141	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_TTL	TokenNameIdentifier
=	TokenNameEQUAL
16	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__140	TokenNameIdentifier
=	TokenNameEQUAL
140	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
Y	TokenNameIdentifier
=	TokenNameEQUAL
107	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
X	TokenNameIdentifier
=	TokenNameEQUAL
113	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
Z	TokenNameIdentifier
=	TokenNameEQUAL
115	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__126	TokenNameIdentifier
=	TokenNameEQUAL
126	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__125	TokenNameIdentifier
=	TokenNameEQUAL
125	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_INDEX	TokenNameIdentifier
=	TokenNameEQUAL
42	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__128	TokenNameIdentifier
=	TokenNameEQUAL
128	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_INSERT	TokenNameIdentifier
=	TokenNameEQUAL
20	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__127	TokenNameIdentifier
=	TokenNameEQUAL
127	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
WS	TokenNameIdentifier
=	TokenNameEQUAL
121	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__129	TokenNameIdentifier
=	TokenNameEQUAL
129	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_RENAME	TokenNameIdentifier
=	TokenNameEQUAL
48	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_APPLY	TokenNameIdentifier
=	TokenNameEQUAL
32	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_INET	TokenNameIdentifier
=	TokenNameEQUAL
84	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_STORAGE	TokenNameIdentifier
=	TokenNameEQUAL
40	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_TIMESTAMP	TokenNameIdentifier
=	TokenNameEQUAL
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_AND	TokenNameIdentifier
=	TokenNameEQUAL
17	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_DESC	TokenNameIdentifier
=	TokenNameEQUAL
19	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__130	TokenNameIdentifier
=	TokenNameEQUAL
130	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_TOKEN	TokenNameIdentifier
=	TokenNameEQUAL
75	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__131	TokenNameIdentifier
=	TokenNameEQUAL
131	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
QMARK	TokenNameIdentifier
=	TokenNameEQUAL
70	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__132	TokenNameIdentifier
=	TokenNameEQUAL
132	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__133	TokenNameIdentifier
=	TokenNameEQUAL
133	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__134	TokenNameIdentifier
=	TokenNameEQUAL
134	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_UUID	TokenNameIdentifier
=	TokenNameEQUAL
87	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__135	TokenNameIdentifier
=	TokenNameEQUAL
135	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_BATCH	TokenNameIdentifier
=	TokenNameEQUAL
31	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_ASCII	TokenNameIdentifier
=	TokenNameEQUAL
77	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
UUID	TokenNameIdentifier
=	TokenNameEQUAL
71	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_LIST	TokenNameIdentifier
=	TokenNameEQUAL
54	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_DELETE	TokenNameIdentifier
=	TokenNameEQUAL
27	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
T__124	TokenNameIdentifier
=	TokenNameEQUAL
124	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_TO	TokenNameIdentifier
=	TokenNameEQUAL
49	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_BY	TokenNameIdentifier
=	TokenNameEQUAL
10	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
FLOAT	TokenNameIdentifier
=	TokenNameEQUAL
72	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_VARINT	TokenNameIdentifier
=	TokenNameEQUAL
89	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_FLOAT	TokenNameIdentifier
=	TokenNameEQUAL
83	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_SUPERUSER	TokenNameIdentifier
=	TokenNameEQUAL
64	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_DOUBLE	TokenNameIdentifier
=	TokenNameEQUAL
82	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_SELECT	TokenNameIdentifier
=	TokenNameEQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_LIMIT	TokenNameIdentifier
=	TokenNameEQUAL
11	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_BOOLEAN	TokenNameIdentifier
=	TokenNameEQUAL
80	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_ALTER	TokenNameIdentifier
=	TokenNameEQUAL
45	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_SET	TokenNameIdentifier
=	TokenNameEQUAL
26	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_WHERE	TokenNameIdentifier
=	TokenNameEQUAL
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
QUOTED_NAME	TokenNameIdentifier
=	TokenNameEQUAL
69	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MULTILINE_COMMENT	TokenNameIdentifier
=	TokenNameEQUAL
123	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_BLOB	TokenNameIdentifier
=	TokenNameEQUAL
79	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_UNLOGGED	TokenNameIdentifier
=	TokenNameEQUAL
29	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
HEX	TokenNameIdentifier
=	TokenNameEQUAL
120	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_INTO	TokenNameIdentifier
=	TokenNameEQUAL
21	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_PASSWORD	TokenNameIdentifier
=	TokenNameEQUAL
67	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_REVOKE	TokenNameIdentifier
=	TokenNameEQUAL
53	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_ALLOW	TokenNameIdentifier
=	TokenNameEQUAL
13	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_VARCHAR	TokenNameIdentifier
=	TokenNameEQUAL
88	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
IDENT	TokenNameIdentifier
=	TokenNameEQUAL
43	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
DIGIT	TokenNameIdentifier
=	TokenNameEQUAL
118	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_USERS	TokenNameIdentifier
=	TokenNameEQUAL
66	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_BEGIN	TokenNameIdentifier
=	TokenNameEQUAL
28	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
INTEGER	TokenNameIdentifier
=	TokenNameEQUAL
12	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_KEYSPACES	TokenNameIdentifier
=	TokenNameEQUAL
62	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_COUNTER	TokenNameIdentifier
=	TokenNameEQUAL
30	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_DECIMAL	TokenNameIdentifier
=	TokenNameEQUAL
81	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_WITH	TokenNameIdentifier
=	TokenNameEQUAL
35	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_IN	TokenNameIdentifier
=	TokenNameEQUAL
76	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_NORECURSIVE	TokenNameIdentifier
=	TokenNameEQUAL
56	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_MAP	TokenNameIdentifier
=	TokenNameEQUAL
91	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_FROM	TokenNameIdentifier
=	TokenNameEQUAL
7	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_COLUMNFAMILY	TokenNameIdentifier
=	TokenNameEQUAL
36	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_MODIFY	TokenNameIdentifier
=	TokenNameEQUAL
57	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_DROP	TokenNameIdentifier
=	TokenNameEQUAL
50	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_NOSUPERUSER	TokenNameIdentifier
=	TokenNameEQUAL
65	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_BIGINT	TokenNameIdentifier
=	TokenNameEQUAL
78	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_TIMEUUID	TokenNameIdentifier
=	TokenNameEQUAL
90	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
K_USER	TokenNameIdentifier
=	TokenNameEQUAL
63	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
CqlParser	TokenNameIdentifier
(	TokenNameLPAREN
TokenStream	TokenNameIdentifier
input	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
RecognizerSharedState	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CqlParser	TokenNameIdentifier
(	TokenNameLPAREN
TokenStream	TokenNameIdentifier
input	TokenNameIdentifier
,	TokenNameCOMMA
RecognizerSharedState	TokenNameIdentifier
state	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
state	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getTokenNames	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
CqlParser	TokenNameIdentifier
.	TokenNameDOT
tokenNames	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getGrammarFileName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"/home/pschulam/data/habeascorpus-workspace/apache-cassandra-1.2.0/src/java/org/apache/cassandra/cql3/Cql.g"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
recognitionErrors	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
currentBindMarkerIdx	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
void	TokenNamevoid
displayRecognitionError	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
tokenNames	TokenNameIdentifier
,	TokenNameCOMMA
RecognitionException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
hdr	TokenNameIdentifier
=	TokenNameEQUAL
getErrorHeader	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
msg	TokenNameIdentifier
=	TokenNameEQUAL
getErrorMessage	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
tokenNames	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recognitionErrors	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
hdr	TokenNameIdentifier
+	TokenNamePLUS
" "	TokenNameStringLiteral
+	TokenNamePLUS
msg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addRecognitionError	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
msg	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
recognitionErrors	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
msg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
>	TokenNameGREATER
getRecognitionErrors	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
recognitionErrors	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
throwLastRecognitionError	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
SyntaxException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
recognitionErrors	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
SyntaxException	TokenNameIdentifier
(	TokenNameLPAREN
recognitionErrors	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
recognitionErrors	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
validateMinusSupplied	TokenNameIdentifier
(	TokenNameLPAREN
Object	TokenNameIdentifier
op	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
Term	TokenNameIdentifier
value	TokenNameIdentifier
,	TokenNameCOMMA
IntStream	TokenNameIdentifier
stream	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
MissingTokenException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
op	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
Long	TokenNameIdentifier
.	TokenNameDOT
parseLong	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
MissingTokenException	TokenNameIdentifier
(	TokenNameLPAREN
102	TokenNameIntegerLiteral
,	TokenNameCOMMA
stream	TokenNameIdentifier
,	TokenNameCOMMA
value	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
convertMap	TokenNameIdentifier
(	TokenNameLPAREN
Map	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
,	TokenNameCOMMA
Term	TokenNameIdentifier
>	TokenNameGREATER
terms	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
terms	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
terms	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
emptyMap	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
res	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
terms	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Map	TokenNameIdentifier
.	TokenNameDOT
Entry	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
,	TokenNameCOMMA
Term	TokenNameIdentifier
>	TokenNameGREATER
entry	TokenNameIdentifier
:	TokenNameCOLON
terms	TokenNameIdentifier
.	TokenNameDOT
entrySet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
entry	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
entry	TokenNameIdentifier
.	TokenNameDOT
getValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
res	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
entry	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
entry	TokenNameIdentifier
.	TokenNameDOT
getValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
res	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
ParsedStatement	TokenNameIdentifier
query	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
ParsedStatement	TokenNameIdentifier
stmnt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ParsedStatement	TokenNameIdentifier
st	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cqlStatement_in_query72	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st	TokenNameIdentifier
=	TokenNameEQUAL
cqlStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
loop1	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt1	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA1_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA1_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
124	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt1	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt1	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
124	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_124_in_query75	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop1	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
EOF	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_EOF_in_query79	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
stmnt	TokenNameIdentifier
=	TokenNameEQUAL
st	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
stmnt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
ParsedStatement	TokenNameIdentifier
cqlStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
ParsedStatement	TokenNameIdentifier
stmt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
SelectStatement	TokenNameIdentifier
.	TokenNameDOT
RawStatement	TokenNameIdentifier
st1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
UpdateStatement	TokenNameIdentifier
st2	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
UpdateStatement	TokenNameIdentifier
st3	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
BatchStatement	TokenNameIdentifier
st4	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
DeleteStatement	TokenNameIdentifier
st5	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
UseStatement	TokenNameIdentifier
st6	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
TruncateStatement	TokenNameIdentifier
st7	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CreateKeyspaceStatement	TokenNameIdentifier
st8	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CreateColumnFamilyStatement	TokenNameIdentifier
.	TokenNameDOT
RawStatement	TokenNameIdentifier
st9	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CreateIndexStatement	TokenNameIdentifier
st10	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
DropKeyspaceStatement	TokenNameIdentifier
st11	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
DropColumnFamilyStatement	TokenNameIdentifier
st12	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
DropIndexStatement	TokenNameIdentifier
st13	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
AlterTableStatement	TokenNameIdentifier
st14	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
AlterKeyspaceStatement	TokenNameIdentifier
st15	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
GrantStatement	TokenNameIdentifier
st16	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
RevokeStatement	TokenNameIdentifier
st17	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ListPermissionsStatement	TokenNameIdentifier
st18	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CreateUserStatement	TokenNameIdentifier
st19	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
AlterUserStatement	TokenNameIdentifier
st20	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
DropUserStatement	TokenNameIdentifier
st21	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ListUsersStatement	TokenNameIdentifier
st22	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt2	TokenNameIdentifier
=	TokenNameEQUAL
22	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
alt2	TokenNameIdentifier
=	TokenNameEQUAL
dfa2	TokenNameIdentifier
.	TokenNameDOT
predict	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
alt2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_selectStatement_in_cqlStatement113	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st1	TokenNameIdentifier
=	TokenNameEQUAL
selectStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st1	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_insertStatement_in_cqlStatement138	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st2	TokenNameIdentifier
=	TokenNameEQUAL
insertStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st2	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_updateStatement_in_cqlStatement163	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st3	TokenNameIdentifier
=	TokenNameEQUAL
updateStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st3	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
4	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_batchStatement_in_cqlStatement188	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st4	TokenNameIdentifier
=	TokenNameEQUAL
batchStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st4	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
5	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_deleteStatement_in_cqlStatement214	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st5	TokenNameIdentifier
=	TokenNameEQUAL
deleteStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st5	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
6	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_useStatement_in_cqlStatement239	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st6	TokenNameIdentifier
=	TokenNameEQUAL
useStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st6	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
7	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_truncateStatement_in_cqlStatement267	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st7	TokenNameIdentifier
=	TokenNameEQUAL
truncateStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st7	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
8	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_createKeyspaceStatement_in_cqlStatement290	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st8	TokenNameIdentifier
=	TokenNameEQUAL
createKeyspaceStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st8	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
9	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_createColumnFamilyStatement_in_cqlStatement307	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st9	TokenNameIdentifier
=	TokenNameEQUAL
createColumnFamilyStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st9	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
10	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_createIndexStatement_in_cqlStatement319	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st10	TokenNameIdentifier
=	TokenNameEQUAL
createIndexStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st10	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
11	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_dropKeyspaceStatement_in_cqlStatement338	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st11	TokenNameIdentifier
=	TokenNameEQUAL
dropKeyspaceStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st11	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
12	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_dropColumnFamilyStatement_in_cqlStatement356	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st12	TokenNameIdentifier
=	TokenNameEQUAL
dropColumnFamilyStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st12	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
13	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_dropIndexStatement_in_cqlStatement370	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st13	TokenNameIdentifier
=	TokenNameEQUAL
dropIndexStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st13	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
14	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_alterTableStatement_in_cqlStatement391	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st14	TokenNameIdentifier
=	TokenNameEQUAL
alterTableStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st14	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
15	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_alterKeyspaceStatement_in_cqlStatement411	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st15	TokenNameIdentifier
=	TokenNameEQUAL
alterKeyspaceStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st15	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
16	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_grantStatement_in_cqlStatement428	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st16	TokenNameIdentifier
=	TokenNameEQUAL
grantStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st16	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
17	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_revokeStatement_in_cqlStatement453	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st17	TokenNameIdentifier
=	TokenNameEQUAL
revokeStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st17	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
18	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_listPermissionsStatement_in_cqlStatement477	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st18	TokenNameIdentifier
=	TokenNameEQUAL
listPermissionsStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st18	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
19	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_createUserStatement_in_cqlStatement492	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st19	TokenNameIdentifier
=	TokenNameEQUAL
createUserStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st19	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
20	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_alterUserStatement_in_cqlStatement512	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st20	TokenNameIdentifier
=	TokenNameEQUAL
alterUserStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st20	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
21	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_dropUserStatement_in_cqlStatement533	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st21	TokenNameIdentifier
=	TokenNameEQUAL
dropUserStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st21	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
22	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_listUsersStatement_in_cqlStatement555	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
st22	TokenNameIdentifier
=	TokenNameEQUAL
listUsersStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
st22	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
stmt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
stmt	TokenNameIdentifier
.	TokenNameDOT
setBoundTerms	TokenNameIdentifier
(	TokenNameLPAREN
currentBindMarkerIdx	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
stmt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
UseStatement	TokenNameIdentifier
useStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
UseStatement	TokenNameIdentifier
stmt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
String	TokenNameIdentifier
ks	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_USE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_USE_in_useStatement589	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_keyspaceName_in_useStatement593	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ks	TokenNameIdentifier
=	TokenNameEQUAL
keyspaceName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
UseStatement	TokenNameIdentifier
(	TokenNameLPAREN
ks	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
stmt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
SelectStatement	TokenNameIdentifier
.	TokenNameDOT
RawStatement	TokenNameIdentifier
selectStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
SelectStatement	TokenNameIdentifier
.	TokenNameDOT
RawStatement	TokenNameIdentifier
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
rows	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
sclause	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CFName	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Relation	TokenNameIdentifier
>	TokenNameGREATER
wclause	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
boolean	TokenNameboolean
isCount	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
int	TokenNameint
limit	TokenNameIdentifier
=	TokenNameEQUAL
Integer	TokenNameIdentifier
.	TokenNameDOT
MAX_VALUE	TokenNameIdentifier
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
,	TokenNameCOMMA
Boolean	TokenNameIdentifier
>	TokenNameGREATER
orderings	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
LinkedHashMap	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
,	TokenNameCOMMA
Boolean	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
allowFiltering	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_SELECT	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_SELECT_in_selectStatement627	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
alt3	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA3_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
LA3_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_FILTERING	TokenNameIdentifier
&&	TokenNameAND_AND
LA3_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_TTL	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA3_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_VALUES	TokenNameIdentifier
||	TokenNameOR_OR
LA3_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TIMESTAMP	TokenNameIdentifier
||	TokenNameOR_OR
LA3_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNTER	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA3_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_KEY	TokenNameIdentifier
&&	TokenNameAND_AND
LA3_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_CLUSTERING	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA3_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
IDENT	TokenNameIdentifier
||	TokenNameOR_OR
LA3_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TYPE	TokenNameIdentifier
||	TokenNameOR_OR
LA3_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_LIST	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA3_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ALL	TokenNameIdentifier
&&	TokenNameAND_AND
LA3_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_PASSWORD	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA3_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
QUOTED_NAME	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA3_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ASCII	TokenNameIdentifier
&&	TokenNameAND_AND
LA3_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_MAP	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA3_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
128	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt3	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA3_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNT	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
LA3_2	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA3_2	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
125	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt3	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA3_2	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_FROM	TokenNameIdentifier
||	TokenNameOR_OR
LA3_2	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt3	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt3	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_selectClause_in_selectStatement633	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sclause	TokenNameIdentifier
=	TokenNameEQUAL
selectClause	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_COUNT	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_COUNT_in_selectStatement638	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
125	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_125_in_selectStatement640	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_selectCountClause_in_selectStatement644	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sclause	TokenNameIdentifier
=	TokenNameEQUAL
selectCountClause	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
126	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_126_in_selectStatement646	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
isCount	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_FROM	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_FROM_in_selectStatement659	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_columnFamilyName_in_selectStatement663	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
=	TokenNameEQUAL
columnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
int	TokenNameint
alt4	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA4_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA4_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_WHERE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt4	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt4	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_WHERE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_WHERE_in_selectStatement673	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_whereClause_in_selectStatement677	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
wclause	TokenNameIdentifier
=	TokenNameEQUAL
whereClause	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
alt6	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA6_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA6_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_ORDER	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt6	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt6	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ORDER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ORDER_in_selectStatement690	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_BY	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_BY_in_selectStatement692	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_orderByClause_in_selectStatement694	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
orderByClause	TokenNameIdentifier
(	TokenNameLPAREN
orderings	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
loop5	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt5	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA5_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA5_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt5	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt5	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_selectStatement699	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_orderByClause_in_selectStatement701	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
orderByClause	TokenNameIdentifier
(	TokenNameLPAREN
orderings	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop5	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
alt7	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA7_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA7_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_LIMIT	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt7	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt7	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_LIMIT	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_LIMIT_in_selectStatement718	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rows	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
INTEGER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_INTEGER_in_selectStatement722	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
limit	TokenNameIdentifier
=	TokenNameEQUAL
Integer	TokenNameIdentifier
.	TokenNameDOT
parseInt	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
rows	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
rows	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
alt8	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA8_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA8_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_ALLOW	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt8	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt8	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ALLOW	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ALLOW_in_selectStatement737	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_FILTERING	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_FILTERING_in_selectStatement739	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
allowFiltering	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
SelectStatement	TokenNameIdentifier
.	TokenNameDOT
Parameters	TokenNameIdentifier
params	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SelectStatement	TokenNameIdentifier
.	TokenNameDOT
Parameters	TokenNameIdentifier
(	TokenNameLPAREN
limit	TokenNameIdentifier
,	TokenNameCOMMA
orderings	TokenNameIdentifier
,	TokenNameCOMMA
isCount	TokenNameIdentifier
,	TokenNameCOMMA
allowFiltering	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SelectStatement	TokenNameIdentifier
.	TokenNameDOT
RawStatement	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
params	TokenNameIdentifier
,	TokenNameCOMMA
sclause	TokenNameIdentifier
,	TokenNameCOMMA
wclause	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
selectClause	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Selector	TokenNameIdentifier
t1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Selector	TokenNameIdentifier
tN	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt10	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA10_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA10_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNT	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA10_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_FILTERING	TokenNameIdentifier
&&	TokenNameAND_AND
LA10_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_TTL	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA10_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_VALUES	TokenNameIdentifier
||	TokenNameOR_OR
LA10_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TIMESTAMP	TokenNameIdentifier
||	TokenNameOR_OR
LA10_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNTER	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA10_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_KEY	TokenNameIdentifier
&&	TokenNameAND_AND
LA10_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_CLUSTERING	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA10_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
IDENT	TokenNameIdentifier
||	TokenNameOR_OR
LA10_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TYPE	TokenNameIdentifier
||	TokenNameOR_OR
LA10_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_LIST	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA10_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ALL	TokenNameIdentifier
&&	TokenNameAND_AND
LA10_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_PASSWORD	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA10_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
QUOTED_NAME	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA10_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ASCII	TokenNameIdentifier
&&	TokenNameAND_AND
LA10_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_MAP	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt10	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA10_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
128	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt10	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
10	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt10	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_selector_in_selectClause776	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t1	TokenNameIdentifier
=	TokenNameEQUAL
selector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
t1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
loop9	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt9	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA9_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA9_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt9	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt9	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_selectClause781	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_selector_in_selectClause785	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tN	TokenNameIdentifier
=	TokenNameEQUAL
selector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
tN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop9	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
128	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_128_in_selectClause797	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
emptyList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
Selector	TokenNameIdentifier
selector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Selector	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
c	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt11	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
K_COUNT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_FILTERING	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VALUES	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TIMESTAMP	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_COUNTER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_KEY	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_COMPACT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_STORAGE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_CLUSTERING	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
IDENT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_LIST	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_ALL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_PERMISSIONS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_PERMISSION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_KEYSPACES	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_USER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_SUPERUSER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_NOSUPERUSER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_USERS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_PASSWORD	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
QUOTED_NAME	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_ASCII	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BIGINT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BLOB	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BOOLEAN	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_DECIMAL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_DOUBLE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_FLOAT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_INET	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_INT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TEXT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_UUID	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VARCHAR	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VARINT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TIMEUUID	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_MAP	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt11	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_WRITETIME	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
int	TokenNameint
LA11_2	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA11_2	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
125	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt11	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA11_2	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_FROM	TokenNameIdentifier
||	TokenNameOR_OR
LA11_2	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt11	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_TTL	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
int	TokenNameint
LA11_3	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA11_3	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
125	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt11	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA11_3	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_FROM	TokenNameIdentifier
||	TokenNameOR_OR
LA11_3	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt11	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt11	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_selector822	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
s	TokenNameIdentifier
=	TokenNameEQUAL
c	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_WRITETIME	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_WRITETIME_in_selector844	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
125	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_125_in_selector846	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_selector850	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
126	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_126_in_selector852	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
s	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Selector	TokenNameIdentifier
.	TokenNameDOT
WithFunction	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
,	TokenNameCOMMA
Selector	TokenNameIdentifier
.	TokenNameDOT
Function	TokenNameIdentifier
.	TokenNameDOT
WRITE_TIME	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_TTL	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_TTL_in_selector862	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
125	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_125_in_selector864	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_selector868	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
126	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_126_in_selector870	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
s	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Selector	TokenNameIdentifier
.	TokenNameDOT
WithFunction	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
,	TokenNameCOMMA
Selector	TokenNameIdentifier
.	TokenNameDOT
Function	TokenNameIdentifier
.	TokenNameDOT
TTL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
s	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
selectCountClause	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
i	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt12	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA12_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA12_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
128	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt12	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA12_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
INTEGER	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt12	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
12	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt12	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
128	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_128_in_selectCountClause899	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
emptyList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
i	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
INTEGER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_INTEGER_in_selectCountClause921	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
i	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
"1"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
addRecognitionError	TokenNameIdentifier
(	TokenNameLPAREN
"Only COUNT(1) is supported, got COUNT("	TokenNameStringLiteral
+	TokenNamePLUS
i	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
")"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
Collections	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
emptyList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
Relation	TokenNameIdentifier
>	TokenNameGREATER
whereClause	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Relation	TokenNameIdentifier
>	TokenNameGREATER
clause	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
clause	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Relation	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_relation_in_whereClause957	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
relation	TokenNameIdentifier
(	TokenNameLPAREN
clause	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
loop13	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt13	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA13_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA13_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_AND	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt13	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt13	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_AND	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_AND_in_whereClause961	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_relation_in_whereClause963	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
relation	TokenNameIdentifier
(	TokenNameLPAREN
clause	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop13	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
clause	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
orderByClause	TokenNameIdentifier
(	TokenNameLPAREN
Map	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
,	TokenNameCOMMA
Boolean	TokenNameIdentifier
>	TokenNameGREATER
orderings	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
ColumnIdentifier	TokenNameIdentifier
c	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
orderBy	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
boolean	TokenNameboolean
reversed	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_orderByClause994	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
orderBy	TokenNameIdentifier
=	TokenNameEQUAL
c	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
alt14	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA14_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA14_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_ASC	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt14	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA14_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_DESC	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt14	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt14	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ASC	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ASC_in_orderByClause999	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_DESC	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_DESC_in_orderByClause1003	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reversed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
orderings	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
,	TokenNameCOMMA
reversed	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
UpdateStatement	TokenNameIdentifier
insertStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
UpdateStatement	TokenNameIdentifier
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CFName	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
c1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
cn	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Operation	TokenNameIdentifier
v1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Operation	TokenNameIdentifier
vn	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Attributes	TokenNameIdentifier
attrs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Attributes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
>	TokenNameGREATER
columnNames	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Operation	TokenNameIdentifier
>	TokenNameGREATER
columnOperations	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Operation	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_INSERT	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_INSERT_in_insertStatement1041	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_INTO	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_INTO_in_insertStatement1043	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_columnFamilyName_in_insertStatement1047	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
=	TokenNameEQUAL
columnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
125	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_125_in_insertStatement1059	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_insertStatement1063	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c1	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
columnNames	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
c1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
loop15	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt15	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA15_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA15_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt15	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt15	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_insertStatement1070	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_insertStatement1074	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cn	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
columnNames	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
cn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop15	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
126	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_126_in_insertStatement1081	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_VALUES	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_VALUES_in_insertStatement1091	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
125	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_125_in_insertStatement1103	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_set_operation_in_insertStatement1107	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
v1	TokenNameIdentifier
=	TokenNameEQUAL
set_operation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
columnOperations	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
v1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
loop16	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt16	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA16_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA16_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt16	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt16	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_insertStatement1113	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_set_operation_in_insertStatement1117	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
vn	TokenNameIdentifier
=	TokenNameEQUAL
set_operation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
columnOperations	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
vn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop16	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
126	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_126_in_insertStatement1124	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
alt17	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA17_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA17_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_USING	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt17	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt17	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_usingClause_in_insertStatement1136	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
usingClause	TokenNameIdentifier
(	TokenNameLPAREN
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
expr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
UpdateStatement	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
attrs	TokenNameIdentifier
,	TokenNameCOMMA
columnNames	TokenNameIdentifier
,	TokenNameCOMMA
columnOperations	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
usingClause	TokenNameIdentifier
(	TokenNameLPAREN
Attributes	TokenNameIdentifier
attrs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_USING	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_USING_in_usingClause1166	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_usingClauseObjective_in_usingClause1168	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
usingClauseObjective	TokenNameIdentifier
(	TokenNameLPAREN
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
loop19	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt19	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA19_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
LA19_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_TTL	TokenNameIdentifier
&&	TokenNameAND_AND
LA19_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_AND	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA19_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TIMESTAMP	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt19	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt19	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
int	TokenNameint
alt18	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA18_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA18_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_AND	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt18	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt18	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_AND	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_AND_in_usingClause1173	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_usingClauseObjective_in_usingClause1176	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
usingClauseObjective	TokenNameIdentifier
(	TokenNameLPAREN
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop19	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
usingClauseDelete	TokenNameIdentifier
(	TokenNameLPAREN
Attributes	TokenNameIdentifier
attrs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_USING	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_USING_in_usingClauseDelete1198	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_usingClauseDeleteObjective_in_usingClauseDelete1200	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
usingClauseDeleteObjective	TokenNameIdentifier
(	TokenNameLPAREN
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
loop21	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt21	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA21_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA21_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_AND	TokenNameIdentifier
||	TokenNameOR_OR
LA21_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TIMESTAMP	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt21	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt21	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
int	TokenNameint
alt20	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA20_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA20_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_AND	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt20	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt20	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_AND	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_AND_in_usingClauseDelete1205	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_usingClauseDeleteObjective_in_usingClauseDelete1208	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
usingClauseDeleteObjective	TokenNameIdentifier
(	TokenNameLPAREN
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop21	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
usingClauseDeleteObjective	TokenNameIdentifier
(	TokenNameLPAREN
Attributes	TokenNameIdentifier
attrs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Token	TokenNameIdentifier
ts	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_TIMESTAMP	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_TIMESTAMP_in_usingClauseDeleteObjective1230	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ts	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
INTEGER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_INTEGER_in_usingClauseDeleteObjective1234	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attrs	TokenNameIdentifier
.	TokenNameDOT
timestamp	TokenNameIdentifier
=	TokenNameEQUAL
Long	TokenNameIdentifier
.	TokenNameDOT
valueOf	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
ts	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
ts	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
usingClauseObjective	TokenNameIdentifier
(	TokenNameLPAREN
Attributes	TokenNameIdentifier
attrs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Token	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt22	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA22_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA22_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TIMESTAMP	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt22	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA22_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TTL	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt22	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
22	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt22	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_usingClauseDeleteObjective_in_usingClauseObjective1254	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
usingClauseDeleteObjective	TokenNameIdentifier
(	TokenNameLPAREN
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_TTL	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_TTL_in_usingClauseObjective1263	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
INTEGER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_INTEGER_in_usingClauseObjective1267	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attrs	TokenNameIdentifier
.	TokenNameDOT
timeToLive	TokenNameIdentifier
=	TokenNameEQUAL
Integer	TokenNameIdentifier
.	TokenNameDOT
valueOf	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
UpdateStatement	TokenNameIdentifier
updateStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
UpdateStatement	TokenNameIdentifier
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CFName	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Relation	TokenNameIdentifier
>	TokenNameGREATER
wclause	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Attributes	TokenNameIdentifier
attrs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Attributes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Pair	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
,	TokenNameCOMMA
Operation	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
columns	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Pair	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
,	TokenNameCOMMA
Operation	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_UPDATE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_UPDATE_in_updateStatement1301	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_columnFamilyName_in_updateStatement1305	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
=	TokenNameEQUAL
columnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
int	TokenNameint
alt23	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA23_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA23_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_USING	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt23	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt23	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_usingClause_in_updateStatement1315	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
usingClause	TokenNameIdentifier
(	TokenNameLPAREN
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_SET	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_SET_in_updateStatement1327	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_termPairWithOperation_in_updateStatement1329	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
termPairWithOperation	TokenNameIdentifier
(	TokenNameLPAREN
columns	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
loop24	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt24	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA24_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA24_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt24	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt24	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_updateStatement1333	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_termPairWithOperation_in_updateStatement1335	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
termPairWithOperation	TokenNameIdentifier
(	TokenNameLPAREN
columns	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop24	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_WHERE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_WHERE_in_updateStatement1346	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_whereClause_in_updateStatement1350	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
wclause	TokenNameIdentifier
=	TokenNameEQUAL
whereClause	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
UpdateStatement	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
columns	TokenNameIdentifier
,	TokenNameCOMMA
wclause	TokenNameIdentifier
,	TokenNameCOMMA
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
DeleteStatement	TokenNameIdentifier
deleteStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
DeleteStatement	TokenNameIdentifier
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
ids	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CFName	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Relation	TokenNameIdentifier
>	TokenNameGREATER
wclause	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Attributes	TokenNameIdentifier
attrs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Attributes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
columnsList	TokenNameIdentifier
=	TokenNameEQUAL
Collections	TokenNameIdentifier
.	TokenNameDOT
emptyList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_DELETE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_DELETE_in_deleteStatement1390	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
alt25	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA25_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA25_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNT	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA25_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_FILTERING	TokenNameIdentifier
&&	TokenNameAND_AND
LA25_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_TTL	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA25_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_VALUES	TokenNameIdentifier
||	TokenNameOR_OR
LA25_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TIMESTAMP	TokenNameIdentifier
||	TokenNameOR_OR
LA25_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNTER	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA25_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_KEY	TokenNameIdentifier
&&	TokenNameAND_AND
LA25_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_CLUSTERING	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA25_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
IDENT	TokenNameIdentifier
||	TokenNameOR_OR
LA25_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TYPE	TokenNameIdentifier
||	TokenNameOR_OR
LA25_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_LIST	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA25_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ALL	TokenNameIdentifier
&&	TokenNameAND_AND
LA25_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_PASSWORD	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA25_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
QUOTED_NAME	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA25_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ASCII	TokenNameIdentifier
&&	TokenNameAND_AND
LA25_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_MAP	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt25	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt25	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_deleteSelection_in_deleteStatement1396	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ids	TokenNameIdentifier
=	TokenNameEQUAL
deleteSelection	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
columnsList	TokenNameIdentifier
=	TokenNameEQUAL
ids	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_FROM	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_FROM_in_deleteStatement1409	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_columnFamilyName_in_deleteStatement1413	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
=	TokenNameEQUAL
columnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
int	TokenNameint
alt26	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA26_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA26_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_USING	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt26	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt26	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_usingClauseDelete_in_deleteStatement1423	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
usingClauseDelete	TokenNameIdentifier
(	TokenNameLPAREN
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_WHERE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_WHERE_in_deleteStatement1435	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_whereClause_in_deleteStatement1439	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
wclause	TokenNameIdentifier
=	TokenNameEQUAL
whereClause	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
DeleteStatement	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
columnsList	TokenNameIdentifier
,	TokenNameCOMMA
wclause	TokenNameIdentifier
,	TokenNameCOMMA
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
deleteSelection	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Selector	TokenNameIdentifier
t1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Selector	TokenNameIdentifier
tN	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_deleteSelector_in_deleteSelection1470	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t1	TokenNameIdentifier
=	TokenNameEQUAL
deleteSelector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Selector	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
t1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
loop27	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt27	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA27_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA27_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt27	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt27	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_deleteSelection1475	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_deleteSelector_in_deleteSelection1479	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tN	TokenNameIdentifier
=	TokenNameEQUAL
deleteSelector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
tN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop27	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
Selector	TokenNameIdentifier
deleteSelector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Selector	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
c	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt28	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
alt28	TokenNameIdentifier
=	TokenNameEQUAL
dfa28	TokenNameIdentifier
.	TokenNameDOT
predict	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
alt28	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_deleteSelector1506	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
s	TokenNameIdentifier
=	TokenNameEQUAL
c	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_deleteSelector1533	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
129	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_129_in_deleteSelector1535	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_term_in_deleteSelector1539	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
term	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
130	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_130_in_deleteSelector1541	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
s	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Selector	TokenNameIdentifier
.	TokenNameDOT
WithKey	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
,	TokenNameCOMMA
t	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
s	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
BatchStatement	TokenNameIdentifier
batchStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
BatchStatement	TokenNameIdentifier
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ModificationStatement	TokenNameIdentifier
s1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ModificationStatement	TokenNameIdentifier
sN	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
BatchStatement	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
type	TokenNameIdentifier
=	TokenNameEQUAL
BatchStatement	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
.	TokenNameDOT
LOGGED	TokenNameIdentifier
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
ModificationStatement	TokenNameIdentifier
>	TokenNameGREATER
statements	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
ModificationStatement	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Attributes	TokenNameIdentifier
attrs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Attributes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_BEGIN	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_BEGIN_in_batchStatement1575	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
alt29	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA29_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA29_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_UNLOGGED	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt29	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA29_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNTER	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt29	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt29	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_UNLOGGED	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_UNLOGGED_in_batchStatement1585	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
BatchStatement	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
.	TokenNameDOT
UNLOGGED	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_COUNTER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_COUNTER_in_batchStatement1591	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
BatchStatement	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
.	TokenNameDOT
COUNTER	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_BATCH	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_BATCH_in_batchStatement1604	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
alt30	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA30_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA30_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_USING	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt30	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt30	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_usingClause_in_batchStatement1608	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
usingClause	TokenNameIdentifier
(	TokenNameLPAREN
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_batchStatementObjective_in_batchStatement1626	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
s1	TokenNameIdentifier
=	TokenNameEQUAL
batchStatementObjective	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
int	TokenNameint
alt31	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA31_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA31_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
124	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt31	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt31	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
124	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_124_in_batchStatement1628	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
statements	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
s1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
loop33	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt33	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA33_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA33_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_INSERT	TokenNameIdentifier
||	TokenNameOR_OR
LA33_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_UPDATE	TokenNameIdentifier
||	TokenNameOR_OR
LA33_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_DELETE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt33	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt33	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_batchStatementObjective_in_batchStatement1637	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sN	TokenNameIdentifier
=	TokenNameEQUAL
batchStatementObjective	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
int	TokenNameint
alt32	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA32_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA32_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
124	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt32	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt32	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
124	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_124_in_batchStatement1639	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
statements	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
sN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop33	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_APPLY	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_APPLY_in_batchStatement1653	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_BATCH	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_BATCH_in_batchStatement1655	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
BatchStatement	TokenNameIdentifier
(	TokenNameLPAREN
type	TokenNameIdentifier
,	TokenNameCOMMA
statements	TokenNameIdentifier
,	TokenNameCOMMA
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
ModificationStatement	TokenNameIdentifier
batchStatementObjective	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
ModificationStatement	TokenNameIdentifier
statement	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
UpdateStatement	TokenNameIdentifier
i	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
UpdateStatement	TokenNameIdentifier
u	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
DeleteStatement	TokenNameIdentifier
d	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt34	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
K_INSERT	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt34	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_UPDATE	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt34	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_DELETE	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt34	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
34	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt34	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_insertStatement_in_batchStatementObjective1686	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
=	TokenNameEQUAL
insertStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
statement	TokenNameIdentifier
=	TokenNameEQUAL
i	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_updateStatement_in_batchStatementObjective1699	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
u	TokenNameIdentifier
=	TokenNameEQUAL
updateStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
statement	TokenNameIdentifier
=	TokenNameEQUAL
u	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_deleteStatement_in_batchStatementObjective1712	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
d	TokenNameIdentifier
=	TokenNameEQUAL
deleteStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
statement	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
statement	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
CreateKeyspaceStatement	TokenNameIdentifier
createKeyspaceStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
CreateKeyspaceStatement	TokenNameIdentifier
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
String	TokenNameIdentifier
ks	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
KSPropDefs	TokenNameIdentifier
attrs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
KSPropDefs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_CREATE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_CREATE_in_createKeyspaceStatement1747	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_KEYSPACE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_KEYSPACE_in_createKeyspaceStatement1749	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_keyspaceName_in_createKeyspaceStatement1753	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ks	TokenNameIdentifier
=	TokenNameEQUAL
keyspaceName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_WITH	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_WITH_in_createKeyspaceStatement1761	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_properties_in_createKeyspaceStatement1763	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
properties	TokenNameIdentifier
(	TokenNameLPAREN
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CreateKeyspaceStatement	TokenNameIdentifier
(	TokenNameLPAREN
ks	TokenNameIdentifier
,	TokenNameCOMMA
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
CreateColumnFamilyStatement	TokenNameIdentifier
.	TokenNameDOT
RawStatement	TokenNameIdentifier
createColumnFamilyStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
CreateColumnFamilyStatement	TokenNameIdentifier
.	TokenNameDOT
RawStatement	TokenNameIdentifier
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CFName	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_CREATE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_CREATE_in_createColumnFamilyStatement1789	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_COLUMNFAMILY	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_COLUMNFAMILY_in_createColumnFamilyStatement1791	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_columnFamilyName_in_createColumnFamilyStatement1795	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
=	TokenNameEQUAL
columnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CreateColumnFamilyStatement	TokenNameIdentifier
.	TokenNameDOT
RawStatement	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cfamDefinition_in_createColumnFamilyStatement1805	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfamDefinition	TokenNameIdentifier
(	TokenNameLPAREN
expr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
cfamDefinition	TokenNameIdentifier
(	TokenNameLPAREN
CreateColumnFamilyStatement	TokenNameIdentifier
.	TokenNameDOT
RawStatement	TokenNameIdentifier
expr	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
125	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_125_in_cfamDefinition1824	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cfamColumns_in_cfamDefinition1826	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfamColumns	TokenNameIdentifier
(	TokenNameLPAREN
expr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
loop36	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt36	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA36_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA36_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt36	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt36	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_cfamDefinition1831	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
alt35	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA35_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA35_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNT	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA35_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_FILTERING	TokenNameIdentifier
&&	TokenNameAND_AND
LA35_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_TTL	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA35_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_VALUES	TokenNameIdentifier
||	TokenNameOR_OR
LA35_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TIMESTAMP	TokenNameIdentifier
||	TokenNameOR_OR
LA35_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNTER	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA35_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_PRIMARY	TokenNameIdentifier
&&	TokenNameAND_AND
LA35_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_CLUSTERING	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA35_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
IDENT	TokenNameIdentifier
||	TokenNameOR_OR
LA35_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TYPE	TokenNameIdentifier
||	TokenNameOR_OR
LA35_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_LIST	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA35_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ALL	TokenNameIdentifier
&&	TokenNameAND_AND
LA35_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_PASSWORD	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA35_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
QUOTED_NAME	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA35_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ASCII	TokenNameIdentifier
&&	TokenNameAND_AND
LA35_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_MAP	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt35	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt35	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cfamColumns_in_cfamDefinition1833	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfamColumns	TokenNameIdentifier
(	TokenNameLPAREN
expr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop36	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
126	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_126_in_cfamDefinition1840	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
alt38	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA38_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA38_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_WITH	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt38	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt38	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_WITH	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_WITH_in_cfamDefinition1850	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cfamProperty_in_cfamDefinition1852	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfamProperty	TokenNameIdentifier
(	TokenNameLPAREN
expr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
loop37	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt37	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA37_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA37_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_AND	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt37	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt37	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_AND	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_AND_in_cfamDefinition1857	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cfamProperty_in_cfamDefinition1859	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfamProperty	TokenNameIdentifier
(	TokenNameLPAREN
expr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop37	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
cfamColumns	TokenNameIdentifier
(	TokenNameLPAREN
CreateColumnFamilyStatement	TokenNameIdentifier
.	TokenNameDOT
RawStatement	TokenNameIdentifier
expr	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
ColumnIdentifier	TokenNameIdentifier
k	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ParsedType	TokenNameIdentifier
v	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
c	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt41	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA41_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA41_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNT	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA41_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_FILTERING	TokenNameIdentifier
&&	TokenNameAND_AND
LA41_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_TTL	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA41_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_VALUES	TokenNameIdentifier
||	TokenNameOR_OR
LA41_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TIMESTAMP	TokenNameIdentifier
||	TokenNameOR_OR
LA41_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNTER	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA41_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_KEY	TokenNameIdentifier
&&	TokenNameAND_AND
LA41_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_CLUSTERING	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA41_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
IDENT	TokenNameIdentifier
||	TokenNameOR_OR
LA41_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TYPE	TokenNameIdentifier
||	TokenNameOR_OR
LA41_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_LIST	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA41_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ALL	TokenNameIdentifier
&&	TokenNameAND_AND
LA41_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_PASSWORD	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA41_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
QUOTED_NAME	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA41_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ASCII	TokenNameIdentifier
&&	TokenNameAND_AND
LA41_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_MAP	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt41	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA41_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_PRIMARY	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt41	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
41	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt41	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_cfamColumns1885	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_comparatorType_in_cfamColumns1889	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
v	TokenNameIdentifier
=	TokenNameEQUAL
comparatorType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
.	TokenNameDOT
addDefinition	TokenNameIdentifier
(	TokenNameLPAREN
k	TokenNameIdentifier
,	TokenNameCOMMA
v	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
alt39	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA39_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA39_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_PRIMARY	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt39	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt39	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_PRIMARY	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_PRIMARY_in_cfamColumns1894	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_KEY	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_KEY_in_cfamColumns1896	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
.	TokenNameDOT
addKeyAliases	TokenNameIdentifier
(	TokenNameLPAREN
Collections	TokenNameIdentifier
.	TokenNameDOT
singletonList	TokenNameIdentifier
(	TokenNameLPAREN
k	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_PRIMARY	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_PRIMARY_in_cfamColumns1908	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_KEY	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_KEY_in_cfamColumns1910	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
125	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_125_in_cfamColumns1912	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_pkDef_in_cfamColumns1914	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pkDef	TokenNameIdentifier
(	TokenNameLPAREN
expr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
loop40	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt40	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA40_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA40_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt40	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt40	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_cfamColumns1918	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_cfamColumns1922	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
.	TokenNameDOT
addColumnAlias	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop40	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
126	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_126_in_cfamColumns1929	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
pkDef	TokenNameIdentifier
(	TokenNameLPAREN
CreateColumnFamilyStatement	TokenNameIdentifier
.	TokenNameDOT
RawStatement	TokenNameIdentifier
expr	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
ColumnIdentifier	TokenNameIdentifier
k	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
k1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
kn	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt43	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA43_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA43_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNT	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA43_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_FILTERING	TokenNameIdentifier
&&	TokenNameAND_AND
LA43_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_TTL	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA43_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_VALUES	TokenNameIdentifier
||	TokenNameOR_OR
LA43_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TIMESTAMP	TokenNameIdentifier
||	TokenNameOR_OR
LA43_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNTER	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA43_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_KEY	TokenNameIdentifier
&&	TokenNameAND_AND
LA43_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_CLUSTERING	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA43_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
IDENT	TokenNameIdentifier
||	TokenNameOR_OR
LA43_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TYPE	TokenNameIdentifier
||	TokenNameOR_OR
LA43_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_LIST	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA43_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ALL	TokenNameIdentifier
&&	TokenNameAND_AND
LA43_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_PASSWORD	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA43_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
QUOTED_NAME	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA43_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ASCII	TokenNameIdentifier
&&	TokenNameAND_AND
LA43_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_MAP	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt43	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA43_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
125	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt43	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
43	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt43	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_pkDef1949	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
.	TokenNameDOT
addKeyAliases	TokenNameIdentifier
(	TokenNameLPAREN
Collections	TokenNameIdentifier
.	TokenNameDOT
singletonList	TokenNameIdentifier
(	TokenNameLPAREN
k	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
125	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_125_in_pkDef1959	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
>	TokenNameGREATER
l	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_pkDef1965	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k1	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
l	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
k1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
loop42	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt42	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA42_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA42_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt42	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt42	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_pkDef1971	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_pkDef1975	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
kn	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
l	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
kn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop42	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
126	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_126_in_pkDef1982	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
.	TokenNameDOT
addKeyAliases	TokenNameIdentifier
(	TokenNameLPAREN
l	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
cfamProperty	TokenNameIdentifier
(	TokenNameLPAREN
CreateColumnFamilyStatement	TokenNameIdentifier
.	TokenNameDOT
RawStatement	TokenNameIdentifier
expr	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt45	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
K_COUNT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_FILTERING	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_WRITETIME	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TTL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VALUES	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TIMESTAMP	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_COUNTER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_KEY	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_STORAGE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
IDENT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_LIST	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_ALL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_PERMISSIONS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_PERMISSION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_KEYSPACES	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_USER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_SUPERUSER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_NOSUPERUSER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_USERS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_PASSWORD	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
QUOTED_NAME	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_ASCII	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BIGINT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BLOB	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BOOLEAN	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_DECIMAL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_DOUBLE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_FLOAT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_INET	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_INT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TEXT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_UUID	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VARCHAR	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VARINT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TIMEUUID	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_MAP	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt45	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_COMPACT	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
int	TokenNameint
LA45_2	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA45_2	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_STORAGE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt45	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA45_2	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
135	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt45	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
45	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_CLUSTERING	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
int	TokenNameint
LA45_3	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA45_3	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_ORDER	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt45	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA45_3	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
135	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt45	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
45	TokenNameIntegerLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
45	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt45	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_property_in_cfamProperty2002	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
property	TokenNameIdentifier
(	TokenNameLPAREN
expr	TokenNameIdentifier
.	TokenNameDOT
properties	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_COMPACT	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_COMPACT_in_cfamProperty2011	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_STORAGE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_STORAGE_in_cfamProperty2013	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
.	TokenNameDOT
setCompactStorage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_CLUSTERING	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_CLUSTERING_in_cfamProperty2023	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ORDER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ORDER_in_cfamProperty2025	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_BY	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_BY_in_cfamProperty2027	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
125	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_125_in_cfamProperty2029	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cfamOrdering_in_cfamProperty2031	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfamOrdering	TokenNameIdentifier
(	TokenNameLPAREN
expr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
loop44	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt44	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA44_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA44_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt44	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt44	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_cfamProperty2035	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cfamOrdering_in_cfamProperty2037	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfamOrdering	TokenNameIdentifier
(	TokenNameLPAREN
expr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop44	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
126	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_126_in_cfamProperty2042	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
cfamOrdering	TokenNameIdentifier
(	TokenNameLPAREN
CreateColumnFamilyStatement	TokenNameIdentifier
.	TokenNameDOT
RawStatement	TokenNameIdentifier
expr	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
ColumnIdentifier	TokenNameIdentifier
k	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
boolean	TokenNameboolean
reversed	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_cfamOrdering2070	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
int	TokenNameint
alt46	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA46_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA46_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_ASC	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt46	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA46_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_DESC	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt46	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
46	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt46	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ASC	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ASC_in_cfamOrdering2073	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_DESC	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_DESC_in_cfamOrdering2077	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reversed	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
expr	TokenNameIdentifier
.	TokenNameDOT
setOrdering	TokenNameIdentifier
(	TokenNameLPAREN
k	TokenNameIdentifier
,	TokenNameCOMMA
reversed	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
CreateIndexStatement	TokenNameIdentifier
createIndexStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
CreateIndexStatement	TokenNameIdentifier
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
idxName	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CFName	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
id	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_CREATE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_CREATE_in_createIndexStatement2106	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_INDEX	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_INDEX_in_createIndexStatement2108	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
alt47	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA47_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA47_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
IDENT	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt47	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt47	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
idxName	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
IDENT	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_IDENT_in_createIndexStatement2113	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ON	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ON_in_createIndexStatement2117	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_columnFamilyName_in_createIndexStatement2121	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
=	TokenNameEQUAL
columnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
125	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_125_in_createIndexStatement2123	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_createIndexStatement2127	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
id	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
126	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_126_in_createIndexStatement2129	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CreateIndexStatement	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
idxName	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
idxName	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
id	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
AlterKeyspaceStatement	TokenNameIdentifier
alterKeyspaceStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
AlterKeyspaceStatement	TokenNameIdentifier
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
String	TokenNameIdentifier
ks	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
KSPropDefs	TokenNameIdentifier
attrs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
KSPropDefs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ALTER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ALTER_in_alterKeyspaceStatement2169	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_KEYSPACE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_KEYSPACE_in_alterKeyspaceStatement2171	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_keyspaceName_in_alterKeyspaceStatement2175	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ks	TokenNameIdentifier
=	TokenNameEQUAL
keyspaceName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_WITH	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_WITH_in_alterKeyspaceStatement2185	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_properties_in_alterKeyspaceStatement2187	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
properties	TokenNameIdentifier
(	TokenNameLPAREN
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AlterKeyspaceStatement	TokenNameIdentifier
(	TokenNameLPAREN
ks	TokenNameIdentifier
,	TokenNameCOMMA
attrs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
AlterTableStatement	TokenNameIdentifier
alterTableStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
AlterTableStatement	TokenNameIdentifier
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CFName	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
id	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ParsedType	TokenNameIdentifier
v	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
id1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
toId1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
idn	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
toIdn	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
AlterTableStatement	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
type	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CFPropDefs	TokenNameIdentifier
props	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CFPropDefs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
,	TokenNameCOMMA
ColumnIdentifier	TokenNameIdentifier
>	TokenNameGREATER
renames	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
,	TokenNameCOMMA
ColumnIdentifier	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ALTER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ALTER_in_alterTableStatement2223	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_COLUMNFAMILY	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_COLUMNFAMILY_in_alterTableStatement2225	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_columnFamilyName_in_alterTableStatement2229	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
=	TokenNameEQUAL
columnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
int	TokenNameint
alt49	TokenNameIdentifier
=	TokenNameEQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
K_ALTER	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt49	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_ADD	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt49	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_WITH	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt49	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_RENAME	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt49	TokenNameIdentifier
=	TokenNameEQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
49	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt49	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ALTER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ALTER_in_alterTableStatement2243	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_alterTableStatement2247	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
id	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_TYPE_in_alterTableStatement2249	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_comparatorType_in_alterTableStatement2253	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
v	TokenNameIdentifier
=	TokenNameEQUAL
comparatorType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
AlterTableStatement	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
.	TokenNameDOT
ALTER	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ADD	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ADD_in_alterTableStatement2269	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_alterTableStatement2275	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
id	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_comparatorType_in_alterTableStatement2279	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
v	TokenNameIdentifier
=	TokenNameEQUAL
comparatorType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
AlterTableStatement	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
.	TokenNameDOT
ADD	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_WITH	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_WITH_in_alterTableStatement2313	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_properties_in_alterTableStatement2316	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
properties	TokenNameIdentifier
(	TokenNameLPAREN
props	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
AlterTableStatement	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
.	TokenNameDOT
OPTS	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
4	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_RENAME	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_RENAME_in_alterTableStatement2349	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
AlterTableStatement	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
.	TokenNameDOT
RENAME	TokenNameIdentifier
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_alterTableStatement2403	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
id1	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_TO	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_TO_in_alterTableStatement2405	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_alterTableStatement2409	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
toId1	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
renames	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
id1	TokenNameIdentifier
,	TokenNameCOMMA
toId1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
loop48	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt48	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA48_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA48_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_AND	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt48	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt48	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_AND	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_AND_in_alterTableStatement2430	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_alterTableStatement2434	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
idn	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_TO	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_TO_in_alterTableStatement2436	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_alterTableStatement2440	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
toIdn	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
renames	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
idn	TokenNameIdentifier
,	TokenNameCOMMA
toIdn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop48	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
expr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AlterTableStatement	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
,	TokenNameCOMMA
id	TokenNameIdentifier
,	TokenNameCOMMA
v	TokenNameIdentifier
,	TokenNameCOMMA
props	TokenNameIdentifier
,	TokenNameCOMMA
renames	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
DropKeyspaceStatement	TokenNameIdentifier
dropKeyspaceStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
DropKeyspaceStatement	TokenNameIdentifier
ksp	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
String	TokenNameIdentifier
ks	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_DROP	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_DROP_in_dropKeyspaceStatement2486	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_KEYSPACE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_KEYSPACE_in_dropKeyspaceStatement2488	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_keyspaceName_in_dropKeyspaceStatement2492	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ks	TokenNameIdentifier
=	TokenNameEQUAL
keyspaceName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
ksp	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DropKeyspaceStatement	TokenNameIdentifier
(	TokenNameLPAREN
ks	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
ksp	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
DropColumnFamilyStatement	TokenNameIdentifier
dropColumnFamilyStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
DropColumnFamilyStatement	TokenNameIdentifier
stmt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CFName	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_DROP	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_DROP_in_dropColumnFamilyStatement2517	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_COLUMNFAMILY	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_COLUMNFAMILY_in_dropColumnFamilyStatement2519	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_columnFamilyName_in_dropColumnFamilyStatement2523	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
=	TokenNameEQUAL
columnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DropColumnFamilyStatement	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
stmt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
DropIndexStatement	TokenNameIdentifier
dropIndexStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
DropIndexStatement	TokenNameIdentifier
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
index	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_DROP	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_DROP_in_dropIndexStatement2554	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_INDEX	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_INDEX_in_dropIndexStatement2556	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
index	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
IDENT	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_IDENT_in_dropIndexStatement2560	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DropIndexStatement	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
index	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
index	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
TruncateStatement	TokenNameIdentifier
truncateStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
TruncateStatement	TokenNameIdentifier
stmt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CFName	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_TRUNCATE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_TRUNCATE_in_truncateStatement2591	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_columnFamilyName_in_truncateStatement2595	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
=	TokenNameEQUAL
columnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TruncateStatement	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
stmt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
GrantStatement	TokenNameIdentifier
grantStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
GrantStatement	TokenNameIdentifier
stmt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
Permission	TokenNameIdentifier
>	TokenNameGREATER
permissionOrAll1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
IResource	TokenNameIdentifier
resource2	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CqlParser	TokenNameIdentifier
.	TokenNameDOT
username_return	TokenNameIdentifier
username3	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_GRANT	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_GRANT_in_grantStatement2620	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_permissionOrAll_in_grantStatement2632	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
permissionOrAll1	TokenNameIdentifier
=	TokenNameEQUAL
permissionOrAll	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ON	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ON_in_grantStatement2640	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_resource_in_grantStatement2652	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
resource2	TokenNameIdentifier
=	TokenNameEQUAL
resource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_TO	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_TO_in_grantStatement2660	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_username_in_grantStatement2672	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
username3	TokenNameIdentifier
=	TokenNameEQUAL
username	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GrantStatement	TokenNameIdentifier
(	TokenNameLPAREN
permissionOrAll1	TokenNameIdentifier
,	TokenNameCOMMA
resource2	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
username3	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
input	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
username3	TokenNameIdentifier
.	TokenNameDOT
start	TokenNameIdentifier
,	TokenNameCOMMA
username3	TokenNameIdentifier
.	TokenNameDOT
stop	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
stmt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
RevokeStatement	TokenNameIdentifier
revokeStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
RevokeStatement	TokenNameIdentifier
stmt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
Permission	TokenNameIdentifier
>	TokenNameGREATER
permissionOrAll4	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
IResource	TokenNameIdentifier
resource5	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CqlParser	TokenNameIdentifier
.	TokenNameDOT
username_return	TokenNameIdentifier
username6	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_REVOKE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_REVOKE_in_revokeStatement2703	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_permissionOrAll_in_revokeStatement2715	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
permissionOrAll4	TokenNameIdentifier
=	TokenNameEQUAL
permissionOrAll	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ON	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ON_in_revokeStatement2723	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_resource_in_revokeStatement2735	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
resource5	TokenNameIdentifier
=	TokenNameEQUAL
resource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_FROM	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_FROM_in_revokeStatement2743	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_username_in_revokeStatement2755	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
username6	TokenNameIdentifier
=	TokenNameEQUAL
username	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
RevokeStatement	TokenNameIdentifier
(	TokenNameLPAREN
permissionOrAll4	TokenNameIdentifier
,	TokenNameCOMMA
resource5	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
username6	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
input	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
username6	TokenNameIdentifier
.	TokenNameDOT
start	TokenNameIdentifier
,	TokenNameCOMMA
username6	TokenNameIdentifier
.	TokenNameDOT
stop	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
stmt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
ListPermissionsStatement	TokenNameIdentifier
listPermissionsStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
ListPermissionsStatement	TokenNameIdentifier
stmt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
IResource	TokenNameIdentifier
resource7	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CqlParser	TokenNameIdentifier
.	TokenNameDOT
username_return	TokenNameIdentifier
username8	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Set	TokenNameIdentifier
<	TokenNameLESS
Permission	TokenNameIdentifier
>	TokenNameGREATER
permissionOrAll9	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
IResource	TokenNameIdentifier
resource	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
String	TokenNameIdentifier
username	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
boolean	TokenNameboolean
recursive	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_LIST	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_LIST_in_listPermissionsStatement2793	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_permissionOrAll_in_listPermissionsStatement2805	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
permissionOrAll9	TokenNameIdentifier
=	TokenNameEQUAL
permissionOrAll	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
int	TokenNameint
alt50	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA50_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA50_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_ON	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt50	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt50	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ON	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ON_in_listPermissionsStatement2815	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_resource_in_listPermissionsStatement2817	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
resource7	TokenNameIdentifier
=	TokenNameEQUAL
resource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
resource	TokenNameIdentifier
=	TokenNameEQUAL
resource7	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
alt51	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA51_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA51_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_OF	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt51	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt51	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_OF	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_OF_in_listPermissionsStatement2832	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_username_in_listPermissionsStatement2834	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
username8	TokenNameIdentifier
=	TokenNameEQUAL
username	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
username	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
username8	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
input	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
username8	TokenNameIdentifier
.	TokenNameDOT
start	TokenNameIdentifier
,	TokenNameCOMMA
username8	TokenNameIdentifier
.	TokenNameDOT
stop	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
alt52	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA52_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA52_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_NORECURSIVE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt52	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt52	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_NORECURSIVE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_NORECURSIVE_in_listPermissionsStatement2849	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recursive	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
stmt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ListPermissionsStatement	TokenNameIdentifier
(	TokenNameLPAREN
permissionOrAll9	TokenNameIdentifier
,	TokenNameCOMMA
resource	TokenNameIdentifier
,	TokenNameCOMMA
username	TokenNameIdentifier
,	TokenNameCOMMA
recursive	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
stmt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
Permission	TokenNameIdentifier
permission	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Permission	TokenNameIdentifier
perm	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
p	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LT	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
K_SELECT	TokenNameIdentifier
||	TokenNameOR_OR
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
K_CREATE	TokenNameIdentifier
||	TokenNameOR_OR
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
K_ALTER	TokenNameIdentifier
||	TokenNameOR_OR
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
K_DROP	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
K_MODIFY	TokenNameIdentifier
&&	TokenNameAND_AND
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
<=	TokenNameLESS_EQUAL
K_AUTHORIZE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
input	TokenNameIdentifier
.	TokenNameDOT
consume	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
errorRecovery	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
MismatchedSetException	TokenNameIdentifier
mse	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MismatchedSetException	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
mse	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
perm	TokenNameIdentifier
=	TokenNameEQUAL
Permission	TokenNameIdentifier
.	TokenNameDOT
valueOf	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
p	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
p	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
.	TokenNameDOT
toUpperCase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
perm	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
Set	TokenNameIdentifier
<	TokenNameLESS
Permission	TokenNameIdentifier
>	TokenNameGREATER
permissionOrAll	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Set	TokenNameIdentifier
<	TokenNameLESS
Permission	TokenNameIdentifier
>	TokenNameGREATER
perms	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Permission	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt55	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA55_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA55_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_ALL	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt55	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA55_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_SELECT	TokenNameIdentifier
||	TokenNameOR_OR
LA55_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_CREATE	TokenNameIdentifier
||	TokenNameOR_OR
LA55_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_ALTER	TokenNameIdentifier
||	TokenNameOR_OR
LA55_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_DROP	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA55_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_MODIFY	TokenNameIdentifier
&&	TokenNameAND_AND
LA55_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_AUTHORIZE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt55	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
55	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt55	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ALL	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ALL_in_permissionOrAll2934	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
alt53	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA53_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA53_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_PERMISSIONS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt53	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt53	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_PERMISSIONS	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_PERMISSIONS_in_permissionOrAll2938	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
perms	TokenNameIdentifier
=	TokenNameEQUAL
Permission	TokenNameIdentifier
.	TokenNameDOT
ALL_DATA	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_permission_in_permissionOrAll2959	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
=	TokenNameEQUAL
permission	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
int	TokenNameint
alt54	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA54_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA54_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_PERMISSION	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt54	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt54	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_PERMISSION	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_PERMISSION_in_permissionOrAll2963	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
perms	TokenNameIdentifier
=	TokenNameEQUAL
EnumSet	TokenNameIdentifier
.	TokenNameDOT
of	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
perms	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
IResource	TokenNameIdentifier
resource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
IResource	TokenNameIdentifier
res	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
DataResource	TokenNameIdentifier
r	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_dataResource_in_resource2991	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
r	TokenNameIdentifier
=	TokenNameEQUAL
dataResource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
res	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
res	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
DataResource	TokenNameIdentifier
dataResource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
DataResource	TokenNameIdentifier
res	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
String	TokenNameIdentifier
ks	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CFName	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt57	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
K_ALL	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
int	TokenNameint
LA57_1	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA57_1	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_KEYSPACES	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt57	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA57_1	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
EOF	TokenNameIdentifier
||	TokenNameOR_OR
LA57_1	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_FROM	TokenNameIdentifier
||	TokenNameOR_OR
LA57_1	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TO	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA57_1	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_OF	TokenNameIdentifier
&&	TokenNameAND_AND
LA57_1	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_NORECURSIVE	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA57_1	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
124	TokenNameIntegerLiteral
||	TokenNameOR_OR
LA57_1	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
131	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt57	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
57	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_KEYSPACE	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt57	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_COUNT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_FILTERING	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_WRITETIME	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TTL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VALUES	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TIMESTAMP	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_COUNTER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_COLUMNFAMILY	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_KEY	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_COMPACT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_STORAGE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_CLUSTERING	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
IDENT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_LIST	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_PERMISSIONS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_PERMISSION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_KEYSPACES	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_USER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_SUPERUSER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_NOSUPERUSER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_USERS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_PASSWORD	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
QUOTED_NAME	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_ASCII	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BIGINT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BLOB	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BOOLEAN	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_DECIMAL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_DOUBLE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_FLOAT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_INET	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_INT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TEXT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_UUID	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VARCHAR	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VARINT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TIMEUUID	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_MAP	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt57	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
57	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt57	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ALL	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ALL_in_dataResource3014	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_KEYSPACES	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_KEYSPACES_in_dataResource3016	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
res	TokenNameIdentifier
=	TokenNameEQUAL
DataResource	TokenNameIdentifier
.	TokenNameDOT
root	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_KEYSPACE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_KEYSPACE_in_dataResource3026	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_keyspaceName_in_dataResource3032	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ks	TokenNameIdentifier
=	TokenNameEQUAL
keyspaceName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
res	TokenNameIdentifier
=	TokenNameEQUAL
DataResource	TokenNameIdentifier
.	TokenNameDOT
keyspace	TokenNameIdentifier
(	TokenNameLPAREN
ks	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
int	TokenNameint
alt56	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA56_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA56_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COLUMNFAMILY	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt56	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt56	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_COLUMNFAMILY	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_COLUMNFAMILY_in_dataResource3044	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_columnFamilyName_in_dataResource3053	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cf	TokenNameIdentifier
=	TokenNameEQUAL
columnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
res	TokenNameIdentifier
=	TokenNameEQUAL
DataResource	TokenNameIdentifier
.	TokenNameDOT
columnFamily	TokenNameIdentifier
(	TokenNameLPAREN
cf	TokenNameIdentifier
.	TokenNameDOT
getKeyspace	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
cf	TokenNameIdentifier
.	TokenNameDOT
getColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
res	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
CreateUserStatement	TokenNameIdentifier
createUserStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
CreateUserStatement	TokenNameIdentifier
stmt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CqlParser	TokenNameIdentifier
.	TokenNameDOT
username_return	TokenNameIdentifier
username10	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
UserOptions	TokenNameIdentifier
opts	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
UserOptions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
superuser	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_CREATE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_CREATE_in_createUserStatement3093	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_USER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_USER_in_createUserStatement3095	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_username_in_createUserStatement3097	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
username10	TokenNameIdentifier
=	TokenNameEQUAL
username	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
int	TokenNameint
alt58	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA58_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA58_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_WITH	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt58	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt58	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_WITH	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_WITH_in_createUserStatement3107	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_userOptions_in_createUserStatement3109	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
userOptions	TokenNameIdentifier
(	TokenNameLPAREN
opts	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
alt59	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA59_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA59_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_SUPERUSER	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt59	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA59_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_NOSUPERUSER	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt59	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt59	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_SUPERUSER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_SUPERUSER_in_createUserStatement3123	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
superuser	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_NOSUPERUSER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_NOSUPERUSER_in_createUserStatement3129	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
superuser	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
stmt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CreateUserStatement	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
username10	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
input	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
username10	TokenNameIdentifier
.	TokenNameDOT
start	TokenNameIdentifier
,	TokenNameCOMMA
username10	TokenNameIdentifier
.	TokenNameDOT
stop	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
opts	TokenNameIdentifier
,	TokenNameCOMMA
superuser	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
stmt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
AlterUserStatement	TokenNameIdentifier
alterUserStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
AlterUserStatement	TokenNameIdentifier
stmt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CqlParser	TokenNameIdentifier
.	TokenNameDOT
username_return	TokenNameIdentifier
username11	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
UserOptions	TokenNameIdentifier
opts	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
UserOptions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Boolean	TokenNameIdentifier
superuser	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ALTER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ALTER_in_alterUserStatement3174	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_USER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_USER_in_alterUserStatement3176	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_username_in_alterUserStatement3178	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
username11	TokenNameIdentifier
=	TokenNameEQUAL
username	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
int	TokenNameint
alt60	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA60_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA60_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_WITH	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt60	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt60	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_WITH	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_WITH_in_alterUserStatement3188	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_userOptions_in_alterUserStatement3190	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
userOptions	TokenNameIdentifier
(	TokenNameLPAREN
opts	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
alt61	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA61_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA61_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_SUPERUSER	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt61	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA61_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_NOSUPERUSER	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt61	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt61	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_SUPERUSER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_SUPERUSER_in_alterUserStatement3204	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
superuser	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_NOSUPERUSER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_NOSUPERUSER_in_alterUserStatement3210	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
superuser	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
stmt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AlterUserStatement	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
username11	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
input	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
username11	TokenNameIdentifier
.	TokenNameDOT
start	TokenNameIdentifier
,	TokenNameCOMMA
username11	TokenNameIdentifier
.	TokenNameDOT
stop	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
opts	TokenNameIdentifier
,	TokenNameCOMMA
superuser	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
stmt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
DropUserStatement	TokenNameIdentifier
dropUserStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
DropUserStatement	TokenNameIdentifier
stmt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CqlParser	TokenNameIdentifier
.	TokenNameDOT
username_return	TokenNameIdentifier
username12	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_DROP	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_DROP_in_dropUserStatement3246	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_USER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_USER_in_dropUserStatement3248	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_username_in_dropUserStatement3250	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
username12	TokenNameIdentifier
=	TokenNameEQUAL
username	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DropUserStatement	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
username12	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
input	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
username12	TokenNameIdentifier
.	TokenNameDOT
start	TokenNameIdentifier
,	TokenNameCOMMA
username12	TokenNameIdentifier
.	TokenNameDOT
stop	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
stmt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
ListUsersStatement	TokenNameIdentifier
listUsersStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
ListUsersStatement	TokenNameIdentifier
stmt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_LIST	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_LIST_in_listUsersStatement3275	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_USERS	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_USERS_in_listUsersStatement3277	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
stmt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ListUsersStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
stmt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
userOptions	TokenNameIdentifier
(	TokenNameLPAREN
UserOptions	TokenNameIdentifier
opts	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_userOption_in_userOptions3297	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
userOption	TokenNameIdentifier
(	TokenNameLPAREN
opts	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
userOption	TokenNameIdentifier
(	TokenNameLPAREN
UserOptions	TokenNameIdentifier
opts	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Token	TokenNameIdentifier
k	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
v	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
k	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_PASSWORD	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_PASSWORD_in_userOption3318	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
v	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
STRING_LITERAL	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_STRING_LITERAL_in_userOption3322	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
opts	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
k	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
k	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
v	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
v	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
ColumnIdentifier	TokenNameIdentifier
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
ColumnIdentifier	TokenNameIdentifier
id	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
String	TokenNameIdentifier
k	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt62	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
IDENT	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt62	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
QUOTED_NAME	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt62	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_COUNT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_FILTERING	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_WRITETIME	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TTL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VALUES	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TIMESTAMP	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_COUNTER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_KEY	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_COMPACT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_STORAGE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_CLUSTERING	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_LIST	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_ALL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_PERMISSIONS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_PERMISSION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_KEYSPACES	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_USER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_SUPERUSER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_NOSUPERUSER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_USERS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_PASSWORD	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_ASCII	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BIGINT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BLOB	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BOOLEAN	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_DECIMAL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_DOUBLE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_FLOAT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_INET	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_INT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TEXT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_UUID	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VARCHAR	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VARINT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TIMEUUID	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_MAP	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt62	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
62	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt62	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
t	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
IDENT	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_IDENT_in_cident3351	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
id	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ColumnIdentifier	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
t	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
QUOTED_NAME	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_QUOTED_NAME_in_cident3376	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
id	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ColumnIdentifier	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_unreserved_keyword_in_cident3395	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k	TokenNameIdentifier
=	TokenNameEQUAL
unreserved_keyword	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
id	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ColumnIdentifier	TokenNameIdentifier
(	TokenNameLPAREN
k	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
id	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
String	TokenNameIdentifier
keyspaceName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
id	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
CFName	TokenNameIdentifier
name	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CFName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cfOrKsName_in_keyspaceName3428	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfOrKsName	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
id	TokenNameIdentifier
=	TokenNameEQUAL
name	TokenNameIdentifier
.	TokenNameDOT
getKeyspace	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
id	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
CFName	TokenNameIdentifier
columnFamilyName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
CFName	TokenNameIdentifier
name	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
name	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CFName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
int	TokenNameint
alt63	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
alt63	TokenNameIdentifier
=	TokenNameEQUAL
dfa63	TokenNameIdentifier
.	TokenNameDOT
predict	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
alt63	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cfOrKsName_in_columnFamilyName3462	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfOrKsName	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
131	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_131_in_columnFamilyName3465	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cfOrKsName_in_columnFamilyName3469	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cfOrKsName	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
name	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
cfOrKsName	TokenNameIdentifier
(	TokenNameLPAREN
CFName	TokenNameIdentifier
name	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
isKs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Token	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
String	TokenNameIdentifier
k	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt64	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
IDENT	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt64	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
QUOTED_NAME	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt64	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_COUNT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_FILTERING	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_WRITETIME	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TTL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VALUES	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TIMESTAMP	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_COUNTER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_KEY	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_COMPACT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_STORAGE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_CLUSTERING	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_LIST	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_ALL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_PERMISSIONS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_PERMISSION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_KEYSPACES	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_USER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_SUPERUSER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_NOSUPERUSER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_USERS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_PASSWORD	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_ASCII	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BIGINT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BLOB	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BOOLEAN	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_DECIMAL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_DOUBLE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_FLOAT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_INET	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_INT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TEXT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_UUID	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VARCHAR	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VARINT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TIMEUUID	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_MAP	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt64	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
64	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt64	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
t	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
IDENT	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_IDENT_in_cfOrKsName3490	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isKs	TokenNameIdentifier
)	TokenNameRPAREN
name	TokenNameIdentifier
.	TokenNameDOT
setKeyspace	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
name	TokenNameIdentifier
.	TokenNameDOT
setColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
t	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
QUOTED_NAME	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_QUOTED_NAME_in_cfOrKsName3515	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isKs	TokenNameIdentifier
)	TokenNameRPAREN
name	TokenNameIdentifier
.	TokenNameDOT
setKeyspace	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
name	TokenNameIdentifier
.	TokenNameDOT
setColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_unreserved_keyword_in_cfOrKsName3534	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k	TokenNameIdentifier
=	TokenNameEQUAL
unreserved_keyword	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isKs	TokenNameIdentifier
)	TokenNameRPAREN
name	TokenNameIdentifier
.	TokenNameDOT
setKeyspace	TokenNameIdentifier
(	TokenNameLPAREN
k	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
name	TokenNameIdentifier
.	TokenNameDOT
setColumnFamily	TokenNameIdentifier
(	TokenNameLPAREN
k	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
Operation	TokenNameIdentifier
set_operation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Operation	TokenNameIdentifier
op	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
mk	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
,	TokenNameCOMMA
Term	TokenNameIdentifier
>	TokenNameGREATER
m	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
l	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
s	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt65	TokenNameIdentifier
=	TokenNameEQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
INTEGER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
STRING_LITERAL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
UUID	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
FLOAT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TRUE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_FALSE	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt65	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
QMARK	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt65	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
132	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
int	TokenNameint
LA65_3	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA65_3	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
INTEGER	TokenNameIdentifier
||	TokenNameOR_OR
LA65_3	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
STRING_LITERAL	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA65_3	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
UUID	TokenNameIdentifier
&&	TokenNameAND_AND
LA65_3	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_FALSE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
LA65_5	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA65_5	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
||	TokenNameOR_OR
LA65_5	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
133	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt65	TokenNameIdentifier
=	TokenNameEQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA65_5	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
134	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt65	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
65	TokenNameIntegerLiteral
,	TokenNameCOMMA
5	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA65_3	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
133	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt65	TokenNameIdentifier
=	TokenNameEQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
65	TokenNameIntegerLiteral
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
129	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
alt65	TokenNameIdentifier
=	TokenNameEQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
65	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt65	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_finalTerm_in_set_operation3559	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
finalTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
ColumnOperation	TokenNameIdentifier
.	TokenNameDOT
Set	TokenNameIdentifier
(	TokenNameLPAREN
t	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
mk	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
QMARK	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_QMARK_in_set_operation3574	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
PreparedOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
mk	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
mk	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
mk	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
mk	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
++	TokenNamePLUS_PLUS
currentBindMarkerIdx	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
PreparedOperation	TokenNameIdentifier
.	TokenNameDOT
Kind	TokenNameIdentifier
.	TokenNameDOT
SET	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_map_literal_in_set_operation3592	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m	TokenNameIdentifier
=	TokenNameEQUAL
map_literal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
MapOperation	TokenNameIdentifier
.	TokenNameDOT
Set	TokenNameIdentifier
(	TokenNameLPAREN
m	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
4	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_list_literal_in_set_operation3605	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
l	TokenNameIdentifier
=	TokenNameEQUAL
list_literal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
ListOperation	TokenNameIdentifier
.	TokenNameDOT
Set	TokenNameIdentifier
(	TokenNameLPAREN
l	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
5	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_set_literal_in_set_operation3617	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
s	TokenNameIdentifier
=	TokenNameEQUAL
set_literal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
SetOperation	TokenNameIdentifier
.	TokenNameDOT
Set	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
op	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
list_literal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
value	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
t1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
tn	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
129	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_129_in_list_literal3641	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
l	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
alt67	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA67_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA67_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
INTEGER	TokenNameIdentifier
||	TokenNameOR_OR
LA67_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
STRING_LITERAL	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA67_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
UUID	TokenNameIdentifier
&&	TokenNameAND_AND
LA67_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_FALSE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt67	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt67	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_finalTerm_in_list_literal3649	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t1	TokenNameIdentifier
=	TokenNameEQUAL
finalTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
l	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
t1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
loop66	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt66	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA66_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA66_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt66	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt66	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_list_literal3655	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_finalTerm_in_list_literal3659	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tn	TokenNameIdentifier
=	TokenNameEQUAL
finalTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
l	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
tn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop66	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
130	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_130_in_list_literal3669	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
value	TokenNameIdentifier
=	TokenNameEQUAL
l	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
value	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
set_literal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
value	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
t1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
tn	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
132	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_132_in_set_literal3692	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
s	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
alt69	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA69_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA69_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
INTEGER	TokenNameIdentifier
||	TokenNameOR_OR
LA69_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
STRING_LITERAL	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA69_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
UUID	TokenNameIdentifier
&&	TokenNameAND_AND
LA69_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_FALSE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt69	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt69	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_finalTerm_in_set_literal3700	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t1	TokenNameIdentifier
=	TokenNameEQUAL
finalTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
s	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
t1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
loop68	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt68	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA68_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA68_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt68	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt68	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_set_literal3706	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_finalTerm_in_set_literal3710	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tn	TokenNameIdentifier
=	TokenNameEQUAL
finalTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
s	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
tn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop68	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
133	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_133_in_set_literal3720	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
value	TokenNameIdentifier
=	TokenNameEQUAL
s	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
value	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
Map	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
,	TokenNameCOMMA
Term	TokenNameIdentifier
>	TokenNameGREATER
map_literal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Map	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
,	TokenNameCOMMA
Term	TokenNameIdentifier
>	TokenNameGREATER
value	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
k1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
v1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
kn	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
vn	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
132	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_132_in_map_literal3749	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
,	TokenNameCOMMA
Term	TokenNameIdentifier
>	TokenNameGREATER
m	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
,	TokenNameCOMMA
Term	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_finalTerm_in_map_literal3765	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k1	TokenNameIdentifier
=	TokenNameEQUAL
finalTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
134	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_134_in_map_literal3767	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_finalTerm_in_map_literal3771	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
v1	TokenNameIdentifier
=	TokenNameEQUAL
finalTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
m	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
k1	TokenNameIdentifier
,	TokenNameCOMMA
v1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
loop70	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt70	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA70_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA70_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt70	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt70	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_map_literal3777	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_finalTerm_in_map_literal3781	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
kn	TokenNameIdentifier
=	TokenNameEQUAL
finalTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
134	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_134_in_map_literal3783	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_finalTerm_in_map_literal3787	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
vn	TokenNameIdentifier
=	TokenNameEQUAL
finalTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
m	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
kn	TokenNameIdentifier
,	TokenNameCOMMA
vn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop70	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
133	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_133_in_map_literal3794	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
value	TokenNameIdentifier
=	TokenNameEQUAL
m	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
value	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
Term	TokenNameIdentifier
finalTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Term	TokenNameIdentifier
term	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
t	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LT	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
INTEGER	TokenNameIdentifier
||	TokenNameOR_OR
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
STRING_LITERAL	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
UUID	TokenNameIdentifier
&&	TokenNameAND_AND
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
<=	TokenNameLESS_EQUAL
K_FALSE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
input	TokenNameIdentifier
.	TokenNameDOT
consume	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
errorRecovery	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
MismatchedSetException	TokenNameIdentifier
mse	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MismatchedSetException	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
mse	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
term	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
term	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
Term	TokenNameIdentifier
term	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Term	TokenNameIdentifier
term	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
ft	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt71	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA71_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA71_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
INTEGER	TokenNameIdentifier
||	TokenNameOR_OR
LA71_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
STRING_LITERAL	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA71_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
UUID	TokenNameIdentifier
&&	TokenNameAND_AND
LA71_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_FALSE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt71	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA71_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
QMARK	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt71	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
71	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt71	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_finalTerm_in_term3874	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ft	TokenNameIdentifier
=	TokenNameEQUAL
finalTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
term	TokenNameIdentifier
=	TokenNameEQUAL
ft	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
t	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
QMARK	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_QMARK_in_term3886	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
term	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
++	TokenNamePLUS_PLUS
currentBindMarkerIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
term	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
termPairWithOperation	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
Pair	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
,	TokenNameCOMMA
Operation	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
columns	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Token	TokenNameIdentifier
mk	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
key	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Operation	TokenNameIdentifier
set_op	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
c	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Operation	TokenNameIdentifier
op	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
ll	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
vv	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt73	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
alt73	TokenNameIdentifier
=	TokenNameEQUAL
dfa73	TokenNameIdentifier
.	TokenNameDOT
predict	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
alt73	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_termPairWithOperation3913	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
key	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
135	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_135_in_termPairWithOperation3915	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
alt72	TokenNameIdentifier
=	TokenNameEQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
alt72	TokenNameIdentifier
=	TokenNameEQUAL
dfa72	TokenNameIdentifier
.	TokenNameDOT
predict	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
alt72	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_set_operation_in_termPairWithOperation3929	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
set_op	TokenNameIdentifier
=	TokenNameEQUAL
set_operation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
columns	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
Pair	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
,	TokenNameCOMMA
Operation	TokenNameIdentifier
>	TokenNameGREATER
create	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
,	TokenNameCOMMA
set_op	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_termPairWithOperation3945	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_operation_in_termPairWithOperation3949	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
operation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
key	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
addRecognitionError	TokenNameIdentifier
(	TokenNameLPAREN
"Only expressions like X = X <op> <value> are supported."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
columns	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
Pair	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
,	TokenNameCOMMA
Operation	TokenNameIdentifier
>	TokenNameGREATER
create	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
,	TokenNameCOMMA
op	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_list_literal_in_termPairWithOperation3975	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ll	TokenNameIdentifier
=	TokenNameEQUAL
list_literal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
136	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_136_in_termPairWithOperation3977	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_termPairWithOperation3981	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
key	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
addRecognitionError	TokenNameIdentifier
(	TokenNameLPAREN
"Only expressions like X = <value> + X are supported."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
columns	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
Pair	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
,	TokenNameCOMMA
Operation	TokenNameIdentifier
>	TokenNameGREATER
create	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
,	TokenNameCOMMA
ListOperation	TokenNameIdentifier
.	TokenNameDOT
Prepend	TokenNameIdentifier
(	TokenNameLPAREN
ll	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
4	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
mk	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
QMARK	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_QMARK_in_termPairWithOperation4007	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
136	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_136_in_termPairWithOperation4009	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_termPairWithOperation4013	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
key	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
addRecognitionError	TokenNameIdentifier
(	TokenNameLPAREN
"Only expressions like X = <value> + X are supported."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
PreparedOperation	TokenNameIdentifier
pop	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
PreparedOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
mk	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
mk	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
mk	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
mk	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
++	TokenNamePLUS_PLUS
currentBindMarkerIdx	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
PreparedOperation	TokenNameIdentifier
.	TokenNameDOT
Kind	TokenNameIdentifier
.	TokenNameDOT
PREPARED_PLUS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
columns	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
Pair	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
,	TokenNameCOMMA
Operation	TokenNameIdentifier
>	TokenNameGREATER
create	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
,	TokenNameCOMMA
pop	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_termPairWithOperation4045	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
key	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
129	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_129_in_termPairWithOperation4047	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_term_in_termPairWithOperation4051	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
term	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
130	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_130_in_termPairWithOperation4053	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
135	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_135_in_termPairWithOperation4055	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_term_in_termPairWithOperation4059	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
vv	TokenNameIdentifier
=	TokenNameEQUAL
term	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
columns	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
Pair	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
,	TokenNameCOMMA
Operation	TokenNameIdentifier
>	TokenNameGREATER
create	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
,	TokenNameCOMMA
ListOperation	TokenNameIdentifier
.	TokenNameDOT
SetIndex	TokenNameIdentifier
(	TokenNameLPAREN
Arrays	TokenNameIdentifier
.	TokenNameDOT
asList	TokenNameIdentifier
(	TokenNameLPAREN
t	TokenNameIdentifier
,	TokenNameCOMMA
vv	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
Term	TokenNameIdentifier
intTerm	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Term	TokenNameIdentifier
integer	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt74	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA74_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA74_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
INTEGER	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt74	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA74_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
QMARK	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt74	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
74	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt74	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
t	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
INTEGER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_INTEGER_in_intTerm4090	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
integer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
t	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
QMARK	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_QMARK_in_intTerm4102	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
integer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
++	TokenNamePLUS_PLUS
currentBindMarkerIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
integer	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
Operation	TokenNameIdentifier
operation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Operation	TokenNameIdentifier
op	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
i	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
sign	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
mk	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
ll	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
sl	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
,	TokenNameCOMMA
Term	TokenNameIdentifier
>	TokenNameGREATER
ml	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt76	TokenNameIdentifier
=	TokenNameEQUAL
9	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
alt76	TokenNameIdentifier
=	TokenNameEQUAL
dfa76	TokenNameIdentifier
.	TokenNameDOT
predict	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
alt76	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
136	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_136_in_operation4128	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
INTEGER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_INTEGER_in_operation4132	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
ColumnOperation	TokenNameIdentifier
.	TokenNameDOT
CounterInc	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
i	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
i	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
i	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
i	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
int	TokenNameint
alt75	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA75_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA75_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
137	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt75	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt75	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
sign	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
137	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_137_in_operation4144	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
i	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
INTEGER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_INTEGER_in_operation4149	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
i	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
i	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
i	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
i	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
validateMinusSupplied	TokenNameIdentifier
(	TokenNameLPAREN
sign	TokenNameIdentifier
,	TokenNameCOMMA
t	TokenNameIdentifier
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
sign	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
t	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
-	TokenNameMINUS
(	TokenNameLPAREN
Long	TokenNameIdentifier
.	TokenNameDOT
valueOf	TokenNameIdentifier
(	TokenNameLPAREN
t	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
t	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
ColumnOperation	TokenNameIdentifier
.	TokenNameDOT
CounterDec	TokenNameIdentifier
(	TokenNameLPAREN
t	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
136	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_136_in_operation4165	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mk	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
QMARK	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_QMARK_in_operation4169	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
PreparedOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
mk	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
mk	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
mk	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
mk	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
++	TokenNamePLUS_PLUS
currentBindMarkerIdx	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
PreparedOperation	TokenNameIdentifier
.	TokenNameDOT
Kind	TokenNameIdentifier
.	TokenNameDOT
PLUS_PREPARED	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
4	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
137	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_137_in_operation4179	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mk	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
QMARK	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_QMARK_in_operation4183	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
PreparedOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
mk	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
mk	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
mk	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
mk	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
++	TokenNamePLUS_PLUS
currentBindMarkerIdx	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
PreparedOperation	TokenNameIdentifier
.	TokenNameDOT
Kind	TokenNameIdentifier
.	TokenNameDOT
MINUS_PREPARED	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
5	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
136	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_136_in_operation4194	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_list_literal_in_operation4198	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ll	TokenNameIdentifier
=	TokenNameEQUAL
list_literal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
ListOperation	TokenNameIdentifier
.	TokenNameDOT
Append	TokenNameIdentifier
(	TokenNameLPAREN
ll	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
6	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
137	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_137_in_operation4208	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_list_literal_in_operation4212	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ll	TokenNameIdentifier
=	TokenNameEQUAL
list_literal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
ListOperation	TokenNameIdentifier
.	TokenNameDOT
Discard	TokenNameIdentifier
(	TokenNameLPAREN
ll	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
7	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
136	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_136_in_operation4223	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_set_literal_in_operation4227	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sl	TokenNameIdentifier
=	TokenNameEQUAL
set_literal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
SetOperation	TokenNameIdentifier
.	TokenNameDOT
Add	TokenNameIdentifier
(	TokenNameLPAREN
sl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
8	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
137	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_137_in_operation4237	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_set_literal_in_operation4241	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sl	TokenNameIdentifier
=	TokenNameEQUAL
set_literal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
SetOperation	TokenNameIdentifier
.	TokenNameDOT
Discard	TokenNameIdentifier
(	TokenNameLPAREN
sl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
9	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
136	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_136_in_operation4252	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_map_literal_in_operation4256	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ml	TokenNameIdentifier
=	TokenNameEQUAL
map_literal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
op	TokenNameIdentifier
=	TokenNameEQUAL
MapOperation	TokenNameIdentifier
.	TokenNameDOT
Put	TokenNameIdentifier
(	TokenNameLPAREN
ml	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
op	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
properties	TokenNameIdentifier
(	TokenNameLPAREN
PropertyDefinitions	TokenNameIdentifier
props	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_property_in_properties4276	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
property	TokenNameIdentifier
(	TokenNameLPAREN
props	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
loop77	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt77	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA77_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA77_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_AND	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt77	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt77	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_AND	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_AND_in_properties4280	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_property_in_properties4282	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
property	TokenNameIdentifier
(	TokenNameLPAREN
props	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop77	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
property	TokenNameIdentifier
(	TokenNameLPAREN
PropertyDefinitions	TokenNameIdentifier
props	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
ColumnIdentifier	TokenNameIdentifier
k	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
String	TokenNameIdentifier
simple	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Map	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
,	TokenNameCOMMA
Term	TokenNameIdentifier
>	TokenNameGREATER
map	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_property4305	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
135	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_135_in_property4307	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
alt78	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA78_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA78_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNT	TokenNameIdentifier
||	TokenNameOR_OR
LA78_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
INTEGER	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA78_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_FILTERING	TokenNameIdentifier
&&	TokenNameAND_AND
LA78_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_TTL	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA78_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_VALUES	TokenNameIdentifier
||	TokenNameOR_OR
LA78_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TIMESTAMP	TokenNameIdentifier
||	TokenNameOR_OR
LA78_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNTER	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA78_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_KEY	TokenNameIdentifier
&&	TokenNameAND_AND
LA78_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_CLUSTERING	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA78_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
IDENT	TokenNameIdentifier
||	TokenNameOR_OR
LA78_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TYPE	TokenNameIdentifier
||	TokenNameOR_OR
LA78_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_LIST	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA78_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ALL	TokenNameIdentifier
&&	TokenNameAND_AND
LA78_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
STRING_LITERAL	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
LA78_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
FLOAT	TokenNameIdentifier
&&	TokenNameAND_AND
LA78_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_FALSE	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
LA78_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ASCII	TokenNameIdentifier
&&	TokenNameAND_AND
LA78_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_MAP	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt78	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA78_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
132	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt78	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
78	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt78	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_propertyValue_in_property4312	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
simple	TokenNameIdentifier
=	TokenNameEQUAL
propertyValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
props	TokenNameIdentifier
.	TokenNameDOT
addProperty	TokenNameIdentifier
(	TokenNameLPAREN
k	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
simple	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
SyntaxException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addRecognitionError	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_map_literal_in_property4341	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
map	TokenNameIdentifier
=	TokenNameEQUAL
map_literal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
props	TokenNameIdentifier
.	TokenNameDOT
addProperty	TokenNameIdentifier
(	TokenNameLPAREN
k	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
convertMap	TokenNameIdentifier
(	TokenNameLPAREN
map	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
SyntaxException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addRecognitionError	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
String	TokenNameIdentifier
propertyValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
str	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
v	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
String	TokenNameIdentifier
u	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt79	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA79_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA79_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
INTEGER	TokenNameIdentifier
||	TokenNameOR_OR
LA79_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
IDENT	TokenNameIdentifier
||	TokenNameOR_OR
LA79_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
STRING_LITERAL	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA79_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
FLOAT	TokenNameIdentifier
&&	TokenNameAND_AND
LA79_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_FALSE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt79	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA79_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNT	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA79_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_FILTERING	TokenNameIdentifier
&&	TokenNameAND_AND
LA79_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_TTL	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA79_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_VALUES	TokenNameIdentifier
||	TokenNameOR_OR
LA79_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TIMESTAMP	TokenNameIdentifier
||	TokenNameOR_OR
LA79_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNTER	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA79_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_KEY	TokenNameIdentifier
&&	TokenNameAND_AND
LA79_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_CLUSTERING	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA79_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TYPE	TokenNameIdentifier
||	TokenNameOR_OR
LA79_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_LIST	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA79_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ALL	TokenNameIdentifier
&&	TokenNameAND_AND
LA79_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_PASSWORD	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
LA79_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ASCII	TokenNameIdentifier
&&	TokenNameAND_AND
LA79_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_MAP	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt79	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
79	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt79	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
v	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LT	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
INTEGER	TokenNameIdentifier
||	TokenNameOR_OR
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
IDENT	TokenNameIdentifier
||	TokenNameOR_OR
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
STRING_LITERAL	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
FLOAT	TokenNameIdentifier
&&	TokenNameAND_AND
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
<=	TokenNameLESS_EQUAL
K_FALSE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
input	TokenNameIdentifier
.	TokenNameDOT
consume	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
errorRecovery	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
MismatchedSetException	TokenNameIdentifier
mse	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MismatchedSetException	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
mse	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
str	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
v	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
v	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_unreserved_keyword_in_propertyValue4403	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
u	TokenNameIdentifier
=	TokenNameEQUAL
unreserved_keyword	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
str	TokenNameIdentifier
=	TokenNameEQUAL
u	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
str	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
Pair	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
tokenDefinition	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Pair	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
tkdef	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
t1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
tn	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt81	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA81_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA81_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TOKEN	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt81	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA81_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
STRING_LITERAL	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt81	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
81	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt81	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_TOKEN	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_TOKEN_in_tokenDefinition4451	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
l	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
125	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_125_in_tokenDefinition4464	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_term_in_tokenDefinition4468	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t1	TokenNameIdentifier
=	TokenNameEQUAL
term	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
l	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
t1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
loop80	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt80	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA80_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA80_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt80	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt80	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_tokenDefinition4474	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_term_in_tokenDefinition4478	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tn	TokenNameIdentifier
=	TokenNameEQUAL
term	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
l	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
tn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop80	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
126	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_126_in_tokenDefinition4486	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tkdef	TokenNameIdentifier
=	TokenNameEQUAL
Pair	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
create	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
l	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
t	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
STRING_LITERAL	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_STRING_LITERAL_in_tokenDefinition4498	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tkdef	TokenNameIdentifier
=	TokenNameEQUAL
Pair	TokenNameIdentifier
.	TokenNameDOT
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
create	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
t	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
t	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
tkdef	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
relation	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
<	TokenNameLESS
Relation	TokenNameIdentifier
>	TokenNameGREATER
clauses	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
Token	TokenNameIdentifier
type	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
name	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
name1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ColumnIdentifier	TokenNameIdentifier
namen	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Pair	TokenNameIdentifier
<	TokenNameLESS
String	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
<	TokenNameLESS
Term	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
tkd	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
f1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Term	TokenNameIdentifier
fN	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt84	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
alt84	TokenNameIdentifier
=	TokenNameEQUAL
dfa84	TokenNameIdentifier
.	TokenNameDOT
predict	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
alt84	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_relation4520	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
name	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LT	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
135	TokenNameIntegerLiteral
||	TokenNameOR_OR
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
138	TokenNameIntegerLiteral
&&	TokenNameAND_AND
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
<=	TokenNameLESS_EQUAL
141	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
input	TokenNameIdentifier
.	TokenNameDOT
consume	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
errorRecovery	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
MismatchedSetException	TokenNameIdentifier
mse	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MismatchedSetException	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
mse	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_term_in_relation4546	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
term	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
clauses	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Relation	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
type	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
type	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
t	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_TOKEN	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_TOKEN_in_relation4556	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
>	TokenNameGREATER
l	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
<	TokenNameLESS
ColumnIdentifier	TokenNameIdentifier
>	TokenNameGREATER
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
125	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_125_in_relation4567	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_relation4571	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
name1	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
l	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
name1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
loop82	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt82	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA82_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA82_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt82	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt82	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_relation4577	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_relation4581	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
namen	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
l	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
namen	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop82	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
126	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_126_in_relation4587	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LT	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
135	TokenNameIntegerLiteral
||	TokenNameOR_OR
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
138	TokenNameIntegerLiteral
&&	TokenNameAND_AND
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
<=	TokenNameLESS_EQUAL
141	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
input	TokenNameIdentifier
.	TokenNameDOT
consume	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
errorRecovery	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
MismatchedSetException	TokenNameIdentifier
mse	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MismatchedSetException	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
mse	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_tokenDefinition_in_relation4623	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tkd	TokenNameIdentifier
=	TokenNameEQUAL
tokenDefinition	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
tkd	TokenNameIdentifier
.	TokenNameDOT
right	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
tkd	TokenNameIdentifier
.	TokenNameDOT
right	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
l	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
addRecognitionError	TokenNameIdentifier
(	TokenNameLPAREN
"The number of arguments to the token() function don't match"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Term	TokenNameIdentifier
str	TokenNameIdentifier
=	TokenNameEQUAL
tkd	TokenNameIdentifier
.	TokenNameDOT
left	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
null	TokenNamenull
:	TokenNameCOLON
new	TokenNamenew
Term	TokenNameIdentifier
(	TokenNameLPAREN
tkd	TokenNameIdentifier
.	TokenNameDOT
left	TokenNameIdentifier
,	TokenNameCOMMA
Term	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
.	TokenNameDOT
STRING	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
l	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
Term	TokenNameIdentifier
tt	TokenNameIdentifier
=	TokenNameEQUAL
str	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
Term	TokenNameIdentifier
.	TokenNameDOT
tokenOf	TokenNameIdentifier
(	TokenNameLPAREN
tkd	TokenNameIdentifier
.	TokenNameDOT
right	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
str	TokenNameIdentifier
;	TokenNameSEMICOLON
clauses	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Relation	TokenNameIdentifier
(	TokenNameLPAREN
l	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
type	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
type	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
,	TokenNameCOMMA
tt	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_cident_in_relation4642	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
name	TokenNameIdentifier
=	TokenNameEQUAL
cident	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_IN	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_IN_in_relation4644	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Relation	TokenNameIdentifier
rel	TokenNameIdentifier
=	TokenNameEQUAL
Relation	TokenNameIdentifier
.	TokenNameDOT
createInRelation	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
125	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_125_in_relation4655	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_term_in_relation4659	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
f1	TokenNameIdentifier
=	TokenNameEQUAL
term	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
rel	TokenNameIdentifier
.	TokenNameDOT
addInValue	TokenNameIdentifier
(	TokenNameLPAREN
f1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
loop83	TokenNameIdentifier
:	TokenNameCOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
alt83	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA83_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA83_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
127	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt83	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt83	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_relation4664	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_term_in_relation4668	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fN	TokenNameIdentifier
=	TokenNameEQUAL
term	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
rel	TokenNameIdentifier
.	TokenNameDOT
addInValue	TokenNameIdentifier
(	TokenNameLPAREN
fN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
loop83	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
126	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_126_in_relation4675	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
clauses	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
rel	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
ParsedType	TokenNameIdentifier
comparatorType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
ParsedType	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ParsedType	TokenNameIdentifier
c	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt85	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
K_TIMESTAMP	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_COUNTER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_ASCII	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BIGINT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BLOB	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_BOOLEAN	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_DECIMAL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_DOUBLE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_FLOAT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_INET	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_INT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TEXT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_UUID	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VARCHAR	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_VARINT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_TIMEUUID	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt85	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_SET	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_LIST	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
K_MAP	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt85	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
STRING_LITERAL	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt85	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
85	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt85	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_native_type_in_comparatorType4700	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
native_type	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
c	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_collection_type_in_comparatorType4716	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
collection_type	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
c	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
s	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
STRING_LITERAL	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_STRING_LITERAL_in_comparatorType4728	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
t	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Custom	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
s	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
s	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
SyntaxException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addRecognitionError	TokenNameIdentifier
(	TokenNameLPAREN
"Cannot parse type "	TokenNameStringLiteral
+	TokenNamePLUS
(	TokenNameLPAREN
s	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
s	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
+	TokenNamePLUS
": "	TokenNameStringLiteral
+	TokenNamePLUS
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ConfigurationException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addRecognitionError	TokenNameIdentifier
(	TokenNameLPAREN
"Errot setting type "	TokenNameStringLiteral
+	TokenNamePLUS
(	TokenNameLPAREN
s	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
s	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
+	TokenNamePLUS
": "	TokenNameStringLiteral
+	TokenNamePLUS
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
t	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
ParsedType	TokenNameIdentifier
native_type	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
ParsedType	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt86	TokenNameIdentifier
=	TokenNameEQUAL
16	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
K_ASCII	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_BIGINT	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_BLOB	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_BOOLEAN	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_COUNTER	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_DECIMAL	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
6	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_DOUBLE	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
7	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_FLOAT	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_INET	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
9	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_INT	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
10	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_TEXT	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
11	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_TIMESTAMP	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
12	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_UUID	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
13	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_VARCHAR	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
14	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_VARINT	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
15	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_TIMEUUID	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt86	TokenNameIdentifier
=	TokenNameEQUAL
16	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
86	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt86	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_ASCII	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_ASCII_in_native_type4757	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
ASCII	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_BIGINT	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_BIGINT_in_native_type4771	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
BIGINT	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_BLOB	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_BLOB_in_native_type4784	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
BLOB	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
4	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_BOOLEAN	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_BOOLEAN_in_native_type4799	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
BOOLEAN	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
5	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_COUNTER	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_COUNTER_in_native_type4811	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
COUNTER	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
6	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_DECIMAL	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_DECIMAL_in_native_type4823	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
DECIMAL	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
7	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_DOUBLE	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_DOUBLE_in_native_type4835	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
DOUBLE	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
8	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_FLOAT	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_FLOAT_in_native_type4848	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
FLOAT	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
9	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_INET	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_INET_in_native_type4862	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
INET	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
10	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_INT	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_INT_in_native_type4877	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
INT	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
11	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_TEXT	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_TEXT_in_native_type4893	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
TEXT	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
12	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_TIMESTAMP	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_TIMESTAMP_in_native_type4908	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
TIMESTAMP	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
13	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_UUID	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_UUID_in_native_type4918	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
UUID	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
14	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_VARCHAR	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_VARCHAR_in_native_type4933	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
VARCHAR	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
15	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_VARINT	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_VARINT_in_native_type4945	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
VARINT	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
16	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_TIMEUUID	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_TIMEUUID_in_native_type4958	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Native	TokenNameIdentifier
.	TokenNameDOT
TIMEUUID	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
t	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
ParsedType	TokenNameIdentifier
collection_type	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
ParsedType	TokenNameIdentifier
pt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ParsedType	TokenNameIdentifier
t1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ParsedType	TokenNameIdentifier
t2	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ParsedType	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt87	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
K_MAP	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt87	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_LIST	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt87	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
K_SET	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
alt87	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
87	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt87	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_MAP	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_MAP_in_collection_type4982	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
138	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_138_in_collection_type4985	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_comparatorType_in_collection_type4989	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t1	TokenNameIdentifier
=	TokenNameEQUAL
comparatorType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_127_in_collection_type4991	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_comparatorType_in_collection_type4995	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t2	TokenNameIdentifier
=	TokenNameEQUAL
comparatorType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
141	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_141_in_collection_type4997	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
pt	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Collection	TokenNameIdentifier
.	TokenNameDOT
map	TokenNameIdentifier
(	TokenNameLPAREN
t1	TokenNameIdentifier
,	TokenNameCOMMA
t2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
InvalidRequestException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addRecognitionError	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_LIST	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_LIST_in_collection_type5015	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
138	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_138_in_collection_type5017	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_comparatorType_in_collection_type5021	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
comparatorType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
141	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_141_in_collection_type5023	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
pt	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Collection	TokenNameIdentifier
.	TokenNameDOT
list	TokenNameIdentifier
(	TokenNameLPAREN
t	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
InvalidRequestException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addRecognitionError	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
K_SET	TokenNameIdentifier
,	TokenNameCOMMA
FOLLOW_K_SET_in_collection_type5041	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
138	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_138_in_collection_type5044	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_comparatorType_in_collection_type5048	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
comparatorType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
match	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
141	TokenNameIntegerLiteral
,	TokenNameCOMMA
FOLLOW_141_in_collection_type5050	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
pt	TokenNameIdentifier
=	TokenNameEQUAL
ParsedType	TokenNameIdentifier
.	TokenNameDOT
Collection	TokenNameIdentifier
.	TokenNameDOT
set	TokenNameIdentifier
(	TokenNameLPAREN
t	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
InvalidRequestException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addRecognitionError	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
pt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
username_return	TokenNameIdentifier
extends	TokenNameextends
ParserRuleReturnScope	TokenNameIdentifier
{	TokenNameLBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
CqlParser	TokenNameIdentifier
.	TokenNameDOT
username_return	TokenNameIdentifier
username	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
CqlParser	TokenNameIdentifier
.	TokenNameDOT
username_return	TokenNameIdentifier
retval	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CqlParser	TokenNameIdentifier
.	TokenNameDOT
username_return	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
retval	TokenNameIdentifier
.	TokenNameDOT
start	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LT	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
IDENT	TokenNameIdentifier
||	TokenNameOR_OR
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
STRING_LITERAL	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
input	TokenNameIdentifier
.	TokenNameDOT
consume	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
errorRecovery	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
MismatchedSetException	TokenNameIdentifier
mse	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MismatchedSetException	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
mse	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
retval	TokenNameIdentifier
.	TokenNameDOT
stop	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LT	TokenNameIdentifier
(	TokenNameLPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
retval	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
String	TokenNameIdentifier
unreserved_keyword	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
RecognitionException	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
str	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Token	TokenNameIdentifier
k	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
ParsedType	TokenNameIdentifier
t	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
alt88	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
LA88_0	TokenNameIdentifier
=	TokenNameEQUAL
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA88_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNT	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA88_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_FILTERING	TokenNameIdentifier
&&	TokenNameAND_AND
LA88_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_TTL	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA88_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_VALUES	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA88_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_KEY	TokenNameIdentifier
&&	TokenNameAND_AND
LA88_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_CLUSTERING	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA88_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TYPE	TokenNameIdentifier
||	TokenNameOR_OR
LA88_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_LIST	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA88_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ALL	TokenNameIdentifier
&&	TokenNameAND_AND
LA88_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_PASSWORD	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
LA88_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_MAP	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt88	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
LA88_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_TIMESTAMP	TokenNameIdentifier
||	TokenNameOR_OR
LA88_0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
K_COUNTER	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
LA88_0	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
K_ASCII	TokenNameIdentifier
&&	TokenNameAND_AND
LA88_0	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
K_TIMEUUID	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
alt88	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
NoViableAltException	TokenNameIdentifier
nvae	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NoViableAltException	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
88	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
nvae	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
alt88	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
k	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Token	TokenNameIdentifier
)	TokenNameRPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LT	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
K_COUNT	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
K_FILTERING	TokenNameIdentifier
&&	TokenNameAND_AND
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
<=	TokenNameLESS_EQUAL
K_TTL	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
K_VALUES	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
K_KEY	TokenNameIdentifier
&&	TokenNameAND_AND
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
<=	TokenNameLESS_EQUAL
K_CLUSTERING	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
K_TYPE	TokenNameIdentifier
||	TokenNameOR_OR
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
K_LIST	TokenNameIdentifier
||	TokenNameOR_OR
(	TokenNameLPAREN
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
K_ALL	TokenNameIdentifier
&&	TokenNameAND_AND
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
<=	TokenNameLESS_EQUAL
K_PASSWORD	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
input	TokenNameIdentifier
.	TokenNameDOT
LA	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
K_MAP	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
input	TokenNameIdentifier
.	TokenNameDOT
consume	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
errorRecovery	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
MismatchedSetException	TokenNameIdentifier
mse	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MismatchedSetException	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
input	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
mse	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
str	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
k	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
k	TokenNameIdentifier
.	TokenNameDOT
getText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
{	TokenNameLBRACE
pushFollow	TokenNameIdentifier
(	TokenNameLPAREN
FOLLOW_native_type_in_unreserved_keyword5372	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
t	TokenNameIdentifier
=	TokenNameEQUAL
native_type	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
state	TokenNameIdentifier
.	TokenNameDOT
_fsp	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
str	TokenNameIdentifier
=	TokenNameEQUAL
t	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
RecognitionException	TokenNameIdentifier
re	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportError	TokenNameIdentifier
(	TokenNameLPAREN
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recover	TokenNameIdentifier
(	TokenNameLPAREN
input	TokenNameIdentifier
,	TokenNameCOMMA
re	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
str	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
DFA2	TokenNameIdentifier
dfa2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DFA2	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
protected	TokenNameprotected
DFA28	TokenNameIdentifier
dfa28	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DFA28	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
protected	TokenNameprotected
DFA63	TokenNameIdentifier
dfa63	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DFA63	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
protected	TokenNameprotected
DFA73	TokenNameIdentifier
dfa73	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DFA73	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
protected	TokenNameprotected
DFA72	TokenNameIdentifier
dfa72	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DFA72	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
protected	TokenNameprotected
DFA76	TokenNameIdentifier
dfa76	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DFA76	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
protected	TokenNameprotected
DFA84	TokenNameIdentifier
dfa84	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DFA84	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA2_eotS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA2_eofS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA2_minS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"￿￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA2_maxS	TokenNameIdentifier
=	TokenNameEQUAL
"6￿?￿B￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA2_acceptS	TokenNameIdentifier
=	TokenNameEQUAL
"￿￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"  "	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA2_specialS	TokenNameIdentifier
=	TokenNameEQUAL
"￿}>"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA2_transitionS	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"￿￿￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿ "	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA2_eot	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA2_eotS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA2_eof	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA2_eofS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA2_min	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedStringToUnsignedChars	TokenNameIdentifier
(	TokenNameLPAREN
DFA2_minS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA2_max	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedStringToUnsignedChars	TokenNameIdentifier
(	TokenNameLPAREN
DFA2_maxS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA2_accept	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA2_acceptS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA2_special	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA2_specialS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA2_transition	TokenNameIdentifier
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
int	TokenNameint
numStates	TokenNameIdentifier
=	TokenNameEQUAL
DFA2_transitionS	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
DFA2_transition	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
short	TokenNameshort
[	TokenNameLBRACKET
numStates	TokenNameIdentifier
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
numStates	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
DFA2_transition	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA2_transitionS	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
class	TokenNameclass
DFA2	TokenNameIdentifier
extends	TokenNameextends
DFA	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
DFA2	TokenNameIdentifier
(	TokenNameLPAREN
BaseRecognizer	TokenNameIdentifier
recognizer	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
recognizer	TokenNameIdentifier
=	TokenNameEQUAL
recognizer	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
decisionNumber	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
eot	TokenNameIdentifier
=	TokenNameEQUAL
DFA2_eot	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
eof	TokenNameIdentifier
=	TokenNameEQUAL
DFA2_eof	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
min	TokenNameIdentifier
=	TokenNameEQUAL
DFA2_min	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
max	TokenNameIdentifier
=	TokenNameEQUAL
DFA2_max	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
accept	TokenNameIdentifier
=	TokenNameEQUAL
DFA2_accept	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
special	TokenNameIdentifier
=	TokenNameEQUAL
DFA2_special	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
transition	TokenNameIdentifier
=	TokenNameEQUAL
DFA2_transition	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getDescription	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"156:1: cqlStatement returns [ParsedStatement stmt] : (st1= selectStatement | st2= insertStatement | st3= updateStatement | st4= batchStatement | st5= deleteStatement | st6= useStatement | st7= truncateStatement | st8= createKeyspaceStatement | st9= createColumnFamilyStatement | st10= createIndexStatement | st11= dropKeyspaceStatement | st12= dropColumnFamilyStatement | st13= dropIndexStatement | st14= alterTableStatement | st15= alterKeyspaceStatement | st16= grantStatement | st17= revokeStatement | st18= listPermissionsStatement | st19= createUserStatement | st20= alterUserStatement | st21= dropUserStatement | st22= listUsersStatement );"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA28_eotS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA28_eofS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA28_minS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA28_maxS	TokenNameIdentifier
=	TokenNameEQUAL
"[￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA28_acceptS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA28_specialS	TokenNameIdentifier
=	TokenNameEQUAL
"￿}>"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA28_transitionS	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"￿￿￿￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿￿￿￿ ￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿  "	TokenNameStringLiteral
+	TokenNamePLUS
""	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"w￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA28_eot	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA28_eotS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA28_eof	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA28_eofS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA28_min	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedStringToUnsignedChars	TokenNameIdentifier
(	TokenNameLPAREN
DFA28_minS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA28_max	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedStringToUnsignedChars	TokenNameIdentifier
(	TokenNameLPAREN
DFA28_maxS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA28_accept	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA28_acceptS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA28_special	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA28_specialS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA28_transition	TokenNameIdentifier
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
int	TokenNameint
numStates	TokenNameIdentifier
=	TokenNameEQUAL
DFA28_transitionS	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
DFA28_transition	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
short	TokenNameshort
[	TokenNameLBRACKET
numStates	TokenNameIdentifier
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
numStates	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
DFA28_transition	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA28_transitionS	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
class	TokenNameclass
DFA28	TokenNameIdentifier
extends	TokenNameextends
DFA	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
DFA28	TokenNameIdentifier
(	TokenNameLPAREN
BaseRecognizer	TokenNameIdentifier
recognizer	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
recognizer	TokenNameIdentifier
=	TokenNameEQUAL
recognizer	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
decisionNumber	TokenNameIdentifier
=	TokenNameEQUAL
28	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
eot	TokenNameIdentifier
=	TokenNameEQUAL
DFA28_eot	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
eof	TokenNameIdentifier
=	TokenNameEQUAL
DFA28_eof	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
min	TokenNameIdentifier
=	TokenNameEQUAL
DFA28_min	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
max	TokenNameIdentifier
=	TokenNameEQUAL
DFA28_max	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
accept	TokenNameIdentifier
=	TokenNameEQUAL
DFA28_accept	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
special	TokenNameIdentifier
=	TokenNameEQUAL
DFA28_special	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
transition	TokenNameIdentifier
=	TokenNameEQUAL
DFA28_transition	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getDescription	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"329:1: deleteSelector returns [Selector s] : (c= cident | c= cident '[' t= term ']' );"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA63_eotS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA63_eofS	TokenNameIdentifier
=	TokenNameEQUAL
"￿￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA63_minS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA63_maxS	TokenNameIdentifier
=	TokenNameEQUAL
"[￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA63_acceptS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA63_specialS	TokenNameIdentifier
=	TokenNameEQUAL
"￿}>"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA63_transitionS	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"￿￿￿￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿￿￿￿ ￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿  "	TokenNameStringLiteral
+	TokenNamePLUS
""	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿￿ ￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿ ￿￿￿C￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA63_eot	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA63_eotS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA63_eof	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA63_eofS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA63_min	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedStringToUnsignedChars	TokenNameIdentifier
(	TokenNameLPAREN
DFA63_minS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA63_max	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedStringToUnsignedChars	TokenNameIdentifier
(	TokenNameLPAREN
DFA63_maxS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA63_accept	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA63_acceptS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA63_special	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA63_specialS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA63_transition	TokenNameIdentifier
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
int	TokenNameint
numStates	TokenNameIdentifier
=	TokenNameEQUAL
DFA63_transitionS	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
DFA63_transition	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
short	TokenNameshort
[	TokenNameLBRACKET
numStates	TokenNameIdentifier
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
numStates	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
DFA63_transition	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA63_transitionS	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
class	TokenNameclass
DFA63	TokenNameIdentifier
extends	TokenNameextends
DFA	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
DFA63	TokenNameIdentifier
(	TokenNameLPAREN
BaseRecognizer	TokenNameIdentifier
recognizer	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
recognizer	TokenNameIdentifier
=	TokenNameEQUAL
recognizer	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
decisionNumber	TokenNameIdentifier
=	TokenNameEQUAL
63	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
eot	TokenNameIdentifier
=	TokenNameEQUAL
DFA63_eot	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
eof	TokenNameIdentifier
=	TokenNameEQUAL
DFA63_eof	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
min	TokenNameIdentifier
=	TokenNameEQUAL
DFA63_min	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
max	TokenNameIdentifier
=	TokenNameEQUAL
DFA63_max	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
accept	TokenNameIdentifier
=	TokenNameEQUAL
DFA63_accept	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
special	TokenNameIdentifier
=	TokenNameEQUAL
DFA63_special	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
transition	TokenNameIdentifier
=	TokenNameEQUAL
DFA63_transition	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getDescription	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"630:7: ( cfOrKsName[name, true] '.' )?"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA73_eotS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA73_eofS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA73_minS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA73_maxS	TokenNameIdentifier
=	TokenNameEQUAL
"[￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA73_acceptS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA73_specialS	TokenNameIdentifier
=	TokenNameEQUAL
"￿}>"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA73_transitionS	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"￿￿￿￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿￿￿￿ ￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿  "	TokenNameStringLiteral
+	TokenNamePLUS
""	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA73_eot	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA73_eotS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA73_eof	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA73_eofS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA73_min	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedStringToUnsignedChars	TokenNameIdentifier
(	TokenNameLPAREN
DFA73_minS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA73_max	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedStringToUnsignedChars	TokenNameIdentifier
(	TokenNameLPAREN
DFA73_maxS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA73_accept	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA73_acceptS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA73_special	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA73_specialS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA73_transition	TokenNameIdentifier
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
int	TokenNameint
numStates	TokenNameIdentifier
=	TokenNameEQUAL
DFA73_transitionS	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
DFA73_transition	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
short	TokenNameshort
[	TokenNameLBRACKET
numStates	TokenNameIdentifier
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
numStates	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
DFA73_transition	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA73_transitionS	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
class	TokenNameclass
DFA73	TokenNameIdentifier
extends	TokenNameextends
DFA	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
DFA73	TokenNameIdentifier
(	TokenNameLPAREN
BaseRecognizer	TokenNameIdentifier
recognizer	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
recognizer	TokenNameIdentifier
=	TokenNameEQUAL
recognizer	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
decisionNumber	TokenNameIdentifier
=	TokenNameEQUAL
73	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
eot	TokenNameIdentifier
=	TokenNameEQUAL
DFA73_eot	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
eof	TokenNameIdentifier
=	TokenNameEQUAL
DFA73_eof	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
min	TokenNameIdentifier
=	TokenNameEQUAL
DFA73_min	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
max	TokenNameIdentifier
=	TokenNameEQUAL
DFA73_max	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
accept	TokenNameIdentifier
=	TokenNameEQUAL
DFA73_accept	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
special	TokenNameIdentifier
=	TokenNameEQUAL
DFA73_special	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
transition	TokenNameIdentifier
=	TokenNameEQUAL
DFA73_transition	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getDescription	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"671:1: termPairWithOperation[List<Pair<ColumnIdentifier, Operation>> columns] : (key= cident '=' (set_op= set_operation | c= cident op= operation | ll= list_literal '+' c= cident | mk= QMARK '+' c= cident ) | key= cident '[' t= term ']' '=' vv= term );"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA72_eotS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA72_eofS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA72_minS	TokenNameIdentifier
=	TokenNameEQUAL
"￿￿￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA72_maxS	TokenNameIdentifier
=	TokenNameEQUAL
"￿￿J"	TokenNameStringLiteral
+	TokenNamePLUS
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA72_acceptS	TokenNameIdentifier
=	TokenNameEQUAL
"￿￿￿￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA72_specialS	TokenNameIdentifier
=	TokenNameEQUAL
"￿}>"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA72_transitionS	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"￿￿￿￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿￿￿￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
" ￿%￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
"v￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"7￿￿7￿"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"v￿￿ "	TokenNameStringLiteral
,	TokenNameCOMMA
" 7￿ ￿ "	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA72_eot	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA72_eotS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA72_eof	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA72_eofS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA72_min	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedStringToUnsignedChars	TokenNameIdentifier
(	TokenNameLPAREN
DFA72_minS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA72_max	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedStringToUnsignedChars	TokenNameIdentifier
(	TokenNameLPAREN
DFA72_maxS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA72_accept	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA72_acceptS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA72_special	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA72_specialS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA72_transition	TokenNameIdentifier
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
int	TokenNameint
numStates	TokenNameIdentifier
=	TokenNameEQUAL
DFA72_transitionS	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
DFA72_transition	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
short	TokenNameshort
[	TokenNameLBRACKET
numStates	TokenNameIdentifier
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
numStates	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
DFA72_transition	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA72_transitionS	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
class	TokenNameclass
DFA72	TokenNameIdentifier
extends	TokenNameextends
DFA	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
DFA72	TokenNameIdentifier
(	TokenNameLPAREN
BaseRecognizer	TokenNameIdentifier
recognizer	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
recognizer	TokenNameIdentifier
=	TokenNameEQUAL
recognizer	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
decisionNumber	TokenNameIdentifier
=	TokenNameEQUAL
72	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
eot	TokenNameIdentifier
=	TokenNameEQUAL
DFA72_eot	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
eof	TokenNameIdentifier
=	TokenNameEQUAL
DFA72_eof	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
min	TokenNameIdentifier
=	TokenNameEQUAL
DFA72_min	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
max	TokenNameIdentifier
=	TokenNameEQUAL
DFA72_max	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
accept	TokenNameIdentifier
=	TokenNameEQUAL
DFA72_accept	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
special	TokenNameIdentifier
=	TokenNameEQUAL
DFA72_special	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
transition	TokenNameIdentifier
=	TokenNameEQUAL
DFA72_transition	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getDescription	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"673:9: (set_op= set_operation | c= cident op= operation | ll= list_literal '+' c= cident | mk= QMARK '+' c= cident )"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA76_eotS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA76_eofS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA76_minS	TokenNameIdentifier
=	TokenNameEQUAL
"￿￿￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA76_maxS	TokenNameIdentifier
=	TokenNameEQUAL
"￿￿￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA76_acceptS	TokenNameIdentifier
=	TokenNameEQUAL
"￿￿￿ "	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA76_specialS	TokenNameIdentifier
=	TokenNameEQUAL
"￿}>"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA76_transitionS	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"{￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"9￿:￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
"9￿:￿ ￿ "	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
"7￿￿:￿"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
"￿"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA76_eot	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA76_eotS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA76_eof	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA76_eofS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA76_min	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedStringToUnsignedChars	TokenNameIdentifier
(	TokenNameLPAREN
DFA76_minS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA76_max	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedStringToUnsignedChars	TokenNameIdentifier
(	TokenNameLPAREN
DFA76_maxS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA76_accept	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA76_acceptS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA76_special	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA76_specialS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA76_transition	TokenNameIdentifier
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
int	TokenNameint
numStates	TokenNameIdentifier
=	TokenNameEQUAL
DFA76_transitionS	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
DFA76_transition	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
short	TokenNameshort
[	TokenNameLBRACKET
numStates	TokenNameIdentifier
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
numStates	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
DFA76_transition	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA76_transitionS	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
class	TokenNameclass
DFA76	TokenNameIdentifier
extends	TokenNameextends
DFA	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
DFA76	TokenNameIdentifier
(	TokenNameLPAREN
BaseRecognizer	TokenNameIdentifier
recognizer	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
recognizer	TokenNameIdentifier
=	TokenNameEQUAL
recognizer	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
decisionNumber	TokenNameIdentifier
=	TokenNameEQUAL
76	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
eot	TokenNameIdentifier
=	TokenNameEQUAL
DFA76_eot	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
eof	TokenNameIdentifier
=	TokenNameEQUAL
DFA76_eof	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
min	TokenNameIdentifier
=	TokenNameEQUAL
DFA76_min	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
max	TokenNameIdentifier
=	TokenNameEQUAL
DFA76_max	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
accept	TokenNameIdentifier
=	TokenNameEQUAL
DFA76_accept	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
special	TokenNameIdentifier
=	TokenNameEQUAL
DFA76_special	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
transition	TokenNameIdentifier
=	TokenNameEQUAL
DFA76_transition	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getDescription	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"709:1: operation returns [Operation op] : ( '+' i= INTEGER | (sign= '-' )? i= INTEGER | '+' mk= QMARK | '-' mk= QMARK | '+' ll= list_literal | '-' ll= list_literal | '+' sl= set_literal | '-' sl= set_literal | '+' ml= map_literal );"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA84_eotS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA84_eofS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA84_minS	TokenNameIdentifier
=	TokenNameEQUAL
"L￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA84_maxS	TokenNameIdentifier
=	TokenNameEQUAL
"[￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA84_acceptS	TokenNameIdentifier
=	TokenNameEQUAL
"￿"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
DFA84_specialS	TokenNameIdentifier
=	TokenNameEQUAL
"￿}>"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA84_transitionS	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"￿￿￿￿￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿￿￿￿ ￿"	TokenNameStringLiteral
+	TokenNamePLUS
"￿￿  "	TokenNameStringLiteral
+	TokenNamePLUS
""	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
":￿￿"	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA84_eot	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA84_eotS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA84_eof	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA84_eofS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA84_min	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedStringToUnsignedChars	TokenNameIdentifier
(	TokenNameLPAREN
DFA84_minS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
char	TokenNamechar
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA84_max	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedStringToUnsignedChars	TokenNameIdentifier
(	TokenNameLPAREN
DFA84_maxS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA84_accept	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA84_acceptS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA84_special	TokenNameIdentifier
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA84_specialS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
DFA84_transition	TokenNameIdentifier
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
int	TokenNameint
numStates	TokenNameIdentifier
=	TokenNameEQUAL
DFA84_transitionS	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
DFA84_transition	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
short	TokenNameshort
[	TokenNameLBRACKET
numStates	TokenNameIdentifier
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
numStates	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
DFA84_transition	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
DFA	TokenNameIdentifier
.	TokenNameDOT
unpackEncodedString	TokenNameIdentifier
(	TokenNameLPAREN
DFA84_transitionS	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
class	TokenNameclass
DFA84	TokenNameIdentifier
extends	TokenNameextends
DFA	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
DFA84	TokenNameIdentifier
(	TokenNameLPAREN
BaseRecognizer	TokenNameIdentifier
recognizer	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
recognizer	TokenNameIdentifier
=	TokenNameEQUAL
recognizer	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
decisionNumber	TokenNameIdentifier
=	TokenNameEQUAL
84	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
eot	TokenNameIdentifier
=	TokenNameEQUAL
DFA84_eot	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
eof	TokenNameIdentifier
=	TokenNameEQUAL
DFA84_eof	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
min	TokenNameIdentifier
=	TokenNameEQUAL
DFA84_min	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
max	TokenNameIdentifier
=	TokenNameEQUAL
DFA84_max	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
accept	TokenNameIdentifier
=	TokenNameEQUAL
DFA84_accept	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
special	TokenNameIdentifier
=	TokenNameEQUAL
DFA84_special	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
transition	TokenNameIdentifier
=	TokenNameEQUAL
DFA84_transition	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getDescription	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"752:1: relation[List<Relation> clauses] : (name= cident type= ( '=' | '<' | '<=' | '>=' | '>' ) t= term | K_TOKEN '(' name1= cident ( ',' namen= cident )* ')' type= ( '=' | '<' | '<=' | '>=' | '>' ) tkd= tokenDefinition | name= cident K_IN '(' f1= term ( ',' fN= term )* ')' );"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cqlStatement_in_query72	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x1000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_124_in_query75	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x1000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_EOF_in_query79	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_selectStatement_in_cqlStatement113	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_insertStatement_in_cqlStatement138	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_updateStatement_in_cqlStatement163	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_batchStatement_in_cqlStatement188	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_deleteStatement_in_cqlStatement214	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_useStatement_in_cqlStatement239	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_truncateStatement_in_cqlStatement267	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_createKeyspaceStatement_in_cqlStatement290	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_createColumnFamilyStatement_in_cqlStatement307	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_createIndexStatement_in_cqlStatement319	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_dropKeyspaceStatement_in_cqlStatement338	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_dropColumnFamilyStatement_in_cqlStatement356	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_dropIndexStatement_in_cqlStatement370	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_alterTableStatement_in_cqlStatement391	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_alterKeyspaceStatement_in_cqlStatement411	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_grantStatement_in_cqlStatement428	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_revokeStatement_in_cqlStatement453	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_listPermissionsStatement_in_cqlStatement477	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_createUserStatement_in_cqlStatement492	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_alterUserStatement_in_cqlStatement512	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_dropUserStatement_in_cqlStatement533	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_listUsersStatement_in_cqlStatement555	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_USE_in_useStatement589	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_keyspaceName_in_useStatement593	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_SELECT_in_selectStatement627	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000001L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_selectClause_in_selectStatement633	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000080L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_COUNT_in_selectStatement638	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x2000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_125_in_selectStatement640	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000001L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_selectCountClause_in_selectStatement644	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x4000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_126_in_selectStatement646	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000080L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_FROM_in_selectStatement659	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_columnFamilyName_in_selectStatement663	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000002B02L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_WHERE_in_selectStatement673	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE82FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_whereClause_in_selectStatement677	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000002A02L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ORDER_in_selectStatement690	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000400L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_BY_in_selectStatement692	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_orderByClause_in_selectStatement694	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000002802L	TokenNameLongLiteral
,	TokenNameCOMMA
0x8000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_selectStatement699	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_orderByClause_in_selectStatement701	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000002802L	TokenNameLongLiteral
,	TokenNameCOMMA
0x8000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_LIMIT_in_selectStatement718	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_INTEGER_in_selectStatement722	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000002002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ALLOW_in_selectStatement737	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000004000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_FILTERING_in_selectStatement739	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_selector_in_selectClause776	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
,	TokenNameCOMMA
0x8000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_selectClause781	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_selector_in_selectClause785	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
,	TokenNameCOMMA
0x8000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_128_in_selectClause797	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_selector822	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_WRITETIME_in_selector844	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x2000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_125_in_selector846	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_selector850	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x4000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_126_in_selector852	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_TTL_in_selector862	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x2000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_125_in_selector864	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_selector868	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x4000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_126_in_selector870	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_128_in_selectCountClause899	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_INTEGER_in_selectCountClause921	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_relation_in_whereClause957	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000020002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_AND_in_whereClause961	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE82FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_relation_in_whereClause963	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000020002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_orderByClause994	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x00000000000C0002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ASC_in_orderByClause999	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_DESC_in_orderByClause1003	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_INSERT_in_insertStatement1041	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000200000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_INTO_in_insertStatement1043	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_columnFamilyName_in_insertStatement1047	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x2000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_125_in_insertStatement1059	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_insertStatement1063	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_insertStatement1070	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_insertStatement1074	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_126_in_insertStatement1081	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000400000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_VALUES_in_insertStatement1091	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x2000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_125_in_insertStatement1103	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x00000000000007D0L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000012L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_set_operation_in_insertStatement1107	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_insertStatement1113	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x00000000000007D0L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000012L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_set_operation_in_insertStatement1117	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_126_in_insertStatement1124	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000800002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_usingClause_in_insertStatement1136	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_USING_in_usingClause1166	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000001010000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_usingClauseObjective_in_usingClause1168	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000001030002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_AND_in_usingClause1173	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000001010000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_usingClauseObjective_in_usingClause1176	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000001030002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_USING_in_usingClauseDelete1198	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000001000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_usingClauseDeleteObjective_in_usingClauseDelete1200	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000001020002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_AND_in_usingClauseDelete1205	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000001000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_usingClauseDeleteObjective_in_usingClauseDelete1208	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000001020002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_TIMESTAMP_in_usingClauseDeleteObjective1230	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_INTEGER_in_usingClauseDeleteObjective1234	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_usingClauseDeleteObjective_in_usingClauseObjective1254	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_TTL_in_usingClauseObjective1263	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_INTEGER_in_usingClauseObjective1267	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_UPDATE_in_updateStatement1301	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_columnFamilyName_in_updateStatement1305	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000004800000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_usingClause_in_updateStatement1315	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000004000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_SET_in_updateStatement1327	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_termPairWithOperation_in_updateStatement1329	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000100L	TokenNameLongLiteral
,	TokenNameCOMMA
0x8000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_updateStatement1333	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_termPairWithOperation_in_updateStatement1335	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000100L	TokenNameLongLiteral
,	TokenNameCOMMA
0x8000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_WHERE_in_updateStatement1346	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE82FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_whereClause_in_updateStatement1350	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_DELETE_in_deleteStatement1390	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C0C0L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_deleteSelection_in_deleteStatement1396	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000080L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_FROM_in_deleteStatement1409	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_columnFamilyName_in_deleteStatement1413	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000800100L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_usingClauseDelete_in_deleteStatement1423	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000100L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_WHERE_in_deleteStatement1435	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE82FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_whereClause_in_deleteStatement1439	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_deleteSelector_in_deleteSelection1470	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
,	TokenNameCOMMA
0x8000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_deleteSelection1475	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_deleteSelector_in_deleteSelection1479	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
,	TokenNameCOMMA
0x8000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_deleteSelector1506	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_deleteSelector1533	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_129_in_deleteSelector1535	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x00000000000007D0L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_term_in_deleteSelector1539	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000004L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_130_in_deleteSelector1541	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_BEGIN_in_batchStatement1575	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x00000000E0000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_UNLOGGED_in_batchStatement1585	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000080000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_COUNTER_in_batchStatement1591	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000080000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_BATCH_in_batchStatement1604	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x000000000A900000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_usingClause_in_batchStatement1608	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x000000000A900000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_batchStatementObjective_in_batchStatement1626	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x000000010A900000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x1000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_124_in_batchStatement1628	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x000000010A900000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_batchStatementObjective_in_batchStatement1637	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x000000010A900000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x1000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_124_in_batchStatement1639	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x000000010A900000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_APPLY_in_batchStatement1653	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000080000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_BATCH_in_batchStatement1655	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_insertStatement_in_batchStatementObjective1686	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_updateStatement_in_batchStatementObjective1699	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_deleteStatement_in_batchStatementObjective1712	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_CREATE_in_createKeyspaceStatement1747	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000400000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_KEYSPACE_in_createKeyspaceStatement1749	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_keyspaceName_in_createKeyspaceStatement1753	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000800000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_WITH_in_createKeyspaceStatement1761	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_properties_in_createKeyspaceStatement1763	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_CREATE_in_createColumnFamilyStatement1789	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000001000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_COLUMNFAMILY_in_createColumnFamilyStatement1791	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_columnFamilyName_in_createColumnFamilyStatement1795	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x2000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cfamDefinition_in_createColumnFamilyStatement1805	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_125_in_cfamDefinition1824	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BE04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cfamColumns_in_cfamDefinition1826	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_cfamDefinition1831	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BE04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC00000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cfamColumns_in_cfamDefinition1833	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_126_in_cfamDefinition1840	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000800000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_WITH_in_cfamDefinition1850	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cfamProperty_in_cfamDefinition1852	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000020002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_AND_in_cfamDefinition1857	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cfamProperty_in_cfamDefinition1859	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000020002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_cfamColumns1885	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04541C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE03FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_comparatorType_in_cfamColumns1889	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000002000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_PRIMARY_in_cfamColumns1894	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000004000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_KEY_in_cfamColumns1896	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_PRIMARY_in_cfamColumns1908	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000004000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_KEY_in_cfamColumns1910	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x2000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_125_in_cfamColumns1912	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x200000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_pkDef_in_cfamColumns1914	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_cfamColumns1918	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_cfamColumns1922	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_126_in_cfamColumns1929	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_pkDef1949	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_125_in_pkDef1959	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_pkDef1965	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_pkDef1971	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_pkDef1975	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_126_in_pkDef1982	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_property_in_cfamProperty2002	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_COMPACT_in_cfamProperty2011	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000010000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_STORAGE_in_cfamProperty2013	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_CLUSTERING_in_cfamProperty2023	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000200L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ORDER_in_cfamProperty2025	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000400L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_BY_in_cfamProperty2027	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x2000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_125_in_cfamProperty2029	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cfamOrdering_in_cfamProperty2031	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_cfamProperty2035	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cfamOrdering_in_cfamProperty2037	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_126_in_cfamProperty2042	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_cfamOrdering2070	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x00000000000C0000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ASC_in_cfamOrdering2073	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_DESC_in_cfamOrdering2077	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_CREATE_in_createIndexStatement2106	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000040000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_INDEX_in_createIndexStatement2108	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000180000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_IDENT_in_createIndexStatement2113	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000100000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ON_in_createIndexStatement2117	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_columnFamilyName_in_createIndexStatement2121	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x2000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_125_in_createIndexStatement2123	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_createIndexStatement2127	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x4000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_126_in_createIndexStatement2129	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ALTER_in_alterKeyspaceStatement2169	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000400000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_KEYSPACE_in_alterKeyspaceStatement2171	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_keyspaceName_in_alterKeyspaceStatement2175	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000800000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_WITH_in_alterKeyspaceStatement2185	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_properties_in_alterKeyspaceStatement2187	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ALTER_in_alterTableStatement2223	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000001000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_COLUMNFAMILY_in_alterTableStatement2225	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_columnFamilyName_in_alterTableStatement2229	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0001A00800000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ALTER_in_alterTableStatement2243	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_alterTableStatement2247	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000400000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_TYPE_in_alterTableStatement2249	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04541C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE03FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_comparatorType_in_alterTableStatement2253	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ADD_in_alterTableStatement2269	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_alterTableStatement2275	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04541C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE03FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_comparatorType_in_alterTableStatement2279	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_WITH_in_alterTableStatement2313	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_properties_in_alterTableStatement2316	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_RENAME_in_alterTableStatement2349	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_alterTableStatement2403	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0002000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_TO_in_alterTableStatement2405	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_alterTableStatement2409	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000020002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_AND_in_alterTableStatement2430	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_alterTableStatement2434	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0002000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_TO_in_alterTableStatement2436	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_alterTableStatement2440	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000020002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_DROP_in_dropKeyspaceStatement2486	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000400000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_KEYSPACE_in_dropKeyspaceStatement2488	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_keyspaceName_in_dropKeyspaceStatement2492	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_DROP_in_dropColumnFamilyStatement2517	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000001000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_COLUMNFAMILY_in_dropColumnFamilyStatement2519	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_columnFamilyName_in_dropColumnFamilyStatement2523	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_DROP_in_dropIndexStatement2554	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000040000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_INDEX_in_dropIndexStatement2556	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000080000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_IDENT_in_dropIndexStatement2560	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_TRUNCATE_in_truncateStatement2591	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_columnFamilyName_in_truncateStatement2595	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_GRANT_in_grantStatement2620	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0E04200200000020L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_permissionOrAll_in_grantStatement2632	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000100000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ON_in_grantStatement2640	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BD44141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_resource_in_grantStatement2652	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0002000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_TO_in_grantStatement2660	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000080000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000010L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_username_in_grantStatement2672	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_REVOKE_in_revokeStatement2703	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0E04200200000020L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_permissionOrAll_in_revokeStatement2715	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000100000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ON_in_revokeStatement2723	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BD44141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_resource_in_revokeStatement2735	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000080L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_FROM_in_revokeStatement2743	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000080000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000010L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_username_in_revokeStatement2755	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_LIST_in_listPermissionsStatement2793	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0E04200200000020L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_permissionOrAll_in_listPermissionsStatement2805	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0180100000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ON_in_listPermissionsStatement2815	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BD44141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_resource_in_listPermissionsStatement2817	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0180000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_OF_in_listPermissionsStatement2832	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000080000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000010L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_username_in_listPermissionsStatement2834	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0100000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_NORECURSIVE_in_listPermissionsStatement2849	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_set_in_permission2885	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ALL_in_permissionOrAll2934	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x1000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_PERMISSIONS_in_permissionOrAll2938	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_permission_in_permissionOrAll2959	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x2000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_PERMISSION_in_permissionOrAll2963	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_dataResource_in_resource2991	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ALL_in_dataResource3014	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x4000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_KEYSPACES_in_dataResource3016	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_KEYSPACE_in_dataResource3026	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_keyspaceName_in_dataResource3032	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_COLUMNFAMILY_in_dataResource3044	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_columnFamilyName_in_dataResource3053	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_CREATE_in_createUserStatement3093	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x8000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_USER_in_createUserStatement3095	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000080000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000010L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_username_in_createUserStatement3097	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000800000002L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000003L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_WITH_in_createUserStatement3107	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000008L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_userOptions_in_createUserStatement3109	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000003L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_SUPERUSER_in_createUserStatement3123	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_NOSUPERUSER_in_createUserStatement3129	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ALTER_in_alterUserStatement3174	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x8000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_USER_in_alterUserStatement3176	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000080000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000010L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_username_in_alterUserStatement3178	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000800000002L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000003L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_WITH_in_alterUserStatement3188	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000008L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_userOptions_in_alterUserStatement3190	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000003L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_SUPERUSER_in_alterUserStatement3204	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_NOSUPERUSER_in_alterUserStatement3210	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_DROP_in_dropUserStatement3246	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x8000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_USER_in_dropUserStatement3248	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000080000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000010L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_username_in_dropUserStatement3250	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_LIST_in_listUsersStatement3275	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000004L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_USERS_in_listUsersStatement3277	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_userOption_in_userOptions3297	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_PASSWORD_in_userOption3318	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000010L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_STRING_LITERAL_in_userOption3322	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_IDENT_in_cident3351	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_QUOTED_NAME_in_cident3376	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_unreserved_keyword_in_cident3395	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cfOrKsName_in_keyspaceName3428	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cfOrKsName_in_columnFamilyName3462	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000008L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_131_in_columnFamilyName3465	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cfOrKsName_in_columnFamilyName3469	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_IDENT_in_cfOrKsName3490	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_QUOTED_NAME_in_cfOrKsName3515	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_unreserved_keyword_in_cfOrKsName3534	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_finalTerm_in_set_operation3559	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_QMARK_in_set_operation3574	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_map_literal_in_set_operation3592	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_list_literal_in_set_operation3605	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_set_literal_in_set_operation3617	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_129_in_list_literal3641	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000790L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000004L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_finalTerm_in_list_literal3649	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x8000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000004L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_list_literal3655	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000790L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_finalTerm_in_list_literal3659	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x8000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000004L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_130_in_list_literal3669	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_132_in_set_literal3692	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000790L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000020L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_finalTerm_in_set_literal3700	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x8000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000020L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_set_literal3706	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000790L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_finalTerm_in_set_literal3710	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x8000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000020L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_133_in_set_literal3720	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_132_in_map_literal3749	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000790L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_finalTerm_in_map_literal3765	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000040L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_134_in_map_literal3767	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000790L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_finalTerm_in_map_literal3771	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x8000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000020L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_map_literal3777	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000790L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_finalTerm_in_map_literal3781	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000040L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_134_in_map_literal3783	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000790L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_finalTerm_in_map_literal3787	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x8000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000020L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_133_in_map_literal3794	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_set_in_finalTerm3826	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_finalTerm_in_term3874	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_QMARK_in_term3886	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_termPairWithOperation3913	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000080L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_135_in_termPairWithOperation3915	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141D040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE7FFL	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000012L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_set_operation_in_termPairWithOperation3929	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_termPairWithOperation3945	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000300L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_operation_in_termPairWithOperation3949	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_list_literal_in_termPairWithOperation3975	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000100L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_136_in_termPairWithOperation3977	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_termPairWithOperation3981	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_QMARK_in_termPairWithOperation4007	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000100L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_136_in_termPairWithOperation4009	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_termPairWithOperation4013	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_termPairWithOperation4045	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_129_in_termPairWithOperation4047	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x00000000000007D0L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_term_in_termPairWithOperation4051	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000004L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_130_in_termPairWithOperation4053	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000080L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_135_in_termPairWithOperation4055	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x00000000000007D0L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_term_in_termPairWithOperation4059	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_INTEGER_in_intTerm4090	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_QMARK_in_intTerm4102	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_136_in_operation4128	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_INTEGER_in_operation4132	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_137_in_operation4144	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_INTEGER_in_operation4149	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_136_in_operation4165	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000040L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_QMARK_in_operation4169	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_137_in_operation4179	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000040L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_QMARK_in_operation4183	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_136_in_operation4194	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_list_literal_in_operation4198	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_137_in_operation4208	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_list_literal_in_operation4212	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_136_in_operation4223	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x00000000000007D0L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000012L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_set_literal_in_operation4227	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_137_in_operation4237	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x00000000000007D0L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000012L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_set_literal_in_operation4241	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_136_in_operation4252	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000010L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_map_literal_in_operation4256	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_property_in_properties4276	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000020002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_AND_in_properties4280	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_property_in_properties4282	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000020002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_property4305	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000080L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_135_in_property4307	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141D040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE73FL	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000010L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_propertyValue_in_property4312	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_map_literal_in_property4341	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_set_in_propertyValue4369	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_unreserved_keyword_in_propertyValue4403	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_TOKEN_in_tokenDefinition4451	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x2000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_125_in_tokenDefinition4464	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x00000000000007D0L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_term_in_tokenDefinition4468	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_tokenDefinition4474	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x00000000000007D0L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_term_in_tokenDefinition4478	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_126_in_tokenDefinition4486	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_STRING_LITERAL_in_tokenDefinition4498	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_relation4520	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000003C80L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_set_in_relation4524	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x00000000000007D0L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_term_in_relation4546	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_TOKEN_in_relation4556	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x2000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_125_in_relation4567	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_relation4571	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_relation4577	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04141C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE02FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_relation4581	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_126_in_relation4587	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000003C80L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_set_in_relation4602	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000810L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_tokenDefinition_in_relation4623	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_cident_in_relation4642	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000001000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_IN_in_relation4644	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x2000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_125_in_relation4655	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x00000000000007D0L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_term_in_relation4659	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_relation4664	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000001000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x00000000000007D0L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_term_in_relation4668	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0xC000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_126_in_relation4675	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_native_type_in_comparatorType4700	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_collection_type_in_comparatorType4716	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_STRING_LITERAL_in_comparatorType4728	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_ASCII_in_native_type4757	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_BIGINT_in_native_type4771	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_BLOB_in_native_type4784	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_BOOLEAN_in_native_type4799	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_COUNTER_in_native_type4811	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_DECIMAL_in_native_type4823	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_DOUBLE_in_native_type4835	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_FLOAT_in_native_type4848	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_INET_in_native_type4862	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_INT_in_native_type4877	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_TEXT_in_native_type4893	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_TIMESTAMP_in_native_type4908	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_UUID_in_native_type4918	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_VARCHAR_in_native_type4933	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_VARINT_in_native_type4945	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_TIMEUUID_in_native_type4958	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_MAP_in_collection_type4982	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000400L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_138_in_collection_type4985	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04541C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE03FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_comparatorType_in_collection_type4989	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x8000000000000000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_127_in_collection_type4991	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04541C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE03FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_comparatorType_in_collection_type4995	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000002000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_141_in_collection_type4997	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_LIST_in_collection_type5015	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000400L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_138_in_collection_type5017	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04541C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE03FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_comparatorType_in_collection_type5021	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000002000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_141_in_collection_type5023	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_K_SET_in_collection_type5041	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000400L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_138_in_collection_type5044	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0xF8404BC04541C040L	TokenNameLongLiteral
,	TokenNameCOMMA
0x000000000FFFE03FL	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_comparatorType_in_collection_type5048	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000000000L	TokenNameLongLiteral
,	TokenNameCOMMA
0x0000000000002000L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_141_in_collection_type5050	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_set_in_username0	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_set_in_unreserved_keyword5108	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
BitSet	TokenNameIdentifier
FOLLOW_native_type_in_unreserved_keyword5372	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BitSet	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
long	TokenNamelong
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
0x0000000000000002L	TokenNameLongLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
