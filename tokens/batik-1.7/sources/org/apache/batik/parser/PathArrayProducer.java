package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
parser	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Iterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
LinkedList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
svg	TokenNameIdentifier
.	TokenNameDOT
SVGPathSeg	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
PathArrayProducer	TokenNameIdentifier
implements	TokenNameimplements
PathHandler	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
LinkedList	TokenNameIdentifier
ps	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
p	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
LinkedList	TokenNameIdentifier
cs	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
c	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
cindex	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
pindex	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
ccount	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
pcount	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getPathCommands	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
c	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getPathParameters	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
p	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
startPath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
cs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
LinkedList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
short	TokenNameshort
[	TokenNameLBRACKET
11	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
ps	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
LinkedList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
float	TokenNamefloat
[	TokenNameLBRACKET
11	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
ccount	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
pcount	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
cindex	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
pindex	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
movetoRel	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
x	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_MOVETO_REL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
movetoAbs	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
x	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_MOVETO_ABS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
closePath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_CLOSEPATH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
linetoRel	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
x	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_LINETO_REL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
linetoAbs	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
x	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_LINETO_ABS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
linetoHorizontalRel	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
x	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_LINETO_HORIZONTAL_REL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
linetoHorizontalAbs	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
x	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_LINETO_HORIZONTAL_ABS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
linetoVerticalRel	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_LINETO_VERTICAL_REL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
linetoVerticalAbs	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_LINETO_VERTICAL_ABS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
curvetoCubicRel	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
x1	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y1	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
x2	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y2	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
x	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_CURVETO_CUBIC_REL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
curvetoCubicAbs	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
x1	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y1	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
x2	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y2	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
x	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_CURVETO_CUBIC_ABS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
curvetoCubicSmoothRel	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
x2	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y2	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
x	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_CURVETO_CUBIC_SMOOTH_REL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
curvetoCubicSmoothAbs	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
x2	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y2	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
x	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_CURVETO_CUBIC_SMOOTH_ABS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
curvetoQuadraticRel	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
x1	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y1	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
x	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_CURVETO_QUADRATIC_REL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
curvetoQuadraticAbs	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
x1	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y1	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
x	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_CURVETO_QUADRATIC_ABS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
curvetoQuadraticSmoothRel	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
x	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
curvetoQuadraticSmoothAbs	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
x	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
arcRel	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
rx	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
ry	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
xAxisRotation	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
largeArcFlag	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
sweepFlag	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
x	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_ARC_REL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
rx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
ry	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
xAxisRotation	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
largeArcFlag	TokenNameIdentifier
?	TokenNameQUESTION
1	TokenNameIntegerLiteral
:	TokenNameCOLON
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
sweepFlag	TokenNameIdentifier
?	TokenNameQUESTION
1	TokenNameIntegerLiteral
:	TokenNameCOLON
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
arcAbs	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
rx	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
ry	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
xAxisRotation	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
largeArcFlag	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
sweepFlag	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
x	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
y	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
command	TokenNameIdentifier
(	TokenNameLPAREN
SVGPathSeg	TokenNameIdentifier
.	TokenNameDOT
PATHSEG_ARC_ABS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
rx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
ry	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
xAxisRotation	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
largeArcFlag	TokenNameIdentifier
?	TokenNameQUESTION
1	TokenNameIntegerLiteral
:	TokenNameCOLON
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
sweepFlag	TokenNameIdentifier
?	TokenNameQUESTION
1	TokenNameIntegerLiteral
:	TokenNameCOLON
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
param	TokenNameIdentifier
(	TokenNameLPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
command	TokenNameIdentifier
(	TokenNameLPAREN
short	TokenNameshort
val	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
cindex	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
c	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
cs	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
short	TokenNameshort
[	TokenNameLBRACKET
c	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
*	TokenNameMULTIPLY
2	TokenNameIntegerLiteral
+	TokenNamePLUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
cindex	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
c	TokenNameIdentifier
[	TokenNameLBRACKET
cindex	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
val	TokenNameIdentifier
;	TokenNameSEMICOLON
ccount	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
param	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
val	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
pindex	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
p	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ps	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
float	TokenNamefloat
[	TokenNameLBRACKET
p	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
*	TokenNameMULTIPLY
2	TokenNameIntegerLiteral
+	TokenNamePLUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
pindex	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
p	TokenNameIdentifier
[	TokenNameLBRACKET
pindex	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
val	TokenNameIdentifier
;	TokenNameSEMICOLON
pcount	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
endPath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
allCommands	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
short	TokenNameshort
[	TokenNameLBRACKET
ccount	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
pos	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Iterator	TokenNameIdentifier
it	TokenNameIdentifier
=	TokenNameEQUAL
cs	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
it	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
a	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
short	TokenNameshort
[	TokenNameLBRACKET
]	TokenNameRBRACKET
)	TokenNameRPAREN
it	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
allCommands	TokenNameIdentifier
,	TokenNameCOMMA
pos	TokenNameIdentifier
,	TokenNameCOMMA
a	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pos	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
a	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
allCommands	TokenNameIdentifier
,	TokenNameCOMMA
pos	TokenNameIdentifier
,	TokenNameCOMMA
cindex	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cs	TokenNameIdentifier
.	TokenNameDOT
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
=	TokenNameEQUAL
allCommands	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
allParams	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
float	TokenNamefloat
[	TokenNameLBRACKET
pcount	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
pos	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
it	TokenNameIdentifier
=	TokenNameEQUAL
ps	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
it	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
a	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
)	TokenNameRPAREN
it	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
a	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
allParams	TokenNameIdentifier
,	TokenNameCOMMA
pos	TokenNameIdentifier
,	TokenNameCOMMA
a	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pos	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
a	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
allParams	TokenNameIdentifier
,	TokenNameCOMMA
pos	TokenNameIdentifier
,	TokenNameCOMMA
pindex	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ps	TokenNameIdentifier
.	TokenNameDOT
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
=	TokenNameEQUAL
allParams	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
