package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
script	TokenNameIdentifier
.	TokenNameDOT
rhino	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
security	TokenNameIdentifier
.	TokenNameDOT
AccessControlContext	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
security	TokenNameIdentifier
.	TokenNameDOT
AccessController	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
security	TokenNameIdentifier
.	TokenNameDOT
PrivilegedAction	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
script	TokenNameIdentifier
.	TokenNameDOT
Window	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
mozilla	TokenNameIdentifier
.	TokenNameDOT
javascript	TokenNameIdentifier
.	TokenNameDOT
Context	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
mozilla	TokenNameIdentifier
.	TokenNameDOT
javascript	TokenNameIdentifier
.	TokenNameDOT
Function	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
mozilla	TokenNameIdentifier
.	TokenNameDOT
javascript	TokenNameIdentifier
.	TokenNameDOT
ImporterTopLevel	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
mozilla	TokenNameIdentifier
.	TokenNameDOT
javascript	TokenNameIdentifier
.	TokenNameDOT
NativeObject	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
mozilla	TokenNameIdentifier
.	TokenNameDOT
javascript	TokenNameIdentifier
.	TokenNameDOT
Scriptable	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
mozilla	TokenNameIdentifier
.	TokenNameDOT
javascript	TokenNameIdentifier
.	TokenNameDOT
ScriptableObject	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Document	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
WindowWrapper	TokenNameIdentifier
extends	TokenNameextends
ImporterTopLevel	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
EMPTY_ARGUMENTS	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
protected	TokenNameprotected
RhinoInterpreter	TokenNameIdentifier
interpreter	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
Window	TokenNameIdentifier
window	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
WindowWrapper	TokenNameIdentifier
(	TokenNameLPAREN
Context	TokenNameIdentifier
context	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
context	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
names	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"setInterval"	TokenNameStringLiteral
,	TokenNameCOMMA
"setTimeout"	TokenNameStringLiteral
,	TokenNameCOMMA
"clearInterval"	TokenNameStringLiteral
,	TokenNameCOMMA
"clearTimeout"	TokenNameStringLiteral
,	TokenNameCOMMA
"parseXML"	TokenNameStringLiteral
,	TokenNameCOMMA
"getURL"	TokenNameStringLiteral
,	TokenNameCOMMA
"postURL"	TokenNameStringLiteral
,	TokenNameCOMMA
"alert"	TokenNameStringLiteral
,	TokenNameCOMMA
"confirm"	TokenNameStringLiteral
,	TokenNameCOMMA
"prompt"	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
defineFunctionProperties	TokenNameIdentifier
(	TokenNameLPAREN
names	TokenNameIdentifier
,	TokenNameCOMMA
WindowWrapper	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
ScriptableObject	TokenNameIdentifier
.	TokenNameDOT
DONTENUM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getClassName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"Window"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"[object Window]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Object	TokenNameIdentifier
setInterval	TokenNameIdentifier
(	TokenNameLPAREN
Context	TokenNameIdentifier
cx	TokenNameIdentifier
,	TokenNameCOMMA
Scriptable	TokenNameIdentifier
thisObj	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
,	TokenNameCOMMA
Function	TokenNameIdentifier
funObj	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
len	TokenNameIdentifier
=	TokenNameEQUAL
args	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
WindowWrapper	TokenNameIdentifier
ww	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
WindowWrapper	TokenNameIdentifier
)	TokenNameRPAREN
thisObj	TokenNameIdentifier
;	TokenNameSEMICOLON
Window	TokenNameIdentifier
window	TokenNameIdentifier
=	TokenNameEQUAL
ww	TokenNameIdentifier
.	TokenNameDOT
window	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
<	TokenNameLESS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
Context	TokenNameIdentifier
.	TokenNameDOT
reportRuntimeError	TokenNameIdentifier
(	TokenNameLPAREN
"invalid argument count"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
long	TokenNamelong
to	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
Long	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
Long	TokenNameIdentifier
.	TokenNameDOT
TYPE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
longValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
instanceof	TokenNameinstanceof
Function	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
RhinoInterpreter	TokenNameIdentifier
interp	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
RhinoInterpreter	TokenNameIdentifier
)	TokenNameRPAREN
window	TokenNameIdentifier
.	TokenNameDOT
getInterpreter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
FunctionWrapper	TokenNameIdentifier
fw	TokenNameIdentifier
;	TokenNameSEMICOLON
fw	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FunctionWrapper	TokenNameIdentifier
(	TokenNameLPAREN
interp	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
Function	TokenNameIdentifier
)	TokenNameRPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
EMPTY_ARGUMENTS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
Context	TokenNameIdentifier
.	TokenNameDOT
toObject	TokenNameIdentifier
(	TokenNameLPAREN
window	TokenNameIdentifier
.	TokenNameDOT
setInterval	TokenNameIdentifier
(	TokenNameLPAREN
fw	TokenNameIdentifier
,	TokenNameCOMMA
to	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
thisObj	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
String	TokenNameIdentifier
script	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
Context	TokenNameIdentifier
.	TokenNameDOT
toObject	TokenNameIdentifier
(	TokenNameLPAREN
window	TokenNameIdentifier
.	TokenNameDOT
setInterval	TokenNameIdentifier
(	TokenNameLPAREN
script	TokenNameIdentifier
,	TokenNameCOMMA
to	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
thisObj	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Object	TokenNameIdentifier
setTimeout	TokenNameIdentifier
(	TokenNameLPAREN
Context	TokenNameIdentifier
cx	TokenNameIdentifier
,	TokenNameCOMMA
Scriptable	TokenNameIdentifier
thisObj	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
,	TokenNameCOMMA
Function	TokenNameIdentifier
funObj	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
len	TokenNameIdentifier
=	TokenNameEQUAL
args	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
WindowWrapper	TokenNameIdentifier
ww	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
WindowWrapper	TokenNameIdentifier
)	TokenNameRPAREN
thisObj	TokenNameIdentifier
;	TokenNameSEMICOLON
Window	TokenNameIdentifier
window	TokenNameIdentifier
=	TokenNameEQUAL
ww	TokenNameIdentifier
.	TokenNameDOT
window	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
<	TokenNameLESS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
Context	TokenNameIdentifier
.	TokenNameDOT
reportRuntimeError	TokenNameIdentifier
(	TokenNameLPAREN
"invalid argument count"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
long	TokenNamelong
to	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
Long	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
Long	TokenNameIdentifier
.	TokenNameDOT
TYPE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
longValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
instanceof	TokenNameinstanceof
Function	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
RhinoInterpreter	TokenNameIdentifier
interp	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
RhinoInterpreter	TokenNameIdentifier
)	TokenNameRPAREN
window	TokenNameIdentifier
.	TokenNameDOT
getInterpreter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
FunctionWrapper	TokenNameIdentifier
fw	TokenNameIdentifier
;	TokenNameSEMICOLON
fw	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FunctionWrapper	TokenNameIdentifier
(	TokenNameLPAREN
interp	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
Function	TokenNameIdentifier
)	TokenNameRPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
EMPTY_ARGUMENTS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
Context	TokenNameIdentifier
.	TokenNameDOT
toObject	TokenNameIdentifier
(	TokenNameLPAREN
window	TokenNameIdentifier
.	TokenNameDOT
setTimeout	TokenNameIdentifier
(	TokenNameLPAREN
fw	TokenNameIdentifier
,	TokenNameCOMMA
to	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
thisObj	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
String	TokenNameIdentifier
script	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
Context	TokenNameIdentifier
.	TokenNameDOT
toObject	TokenNameIdentifier
(	TokenNameLPAREN
window	TokenNameIdentifier
.	TokenNameDOT
setTimeout	TokenNameIdentifier
(	TokenNameLPAREN
script	TokenNameIdentifier
,	TokenNameCOMMA
to	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
thisObj	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
clearInterval	TokenNameIdentifier
(	TokenNameLPAREN
Context	TokenNameIdentifier
cx	TokenNameIdentifier
,	TokenNameCOMMA
Scriptable	TokenNameIdentifier
thisObj	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
,	TokenNameCOMMA
Function	TokenNameIdentifier
funObj	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
len	TokenNameIdentifier
=	TokenNameEQUAL
args	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
WindowWrapper	TokenNameIdentifier
ww	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
WindowWrapper	TokenNameIdentifier
)	TokenNameRPAREN
thisObj	TokenNameIdentifier
;	TokenNameSEMICOLON
Window	TokenNameIdentifier
window	TokenNameIdentifier
=	TokenNameEQUAL
ww	TokenNameIdentifier
.	TokenNameDOT
window	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
window	TokenNameIdentifier
.	TokenNameDOT
clearInterval	TokenNameIdentifier
(	TokenNameLPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
Object	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
clearTimeout	TokenNameIdentifier
(	TokenNameLPAREN
Context	TokenNameIdentifier
cx	TokenNameIdentifier
,	TokenNameCOMMA
Scriptable	TokenNameIdentifier
thisObj	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
,	TokenNameCOMMA
Function	TokenNameIdentifier
funObj	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
len	TokenNameIdentifier
=	TokenNameEQUAL
args	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
WindowWrapper	TokenNameIdentifier
ww	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
WindowWrapper	TokenNameIdentifier
)	TokenNameRPAREN
thisObj	TokenNameIdentifier
;	TokenNameSEMICOLON
Window	TokenNameIdentifier
window	TokenNameIdentifier
=	TokenNameEQUAL
ww	TokenNameIdentifier
.	TokenNameDOT
window	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
window	TokenNameIdentifier
.	TokenNameDOT
clearTimeout	TokenNameIdentifier
(	TokenNameLPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
Object	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Object	TokenNameIdentifier
parseXML	TokenNameIdentifier
(	TokenNameLPAREN
Context	TokenNameIdentifier
cx	TokenNameIdentifier
,	TokenNameCOMMA
Scriptable	TokenNameIdentifier
thisObj	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
,	TokenNameCOMMA
Function	TokenNameIdentifier
funObj	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
len	TokenNameIdentifier
=	TokenNameEQUAL
args	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
WindowWrapper	TokenNameIdentifier
ww	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
WindowWrapper	TokenNameIdentifier
)	TokenNameRPAREN
thisObj	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
Window	TokenNameIdentifier
window	TokenNameIdentifier
=	TokenNameEQUAL
ww	TokenNameIdentifier
.	TokenNameDOT
window	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
<	TokenNameLESS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
Context	TokenNameIdentifier
.	TokenNameDOT
reportRuntimeError	TokenNameIdentifier
(	TokenNameLPAREN
"invalid argument count"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
AccessControlContext	TokenNameIdentifier
acc	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
RhinoInterpreter	TokenNameIdentifier
)	TokenNameRPAREN
window	TokenNameIdentifier
.	TokenNameDOT
getInterpreter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getAccessControlContext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Object	TokenNameIdentifier
ret	TokenNameIdentifier
=	TokenNameEQUAL
AccessController	TokenNameIdentifier
.	TokenNameDOT
doPrivileged	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
PrivilegedAction	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
Object	TokenNameIdentifier
run	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
window	TokenNameIdentifier
.	TokenNameDOT
parseXML	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
Document	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
Document	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
,	TokenNameCOMMA
acc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
Context	TokenNameIdentifier
.	TokenNameDOT
toObject	TokenNameIdentifier
(	TokenNameLPAREN
ret	TokenNameIdentifier
,	TokenNameCOMMA
thisObj	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
getURL	TokenNameIdentifier
(	TokenNameLPAREN
Context	TokenNameIdentifier
cx	TokenNameIdentifier
,	TokenNameCOMMA
Scriptable	TokenNameIdentifier
thisObj	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
,	TokenNameCOMMA
Function	TokenNameIdentifier
funObj	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
len	TokenNameIdentifier
=	TokenNameEQUAL
args	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
WindowWrapper	TokenNameIdentifier
ww	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
WindowWrapper	TokenNameIdentifier
)	TokenNameRPAREN
thisObj	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
Window	TokenNameIdentifier
window	TokenNameIdentifier
=	TokenNameEQUAL
ww	TokenNameIdentifier
.	TokenNameDOT
window	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
<	TokenNameLESS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
Context	TokenNameIdentifier
.	TokenNameDOT
reportRuntimeError	TokenNameIdentifier
(	TokenNameLPAREN
"invalid argument count"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
RhinoInterpreter	TokenNameIdentifier
interp	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
RhinoInterpreter	TokenNameIdentifier
)	TokenNameRPAREN
window	TokenNameIdentifier
.	TokenNameDOT
getInterpreter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
uri	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Window	TokenNameIdentifier
.	TokenNameDOT
URLResponseHandler	TokenNameIdentifier
urlHandler	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
instanceof	TokenNameinstanceof
Function	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
urlHandler	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GetURLFunctionWrapper	TokenNameIdentifier
(	TokenNameLPAREN
interp	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
Function	TokenNameIdentifier
)	TokenNameRPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
ww	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
urlHandler	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GetURLObjectWrapper	TokenNameIdentifier
(	TokenNameLPAREN
interp	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
NativeObject	TokenNameIdentifier
)	TokenNameRPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
ww	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
Window	TokenNameIdentifier
.	TokenNameDOT
URLResponseHandler	TokenNameIdentifier
fw	TokenNameIdentifier
=	TokenNameEQUAL
urlHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
AccessControlContext	TokenNameIdentifier
acc	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
RhinoInterpreter	TokenNameIdentifier
)	TokenNameRPAREN
window	TokenNameIdentifier
.	TokenNameDOT
getInterpreter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getAccessControlContext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
AccessController	TokenNameIdentifier
.	TokenNameDOT
doPrivileged	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
PrivilegedAction	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
Object	TokenNameIdentifier
run	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
window	TokenNameIdentifier
.	TokenNameDOT
getURL	TokenNameIdentifier
(	TokenNameLPAREN
uri	TokenNameIdentifier
,	TokenNameCOMMA
fw	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
,	TokenNameCOMMA
acc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
AccessController	TokenNameIdentifier
.	TokenNameDOT
doPrivileged	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
PrivilegedAction	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
Object	TokenNameIdentifier
run	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
window	TokenNameIdentifier
.	TokenNameDOT
getURL	TokenNameIdentifier
(	TokenNameLPAREN
uri	TokenNameIdentifier
,	TokenNameCOMMA
fw	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
,	TokenNameCOMMA
acc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
postURL	TokenNameIdentifier
(	TokenNameLPAREN
Context	TokenNameIdentifier
cx	TokenNameIdentifier
,	TokenNameCOMMA
Scriptable	TokenNameIdentifier
thisObj	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
,	TokenNameCOMMA
Function	TokenNameIdentifier
funObj	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
len	TokenNameIdentifier
=	TokenNameEQUAL
args	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
WindowWrapper	TokenNameIdentifier
ww	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
WindowWrapper	TokenNameIdentifier
)	TokenNameRPAREN
thisObj	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
Window	TokenNameIdentifier
window	TokenNameIdentifier
=	TokenNameEQUAL
ww	TokenNameIdentifier
.	TokenNameDOT
window	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
<	TokenNameLESS
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
Context	TokenNameIdentifier
.	TokenNameDOT
reportRuntimeError	TokenNameIdentifier
(	TokenNameLPAREN
"invalid argument count"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
RhinoInterpreter	TokenNameIdentifier
interp	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
RhinoInterpreter	TokenNameIdentifier
)	TokenNameRPAREN
window	TokenNameIdentifier
.	TokenNameDOT
getInterpreter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
uri	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
content	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Window	TokenNameIdentifier
.	TokenNameDOT
URLResponseHandler	TokenNameIdentifier
urlHandler	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
instanceof	TokenNameinstanceof
Function	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
urlHandler	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GetURLFunctionWrapper	TokenNameIdentifier
(	TokenNameLPAREN
interp	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
Function	TokenNameIdentifier
)	TokenNameRPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
ww	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
urlHandler	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GetURLObjectWrapper	TokenNameIdentifier
(	TokenNameLPAREN
interp	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
NativeObject	TokenNameIdentifier
)	TokenNameRPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
ww	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
Window	TokenNameIdentifier
.	TokenNameDOT
URLResponseHandler	TokenNameIdentifier
fw	TokenNameIdentifier
=	TokenNameEQUAL
urlHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
AccessControlContext	TokenNameIdentifier
acc	TokenNameIdentifier
;	TokenNameSEMICOLON
acc	TokenNameIdentifier
=	TokenNameEQUAL
interp	TokenNameIdentifier
.	TokenNameDOT
getAccessControlContext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
len	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
AccessController	TokenNameIdentifier
.	TokenNameDOT
doPrivileged	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
PrivilegedAction	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
Object	TokenNameIdentifier
run	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
window	TokenNameIdentifier
.	TokenNameDOT
postURL	TokenNameIdentifier
(	TokenNameLPAREN
uri	TokenNameIdentifier
,	TokenNameCOMMA
content	TokenNameIdentifier
,	TokenNameCOMMA
fw	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
,	TokenNameCOMMA
acc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
4	TokenNameIntegerLiteral
:	TokenNameCOLON
AccessController	TokenNameIdentifier
.	TokenNameDOT
doPrivileged	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
PrivilegedAction	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
Object	TokenNameIdentifier
run	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
window	TokenNameIdentifier
.	TokenNameDOT
postURL	TokenNameIdentifier
(	TokenNameLPAREN
uri	TokenNameIdentifier
,	TokenNameCOMMA
content	TokenNameIdentifier
,	TokenNameCOMMA
fw	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
,	TokenNameCOMMA
acc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
AccessController	TokenNameIdentifier
.	TokenNameDOT
doPrivileged	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
PrivilegedAction	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
Object	TokenNameIdentifier
run	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
window	TokenNameIdentifier
.	TokenNameDOT
postURL	TokenNameIdentifier
(	TokenNameLPAREN
uri	TokenNameIdentifier
,	TokenNameCOMMA
content	TokenNameIdentifier
,	TokenNameCOMMA
fw	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
4	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
,	TokenNameCOMMA
acc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
alert	TokenNameIdentifier
(	TokenNameLPAREN
Context	TokenNameIdentifier
cx	TokenNameIdentifier
,	TokenNameCOMMA
Scriptable	TokenNameIdentifier
thisObj	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
,	TokenNameCOMMA
Function	TokenNameIdentifier
funObj	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
len	TokenNameIdentifier
=	TokenNameEQUAL
args	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
WindowWrapper	TokenNameIdentifier
ww	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
WindowWrapper	TokenNameIdentifier
)	TokenNameRPAREN
thisObj	TokenNameIdentifier
;	TokenNameSEMICOLON
Window	TokenNameIdentifier
window	TokenNameIdentifier
=	TokenNameEQUAL
ww	TokenNameIdentifier
.	TokenNameDOT
window	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
message	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
window	TokenNameIdentifier
.	TokenNameDOT
alert	TokenNameIdentifier
(	TokenNameLPAREN
message	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Object	TokenNameIdentifier
confirm	TokenNameIdentifier
(	TokenNameLPAREN
Context	TokenNameIdentifier
cx	TokenNameIdentifier
,	TokenNameCOMMA
Scriptable	TokenNameIdentifier
thisObj	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
,	TokenNameCOMMA
Function	TokenNameIdentifier
funObj	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
len	TokenNameIdentifier
=	TokenNameEQUAL
args	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
WindowWrapper	TokenNameIdentifier
ww	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
WindowWrapper	TokenNameIdentifier
)	TokenNameRPAREN
thisObj	TokenNameIdentifier
;	TokenNameSEMICOLON
Window	TokenNameIdentifier
window	TokenNameIdentifier
=	TokenNameEQUAL
ww	TokenNameIdentifier
.	TokenNameDOT
window	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
len	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
message	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
window	TokenNameIdentifier
.	TokenNameDOT
confirm	TokenNameIdentifier
(	TokenNameLPAREN
message	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
Context	TokenNameIdentifier
.	TokenNameDOT
toObject	TokenNameIdentifier
(	TokenNameLPAREN
Boolean	TokenNameIdentifier
.	TokenNameDOT
TRUE	TokenNameIdentifier
,	TokenNameCOMMA
thisObj	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
Context	TokenNameIdentifier
.	TokenNameDOT
toObject	TokenNameIdentifier
(	TokenNameLPAREN
Boolean	TokenNameIdentifier
.	TokenNameDOT
FALSE	TokenNameIdentifier
,	TokenNameCOMMA
thisObj	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
Context	TokenNameIdentifier
.	TokenNameDOT
toObject	TokenNameIdentifier
(	TokenNameLPAREN
Boolean	TokenNameIdentifier
.	TokenNameDOT
FALSE	TokenNameIdentifier
,	TokenNameCOMMA
thisObj	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Object	TokenNameIdentifier
prompt	TokenNameIdentifier
(	TokenNameLPAREN
Context	TokenNameIdentifier
cx	TokenNameIdentifier
,	TokenNameCOMMA
Scriptable	TokenNameIdentifier
thisObj	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
,	TokenNameCOMMA
Function	TokenNameIdentifier
funObj	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
WindowWrapper	TokenNameIdentifier
ww	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
WindowWrapper	TokenNameIdentifier
)	TokenNameRPAREN
thisObj	TokenNameIdentifier
;	TokenNameSEMICOLON
Window	TokenNameIdentifier
window	TokenNameIdentifier
=	TokenNameEQUAL
ww	TokenNameIdentifier
.	TokenNameDOT
window	TokenNameIdentifier
;	TokenNameSEMICOLON
Object	TokenNameIdentifier
result	TokenNameIdentifier
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
args	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
0	TokenNameIntegerLiteral
:	TokenNameCOLON
result	TokenNameIdentifier
=	TokenNameEQUAL
""	TokenNameStringLiteral
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
String	TokenNameIdentifier
message	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
result	TokenNameIdentifier
=	TokenNameEQUAL
window	TokenNameIdentifier
.	TokenNameDOT
prompt	TokenNameIdentifier
(	TokenNameLPAREN
message	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
message	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
defVal	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
Context	TokenNameIdentifier
.	TokenNameDOT
jsToJava	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
result	TokenNameIdentifier
=	TokenNameEQUAL
window	TokenNameIdentifier
.	TokenNameDOT
prompt	TokenNameIdentifier
(	TokenNameLPAREN
message	TokenNameIdentifier
,	TokenNameCOMMA
defVal	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
result	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
Context	TokenNameIdentifier
.	TokenNameDOT
toObject	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
,	TokenNameCOMMA
thisObj	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
static	TokenNamestatic
class	TokenNameclass
FunctionWrapper	TokenNameIdentifier
implements	TokenNameimplements
Runnable	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
RhinoInterpreter	TokenNameIdentifier
interpreter	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
Function	TokenNameIdentifier
function	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
arguments	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
FunctionWrapper	TokenNameIdentifier
(	TokenNameLPAREN
RhinoInterpreter	TokenNameIdentifier
ri	TokenNameIdentifier
,	TokenNameCOMMA
Function	TokenNameIdentifier
f	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
interpreter	TokenNameIdentifier
=	TokenNameEQUAL
ri	TokenNameIdentifier
;	TokenNameSEMICOLON
function	TokenNameIdentifier
=	TokenNameEQUAL
f	TokenNameIdentifier
;	TokenNameSEMICOLON
arguments	TokenNameIdentifier
=	TokenNameEQUAL
args	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
run	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
interpreter	TokenNameIdentifier
.	TokenNameDOT
callHandler	TokenNameIdentifier
(	TokenNameLPAREN
function	TokenNameIdentifier
,	TokenNameCOMMA
arguments	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
static	TokenNamestatic
class	TokenNameclass
GetURLFunctionWrapper	TokenNameIdentifier
implements	TokenNameimplements
Window	TokenNameIdentifier
.	TokenNameDOT
URLResponseHandler	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
RhinoInterpreter	TokenNameIdentifier
interpreter	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
Function	TokenNameIdentifier
function	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
WindowWrapper	TokenNameIdentifier
windowWrapper	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
GetURLFunctionWrapper	TokenNameIdentifier
(	TokenNameLPAREN
RhinoInterpreter	TokenNameIdentifier
ri	TokenNameIdentifier
,	TokenNameCOMMA
Function	TokenNameIdentifier
fct	TokenNameIdentifier
,	TokenNameCOMMA
WindowWrapper	TokenNameIdentifier
ww	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
interpreter	TokenNameIdentifier
=	TokenNameEQUAL
ri	TokenNameIdentifier
;	TokenNameSEMICOLON
function	TokenNameIdentifier
=	TokenNameEQUAL
fct	TokenNameIdentifier
;	TokenNameSEMICOLON
windowWrapper	TokenNameIdentifier
=	TokenNameEQUAL
ww	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
getURLDone	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
boolean	TokenNameboolean
success	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
String	TokenNameIdentifier
mime	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
String	TokenNameIdentifier
content	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
interpreter	TokenNameIdentifier
.	TokenNameDOT
callHandler	TokenNameIdentifier
(	TokenNameLPAREN
function	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
GetURLDoneArgBuilder	TokenNameIdentifier
(	TokenNameLPAREN
success	TokenNameIdentifier
,	TokenNameCOMMA
mime	TokenNameIdentifier
,	TokenNameCOMMA
content	TokenNameIdentifier
,	TokenNameCOMMA
windowWrapper	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
class	TokenNameclass
GetURLObjectWrapper	TokenNameIdentifier
implements	TokenNameimplements
Window	TokenNameIdentifier
.	TokenNameDOT
URLResponseHandler	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
RhinoInterpreter	TokenNameIdentifier
interpreter	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
ScriptableObject	TokenNameIdentifier
object	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
WindowWrapper	TokenNameIdentifier
windowWrapper	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
COMPLETE	TokenNameIdentifier
=	TokenNameEQUAL
"operationComplete"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
GetURLObjectWrapper	TokenNameIdentifier
(	TokenNameLPAREN
RhinoInterpreter	TokenNameIdentifier
ri	TokenNameIdentifier
,	TokenNameCOMMA
ScriptableObject	TokenNameIdentifier
obj	TokenNameIdentifier
,	TokenNameCOMMA
WindowWrapper	TokenNameIdentifier
ww	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
interpreter	TokenNameIdentifier
=	TokenNameEQUAL
ri	TokenNameIdentifier
;	TokenNameSEMICOLON
object	TokenNameIdentifier
=	TokenNameEQUAL
obj	TokenNameIdentifier
;	TokenNameSEMICOLON
windowWrapper	TokenNameIdentifier
=	TokenNameEQUAL
ww	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
getURLDone	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
boolean	TokenNameboolean
success	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
String	TokenNameIdentifier
mime	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
String	TokenNameIdentifier
content	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
interpreter	TokenNameIdentifier
.	TokenNameDOT
callMethod	TokenNameIdentifier
(	TokenNameLPAREN
object	TokenNameIdentifier
,	TokenNameCOMMA
COMPLETE	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
GetURLDoneArgBuilder	TokenNameIdentifier
(	TokenNameLPAREN
success	TokenNameIdentifier
,	TokenNameCOMMA
mime	TokenNameIdentifier
,	TokenNameCOMMA
content	TokenNameIdentifier
,	TokenNameCOMMA
windowWrapper	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
class	TokenNameclass
GetURLDoneArgBuilder	TokenNameIdentifier
implements	TokenNameimplements
RhinoInterpreter	TokenNameIdentifier
.	TokenNameDOT
ArgumentsBuilder	TokenNameIdentifier
{	TokenNameLBRACE
boolean	TokenNameboolean
success	TokenNameIdentifier
;	TokenNameSEMICOLON
String	TokenNameIdentifier
mime	TokenNameIdentifier
,	TokenNameCOMMA
content	TokenNameIdentifier
;	TokenNameSEMICOLON
WindowWrapper	TokenNameIdentifier
windowWrapper	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
GetURLDoneArgBuilder	TokenNameIdentifier
(	TokenNameLPAREN
boolean	TokenNameboolean
success	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
mime	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
content	TokenNameIdentifier
,	TokenNameCOMMA
WindowWrapper	TokenNameIdentifier
ww	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
success	TokenNameIdentifier
=	TokenNameEQUAL
success	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
mime	TokenNameIdentifier
=	TokenNameEQUAL
mime	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
content	TokenNameIdentifier
=	TokenNameEQUAL
content	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
windowWrapper	TokenNameIdentifier
=	TokenNameEQUAL
ww	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
buildArguments	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ScriptableObject	TokenNameIdentifier
so	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
NativeObject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
so	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"success"	TokenNameStringLiteral
,	TokenNameCOMMA
so	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
success	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
Boolean	TokenNameIdentifier
.	TokenNameDOT
TRUE	TokenNameIdentifier
:	TokenNameCOLON
Boolean	TokenNameIdentifier
.	TokenNameDOT
FALSE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
mime	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
so	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"contentType"	TokenNameStringLiteral
,	TokenNameCOMMA
so	TokenNameIdentifier
,	TokenNameCOMMA
Context	TokenNameIdentifier
.	TokenNameDOT
toObject	TokenNameIdentifier
(	TokenNameLPAREN
mime	TokenNameIdentifier
,	TokenNameCOMMA
windowWrapper	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
content	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
so	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"content"	TokenNameStringLiteral
,	TokenNameCOMMA
so	TokenNameIdentifier
,	TokenNameCOMMA
Context	TokenNameIdentifier
.	TokenNameDOT
toObject	TokenNameIdentifier
(	TokenNameLPAREN
content	TokenNameIdentifier
,	TokenNameCOMMA
windowWrapper	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
so	TokenNameIdentifier
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
