package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
apps	TokenNameIdentifier
.	TokenNameDOT
svgbrowser	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Component	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Graphics	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Insets	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Point	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Rectangle	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
datatransfer	TokenNameIdentifier
.	TokenNameDOT
DataFlavor	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
datatransfer	TokenNameIdentifier
.	TokenNameDOT
Transferable	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
datatransfer	TokenNameIdentifier
.	TokenNameDOT
UnsupportedFlavorException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
Autoscroll	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
DnDConstants	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
DragGestureEvent	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
DragGestureListener	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
DragGestureRecognizer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
DragSource	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
DragSourceDragEvent	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
DragSourceDropEvent	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
DragSourceEvent	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
DragSourceListener	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
DropTarget	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
DropTargetContext	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
DropTargetDragEvent	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
DropTargetDropEvent	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
DropTargetEvent	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
dnd	TokenNameIdentifier
.	TokenNameDOT
DropTargetListener	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
event	TokenNameIdentifier
.	TokenNameDOT
ActionEvent	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
event	TokenNameIdentifier
.	TokenNameDOT
ActionListener	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ArrayList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
EventListener	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
EventObject	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Iterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
swing	TokenNameIdentifier
.	TokenNameDOT
JPanel	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
swing	TokenNameIdentifier
.	TokenNameDOT
JRootPane	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
swing	TokenNameIdentifier
.	TokenNameDOT
JTree	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
swing	TokenNameIdentifier
.	TokenNameDOT
JViewport	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
swing	TokenNameIdentifier
.	TokenNameDOT
SwingUtilities	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
swing	TokenNameIdentifier
.	TokenNameDOT
Timer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
swing	TokenNameIdentifier
.	TokenNameDOT
UIManager	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
swing	TokenNameIdentifier
.	TokenNameDOT
event	TokenNameIdentifier
.	TokenNameDOT
EventListenerList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
swing	TokenNameIdentifier
.	TokenNameDOT
tree	TokenNameIdentifier
.	TokenNameDOT
DefaultMutableTreeNode	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
swing	TokenNameIdentifier
.	TokenNameDOT
tree	TokenNameIdentifier
.	TokenNameDOT
TreeNode	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
swing	TokenNameIdentifier
.	TokenNameDOT
tree	TokenNameIdentifier
.	TokenNameDOT
TreePath	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
DOMUtilities	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
apps	TokenNameIdentifier
.	TokenNameDOT
svgbrowser	TokenNameIdentifier
.	TokenNameDOT
DOMViewer	TokenNameIdentifier
.	TokenNameDOT
NodeInfo	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Node	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
DOMDocumentTree	TokenNameIdentifier
extends	TokenNameextends
JTree	TokenNameIdentifier
implements	TokenNameimplements
Autoscroll	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
EventListenerList	TokenNameIdentifier
eventListeners	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
EventListenerList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
protected	TokenNameprotected
Insets	TokenNameIdentifier
autoscrollInsets	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Insets	TokenNameIdentifier
(	TokenNameLPAREN
20	TokenNameIntegerLiteral
,	TokenNameCOMMA
20	TokenNameIntegerLiteral
,	TokenNameCOMMA
20	TokenNameIntegerLiteral
,	TokenNameCOMMA
20	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
protected	TokenNameprotected
Insets	TokenNameIdentifier
scrollUnits	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Insets	TokenNameIdentifier
(	TokenNameLPAREN
25	TokenNameIntegerLiteral
,	TokenNameCOMMA
25	TokenNameIntegerLiteral
,	TokenNameCOMMA
25	TokenNameIntegerLiteral
,	TokenNameCOMMA
25	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
protected	TokenNameprotected
DOMDocumentTreeController	TokenNameIdentifier
controller	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
DOMDocumentTree	TokenNameIdentifier
(	TokenNameLPAREN
TreeNode	TokenNameIdentifier
root	TokenNameIdentifier
,	TokenNameCOMMA
DOMDocumentTreeController	TokenNameIdentifier
controller	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
root	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
controller	TokenNameIdentifier
=	TokenNameEQUAL
controller	TokenNameIdentifier
;	TokenNameSEMICOLON
new	TokenNamenew
TreeDragSource	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
,	TokenNameCOMMA
DnDConstants	TokenNameIdentifier
.	TokenNameDOT
ACTION_COPY_OR_MOVE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
new	TokenNamenew
DropTarget	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
,	TokenNameCOMMA
new	TokenNamenew
TreeDropTargetListener	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
class	TokenNameclass
TreeDragSource	TokenNameIdentifier
implements	TokenNameimplements
DragSourceListener	TokenNameIdentifier
,	TokenNameCOMMA
DragGestureListener	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
DragSource	TokenNameIdentifier
source	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
DragGestureRecognizer	TokenNameIdentifier
recognizer	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
TransferableTreeNode	TokenNameIdentifier
transferable	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
DOMDocumentTree	TokenNameIdentifier
sourceTree	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
TreeDragSource	TokenNameIdentifier
(	TokenNameLPAREN
DOMDocumentTree	TokenNameIdentifier
tree	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
actions	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
sourceTree	TokenNameIdentifier
=	TokenNameEQUAL
tree	TokenNameIdentifier
;	TokenNameSEMICOLON
source	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DragSource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
recognizer	TokenNameIdentifier
=	TokenNameEQUAL
source	TokenNameIdentifier
.	TokenNameDOT
createDefaultDragGestureRecognizer	TokenNameIdentifier
(	TokenNameLPAREN
sourceTree	TokenNameIdentifier
,	TokenNameCOMMA
actions	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
dragGestureRecognized	TokenNameIdentifier
(	TokenNameLPAREN
DragGestureEvent	TokenNameIdentifier
dge	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
controller	TokenNameIdentifier
.	TokenNameDOT
isDNDSupported	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
TreePath	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
paths	TokenNameIdentifier
=	TokenNameEQUAL
sourceTree	TokenNameIdentifier
.	TokenNameDOT
getSelectionPaths	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
paths	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
ArrayList	TokenNameIdentifier
nodeList	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
paths	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
TreePath	TokenNameIdentifier
path	TokenNameIdentifier
=	TokenNameEQUAL
paths	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
path	TokenNameIdentifier
.	TokenNameDOT
getPathCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
DefaultMutableTreeNode	TokenNameIdentifier
node	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
DefaultMutableTreeNode	TokenNameIdentifier
)	TokenNameRPAREN
path	TokenNameIdentifier
.	TokenNameDOT
getLastPathComponent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Node	TokenNameIdentifier
associatedNode	TokenNameIdentifier
=	TokenNameEQUAL
getDomNodeFromTreeNode	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
associatedNode	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
nodeList	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
associatedNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
nodeList	TokenNameIdentifier
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
transferable	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TransferableTreeNode	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
TransferData	TokenNameIdentifier
(	TokenNameLPAREN
nodeList	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
source	TokenNameIdentifier
.	TokenNameDOT
startDrag	TokenNameIdentifier
(	TokenNameLPAREN
dge	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
transferable	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
dragEnter	TokenNameIdentifier
(	TokenNameLPAREN
DragSourceDragEvent	TokenNameIdentifier
dsde	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
dragExit	TokenNameIdentifier
(	TokenNameLPAREN
DragSourceEvent	TokenNameIdentifier
dse	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
dragOver	TokenNameIdentifier
(	TokenNameLPAREN
DragSourceDragEvent	TokenNameIdentifier
dsde	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
dropActionChanged	TokenNameIdentifier
(	TokenNameLPAREN
DragSourceDragEvent	TokenNameIdentifier
dsde	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
dragDropEnd	TokenNameIdentifier
(	TokenNameLPAREN
DragSourceDropEvent	TokenNameIdentifier
dsde	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
class	TokenNameclass
TreeDropTargetListener	TokenNameIdentifier
implements	TokenNameimplements
DropTargetListener	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BEFORE	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
AFTER	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
CURRENT	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
TransferData	TokenNameIdentifier
transferData	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
Component	TokenNameIdentifier
originalGlassPane	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
visualTipOffset	TokenNameIdentifier
=	TokenNameEQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
visualTipThickness	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
positionIndicator	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
Point	TokenNameIdentifier
startPoint	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
Point	TokenNameIdentifier
endPoint	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
JPanel	TokenNameIdentifier
visualTipGlassPane	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
JPanel	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
void	TokenNamevoid
paint	TokenNameIdentifier
(	TokenNameLPAREN
Graphics	TokenNameIdentifier
g	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
g	TokenNameIdentifier
.	TokenNameDOT
setColor	TokenNameIdentifier
(	TokenNameLPAREN
UIManager	TokenNameIdentifier
.	TokenNameDOT
getColor	TokenNameIdentifier
(	TokenNameLPAREN
"Tree.selectionBackground"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
startPoint	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
endPoint	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
x1	TokenNameIdentifier
=	TokenNameEQUAL
startPoint	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
x2	TokenNameIdentifier
=	TokenNameEQUAL
endPoint	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
y1	TokenNameIdentifier
=	TokenNameEQUAL
startPoint	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
start	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
visualTipThickness	TokenNameIdentifier
/	TokenNameDIVIDE
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
start	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
visualTipThickness	TokenNameIdentifier
%	TokenNameREMAINDER
2	TokenNameIntegerLiteral
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
?	TokenNameQUESTION
1	TokenNameIntegerLiteral
:	TokenNameCOLON
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
visualTipThickness	TokenNameIdentifier
/	TokenNameDIVIDE
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
g	TokenNameIdentifier
.	TokenNameDOT
drawLine	TokenNameIdentifier
(	TokenNameLPAREN
x1	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
y1	TokenNameIdentifier
+	TokenNamePLUS
i	TokenNameIdentifier
,	TokenNameCOMMA
x2	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
y1	TokenNameIdentifier
+	TokenNamePLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
private	TokenNameprivate
Timer	TokenNameIdentifier
expandControlTimer	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
expandTimeout	TokenNameIdentifier
=	TokenNameEQUAL
1500	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
TreePath	TokenNameIdentifier
dragOverTreePath	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
TreePath	TokenNameIdentifier
treePathToExpand	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
TreeDropTargetListener	TokenNameIdentifier
(	TokenNameLPAREN
DOMDocumentTree	TokenNameIdentifier
tree	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addOnAutoscrollListener	TokenNameIdentifier
(	TokenNameLPAREN
tree	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
dragEnter	TokenNameIdentifier
(	TokenNameLPAREN
DropTargetDragEvent	TokenNameIdentifier
dtde	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
JTree	TokenNameIdentifier
tree	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
JTree	TokenNameIdentifier
)	TokenNameRPAREN
dtde	TokenNameIdentifier
.	TokenNameDOT
getDropTargetContext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getComponent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
JRootPane	TokenNameIdentifier
rootPane	TokenNameIdentifier
=	TokenNameEQUAL
tree	TokenNameIdentifier
.	TokenNameDOT
getRootPane	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
originalGlassPane	TokenNameIdentifier
=	TokenNameEQUAL
rootPane	TokenNameIdentifier
.	TokenNameDOT
getGlassPane	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rootPane	TokenNameIdentifier
.	TokenNameDOT
setGlassPane	TokenNameIdentifier
(	TokenNameLPAREN
visualTipGlassPane	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
visualTipGlassPane	TokenNameIdentifier
.	TokenNameDOT
setOpaque	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
visualTipGlassPane	TokenNameIdentifier
.	TokenNameDOT
setVisible	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
updateVisualTipLine	TokenNameIdentifier
(	TokenNameLPAREN
tree	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
Transferable	TokenNameIdentifier
transferable	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DropTargetDropEvent	TokenNameIdentifier
(	TokenNameLPAREN
dtde	TokenNameIdentifier
.	TokenNameDOT
getDropTargetContext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
dtde	TokenNameIdentifier
.	TokenNameDOT
getLocation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
.	TokenNameDOT
getTransferable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DataFlavor	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
flavors	TokenNameIdentifier
=	TokenNameEQUAL
transferable	TokenNameIdentifier
.	TokenNameDOT
getTransferDataFlavors	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
flavors	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
transferable	TokenNameIdentifier
.	TokenNameDOT
isDataFlavorSupported	TokenNameIdentifier
(	TokenNameLPAREN
flavors	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
transferData	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TransferData	TokenNameIdentifier
)	TokenNameRPAREN
transferable	TokenNameIdentifier
.	TokenNameDOT
getTransferData	TokenNameIdentifier
(	TokenNameLPAREN
flavors	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
UnsupportedFlavorException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
e	TokenNameIdentifier
.	TokenNameDOT
printStackTrace	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
IOException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
e	TokenNameIdentifier
.	TokenNameDOT
printStackTrace	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
dragOver	TokenNameIdentifier
(	TokenNameLPAREN
DropTargetDragEvent	TokenNameIdentifier
dtde	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
JTree	TokenNameIdentifier
tree	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
JTree	TokenNameIdentifier
)	TokenNameRPAREN
dtde	TokenNameIdentifier
.	TokenNameDOT
getDropTargetContext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getComponent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TreeNode	TokenNameIdentifier
targetTreeNode	TokenNameIdentifier
=	TokenNameEQUAL
getNode	TokenNameIdentifier
(	TokenNameLPAREN
dtde	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
targetTreeNode	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
updatePositionIndicator	TokenNameIdentifier
(	TokenNameLPAREN
dtde	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Point	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
dtde	TokenNameIdentifier
.	TokenNameDOT
getLocation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TreePath	TokenNameIdentifier
currentPath	TokenNameIdentifier
=	TokenNameEQUAL
tree	TokenNameIdentifier
.	TokenNameDOT
getPathForLocation	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TreePath	TokenNameIdentifier
parentPath	TokenNameIdentifier
=	TokenNameEQUAL
getParentPathForPosition	TokenNameIdentifier
(	TokenNameLPAREN
currentPath	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TreeNode	TokenNameIdentifier
parentNode	TokenNameIdentifier
=	TokenNameEQUAL
getNodeForPath	TokenNameIdentifier
(	TokenNameLPAREN
parentPath	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TreePath	TokenNameIdentifier
nextSiblingPath	TokenNameIdentifier
=	TokenNameEQUAL
getSiblingPathForPosition	TokenNameIdentifier
(	TokenNameLPAREN
currentPath	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TreeNode	TokenNameIdentifier
nextSiblingNode	TokenNameIdentifier
=	TokenNameEQUAL
getNodeForPath	TokenNameIdentifier
(	TokenNameLPAREN
nextSiblingPath	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Node	TokenNameIdentifier
potentialParent	TokenNameIdentifier
=	TokenNameEQUAL
getDomNodeFromTreeNode	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
DefaultMutableTreeNode	TokenNameIdentifier
)	TokenNameRPAREN
parentNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Node	TokenNameIdentifier
potentialSibling	TokenNameIdentifier
=	TokenNameEQUAL
getDomNodeFromTreeNode	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
DefaultMutableTreeNode	TokenNameIdentifier
)	TokenNameRPAREN
nextSiblingNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
DOMUtilities	TokenNameIdentifier
.	TokenNameDOT
canAppendAny	TokenNameIdentifier
(	TokenNameLPAREN
transferData	TokenNameIdentifier
.	TokenNameDOT
getNodeList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
potentialParent	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
transferData	TokenNameIdentifier
.	TokenNameDOT
getNodeList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
potentialSibling	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
dtde	TokenNameIdentifier
.	TokenNameDOT
acceptDrag	TokenNameIdentifier
(	TokenNameLPAREN
dtde	TokenNameIdentifier
.	TokenNameDOT
getDropAction	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
updateVisualTipLine	TokenNameIdentifier
(	TokenNameLPAREN
tree	TokenNameIdentifier
,	TokenNameCOMMA
currentPath	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dragOverTreePath	TokenNameIdentifier
=	TokenNameEQUAL
currentPath	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
tree	TokenNameIdentifier
.	TokenNameDOT
isExpanded	TokenNameIdentifier
(	TokenNameLPAREN
currentPath	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
scheduleExpand	TokenNameIdentifier
(	TokenNameLPAREN
currentPath	TokenNameIdentifier
,	TokenNameCOMMA
tree	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
dtde	TokenNameIdentifier
.	TokenNameDOT
rejectDrag	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
dtde	TokenNameIdentifier
.	TokenNameDOT
rejectDrag	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
dropActionChanged	TokenNameIdentifier
(	TokenNameLPAREN
DropTargetDragEvent	TokenNameIdentifier
dtde	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
drop	TokenNameIdentifier
(	TokenNameLPAREN
DropTargetDropEvent	TokenNameIdentifier
dtde	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Point	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
dtde	TokenNameIdentifier
.	TokenNameDOT
getLocation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DropTargetContext	TokenNameIdentifier
dtc	TokenNameIdentifier
=	TokenNameEQUAL
dtde	TokenNameIdentifier
.	TokenNameDOT
getDropTargetContext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
JTree	TokenNameIdentifier
tree	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
JTree	TokenNameIdentifier
)	TokenNameRPAREN
dtc	TokenNameIdentifier
.	TokenNameDOT
getComponent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
setOriginalGlassPane	TokenNameIdentifier
(	TokenNameLPAREN
tree	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dragOverTreePath	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
TreePath	TokenNameIdentifier
currentPath	TokenNameIdentifier
=	TokenNameEQUAL
tree	TokenNameIdentifier
.	TokenNameDOT
getPathForLocation	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DefaultMutableTreeNode	TokenNameIdentifier
parent	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
DefaultMutableTreeNode	TokenNameIdentifier
)	TokenNameRPAREN
getNodeForPath	TokenNameIdentifier
(	TokenNameLPAREN
getParentPathForPosition	TokenNameIdentifier
(	TokenNameLPAREN
currentPath	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Node	TokenNameIdentifier
dropTargetNode	TokenNameIdentifier
=	TokenNameEQUAL
getDomNodeFromTreeNode	TokenNameIdentifier
(	TokenNameLPAREN
parent	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DefaultMutableTreeNode	TokenNameIdentifier
sibling	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
DefaultMutableTreeNode	TokenNameIdentifier
)	TokenNameRPAREN
getNodeForPath	TokenNameIdentifier
(	TokenNameLPAREN
getSiblingPathForPosition	TokenNameIdentifier
(	TokenNameLPAREN
currentPath	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Node	TokenNameIdentifier
siblingNode	TokenNameIdentifier
=	TokenNameEQUAL
getDomNodeFromTreeNode	TokenNameIdentifier
(	TokenNameLPAREN
sibling	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
this	TokenNamethis
.	TokenNameDOT
transferData	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
ArrayList	TokenNameIdentifier
nodelist	TokenNameIdentifier
=	TokenNameEQUAL
getNodeListForParent	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
.	TokenNameDOT
transferData	TokenNameIdentifier
.	TokenNameDOT
getNodeList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
dropTargetNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fireDropCompleted	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
DOMDocumentTreeEvent	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
DropCompletedInfo	TokenNameIdentifier
(	TokenNameLPAREN
dropTargetNode	TokenNameIdentifier
,	TokenNameCOMMA
siblingNode	TokenNameIdentifier
,	TokenNameCOMMA
nodelist	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dtde	TokenNameIdentifier
.	TokenNameDOT
dropComplete	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
dtde	TokenNameIdentifier
.	TokenNameDOT
rejectDrop	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
dragExit	TokenNameIdentifier
(	TokenNameLPAREN
DropTargetEvent	TokenNameIdentifier
dte	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
setOriginalGlassPane	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
JTree	TokenNameIdentifier
)	TokenNameRPAREN
dte	TokenNameIdentifier
.	TokenNameDOT
getDropTargetContext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getComponent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dragOverTreePath	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
updatePositionIndicator	TokenNameIdentifier
(	TokenNameLPAREN
DropTargetDragEvent	TokenNameIdentifier
dtde	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Point	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
dtde	TokenNameIdentifier
.	TokenNameDOT
getLocation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DropTargetContext	TokenNameIdentifier
dtc	TokenNameIdentifier
=	TokenNameEQUAL
dtde	TokenNameIdentifier
.	TokenNameDOT
getDropTargetContext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
JTree	TokenNameIdentifier
tree	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
JTree	TokenNameIdentifier
)	TokenNameRPAREN
dtc	TokenNameIdentifier
.	TokenNameDOT
getComponent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TreePath	TokenNameIdentifier
currentPath	TokenNameIdentifier
=	TokenNameEQUAL
tree	TokenNameIdentifier
.	TokenNameDOT
getPathForLocation	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Rectangle	TokenNameIdentifier
bounds	TokenNameIdentifier
=	TokenNameEQUAL
tree	TokenNameIdentifier
.	TokenNameDOT
getPathBounds	TokenNameIdentifier
(	TokenNameLPAREN
currentPath	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
p	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
bounds	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
visualTipOffset	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
positionIndicator	TokenNameIdentifier
=	TokenNameEQUAL
BEFORE	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
p	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
bounds	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
bounds	TokenNameIdentifier
.	TokenNameDOT
height	TokenNameIdentifier
-	TokenNameMINUS
visualTipOffset	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
positionIndicator	TokenNameIdentifier
=	TokenNameEQUAL
AFTER	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
positionIndicator	TokenNameIdentifier
=	TokenNameEQUAL
CURRENT	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
TreePath	TokenNameIdentifier
getParentPathForPosition	TokenNameIdentifier
(	TokenNameLPAREN
TreePath	TokenNameIdentifier
currentPath	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
currentPath	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
TreePath	TokenNameIdentifier
parentPath	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
positionIndicator	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
AFTER	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
parentPath	TokenNameIdentifier
=	TokenNameEQUAL
currentPath	TokenNameIdentifier
.	TokenNameDOT
getParentPath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
positionIndicator	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
BEFORE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
parentPath	TokenNameIdentifier
=	TokenNameEQUAL
currentPath	TokenNameIdentifier
.	TokenNameDOT
getParentPath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
positionIndicator	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
CURRENT	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
parentPath	TokenNameIdentifier
=	TokenNameEQUAL
currentPath	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
parentPath	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
TreePath	TokenNameIdentifier
getSiblingPathForPosition	TokenNameIdentifier
(	TokenNameLPAREN
TreePath	TokenNameIdentifier
currentPath	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
TreePath	TokenNameIdentifier
parentPath	TokenNameIdentifier
=	TokenNameEQUAL
getParentPathForPosition	TokenNameIdentifier
(	TokenNameLPAREN
currentPath	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TreePath	TokenNameIdentifier
nextSiblingPath	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
positionIndicator	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
AFTER	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
TreeNode	TokenNameIdentifier
parentNode	TokenNameIdentifier
=	TokenNameEQUAL
getNodeForPath	TokenNameIdentifier
(	TokenNameLPAREN
parentPath	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TreeNode	TokenNameIdentifier
currentNode	TokenNameIdentifier
=	TokenNameEQUAL
getNodeForPath	TokenNameIdentifier
(	TokenNameLPAREN
currentPath	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
parentPath	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
parentNode	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
currentNode	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
siblingIndex	TokenNameIdentifier
=	TokenNameEQUAL
parentNode	TokenNameIdentifier
.	TokenNameDOT
getIndex	TokenNameIdentifier
(	TokenNameLPAREN
currentNode	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
parentNode	TokenNameIdentifier
.	TokenNameDOT
getChildCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
siblingIndex	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
nextSiblingPath	TokenNameIdentifier
=	TokenNameEQUAL
parentPath	TokenNameIdentifier
.	TokenNameDOT
pathByAddingChild	TokenNameIdentifier
(	TokenNameLPAREN
parentNode	TokenNameIdentifier
.	TokenNameDOT
getChildAt	TokenNameIdentifier
(	TokenNameLPAREN
siblingIndex	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
positionIndicator	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
BEFORE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
nextSiblingPath	TokenNameIdentifier
=	TokenNameEQUAL
currentPath	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
positionIndicator	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
CURRENT	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
nextSiblingPath	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
nextSiblingPath	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
TreeNode	TokenNameIdentifier
getNodeForPath	TokenNameIdentifier
(	TokenNameLPAREN
TreePath	TokenNameIdentifier
path	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
path	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
path	TokenNameIdentifier
.	TokenNameDOT
getLastPathComponent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
(	TokenNameLPAREN
TreeNode	TokenNameIdentifier
)	TokenNameRPAREN
path	TokenNameIdentifier
.	TokenNameDOT
getLastPathComponent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
TreeNode	TokenNameIdentifier
getNode	TokenNameIdentifier
(	TokenNameLPAREN
DropTargetDragEvent	TokenNameIdentifier
dtde	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Point	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
dtde	TokenNameIdentifier
.	TokenNameDOT
getLocation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DropTargetContext	TokenNameIdentifier
dtc	TokenNameIdentifier
=	TokenNameEQUAL
dtde	TokenNameIdentifier
.	TokenNameDOT
getDropTargetContext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
JTree	TokenNameIdentifier
tree	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
JTree	TokenNameIdentifier
)	TokenNameRPAREN
dtc	TokenNameIdentifier
.	TokenNameDOT
getComponent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TreePath	TokenNameIdentifier
path	TokenNameIdentifier
=	TokenNameEQUAL
tree	TokenNameIdentifier
.	TokenNameDOT
getPathForLocation	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
path	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
path	TokenNameIdentifier
.	TokenNameDOT
getLastPathComponent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
(	TokenNameLPAREN
TreeNode	TokenNameIdentifier
)	TokenNameRPAREN
path	TokenNameIdentifier
.	TokenNameDOT
getLastPathComponent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
updateVisualTipLine	TokenNameIdentifier
(	TokenNameLPAREN
JTree	TokenNameIdentifier
tree	TokenNameIdentifier
,	TokenNameCOMMA
TreePath	TokenNameIdentifier
path	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
path	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
startPoint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
endPoint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Rectangle	TokenNameIdentifier
bounds	TokenNameIdentifier
=	TokenNameEQUAL
tree	TokenNameIdentifier
.	TokenNameDOT
getPathBounds	TokenNameIdentifier
(	TokenNameLPAREN
path	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
positionIndicator	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
BEFORE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
startPoint	TokenNameIdentifier
=	TokenNameEQUAL
bounds	TokenNameIdentifier
.	TokenNameDOT
getLocation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
endPoint	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point	TokenNameIdentifier
(	TokenNameLPAREN
startPoint	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
bounds	TokenNameIdentifier
.	TokenNameDOT
width	TokenNameIdentifier
,	TokenNameCOMMA
startPoint	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
positionIndicator	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
AFTER	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
startPoint	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point	TokenNameIdentifier
(	TokenNameLPAREN
bounds	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
bounds	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
bounds	TokenNameIdentifier
.	TokenNameDOT
height	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
endPoint	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point	TokenNameIdentifier
(	TokenNameLPAREN
startPoint	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
bounds	TokenNameIdentifier
.	TokenNameDOT
width	TokenNameIdentifier
,	TokenNameCOMMA
startPoint	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
positionIndicator	TokenNameIdentifier
=	TokenNameEQUAL
AFTER	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
positionIndicator	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
CURRENT	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
startPoint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
endPoint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
startPoint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
endPoint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
startPoint	TokenNameIdentifier
=	TokenNameEQUAL
SwingUtilities	TokenNameIdentifier
.	TokenNameDOT
convertPoint	TokenNameIdentifier
(	TokenNameLPAREN
tree	TokenNameIdentifier
,	TokenNameCOMMA
startPoint	TokenNameIdentifier
,	TokenNameCOMMA
visualTipGlassPane	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
endPoint	TokenNameIdentifier
=	TokenNameEQUAL
SwingUtilities	TokenNameIdentifier
.	TokenNameDOT
convertPoint	TokenNameIdentifier
(	TokenNameLPAREN
tree	TokenNameIdentifier
,	TokenNameCOMMA
endPoint	TokenNameIdentifier
,	TokenNameCOMMA
visualTipGlassPane	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
visualTipGlassPane	TokenNameIdentifier
.	TokenNameDOT
getRootPane	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
repaint	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
addOnAutoscrollListener	TokenNameIdentifier
(	TokenNameLPAREN
DOMDocumentTree	TokenNameIdentifier
tree	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
tree	TokenNameIdentifier
.	TokenNameDOT
addListener	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
DOMDocumentTreeAdapter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
void	TokenNamevoid
onAutoscroll	TokenNameIdentifier
(	TokenNameLPAREN
DOMDocumentTreeEvent	TokenNameIdentifier
event	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
startPoint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
endPoint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
setOriginalGlassPane	TokenNameIdentifier
(	TokenNameLPAREN
JTree	TokenNameIdentifier
tree	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
JRootPane	TokenNameIdentifier
rootPane	TokenNameIdentifier
=	TokenNameEQUAL
tree	TokenNameIdentifier
.	TokenNameDOT
getRootPane	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rootPane	TokenNameIdentifier
.	TokenNameDOT
setGlassPane	TokenNameIdentifier
(	TokenNameLPAREN
originalGlassPane	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
originalGlassPane	TokenNameIdentifier
.	TokenNameDOT
setVisible	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rootPane	TokenNameIdentifier
.	TokenNameDOT
repaint	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
scheduleExpand	TokenNameIdentifier
(	TokenNameLPAREN
TreePath	TokenNameIdentifier
treePath	TokenNameIdentifier
,	TokenNameCOMMA
JTree	TokenNameIdentifier
tree	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
treePath	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
treePathToExpand	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
getExpandTreeTimer	TokenNameIdentifier
(	TokenNameLPAREN
tree	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
stop	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
treePathToExpand	TokenNameIdentifier
=	TokenNameEQUAL
treePath	TokenNameIdentifier
;	TokenNameSEMICOLON
getExpandTreeTimer	TokenNameIdentifier
(	TokenNameLPAREN
tree	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
start	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
Timer	TokenNameIdentifier
getExpandTreeTimer	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
JTree	TokenNameIdentifier
tree	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
expandControlTimer	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
expandControlTimer	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Timer	TokenNameIdentifier
(	TokenNameLPAREN
expandTimeout	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
ActionListener	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
public	TokenNamepublic
void	TokenNamevoid
actionPerformed	TokenNameIdentifier
(	TokenNameLPAREN
ActionEvent	TokenNameIdentifier
arg0	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
treePathToExpand	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
treePathToExpand	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
dragOverTreePath	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
tree	TokenNameIdentifier
.	TokenNameDOT
expandPath	TokenNameIdentifier
(	TokenNameLPAREN
treePathToExpand	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
getExpandTreeTimer	TokenNameIdentifier
(	TokenNameLPAREN
tree	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
stop	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
expandControlTimer	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
TransferableTreeNode	TokenNameIdentifier
implements	TokenNameimplements
Transferable	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
static	TokenNamestatic
final	TokenNamefinal
DataFlavor	TokenNameIdentifier
NODE_FLAVOR	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DataFlavor	TokenNameIdentifier
(	TokenNameLPAREN
TransferData	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
"TransferData"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
protected	TokenNameprotected
static	TokenNamestatic
final	TokenNamefinal
DataFlavor	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
FLAVORS	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DataFlavor	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
NODE_FLAVOR	TokenNameIdentifier
,	TokenNameCOMMA
DataFlavor	TokenNameIdentifier
.	TokenNameDOT
stringFlavor	TokenNameIdentifier
}	TokenNameRBRACE
;	TokenNameSEMICOLON
protected	TokenNameprotected
TransferData	TokenNameIdentifier
data	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
TransferableTreeNode	TokenNameIdentifier
(	TokenNameLPAREN
TransferData	TokenNameIdentifier
data	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
data	TokenNameIdentifier
=	TokenNameEQUAL
data	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
synchronized	TokenNamesynchronized
DataFlavor	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getTransferDataFlavors	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
FLAVORS	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isDataFlavorSupported	TokenNameIdentifier
(	TokenNameLPAREN
DataFlavor	TokenNameIdentifier
flavor	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
FLAVORS	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
flavor	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
FLAVORS	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
synchronized	TokenNamesynchronized
Object	TokenNameIdentifier
getTransferData	TokenNameIdentifier
(	TokenNameLPAREN
DataFlavor	TokenNameIdentifier
flavor	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isDataFlavorSupported	TokenNameIdentifier
(	TokenNameLPAREN
flavor	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
flavor	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
NODE_FLAVOR	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
data	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
flavor	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
DataFlavor	TokenNameIdentifier
.	TokenNameDOT
stringFlavor	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
data	TokenNameIdentifier
.	TokenNameDOT
getNodesAsXML	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
TransferData	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
ArrayList	TokenNameIdentifier
nodeList	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
TransferData	TokenNameIdentifier
(	TokenNameLPAREN
ArrayList	TokenNameIdentifier
nodeList	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
nodeList	TokenNameIdentifier
=	TokenNameEQUAL
nodeList	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ArrayList	TokenNameIdentifier
getNodeList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
nodeList	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getNodesAsXML	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
toReturn	TokenNameIdentifier
=	TokenNameEQUAL
""	TokenNameStringLiteral
;	TokenNameSEMICOLON
Iterator	TokenNameIdentifier
iterator	TokenNameIdentifier
=	TokenNameEQUAL
nodeList	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
iterator	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Node	TokenNameIdentifier
node	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Node	TokenNameIdentifier
)	TokenNameRPAREN
iterator	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
toReturn	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
DOMUtilities	TokenNameIdentifier
.	TokenNameDOT
getXML	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
toReturn	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
autoscroll	TokenNameIdentifier
(	TokenNameLPAREN
Point	TokenNameIdentifier
point	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
JViewport	TokenNameIdentifier
viewport	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
JViewport	TokenNameIdentifier
)	TokenNameRPAREN
SwingUtilities	TokenNameIdentifier
.	TokenNameDOT
getAncestorOfClass	TokenNameIdentifier
(	TokenNameLPAREN
JViewport	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
viewport	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Point	TokenNameIdentifier
viewportPos	TokenNameIdentifier
=	TokenNameEQUAL
viewport	TokenNameIdentifier
.	TokenNameDOT
getViewPosition	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
viewHeight	TokenNameIdentifier
=	TokenNameEQUAL
viewport	TokenNameIdentifier
.	TokenNameDOT
getExtentSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
height	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
viewWidth	TokenNameIdentifier
=	TokenNameEQUAL
viewport	TokenNameIdentifier
.	TokenNameDOT
getExtentSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
width	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
point	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
viewportPos	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
<	TokenNameLESS
autoscrollInsets	TokenNameIdentifier
.	TokenNameDOT
top	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
viewport	TokenNameIdentifier
.	TokenNameDOT
setViewPosition	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Point	TokenNameIdentifier
(	TokenNameLPAREN
viewportPos	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
Math	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
(	TokenNameLPAREN
viewportPos	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
scrollUnits	TokenNameIdentifier
.	TokenNameDOT
top	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fireOnAutoscroll	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
DOMDocumentTreeEvent	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
viewportPos	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
viewHeight	TokenNameIdentifier
-	TokenNameMINUS
point	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
<	TokenNameLESS
autoscrollInsets	TokenNameIdentifier
.	TokenNameDOT
bottom	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
viewport	TokenNameIdentifier
.	TokenNameDOT
setViewPosition	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Point	TokenNameIdentifier
(	TokenNameLPAREN
viewportPos	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
Math	TokenNameIdentifier
.	TokenNameDOT
min	TokenNameIdentifier
(	TokenNameLPAREN
viewportPos	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
scrollUnits	TokenNameIdentifier
.	TokenNameDOT
bottom	TokenNameIdentifier
,	TokenNameCOMMA
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
viewHeight	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fireOnAutoscroll	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
DOMDocumentTreeEvent	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
point	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
-	TokenNameMINUS
viewportPos	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
)	TokenNameRPAREN
<	TokenNameLESS
autoscrollInsets	TokenNameIdentifier
.	TokenNameDOT
left	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
viewport	TokenNameIdentifier
.	TokenNameDOT
setViewPosition	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Point	TokenNameIdentifier
(	TokenNameLPAREN
Math	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
(	TokenNameLPAREN
viewportPos	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
-	TokenNameMINUS
scrollUnits	TokenNameIdentifier
.	TokenNameDOT
left	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
viewportPos	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fireOnAutoscroll	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
DOMDocumentTreeEvent	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
viewportPos	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
viewWidth	TokenNameIdentifier
-	TokenNameMINUS
point	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
)	TokenNameRPAREN
<	TokenNameLESS
autoscrollInsets	TokenNameIdentifier
.	TokenNameDOT
right	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
viewport	TokenNameIdentifier
.	TokenNameDOT
setViewPosition	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Point	TokenNameIdentifier
(	TokenNameLPAREN
Math	TokenNameIdentifier
.	TokenNameDOT
min	TokenNameIdentifier
(	TokenNameLPAREN
viewportPos	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
scrollUnits	TokenNameIdentifier
.	TokenNameDOT
right	TokenNameIdentifier
,	TokenNameCOMMA
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
viewWidth	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
viewportPos	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fireOnAutoscroll	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
DOMDocumentTreeEvent	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
Insets	TokenNameIdentifier
getAutoscrollInsets	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
topAndBottom	TokenNameIdentifier
=	TokenNameEQUAL
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
leftAndRight	TokenNameIdentifier
=	TokenNameEQUAL
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
Insets	TokenNameIdentifier
(	TokenNameLPAREN
topAndBottom	TokenNameIdentifier
,	TokenNameCOMMA
leftAndRight	TokenNameIdentifier
,	TokenNameCOMMA
topAndBottom	TokenNameIdentifier
,	TokenNameCOMMA
leftAndRight	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
DOMDocumentTreeEvent	TokenNameIdentifier
extends	TokenNameextends
EventObject	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
DOMDocumentTreeEvent	TokenNameIdentifier
(	TokenNameLPAREN
Object	TokenNameIdentifier
source	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
source	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
interface	TokenNameinterface
DOMDocumentTreeListener	TokenNameIdentifier
extends	TokenNameextends
EventListener	TokenNameIdentifier
{	TokenNameLBRACE
void	TokenNamevoid
dropCompleted	TokenNameIdentifier
(	TokenNameLPAREN
DOMDocumentTreeEvent	TokenNameIdentifier
event	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
void	TokenNamevoid
onAutoscroll	TokenNameIdentifier
(	TokenNameLPAREN
DOMDocumentTreeEvent	TokenNameIdentifier
event	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
DOMDocumentTreeAdapter	TokenNameIdentifier
implements	TokenNameimplements
DOMDocumentTreeListener	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
void	TokenNamevoid
dropCompleted	TokenNameIdentifier
(	TokenNameLPAREN
DOMDocumentTreeEvent	TokenNameIdentifier
event	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
onAutoscroll	TokenNameIdentifier
(	TokenNameLPAREN
DOMDocumentTreeEvent	TokenNameIdentifier
event	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addListener	TokenNameIdentifier
(	TokenNameLPAREN
DOMDocumentTreeListener	TokenNameIdentifier
listener	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
eventListeners	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
DOMDocumentTreeListener	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
listener	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
fireDropCompleted	TokenNameIdentifier
(	TokenNameLPAREN
DOMDocumentTreeEvent	TokenNameIdentifier
event	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
listeners	TokenNameIdentifier
=	TokenNameEQUAL
eventListeners	TokenNameIdentifier
.	TokenNameDOT
getListenerList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
length	TokenNameIdentifier
=	TokenNameEQUAL
listeners	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
listeners	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
==	TokenNameEQUAL_EQUAL
DOMDocumentTreeListener	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
DOMDocumentTreeListener	TokenNameIdentifier
)	TokenNameRPAREN
listeners	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
.	TokenNameDOT
dropCompleted	TokenNameIdentifier
(	TokenNameLPAREN
event	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
fireOnAutoscroll	TokenNameIdentifier
(	TokenNameLPAREN
DOMDocumentTreeEvent	TokenNameIdentifier
event	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
listeners	TokenNameIdentifier
=	TokenNameEQUAL
eventListeners	TokenNameIdentifier
.	TokenNameDOT
getListenerList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
length	TokenNameIdentifier
=	TokenNameEQUAL
listeners	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
listeners	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
==	TokenNameEQUAL_EQUAL
DOMDocumentTreeListener	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
DOMDocumentTreeListener	TokenNameIdentifier
)	TokenNameRPAREN
listeners	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
.	TokenNameDOT
onAutoscroll	TokenNameIdentifier
(	TokenNameLPAREN
event	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
DropCompletedInfo	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
Node	TokenNameIdentifier
parent	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
ArrayList	TokenNameIdentifier
children	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
Node	TokenNameIdentifier
sibling	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
DropCompletedInfo	TokenNameIdentifier
(	TokenNameLPAREN
Node	TokenNameIdentifier
parent	TokenNameIdentifier
,	TokenNameCOMMA
Node	TokenNameIdentifier
sibling	TokenNameIdentifier
,	TokenNameCOMMA
ArrayList	TokenNameIdentifier
children	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
parent	TokenNameIdentifier
=	TokenNameEQUAL
parent	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
sibling	TokenNameIdentifier
=	TokenNameEQUAL
sibling	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
children	TokenNameIdentifier
=	TokenNameEQUAL
children	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ArrayList	TokenNameIdentifier
getChildren	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
children	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Node	TokenNameIdentifier
getParent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
parent	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Node	TokenNameIdentifier
getSibling	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
sibling	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
Node	TokenNameIdentifier
getDomNodeFromTreeNode	TokenNameIdentifier
(	TokenNameLPAREN
DefaultMutableTreeNode	TokenNameIdentifier
treeNode	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
treeNode	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
treeNode	TokenNameIdentifier
.	TokenNameDOT
getUserObject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
instanceof	TokenNameinstanceof
NodeInfo	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
(	TokenNameLPAREN
NodeInfo	TokenNameIdentifier
)	TokenNameRPAREN
treeNode	TokenNameIdentifier
.	TokenNameDOT
getUserObject	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getNode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
ArrayList	TokenNameIdentifier
getNodeListForParent	TokenNameIdentifier
(	TokenNameLPAREN
ArrayList	TokenNameIdentifier
potentialChildren	TokenNameIdentifier
,	TokenNameCOMMA
Node	TokenNameIdentifier
parentNode	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ArrayList	TokenNameIdentifier
children	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
n	TokenNameIdentifier
=	TokenNameEQUAL
potentialChildren	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
n	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
Node	TokenNameIdentifier
node	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Node	TokenNameIdentifier
)	TokenNameRPAREN
potentialChildren	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
DOMUtilities	TokenNameIdentifier
.	TokenNameDOT
canAppend	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
,	TokenNameCOMMA
parentNode	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
children	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
children	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
