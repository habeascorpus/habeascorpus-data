package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
extension	TokenNameIdentifier
.	TokenNameDOT
svg	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
font	TokenNameIdentifier
.	TokenNameDOT
FontRenderContext	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
geom	TokenNameIdentifier
.	TokenNameDOT
Point2D	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
AttributedCharacterIterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Iterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
LinkedList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
font	TokenNameIdentifier
.	TokenNameDOT
GVTGlyphVector	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
font	TokenNameIdentifier
.	TokenNameDOT
MultiGlyphVector	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
GlyphLayout	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
FlowExtGlyphLayout	TokenNameIdentifier
extends	TokenNameextends
GlyphLayout	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
FlowExtGlyphLayout	TokenNameIdentifier
(	TokenNameLPAREN
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
charMap	TokenNameIdentifier
,	TokenNameCOMMA
Point2D	TokenNameIdentifier
offset	TokenNameIdentifier
,	TokenNameCOMMA
FontRenderContext	TokenNameIdentifier
frc	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
aci	TokenNameIdentifier
,	TokenNameCOMMA
charMap	TokenNameIdentifier
,	TokenNameCOMMA
offset	TokenNameIdentifier
,	TokenNameCOMMA
frc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
textWrapTextChunk	TokenNameIdentifier
(	TokenNameLPAREN
AttributedCharacterIterator	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
acis	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
chunkLayouts	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
flowRects	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
GVTGlyphVector	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
gvs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GVTGlyphVector	TokenNameIdentifier
[	TokenNameLBRACKET
acis	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
List	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
chunkLineInfos	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
List	TokenNameIdentifier
[	TokenNameLBRACKET
acis	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
GlyphIterator	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
gis	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GlyphIterator	TokenNameIdentifier
[	TokenNameLBRACKET
acis	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
Iterator	TokenNameIdentifier
clIter	TokenNameIdentifier
=	TokenNameEQUAL
chunkLayouts	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Iterator	TokenNameIdentifier
flowRectsIter	TokenNameIdentifier
=	TokenNameEQUAL
flowRects	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
RegionInfo	TokenNameIdentifier
currentRegion	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
float	TokenNamefloat
y0	TokenNameIdentifier
,	TokenNameCOMMA
x0	TokenNameIdentifier
,	TokenNameCOMMA
width	TokenNameIdentifier
,	TokenNameCOMMA
height	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
flowRectsIter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
currentRegion	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
RegionInfo	TokenNameIdentifier
)	TokenNameRPAREN
flowRectsIter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
height	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
boolean	TokenNameboolean
lineHeightRelative	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
float	TokenNamefloat
lineHeight	TokenNameIdentifier
=	TokenNameEQUAL
1.0f	TokenNameFloatingPointLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
nextLineMult	TokenNameIdentifier
=	TokenNameEQUAL
0.0f	TokenNameFloatingPointLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
dy	TokenNameIdentifier
=	TokenNameEQUAL
0.0f	TokenNameFloatingPointLiteral
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
verticalAlignOffset	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
prevBotMargin	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
chunk	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
clIter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
chunk	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
=	TokenNameEQUAL
acis	TokenNameIdentifier
[	TokenNameLBRACKET
chunk	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
currentRegion	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
extraP	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
List	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
FLOW_EMPTY_PARAGRAPH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
extraP	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
Iterator	TokenNameIdentifier
epi	TokenNameIdentifier
=	TokenNameEQUAL
extraP	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
epi	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
MarginInfo	TokenNameIdentifier
emi	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
MarginInfo	TokenNameIdentifier
)	TokenNameRPAREN
epi	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
inc	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
prevBotMargin	TokenNameIdentifier
>	TokenNameGREATER
emi	TokenNameIdentifier
.	TokenNameDOT
getTopMargin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
prevBotMargin	TokenNameIdentifier
:	TokenNameCOLON
emi	TokenNameIdentifier
.	TokenNameDOT
getTopMargin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
dy	TokenNameIdentifier
+	TokenNamePLUS
inc	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
height	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
emi	TokenNameIdentifier
.	TokenNameDOT
isFlowRegionBreak	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
dy	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
inc	TokenNameIdentifier
;	TokenNameSEMICOLON
prevBotMargin	TokenNameIdentifier
=	TokenNameEQUAL
emi	TokenNameIdentifier
.	TokenNameDOT
getBottomMargin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
flowRectsIter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
currentRegion	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
currentRegion	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
RegionInfo	TokenNameIdentifier
)	TokenNameRPAREN
flowRectsIter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
height	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
verticalAlignOffset	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dy	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
prevBotMargin	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
currentRegion	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
List	TokenNameIdentifier
gvl	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
LinkedList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
layouts	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
List	TokenNameIdentifier
)	TokenNameRPAREN
clIter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Iterator	TokenNameIdentifier
iter	TokenNameIdentifier
=	TokenNameEQUAL
layouts	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
iter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
GlyphLayout	TokenNameIdentifier
gl	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
GlyphLayout	TokenNameIdentifier
)	TokenNameRPAREN
iter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
gvl	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
gl	TokenNameIdentifier
.	TokenNameDOT
getGlyphVector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
GVTGlyphVector	TokenNameIdentifier
gv	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MultiGlyphVector	TokenNameIdentifier
(	TokenNameLPAREN
gvl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
gvs	TokenNameIdentifier
[	TokenNameLBRACKET
chunk	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
gv	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
numGlyphs	TokenNameIdentifier
=	TokenNameEQUAL
gv	TokenNameIdentifier
.	TokenNameDOT
getNumGlyphs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
.	TokenNameDOT
first	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MarginInfo	TokenNameIdentifier
mi	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
MarginInfo	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
FLOW_PARAGRAPH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
mi	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
currentRegion	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
idx	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
idx	TokenNameIdentifier
<	TokenNameLESS
numGlyphs	TokenNameIdentifier
;	TokenNameSEMICOLON
idx	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
gv	TokenNameIdentifier
.	TokenNameDOT
setGlyphVisible	TokenNameIdentifier
(	TokenNameLPAREN
idx	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
float	TokenNamefloat
inc	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
prevBotMargin	TokenNameIdentifier
>	TokenNameGREATER
mi	TokenNameIdentifier
.	TokenNameDOT
getTopMargin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
?	TokenNameQUESTION
prevBotMargin	TokenNameIdentifier
:	TokenNameCOLON
mi	TokenNameIdentifier
.	TokenNameDOT
getTopMargin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dy	TokenNameIdentifier
+	TokenNamePLUS
inc	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
height	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
dy	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
inc	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
flowRectsIter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
currentRegion	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
currentRegion	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
RegionInfo	TokenNameIdentifier
)	TokenNameRPAREN
flowRectsIter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
height	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
verticalAlignOffset	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dy	TokenNameIdentifier
=	TokenNameEQUAL
mi	TokenNameIdentifier
.	TokenNameDOT
getTopMargin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
prevBotMargin	TokenNameIdentifier
=	TokenNameEQUAL
mi	TokenNameIdentifier
.	TokenNameDOT
getBottomMargin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
leftMargin	TokenNameIdentifier
=	TokenNameEQUAL
mi	TokenNameIdentifier
.	TokenNameDOT
getLeftMargin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
rightMargin	TokenNameIdentifier
=	TokenNameEQUAL
mi	TokenNameIdentifier
.	TokenNameDOT
getRightMargin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
GlyphLayout	TokenNameIdentifier
)	TokenNameRPAREN
layouts	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isLeftToRight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
leftMargin	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
mi	TokenNameIdentifier
.	TokenNameDOT
getIndent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
rightMargin	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
mi	TokenNameIdentifier
.	TokenNameDOT
getIndent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
x0	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
leftMargin	TokenNameIdentifier
;	TokenNameSEMICOLON
y0	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
width	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
(	TokenNameLPAREN
leftMargin	TokenNameIdentifier
+	TokenNamePLUS
rightMargin	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
height	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
lineInfos	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
LinkedList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
chunkLineInfos	TokenNameIdentifier
[	TokenNameLBRACKET
chunk	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
lineInfos	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
prevDesc	TokenNameIdentifier
=	TokenNameEQUAL
0.0f	TokenNameFloatingPointLiteral
;	TokenNameSEMICOLON
GlyphIterator	TokenNameIdentifier
gi	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GlyphIterator	TokenNameIdentifier
(	TokenNameLPAREN
aci	TokenNameIdentifier
,	TokenNameCOMMA
gv	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
gis	TokenNameIdentifier
[	TokenNameLBRACKET
chunk	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
gi	TokenNameIdentifier
;	TokenNameSEMICOLON
GlyphIterator	TokenNameIdentifier
breakGI	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
,	TokenNameCOMMA
newBreakGI	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
gi	TokenNameIdentifier
.	TokenNameDOT
done	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
gi	TokenNameIdentifier
.	TokenNameDOT
isPrinting	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
updateVerticalAlignOffset	TokenNameIdentifier
(	TokenNameLPAREN
verticalAlignOffset	TokenNameIdentifier
,	TokenNameCOMMA
currentRegion	TokenNameIdentifier
,	TokenNameCOMMA
dy	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
lineInfos	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
gi	TokenNameIdentifier
.	TokenNameDOT
newLine	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
x0	TokenNameIdentifier
,	TokenNameCOMMA
y0	TokenNameIdentifier
+	TokenNamePLUS
dy	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
width	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
verticalAlignOffset	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
GlyphIterator	TokenNameIdentifier
lineGI	TokenNameIdentifier
=	TokenNameEQUAL
gi	TokenNameIdentifier
.	TokenNameDOT
copy	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
firstLine	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
!	TokenNameNOT
gi	TokenNameIdentifier
.	TokenNameDOT
done	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
boolean	TokenNameboolean
doBreak	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
boolean	TokenNameboolean
partial	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
gi	TokenNameIdentifier
.	TokenNameDOT
isPrinting	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
gi	TokenNameIdentifier
.	TokenNameDOT
getAdv	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
width	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
breakGI	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
flowRectsIter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
currentRegion	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
gi	TokenNameIdentifier
=	TokenNameEQUAL
lineGI	TokenNameIdentifier
.	TokenNameDOT
copy	TokenNameIdentifier
(	TokenNameLPAREN
gi	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
currentRegion	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
RegionInfo	TokenNameIdentifier
)	TokenNameRPAREN
flowRectsIter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
x0	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
leftMargin	TokenNameIdentifier
;	TokenNameSEMICOLON
y0	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
width	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
(	TokenNameLPAREN
leftMargin	TokenNameIdentifier
+	TokenNamePLUS
rightMargin	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
height	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
verticalAlignOffset	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dy	TokenNameIdentifier
=	TokenNameEQUAL
firstLine	TokenNameIdentifier
?	TokenNameQUESTION
mi	TokenNameIdentifier
.	TokenNameDOT
getTopMargin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
prevDesc	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
gi	TokenNameIdentifier
=	TokenNameEQUAL
lineGI	TokenNameIdentifier
.	TokenNameDOT
copy	TokenNameIdentifier
(	TokenNameLPAREN
gi	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
gi	TokenNameIdentifier
=	TokenNameEQUAL
breakGI	TokenNameIdentifier
.	TokenNameDOT
copy	TokenNameIdentifier
(	TokenNameLPAREN
gi	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
nextLineMult	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
doBreak	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
partial	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
gi	TokenNameIdentifier
.	TokenNameDOT
isLastChar	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
nextLineMult	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
doBreak	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
partial	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
lnBreaks	TokenNameIdentifier
=	TokenNameEQUAL
gi	TokenNameIdentifier
.	TokenNameDOT
getLineBreaks	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
lnBreaks	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
doBreak	TokenNameIdentifier
)	TokenNameRPAREN
nextLineMult	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
nextLineMult	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
lnBreaks	TokenNameIdentifier
;	TokenNameSEMICOLON
doBreak	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
partial	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
doBreak	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
gi	TokenNameIdentifier
.	TokenNameDOT
isBreakChar	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
breakGI	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
!	TokenNameNOT
breakGI	TokenNameIdentifier
.	TokenNameDOT
isBreakChar	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
newBreakGI	TokenNameIdentifier
=	TokenNameEQUAL
gi	TokenNameIdentifier
.	TokenNameDOT
copy	TokenNameIdentifier
(	TokenNameLPAREN
newBreakGI	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
gi	TokenNameIdentifier
.	TokenNameDOT
nextChar	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
gi	TokenNameIdentifier
.	TokenNameDOT
getChar	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
GlyphIterator	TokenNameIdentifier
.	TokenNameDOT
ZERO_WIDTH_JOINER	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
GlyphIterator	TokenNameIdentifier
tmpGI	TokenNameIdentifier
=	TokenNameEQUAL
breakGI	TokenNameIdentifier
;	TokenNameSEMICOLON
breakGI	TokenNameIdentifier
=	TokenNameEQUAL
newBreakGI	TokenNameIdentifier
;	TokenNameSEMICOLON
newBreakGI	TokenNameIdentifier
=	TokenNameEQUAL
tmpGI	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
gi	TokenNameIdentifier
.	TokenNameDOT
nextChar	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
float	TokenNamefloat
lineSize	TokenNameIdentifier
=	TokenNameEQUAL
gi	TokenNameIdentifier
.	TokenNameDOT
getMaxAscent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
gi	TokenNameIdentifier
.	TokenNameDOT
getMaxDescent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
lineBoxHeight	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
lineHeightRelative	TokenNameIdentifier
)	TokenNameRPAREN
lineBoxHeight	TokenNameIdentifier
=	TokenNameEQUAL
gi	TokenNameIdentifier
.	TokenNameDOT
getMaxFontSize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
lineHeight	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
lineBoxHeight	TokenNameIdentifier
=	TokenNameEQUAL
lineHeight	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
halfLeading	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
lineBoxHeight	TokenNameIdentifier
-	TokenNameMINUS
lineSize	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
ladv	TokenNameIdentifier
=	TokenNameEQUAL
prevDesc	TokenNameIdentifier
+	TokenNamePLUS
halfLeading	TokenNameIdentifier
+	TokenNamePLUS
gi	TokenNameIdentifier
.	TokenNameDOT
getMaxAscent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
newDesc	TokenNameIdentifier
=	TokenNameEQUAL
halfLeading	TokenNameIdentifier
+	TokenNamePLUS
gi	TokenNameIdentifier
.	TokenNameDOT
getMaxDescent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dy	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
ladv	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
bottomEdge	TokenNameIdentifier
=	TokenNameEQUAL
newDesc	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
newDesc	TokenNameIdentifier
<	TokenNameLESS
gi	TokenNameIdentifier
.	TokenNameDOT
getMaxDescent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
bottomEdge	TokenNameIdentifier
=	TokenNameEQUAL
gi	TokenNameIdentifier
.	TokenNameDOT
getMaxDescent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
dy	TokenNameIdentifier
+	TokenNamePLUS
bottomEdge	TokenNameIdentifier
)	TokenNameRPAREN
>	TokenNameGREATER
height	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
flowRectsIter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
currentRegion	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
gi	TokenNameIdentifier
=	TokenNameEQUAL
lineGI	TokenNameIdentifier
.	TokenNameDOT
copy	TokenNameIdentifier
(	TokenNameLPAREN
gi	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
float	TokenNamefloat
oldWidth	TokenNameIdentifier
=	TokenNameEQUAL
width	TokenNameIdentifier
;	TokenNameSEMICOLON
currentRegion	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
RegionInfo	TokenNameIdentifier
)	TokenNameRPAREN
flowRectsIter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
x0	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
leftMargin	TokenNameIdentifier
;	TokenNameSEMICOLON
y0	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
width	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
(	TokenNameLPAREN
leftMargin	TokenNameIdentifier
+	TokenNamePLUS
rightMargin	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
height	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
verticalAlignOffset	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dy	TokenNameIdentifier
=	TokenNameEQUAL
firstLine	TokenNameIdentifier
?	TokenNameQUESTION
mi	TokenNameIdentifier
.	TokenNameDOT
getTopMargin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
prevDesc	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
oldWidth	TokenNameIdentifier
>	TokenNameGREATER
width	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
lnBreaks	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
gi	TokenNameIdentifier
=	TokenNameEQUAL
lineGI	TokenNameIdentifier
.	TokenNameDOT
copy	TokenNameIdentifier
(	TokenNameLPAREN
gi	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
prevDesc	TokenNameIdentifier
=	TokenNameEQUAL
newDesc	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
nextLineMult	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
lineBoxHeight	TokenNameIdentifier
;	TokenNameSEMICOLON
nextLineMult	TokenNameIdentifier
=	TokenNameEQUAL
0f	TokenNameFloatingPointLiteral
;	TokenNameSEMICOLON
updateVerticalAlignOffset	TokenNameIdentifier
(	TokenNameLPAREN
verticalAlignOffset	TokenNameIdentifier
,	TokenNameCOMMA
currentRegion	TokenNameIdentifier
,	TokenNameCOMMA
dy	TokenNameIdentifier
+	TokenNamePLUS
bottomEdge	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
lineInfos	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
gi	TokenNameIdentifier
.	TokenNameDOT
newLine	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
x0	TokenNameIdentifier
,	TokenNameCOMMA
y0	TokenNameIdentifier
+	TokenNamePLUS
dy	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
width	TokenNameIdentifier
,	TokenNameCOMMA
partial	TokenNameIdentifier
,	TokenNameCOMMA
verticalAlignOffset	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
x0	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
leftMargin	TokenNameIdentifier
;	TokenNameSEMICOLON
width	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
leftMargin	TokenNameIdentifier
+	TokenNamePLUS
rightMargin	TokenNameIdentifier
;	TokenNameSEMICOLON
leftMargin	TokenNameIdentifier
=	TokenNameEQUAL
mi	TokenNameIdentifier
.	TokenNameDOT
getLeftMargin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rightMargin	TokenNameIdentifier
=	TokenNameEQUAL
mi	TokenNameIdentifier
.	TokenNameDOT
getRightMargin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
x0	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
leftMargin	TokenNameIdentifier
;	TokenNameSEMICOLON
width	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
leftMargin	TokenNameIdentifier
+	TokenNamePLUS
rightMargin	TokenNameIdentifier
;	TokenNameSEMICOLON
firstLine	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
lineGI	TokenNameIdentifier
=	TokenNameEQUAL
gi	TokenNameIdentifier
.	TokenNameDOT
copy	TokenNameIdentifier
(	TokenNameLPAREN
lineGI	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
breakGI	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
dy	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
prevDesc	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
idx	TokenNameIdentifier
=	TokenNameEQUAL
gi	TokenNameIdentifier
.	TokenNameDOT
getGlyphIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
idx	TokenNameIdentifier
<	TokenNameLESS
numGlyphs	TokenNameIdentifier
)	TokenNameRPAREN
gv	TokenNameIdentifier
.	TokenNameDOT
setGlyphVisible	TokenNameIdentifier
(	TokenNameLPAREN
idx	TokenNameIdentifier
++	TokenNamePLUS_PLUS
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
mi	TokenNameIdentifier
.	TokenNameDOT
isFlowRegionBreak	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
currentRegion	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
flowRectsIter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
currentRegion	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
RegionInfo	TokenNameIdentifier
)	TokenNameRPAREN
flowRectsIter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
height	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
currentRegion	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dy	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
prevBotMargin	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
verticalAlignOffset	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
chunk	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
chunk	TokenNameIdentifier
<	TokenNameLESS
acis	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
chunk	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
lineInfos	TokenNameIdentifier
=	TokenNameEQUAL
chunkLineInfos	TokenNameIdentifier
[	TokenNameLBRACKET
chunk	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
lineInfos	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
continue	TokenNamecontinue
;	TokenNameSEMICOLON
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
=	TokenNameEQUAL
acis	TokenNameIdentifier
[	TokenNameLBRACKET
chunk	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
.	TokenNameDOT
first	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MarginInfo	TokenNameIdentifier
mi	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
MarginInfo	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
FLOW_PARAGRAPH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
mi	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
justification	TokenNameIdentifier
=	TokenNameEQUAL
mi	TokenNameIdentifier
.	TokenNameDOT
getJustification	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
GVTGlyphVector	TokenNameIdentifier
gv	TokenNameIdentifier
=	TokenNameEQUAL
gvs	TokenNameIdentifier
[	TokenNameLBRACKET
chunk	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
gv	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
GlyphIterator	TokenNameIdentifier
gi	TokenNameIdentifier
=	TokenNameEQUAL
gis	TokenNameIdentifier
[	TokenNameLBRACKET
chunk	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
layoutChunk	TokenNameIdentifier
(	TokenNameLPAREN
gv	TokenNameIdentifier
,	TokenNameCOMMA
gi	TokenNameIdentifier
.	TokenNameDOT
getOrigin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
justification	TokenNameIdentifier
,	TokenNameCOMMA
lineInfos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
updateVerticalAlignOffset	TokenNameIdentifier
(	TokenNameLPAREN
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
verticalAlignOffset	TokenNameIdentifier
,	TokenNameCOMMA
RegionInfo	TokenNameIdentifier
region	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
maxDescent	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
float	TokenNamefloat
freeSpace	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
region	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
maxDescent	TokenNameIdentifier
;	TokenNameSEMICOLON
verticalAlignOffset	TokenNameIdentifier
.	TokenNameDOT
setLocation	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
region	TokenNameIdentifier
.	TokenNameDOT
getVerticalAlignment	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
freeSpace	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
layoutChunk	TokenNameIdentifier
(	TokenNameLPAREN
GVTGlyphVector	TokenNameIdentifier
gv	TokenNameIdentifier
,	TokenNameCOMMA
Point2D	TokenNameIdentifier
origin	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
justification	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
lineInfos	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Iterator	TokenNameIdentifier
lInfoIter	TokenNameIdentifier
=	TokenNameEQUAL
lineInfos	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
numGlyphs	TokenNameIdentifier
=	TokenNameEQUAL
gv	TokenNameIdentifier
.	TokenNameDOT
getNumGlyphs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
gp	TokenNameIdentifier
=	TokenNameEQUAL
gv	TokenNameIdentifier
.	TokenNameDOT
getGlyphPositions	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
numGlyphs	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
lineLoc	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
float	TokenNamefloat
lineAdv	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
lineVAdv	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
xOrig	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
origin	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
yOrig	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
origin	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
xScale	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
xAdj	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
charW	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
lineWidth	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
boolean	TokenNameboolean
partial	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
float	TokenNamefloat
verticalAlignOffset	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
lineEnd	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
i	TokenNameIdentifier
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
pos	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
numGlyphs	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
i	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
lineEnd	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
xOrig	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
lineAdv	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
lInfoIter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
LineInfo	TokenNameIdentifier
li	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
LineInfo	TokenNameIdentifier
)	TokenNameRPAREN
lInfoIter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
lineEnd	TokenNameIdentifier
=	TokenNameEQUAL
li	TokenNameIdentifier
.	TokenNameDOT
getEndIdx	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
lineLoc	TokenNameIdentifier
=	TokenNameEQUAL
li	TokenNameIdentifier
.	TokenNameDOT
getLocation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
lineAdv	TokenNameIdentifier
=	TokenNameEQUAL
li	TokenNameIdentifier
.	TokenNameDOT
getAdvance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
lineVAdv	TokenNameIdentifier
=	TokenNameEQUAL
li	TokenNameIdentifier
.	TokenNameDOT
getVisualAdvance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
charW	TokenNameIdentifier
=	TokenNameEQUAL
li	TokenNameIdentifier
.	TokenNameDOT
getLastCharWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
lineWidth	TokenNameIdentifier
=	TokenNameEQUAL
li	TokenNameIdentifier
.	TokenNameDOT
getLineWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
partial	TokenNameIdentifier
=	TokenNameEQUAL
li	TokenNameIdentifier
.	TokenNameDOT
isPartialLine	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
verticalAlignOffset	TokenNameIdentifier
=	TokenNameEQUAL
li	TokenNameIdentifier
.	TokenNameDOT
getVerticalAlignOffset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
xAdj	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
xScale	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
justification	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
0	TokenNameIntegerLiteral
:	TokenNameCOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
1	TokenNameIntegerLiteral
:	TokenNameCOLON
xAdj	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
lineWidth	TokenNameIdentifier
-	TokenNameMINUS
lineVAdv	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
2	TokenNameIntegerLiteral
:	TokenNameCOLON
xAdj	TokenNameIdentifier
=	TokenNameEQUAL
lineWidth	TokenNameIdentifier
-	TokenNameMINUS
lineVAdv	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
3	TokenNameIntegerLiteral
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
!	TokenNameNOT
partial	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
lineEnd	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
i	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
xScale	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
lineWidth	TokenNameIdentifier
-	TokenNameMINUS
charW	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
(	TokenNameLPAREN
lineVAdv	TokenNameIdentifier
-	TokenNameMINUS
charW	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
pos	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
lineLoc	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
gp	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
i	TokenNameIdentifier
]	TokenNameRBRACKET
-	TokenNameMINUS
xOrig	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
xScale	TokenNameIdentifier
+	TokenNamePLUS
xAdj	TokenNameIdentifier
;	TokenNameSEMICOLON
pos	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
lineLoc	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
gp	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
i	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
-	TokenNameMINUS
yOrig	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
verticalAlignOffset	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
gv	TokenNameIdentifier
.	TokenNameDOT
setGlyphPosition	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
,	TokenNameCOMMA
pos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
pos	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
xOrig	TokenNameIdentifier
;	TokenNameSEMICOLON
pos	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
yOrig	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
lineLoc	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
pos	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
lineLoc	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
gp	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
i	TokenNameIdentifier
]	TokenNameRBRACKET
-	TokenNameMINUS
xOrig	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
xScale	TokenNameIdentifier
+	TokenNamePLUS
xAdj	TokenNameIdentifier
;	TokenNameSEMICOLON
pos	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
lineLoc	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
gp	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
i	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
-	TokenNameMINUS
yOrig	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
verticalAlignOffset	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
gv	TokenNameIdentifier
.	TokenNameDOT
setGlyphPosition	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
,	TokenNameCOMMA
pos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
