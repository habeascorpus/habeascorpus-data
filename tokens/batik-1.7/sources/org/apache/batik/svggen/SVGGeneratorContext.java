package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
svggen	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Color	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Composite	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Font	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Paint	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
RenderingHints	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Shape	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Stroke	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
DecimalFormat	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
DecimalFormatSymbols	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Locale	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Document	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
SVGGeneratorContext	TokenNameIdentifier
implements	TokenNameimplements
ErrorConstants	TokenNameIdentifier
{	TokenNameLBRACE
Document	TokenNameIdentifier
domFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
ImageHandler	TokenNameIdentifier
imageHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
GenericImageHandler	TokenNameIdentifier
genericImageHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
ExtensionHandler	TokenNameIdentifier
extensionHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
SVGIDGenerator	TokenNameIdentifier
idGenerator	TokenNameIdentifier
;	TokenNameSEMICOLON
StyleHandler	TokenNameIdentifier
styleHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
String	TokenNameIdentifier
generatorComment	TokenNameIdentifier
;	TokenNameSEMICOLON
ErrorHandler	TokenNameIdentifier
errorHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
svgFont	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
GraphicContextDefaults	TokenNameIdentifier
gcDefaults	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
precision	TokenNameIdentifier
=	TokenNameEQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
protected	TokenNameprotected
DecimalFormat	TokenNameIdentifier
decimalFormat	TokenNameIdentifier
=	TokenNameEQUAL
decimalFormats	TokenNameIdentifier
[	TokenNameLBRACKET
precision	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
GraphicContextDefaults	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
Paint	TokenNameIdentifier
paint	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
Stroke	TokenNameIdentifier
stroke	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
Composite	TokenNameIdentifier
composite	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
Shape	TokenNameIdentifier
clip	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
RenderingHints	TokenNameIdentifier
hints	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
Font	TokenNameIdentifier
font	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
Color	TokenNameIdentifier
background	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
void	TokenNamevoid
setStroke	TokenNameIdentifier
(	TokenNameLPAREN
Stroke	TokenNameIdentifier
stroke	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
stroke	TokenNameIdentifier
=	TokenNameEQUAL
stroke	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Stroke	TokenNameIdentifier
getStroke	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
stroke	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setComposite	TokenNameIdentifier
(	TokenNameLPAREN
Composite	TokenNameIdentifier
composite	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
composite	TokenNameIdentifier
=	TokenNameEQUAL
composite	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Composite	TokenNameIdentifier
getComposite	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
composite	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setClip	TokenNameIdentifier
(	TokenNameLPAREN
Shape	TokenNameIdentifier
clip	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
clip	TokenNameIdentifier
=	TokenNameEQUAL
clip	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Shape	TokenNameIdentifier
getClip	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
clip	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setRenderingHints	TokenNameIdentifier
(	TokenNameLPAREN
RenderingHints	TokenNameIdentifier
hints	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
hints	TokenNameIdentifier
=	TokenNameEQUAL
hints	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
RenderingHints	TokenNameIdentifier
getRenderingHints	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
hints	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setFont	TokenNameIdentifier
(	TokenNameLPAREN
Font	TokenNameIdentifier
font	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
font	TokenNameIdentifier
=	TokenNameEQUAL
font	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Font	TokenNameIdentifier
getFont	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
font	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setBackground	TokenNameIdentifier
(	TokenNameLPAREN
Color	TokenNameIdentifier
background	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
background	TokenNameIdentifier
=	TokenNameEQUAL
background	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Color	TokenNameIdentifier
getBackground	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
background	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setPaint	TokenNameIdentifier
(	TokenNameLPAREN
Paint	TokenNameIdentifier
paint	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
paint	TokenNameIdentifier
=	TokenNameEQUAL
paint	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Paint	TokenNameIdentifier
getPaint	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
paint	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
SVGGeneratorContext	TokenNameIdentifier
(	TokenNameLPAREN
Document	TokenNameIdentifier
domFactory	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
setDOMFactory	TokenNameIdentifier
(	TokenNameLPAREN
domFactory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
SVGGeneratorContext	TokenNameIdentifier
createDefault	TokenNameIdentifier
(	TokenNameLPAREN
Document	TokenNameIdentifier
domFactory	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
SVGGeneratorContext	TokenNameIdentifier
ctx	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SVGGeneratorContext	TokenNameIdentifier
(	TokenNameLPAREN
domFactory	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ctx	TokenNameIdentifier
.	TokenNameDOT
setIDGenerator	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SVGIDGenerator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ctx	TokenNameIdentifier
.	TokenNameDOT
setExtensionHandler	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
DefaultExtensionHandler	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ctx	TokenNameIdentifier
.	TokenNameDOT
setImageHandler	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
ImageHandlerBase64Encoder	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ctx	TokenNameIdentifier
.	TokenNameDOT
setStyleHandler	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
DefaultStyleHandler	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ctx	TokenNameIdentifier
.	TokenNameDOT
setComment	TokenNameIdentifier
(	TokenNameLPAREN
"Generated by the Batik Graphics2D SVG Generator"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ctx	TokenNameIdentifier
.	TokenNameDOT
setErrorHandler	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
DefaultErrorHandler	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
ctx	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
GraphicContextDefaults	TokenNameIdentifier
getGraphicContextDefaults	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
gcDefaults	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
setGraphicContextDefaults	TokenNameIdentifier
(	TokenNameLPAREN
GraphicContextDefaults	TokenNameIdentifier
gcDefaults	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
gcDefaults	TokenNameIdentifier
=	TokenNameEQUAL
gcDefaults	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
SVGIDGenerator	TokenNameIdentifier
getIDGenerator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
idGenerator	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
setIDGenerator	TokenNameIdentifier
(	TokenNameLPAREN
SVGIDGenerator	TokenNameIdentifier
idGenerator	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
idGenerator	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
SVGGraphics2DRuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
ERR_ID_GENERATOR_NULL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
idGenerator	TokenNameIdentifier
=	TokenNameEQUAL
idGenerator	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
Document	TokenNameIdentifier
getDOMFactory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
domFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
setDOMFactory	TokenNameIdentifier
(	TokenNameLPAREN
Document	TokenNameIdentifier
domFactory	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
domFactory	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
SVGGraphics2DRuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
ERR_DOM_FACTORY_NULL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
domFactory	TokenNameIdentifier
=	TokenNameEQUAL
domFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
ExtensionHandler	TokenNameIdentifier
getExtensionHandler	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
extensionHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
setExtensionHandler	TokenNameIdentifier
(	TokenNameLPAREN
ExtensionHandler	TokenNameIdentifier
extensionHandler	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
extensionHandler	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
SVGGraphics2DRuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
ERR_EXTENSION_HANDLER_NULL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
extensionHandler	TokenNameIdentifier
=	TokenNameEQUAL
extensionHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
ImageHandler	TokenNameIdentifier
getImageHandler	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
imageHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
setImageHandler	TokenNameIdentifier
(	TokenNameLPAREN
ImageHandler	TokenNameIdentifier
imageHandler	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
imageHandler	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
SVGGraphics2DRuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
ERR_IMAGE_HANDLER_NULL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
imageHandler	TokenNameIdentifier
=	TokenNameEQUAL
imageHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
genericImageHandler	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleImageHandler	TokenNameIdentifier
(	TokenNameLPAREN
imageHandler	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
setGenericImageHandler	TokenNameIdentifier
(	TokenNameLPAREN
GenericImageHandler	TokenNameIdentifier
genericImageHandler	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
genericImageHandler	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
SVGGraphics2DRuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
ERR_IMAGE_HANDLER_NULL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
this	TokenNamethis
.	TokenNameDOT
imageHandler	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
genericImageHandler	TokenNameIdentifier
=	TokenNameEQUAL
genericImageHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
StyleHandler	TokenNameIdentifier
getStyleHandler	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
styleHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
setStyleHandler	TokenNameIdentifier
(	TokenNameLPAREN
StyleHandler	TokenNameIdentifier
styleHandler	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
styleHandler	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
SVGGraphics2DRuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
ERR_STYLE_HANDLER_NULL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
styleHandler	TokenNameIdentifier
=	TokenNameEQUAL
styleHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
String	TokenNameIdentifier
getComment	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
generatorComment	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
setComment	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
generatorComment	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
generatorComment	TokenNameIdentifier
=	TokenNameEQUAL
generatorComment	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
ErrorHandler	TokenNameIdentifier
getErrorHandler	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
errorHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
setErrorHandler	TokenNameIdentifier
(	TokenNameLPAREN
ErrorHandler	TokenNameIdentifier
errorHandler	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
errorHandler	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
SVGGraphics2DRuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
ERR_ERROR_HANDLER_NULL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
errorHandler	TokenNameIdentifier
=	TokenNameEQUAL
errorHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
boolean	TokenNameboolean
isEmbeddedFontsOn	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
svgFont	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
setEmbeddedFontsOn	TokenNameIdentifier
(	TokenNameLPAREN
boolean	TokenNameboolean
svgFont	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
svgFont	TokenNameIdentifier
=	TokenNameEQUAL
svgFont	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
int	TokenNameint
getPrecision	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
precision	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
setPrecision	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
precision	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
precision	TokenNameIdentifier
<	TokenNameLESS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
precision	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
precision	TokenNameIdentifier
>	TokenNameGREATER
12	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
precision	TokenNameIdentifier
=	TokenNameEQUAL
12	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
precision	TokenNameIdentifier
=	TokenNameEQUAL
precision	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
decimalFormat	TokenNameIdentifier
=	TokenNameEQUAL
decimalFormats	TokenNameIdentifier
[	TokenNameLBRACKET
this	TokenNamethis
.	TokenNameDOT
precision	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
String	TokenNameIdentifier
doubleString	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
double	TokenNamedouble
absvalue	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
abs	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
absvalue	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
10e7	TokenNameDoubleLiteral
||	TokenNameOR_OR
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
value	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
Integer	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
value	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
decimalFormat	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
static	TokenNamestatic
DecimalFormatSymbols	TokenNameIdentifier
dsf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DecimalFormatSymbols	TokenNameIdentifier
(	TokenNameLPAREN
Locale	TokenNameIdentifier
.	TokenNameDOT
US	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
protected	TokenNameprotected
static	TokenNamestatic
DecimalFormat	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
decimalFormats	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DecimalFormat	TokenNameIdentifier
[	TokenNameLBRACKET
13	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
decimalFormats	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
DecimalFormat	TokenNameIdentifier
(	TokenNameLPAREN
"#"	TokenNameStringLiteral
,	TokenNameCOMMA
dsf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
format	TokenNameIdentifier
=	TokenNameEQUAL
"#."	TokenNameStringLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
decimalFormats	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
format	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
"#"	TokenNameStringLiteral
;	TokenNameSEMICOLON
decimalFormats	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
DecimalFormat	TokenNameIdentifier
(	TokenNameLPAREN
format	TokenNameIdentifier
,	TokenNameCOMMA
dsf	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
