package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
bridge	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
BasicStroke	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Color	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Paint	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Shape	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Stroke	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
css	TokenNameIdentifier
.	TokenNameDOT
engine	TokenNameIdentifier
.	TokenNameDOT
SVGCSSEngine	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
css	TokenNameIdentifier
.	TokenNameDOT
engine	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
.	TokenNameDOT
Value	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
css	TokenNameIdentifier
.	TokenNameDOT
engine	TokenNameIdentifier
.	TokenNameDOT
value	TokenNameIdentifier
.	TokenNameDOT
svg	TokenNameIdentifier
.	TokenNameDOT
ICCColor	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
ext	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
color	TokenNameIdentifier
.	TokenNameDOT
ICCColorSpaceExt	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
CompositeShapePainter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
FillShapePainter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
GraphicsNode	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
Marker	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
MarkerShapePainter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
ShapeNode	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
ShapePainter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
StrokeShapePainter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
CSSConstants	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
SVGConstants	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Element	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
css	TokenNameIdentifier
.	TokenNameDOT
CSSPrimitiveValue	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
css	TokenNameIdentifier
.	TokenNameDOT
CSSValue	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
abstract	TokenNameabstract
class	TokenNameclass
PaintServer	TokenNameIdentifier
implements	TokenNameimplements
SVGConstants	TokenNameIdentifier
,	TokenNameCOMMA
CSSConstants	TokenNameIdentifier
,	TokenNameCOMMA
ErrorConstants	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
PaintServer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ShapePainter	TokenNameIdentifier
convertMarkers	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
e	TokenNameIdentifier
,	TokenNameCOMMA
ShapeNode	TokenNameIdentifier
node	TokenNameIdentifier
,	TokenNameCOMMA
BridgeContext	TokenNameIdentifier
ctx	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Value	TokenNameIdentifier
v	TokenNameIdentifier
;	TokenNameSEMICOLON
v	TokenNameIdentifier
=	TokenNameEQUAL
CSSUtilities	TokenNameIdentifier
.	TokenNameDOT
getComputedStyle	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
SVGCSSEngine	TokenNameIdentifier
.	TokenNameDOT
MARKER_START_INDEX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Marker	TokenNameIdentifier
startMarker	TokenNameIdentifier
=	TokenNameEQUAL
convertMarker	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
v	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
v	TokenNameIdentifier
=	TokenNameEQUAL
CSSUtilities	TokenNameIdentifier
.	TokenNameDOT
getComputedStyle	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
SVGCSSEngine	TokenNameIdentifier
.	TokenNameDOT
MARKER_MID_INDEX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Marker	TokenNameIdentifier
midMarker	TokenNameIdentifier
=	TokenNameEQUAL
convertMarker	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
v	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
v	TokenNameIdentifier
=	TokenNameEQUAL
CSSUtilities	TokenNameIdentifier
.	TokenNameDOT
getComputedStyle	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
SVGCSSEngine	TokenNameIdentifier
.	TokenNameDOT
MARKER_END_INDEX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Marker	TokenNameIdentifier
endMarker	TokenNameIdentifier
=	TokenNameEQUAL
convertMarker	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
v	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
startMarker	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
midMarker	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
endMarker	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
MarkerShapePainter	TokenNameIdentifier
p	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MarkerShapePainter	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
.	TokenNameDOT
getShape	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setStartMarker	TokenNameIdentifier
(	TokenNameLPAREN
startMarker	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setMiddleMarker	TokenNameIdentifier
(	TokenNameLPAREN
midMarker	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p	TokenNameIdentifier
.	TokenNameDOT
setEndMarker	TokenNameIdentifier
(	TokenNameLPAREN
endMarker	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
p	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Marker	TokenNameIdentifier
convertMarker	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
e	TokenNameIdentifier
,	TokenNameCOMMA
Value	TokenNameIdentifier
v	TokenNameIdentifier
,	TokenNameCOMMA
BridgeContext	TokenNameIdentifier
ctx	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
v	TokenNameIdentifier
.	TokenNameDOT
getPrimitiveType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
CSSPrimitiveValue	TokenNameIdentifier
.	TokenNameDOT
CSS_IDENT	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
String	TokenNameIdentifier
uri	TokenNameIdentifier
=	TokenNameEQUAL
v	TokenNameIdentifier
.	TokenNameDOT
getStringValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
markerElement	TokenNameIdentifier
=	TokenNameEQUAL
ctx	TokenNameIdentifier
.	TokenNameDOT
getReferencedElement	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
uri	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Bridge	TokenNameIdentifier
bridge	TokenNameIdentifier
=	TokenNameEQUAL
ctx	TokenNameIdentifier
.	TokenNameDOT
getBridge	TokenNameIdentifier
(	TokenNameLPAREN
markerElement	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
bridge	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
!	TokenNameNOT
(	TokenNameLPAREN
bridge	TokenNameIdentifier
instanceof	TokenNameinstanceof
MarkerBridge	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
BridgeException	TokenNameIdentifier
(	TokenNameLPAREN
ctx	TokenNameIdentifier
,	TokenNameCOMMA
e	TokenNameIdentifier
,	TokenNameCOMMA
ERR_CSS_URI_BAD_TARGET	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
uri	TokenNameIdentifier
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
(	TokenNameLPAREN
(	TokenNameLPAREN
MarkerBridge	TokenNameIdentifier
)	TokenNameRPAREN
bridge	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
createMarker	TokenNameIdentifier
(	TokenNameLPAREN
ctx	TokenNameIdentifier
,	TokenNameCOMMA
markerElement	TokenNameIdentifier
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ShapePainter	TokenNameIdentifier
convertFillAndStroke	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
e	TokenNameIdentifier
,	TokenNameCOMMA
ShapeNode	TokenNameIdentifier
node	TokenNameIdentifier
,	TokenNameCOMMA
BridgeContext	TokenNameIdentifier
ctx	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Shape	TokenNameIdentifier
shape	TokenNameIdentifier
=	TokenNameEQUAL
node	TokenNameIdentifier
.	TokenNameDOT
getShape	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
shape	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
Paint	TokenNameIdentifier
fillPaint	TokenNameIdentifier
=	TokenNameEQUAL
convertFillPaint	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
node	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
FillShapePainter	TokenNameIdentifier
fp	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FillShapePainter	TokenNameIdentifier
(	TokenNameLPAREN
shape	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fp	TokenNameIdentifier
.	TokenNameDOT
setPaint	TokenNameIdentifier
(	TokenNameLPAREN
fillPaint	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Stroke	TokenNameIdentifier
stroke	TokenNameIdentifier
=	TokenNameEQUAL
convertStroke	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
stroke	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
fp	TokenNameIdentifier
;	TokenNameSEMICOLON
Paint	TokenNameIdentifier
strokePaint	TokenNameIdentifier
=	TokenNameEQUAL
convertStrokePaint	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
node	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StrokeShapePainter	TokenNameIdentifier
sp	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StrokeShapePainter	TokenNameIdentifier
(	TokenNameLPAREN
shape	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sp	TokenNameIdentifier
.	TokenNameDOT
setStroke	TokenNameIdentifier
(	TokenNameLPAREN
stroke	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sp	TokenNameIdentifier
.	TokenNameDOT
setPaint	TokenNameIdentifier
(	TokenNameLPAREN
strokePaint	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CompositeShapePainter	TokenNameIdentifier
cp	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CompositeShapePainter	TokenNameIdentifier
(	TokenNameLPAREN
shape	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cp	TokenNameIdentifier
.	TokenNameDOT
addShapePainter	TokenNameIdentifier
(	TokenNameLPAREN
fp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cp	TokenNameIdentifier
.	TokenNameDOT
addShapePainter	TokenNameIdentifier
(	TokenNameLPAREN
sp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
cp	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
ShapePainter	TokenNameIdentifier
convertStrokePainter	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
e	TokenNameIdentifier
,	TokenNameCOMMA
ShapeNode	TokenNameIdentifier
node	TokenNameIdentifier
,	TokenNameCOMMA
BridgeContext	TokenNameIdentifier
ctx	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Shape	TokenNameIdentifier
shape	TokenNameIdentifier
=	TokenNameEQUAL
node	TokenNameIdentifier
.	TokenNameDOT
getShape	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
shape	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
Stroke	TokenNameIdentifier
stroke	TokenNameIdentifier
=	TokenNameEQUAL
convertStroke	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
stroke	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
Paint	TokenNameIdentifier
strokePaint	TokenNameIdentifier
=	TokenNameEQUAL
convertStrokePaint	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
node	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StrokeShapePainter	TokenNameIdentifier
sp	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StrokeShapePainter	TokenNameIdentifier
(	TokenNameLPAREN
shape	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sp	TokenNameIdentifier
.	TokenNameDOT
setStroke	TokenNameIdentifier
(	TokenNameLPAREN
stroke	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sp	TokenNameIdentifier
.	TokenNameDOT
setPaint	TokenNameIdentifier
(	TokenNameLPAREN
strokePaint	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Paint	TokenNameIdentifier
convertStrokePaint	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
strokedElement	TokenNameIdentifier
,	TokenNameCOMMA
GraphicsNode	TokenNameIdentifier
strokedNode	TokenNameIdentifier
,	TokenNameCOMMA
BridgeContext	TokenNameIdentifier
ctx	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Value	TokenNameIdentifier
v	TokenNameIdentifier
=	TokenNameEQUAL
CSSUtilities	TokenNameIdentifier
.	TokenNameDOT
getComputedStyle	TokenNameIdentifier
(	TokenNameLPAREN
strokedElement	TokenNameIdentifier
,	TokenNameCOMMA
SVGCSSEngine	TokenNameIdentifier
.	TokenNameDOT
STROKE_OPACITY_INDEX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
opacity	TokenNameIdentifier
=	TokenNameEQUAL
convertOpacity	TokenNameIdentifier
(	TokenNameLPAREN
v	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
v	TokenNameIdentifier
=	TokenNameEQUAL
CSSUtilities	TokenNameIdentifier
.	TokenNameDOT
getComputedStyle	TokenNameIdentifier
(	TokenNameLPAREN
strokedElement	TokenNameIdentifier
,	TokenNameCOMMA
SVGCSSEngine	TokenNameIdentifier
.	TokenNameDOT
STROKE_INDEX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
convertPaint	TokenNameIdentifier
(	TokenNameLPAREN
strokedElement	TokenNameIdentifier
,	TokenNameCOMMA
strokedNode	TokenNameIdentifier
,	TokenNameCOMMA
v	TokenNameIdentifier
,	TokenNameCOMMA
opacity	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Paint	TokenNameIdentifier
convertFillPaint	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
filledElement	TokenNameIdentifier
,	TokenNameCOMMA
GraphicsNode	TokenNameIdentifier
filledNode	TokenNameIdentifier
,	TokenNameCOMMA
BridgeContext	TokenNameIdentifier
ctx	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Value	TokenNameIdentifier
v	TokenNameIdentifier
=	TokenNameEQUAL
CSSUtilities	TokenNameIdentifier
.	TokenNameDOT
getComputedStyle	TokenNameIdentifier
(	TokenNameLPAREN
filledElement	TokenNameIdentifier
,	TokenNameCOMMA
SVGCSSEngine	TokenNameIdentifier
.	TokenNameDOT
FILL_OPACITY_INDEX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
opacity	TokenNameIdentifier
=	TokenNameEQUAL
convertOpacity	TokenNameIdentifier
(	TokenNameLPAREN
v	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
v	TokenNameIdentifier
=	TokenNameEQUAL
CSSUtilities	TokenNameIdentifier
.	TokenNameDOT
getComputedStyle	TokenNameIdentifier
(	TokenNameLPAREN
filledElement	TokenNameIdentifier
,	TokenNameCOMMA
SVGCSSEngine	TokenNameIdentifier
.	TokenNameDOT
FILL_INDEX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
convertPaint	TokenNameIdentifier
(	TokenNameLPAREN
filledElement	TokenNameIdentifier
,	TokenNameCOMMA
filledNode	TokenNameIdentifier
,	TokenNameCOMMA
v	TokenNameIdentifier
,	TokenNameCOMMA
opacity	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Paint	TokenNameIdentifier
convertPaint	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
paintedElement	TokenNameIdentifier
,	TokenNameCOMMA
GraphicsNode	TokenNameIdentifier
paintedNode	TokenNameIdentifier
,	TokenNameCOMMA
Value	TokenNameIdentifier
paintDef	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
opacity	TokenNameIdentifier
,	TokenNameCOMMA
BridgeContext	TokenNameIdentifier
ctx	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
paintDef	TokenNameIdentifier
.	TokenNameDOT
getCssValueType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
CSSValue	TokenNameIdentifier
.	TokenNameDOT
CSS_PRIMITIVE_VALUE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
paintDef	TokenNameIdentifier
.	TokenNameDOT
getPrimitiveType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
CSSPrimitiveValue	TokenNameIdentifier
.	TokenNameDOT
CSS_IDENT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
case	TokenNamecase
CSSPrimitiveValue	TokenNameIdentifier
.	TokenNameDOT
CSS_RGBCOLOR	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
convertColor	TokenNameIdentifier
(	TokenNameLPAREN
paintDef	TokenNameIdentifier
,	TokenNameCOMMA
opacity	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
CSSPrimitiveValue	TokenNameIdentifier
.	TokenNameDOT
CSS_URI	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
convertURIPaint	TokenNameIdentifier
(	TokenNameLPAREN
paintedElement	TokenNameIdentifier
,	TokenNameCOMMA
paintedNode	TokenNameIdentifier
,	TokenNameCOMMA
paintDef	TokenNameIdentifier
,	TokenNameCOMMA
opacity	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
"Paint argument is not an appropriate CSS value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Value	TokenNameIdentifier
v	TokenNameIdentifier
=	TokenNameEQUAL
paintDef	TokenNameIdentifier
.	TokenNameDOT
item	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
v	TokenNameIdentifier
.	TokenNameDOT
getPrimitiveType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
CSSPrimitiveValue	TokenNameIdentifier
.	TokenNameDOT
CSS_RGBCOLOR	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
convertRGBICCColor	TokenNameIdentifier
(	TokenNameLPAREN
paintedElement	TokenNameIdentifier
,	TokenNameCOMMA
v	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
ICCColor	TokenNameIdentifier
)	TokenNameRPAREN
paintDef	TokenNameIdentifier
.	TokenNameDOT
item	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
opacity	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
CSSPrimitiveValue	TokenNameIdentifier
.	TokenNameDOT
CSS_URI	TokenNameIdentifier
:	TokenNameCOLON
{	TokenNameLBRACE
Paint	TokenNameIdentifier
result	TokenNameIdentifier
=	TokenNameEQUAL
silentConvertURIPaint	TokenNameIdentifier
(	TokenNameLPAREN
paintedElement	TokenNameIdentifier
,	TokenNameCOMMA
paintedNode	TokenNameIdentifier
,	TokenNameCOMMA
v	TokenNameIdentifier
,	TokenNameCOMMA
opacity	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
result	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
result	TokenNameIdentifier
;	TokenNameSEMICOLON
v	TokenNameIdentifier
=	TokenNameEQUAL
paintDef	TokenNameIdentifier
.	TokenNameDOT
item	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
v	TokenNameIdentifier
.	TokenNameDOT
getPrimitiveType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
CSSPrimitiveValue	TokenNameIdentifier
.	TokenNameDOT
CSS_IDENT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
case	TokenNamecase
CSSPrimitiveValue	TokenNameIdentifier
.	TokenNameDOT
CSS_RGBCOLOR	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
paintDef	TokenNameIdentifier
.	TokenNameDOT
getLength	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
convertColor	TokenNameIdentifier
(	TokenNameLPAREN
v	TokenNameIdentifier
,	TokenNameCOMMA
opacity	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
convertRGBICCColor	TokenNameIdentifier
(	TokenNameLPAREN
paintedElement	TokenNameIdentifier
,	TokenNameCOMMA
v	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
ICCColor	TokenNameIdentifier
)	TokenNameRPAREN
paintDef	TokenNameIdentifier
.	TokenNameDOT
item	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
opacity	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
default	TokenNamedefault
:	TokenNameCOLON
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
"Paint argument is not an appropriate CSS value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
default	TokenNamedefault
:	TokenNameCOLON
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
"Paint argument is not an appropriate CSS value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Paint	TokenNameIdentifier
silentConvertURIPaint	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
paintedElement	TokenNameIdentifier
,	TokenNameCOMMA
GraphicsNode	TokenNameIdentifier
paintedNode	TokenNameIdentifier
,	TokenNameCOMMA
Value	TokenNameIdentifier
paintDef	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
opacity	TokenNameIdentifier
,	TokenNameCOMMA
BridgeContext	TokenNameIdentifier
ctx	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Paint	TokenNameIdentifier
paint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
paint	TokenNameIdentifier
=	TokenNameEQUAL
convertURIPaint	TokenNameIdentifier
(	TokenNameLPAREN
paintedElement	TokenNameIdentifier
,	TokenNameCOMMA
paintedNode	TokenNameIdentifier
,	TokenNameCOMMA
paintDef	TokenNameIdentifier
,	TokenNameCOMMA
opacity	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
BridgeException	TokenNameIdentifier
ex	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
return	TokenNamereturn
paint	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Paint	TokenNameIdentifier
convertURIPaint	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
paintedElement	TokenNameIdentifier
,	TokenNameCOMMA
GraphicsNode	TokenNameIdentifier
paintedNode	TokenNameIdentifier
,	TokenNameCOMMA
Value	TokenNameIdentifier
paintDef	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
opacity	TokenNameIdentifier
,	TokenNameCOMMA
BridgeContext	TokenNameIdentifier
ctx	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
uri	TokenNameIdentifier
=	TokenNameEQUAL
paintDef	TokenNameIdentifier
.	TokenNameDOT
getStringValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
paintElement	TokenNameIdentifier
=	TokenNameEQUAL
ctx	TokenNameIdentifier
.	TokenNameDOT
getReferencedElement	TokenNameIdentifier
(	TokenNameLPAREN
paintedElement	TokenNameIdentifier
,	TokenNameCOMMA
uri	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Bridge	TokenNameIdentifier
bridge	TokenNameIdentifier
=	TokenNameEQUAL
ctx	TokenNameIdentifier
.	TokenNameDOT
getBridge	TokenNameIdentifier
(	TokenNameLPAREN
paintElement	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
bridge	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
!	TokenNameNOT
(	TokenNameLPAREN
bridge	TokenNameIdentifier
instanceof	TokenNameinstanceof
PaintBridge	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
BridgeException	TokenNameIdentifier
(	TokenNameLPAREN
ctx	TokenNameIdentifier
,	TokenNameCOMMA
paintedElement	TokenNameIdentifier
,	TokenNameCOMMA
ERR_CSS_URI_BAD_TARGET	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
uri	TokenNameIdentifier
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
(	TokenNameLPAREN
(	TokenNameLPAREN
PaintBridge	TokenNameIdentifier
)	TokenNameRPAREN
bridge	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
createPaint	TokenNameIdentifier
(	TokenNameLPAREN
ctx	TokenNameIdentifier
,	TokenNameCOMMA
paintElement	TokenNameIdentifier
,	TokenNameCOMMA
paintedElement	TokenNameIdentifier
,	TokenNameCOMMA
paintedNode	TokenNameIdentifier
,	TokenNameCOMMA
opacity	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Color	TokenNameIdentifier
convertRGBICCColor	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
paintedElement	TokenNameIdentifier
,	TokenNameCOMMA
Value	TokenNameIdentifier
colorDef	TokenNameIdentifier
,	TokenNameCOMMA
ICCColor	TokenNameIdentifier
iccColor	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
opacity	TokenNameIdentifier
,	TokenNameCOMMA
BridgeContext	TokenNameIdentifier
ctx	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Color	TokenNameIdentifier
color	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
iccColor	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
color	TokenNameIdentifier
=	TokenNameEQUAL
convertICCColor	TokenNameIdentifier
(	TokenNameLPAREN
paintedElement	TokenNameIdentifier
,	TokenNameCOMMA
iccColor	TokenNameIdentifier
,	TokenNameCOMMA
opacity	TokenNameIdentifier
,	TokenNameCOMMA
ctx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
color	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
color	TokenNameIdentifier
=	TokenNameEQUAL
convertColor	TokenNameIdentifier
(	TokenNameLPAREN
colorDef	TokenNameIdentifier
,	TokenNameCOMMA
opacity	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
color	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Color	TokenNameIdentifier
convertICCColor	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
e	TokenNameIdentifier
,	TokenNameCOMMA
ICCColor	TokenNameIdentifier
c	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
opacity	TokenNameIdentifier
,	TokenNameCOMMA
BridgeContext	TokenNameIdentifier
ctx	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
iccProfileName	TokenNameIdentifier
=	TokenNameEQUAL
c	TokenNameIdentifier
.	TokenNameDOT
getColorProfile	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
iccProfileName	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
SVGColorProfileElementBridge	TokenNameIdentifier
profileBridge	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SVGColorProfileElementBridge	TokenNameIdentifier
)	TokenNameRPAREN
ctx	TokenNameIdentifier
.	TokenNameDOT
getBridge	TokenNameIdentifier
(	TokenNameLPAREN
SVG_NAMESPACE_URI	TokenNameIdentifier
,	TokenNameCOMMA
SVG_COLOR_PROFILE_TAG	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
profileBridge	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
ICCColorSpaceExt	TokenNameIdentifier
profileCS	TokenNameIdentifier
=	TokenNameEQUAL
profileBridge	TokenNameIdentifier
.	TokenNameDOT
createICCColorSpaceExt	TokenNameIdentifier
(	TokenNameLPAREN
ctx	TokenNameIdentifier
,	TokenNameCOMMA
e	TokenNameIdentifier
,	TokenNameCOMMA
iccProfileName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
profileCS	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
n	TokenNameIdentifier
=	TokenNameEQUAL
c	TokenNameIdentifier
.	TokenNameDOT
getNumberOfColors	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
colorValue	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
float	TokenNamefloat
[	TokenNameLBRACKET
n	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
n	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
n	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
colorValue	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
c	TokenNameIdentifier
.	TokenNameDOT
getColor	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
rgb	TokenNameIdentifier
=	TokenNameEQUAL
profileCS	TokenNameIdentifier
.	TokenNameDOT
intendedToRGB	TokenNameIdentifier
(	TokenNameLPAREN
colorValue	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
Color	TokenNameIdentifier
(	TokenNameLPAREN
rgb	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
rgb	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
rgb	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
opacity	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Color	TokenNameIdentifier
convertColor	TokenNameIdentifier
(	TokenNameLPAREN
Value	TokenNameIdentifier
c	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
opacity	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
r	TokenNameIdentifier
=	TokenNameEQUAL
resolveColorComponent	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
.	TokenNameDOT
getRed	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
g	TokenNameIdentifier
=	TokenNameEQUAL
resolveColorComponent	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
.	TokenNameDOT
getGreen	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
b	TokenNameIdentifier
=	TokenNameEQUAL
resolveColorComponent	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
.	TokenNameDOT
getBlue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
Color	TokenNameIdentifier
(	TokenNameLPAREN
r	TokenNameIdentifier
,	TokenNameCOMMA
g	TokenNameIdentifier
,	TokenNameCOMMA
b	TokenNameIdentifier
,	TokenNameCOMMA
Math	TokenNameIdentifier
.	TokenNameDOT
round	TokenNameIdentifier
(	TokenNameLPAREN
opacity	TokenNameIdentifier
*	TokenNameMULTIPLY
255f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Stroke	TokenNameIdentifier
convertStroke	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Value	TokenNameIdentifier
v	TokenNameIdentifier
;	TokenNameSEMICOLON
v	TokenNameIdentifier
=	TokenNameEQUAL
CSSUtilities	TokenNameIdentifier
.	TokenNameDOT
getComputedStyle	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
SVGCSSEngine	TokenNameIdentifier
.	TokenNameDOT
STROKE_WIDTH_INDEX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
width	TokenNameIdentifier
=	TokenNameEQUAL
v	TokenNameIdentifier
.	TokenNameDOT
getFloatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
width	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0.0f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
v	TokenNameIdentifier
=	TokenNameEQUAL
CSSUtilities	TokenNameIdentifier
.	TokenNameDOT
getComputedStyle	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
SVGCSSEngine	TokenNameIdentifier
.	TokenNameDOT
STROKE_LINECAP_INDEX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
linecap	TokenNameIdentifier
=	TokenNameEQUAL
convertStrokeLinecap	TokenNameIdentifier
(	TokenNameLPAREN
v	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
v	TokenNameIdentifier
=	TokenNameEQUAL
CSSUtilities	TokenNameIdentifier
.	TokenNameDOT
getComputedStyle	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
SVGCSSEngine	TokenNameIdentifier
.	TokenNameDOT
STROKE_LINEJOIN_INDEX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
linejoin	TokenNameIdentifier
=	TokenNameEQUAL
convertStrokeLinejoin	TokenNameIdentifier
(	TokenNameLPAREN
v	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
v	TokenNameIdentifier
=	TokenNameEQUAL
CSSUtilities	TokenNameIdentifier
.	TokenNameDOT
getComputedStyle	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
SVGCSSEngine	TokenNameIdentifier
.	TokenNameDOT
STROKE_MITERLIMIT_INDEX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
miterlimit	TokenNameIdentifier
=	TokenNameEQUAL
convertStrokeMiterlimit	TokenNameIdentifier
(	TokenNameLPAREN
v	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
v	TokenNameIdentifier
=	TokenNameEQUAL
CSSUtilities	TokenNameIdentifier
.	TokenNameDOT
getComputedStyle	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
SVGCSSEngine	TokenNameIdentifier
.	TokenNameDOT
STROKE_DASHARRAY_INDEX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dasharray	TokenNameIdentifier
=	TokenNameEQUAL
convertStrokeDasharray	TokenNameIdentifier
(	TokenNameLPAREN
v	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
dashoffset	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dasharray	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
v	TokenNameIdentifier
=	TokenNameEQUAL
CSSUtilities	TokenNameIdentifier
.	TokenNameDOT
getComputedStyle	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
SVGCSSEngine	TokenNameIdentifier
.	TokenNameDOT
STROKE_DASHOFFSET_INDEX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dashoffset	TokenNameIdentifier
=	TokenNameEQUAL
v	TokenNameIdentifier
.	TokenNameDOT
getFloatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dashoffset	TokenNameIdentifier
<	TokenNameLESS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
float	TokenNamefloat
dashpatternlength	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
dasharray	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
dashpatternlength	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dasharray	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
dasharray	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
%	TokenNameREMAINDER
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
dashpatternlength	TokenNameIdentifier
*=	TokenNameMULTIPLY_EQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dashpatternlength	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
dashoffset	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
while	TokenNamewhile
(	TokenNameLPAREN
dashoffset	TokenNameIdentifier
<	TokenNameLESS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
dashoffset	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dashpatternlength	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
new	TokenNamenew
BasicStroke	TokenNameIdentifier
(	TokenNameLPAREN
width	TokenNameIdentifier
,	TokenNameCOMMA
linecap	TokenNameIdentifier
,	TokenNameCOMMA
linejoin	TokenNameIdentifier
,	TokenNameCOMMA
miterlimit	TokenNameIdentifier
,	TokenNameCOMMA
dasharray	TokenNameIdentifier
,	TokenNameCOMMA
dashoffset	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
convertStrokeDasharray	TokenNameIdentifier
(	TokenNameLPAREN
Value	TokenNameIdentifier
v	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dasharray	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
v	TokenNameIdentifier
.	TokenNameDOT
getCssValueType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
CSSValue	TokenNameIdentifier
.	TokenNameDOT
CSS_VALUE_LIST	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
length	TokenNameIdentifier
=	TokenNameEQUAL
v	TokenNameIdentifier
.	TokenNameDOT
getLength	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dasharray	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
float	TokenNamefloat
[	TokenNameLBRACKET
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
float	TokenNamefloat
sum	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
dasharray	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
dasharray	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
v	TokenNameIdentifier
.	TokenNameDOT
item	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getFloatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sum	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dasharray	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
sum	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
dasharray	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
dasharray	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
float	TokenNamefloat
convertStrokeMiterlimit	TokenNameIdentifier
(	TokenNameLPAREN
Value	TokenNameIdentifier
v	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
float	TokenNamefloat
miterlimit	TokenNameIdentifier
=	TokenNameEQUAL
v	TokenNameIdentifier
.	TokenNameDOT
getFloatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
(	TokenNameLPAREN
miterlimit	TokenNameIdentifier
<	TokenNameLESS
1.0f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
1.0f	TokenNameFloatingPointLiteral
:	TokenNameCOLON
miterlimit	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
convertStrokeLinecap	TokenNameIdentifier
(	TokenNameLPAREN
Value	TokenNameIdentifier
v	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
v	TokenNameIdentifier
.	TokenNameDOT
getStringValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
s	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
'b'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
BasicStroke	TokenNameIdentifier
.	TokenNameDOT
CAP_BUTT	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
'r'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
BasicStroke	TokenNameIdentifier
.	TokenNameDOT
CAP_ROUND	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
's'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
BasicStroke	TokenNameIdentifier
.	TokenNameDOT
CAP_SQUARE	TokenNameIdentifier
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
"Linecap argument is not an appropriate CSS value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
convertStrokeLinejoin	TokenNameIdentifier
(	TokenNameLPAREN
Value	TokenNameIdentifier
v	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
v	TokenNameIdentifier
.	TokenNameDOT
getStringValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
s	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
'm'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
BasicStroke	TokenNameIdentifier
.	TokenNameDOT
JOIN_MITER	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
'r'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
BasicStroke	TokenNameIdentifier
.	TokenNameDOT
JOIN_ROUND	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
'b'	TokenNameCharacterLiteral
:	TokenNameCOLON
return	TokenNamereturn
BasicStroke	TokenNameIdentifier
.	TokenNameDOT
JOIN_BEVEL	TokenNameIdentifier
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
"Linejoin argument is not an appropriate CSS value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
resolveColorComponent	TokenNameIdentifier
(	TokenNameLPAREN
Value	TokenNameIdentifier
v	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
float	TokenNamefloat
f	TokenNameIdentifier
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
v	TokenNameIdentifier
.	TokenNameDOT
getPrimitiveType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
CSSPrimitiveValue	TokenNameIdentifier
.	TokenNameDOT
CSS_PERCENTAGE	TokenNameIdentifier
:	TokenNameCOLON
f	TokenNameIdentifier
=	TokenNameEQUAL
v	TokenNameIdentifier
.	TokenNameDOT
getFloatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
f	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
f	TokenNameIdentifier
>	TokenNameGREATER
100f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
100f	TokenNameFloatingPointLiteral
:	TokenNameCOLON
(	TokenNameLPAREN
f	TokenNameIdentifier
<	TokenNameLESS
0f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
0f	TokenNameFloatingPointLiteral
:	TokenNameCOLON
f	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
Math	TokenNameIdentifier
.	TokenNameDOT
round	TokenNameIdentifier
(	TokenNameLPAREN
255f	TokenNameFloatingPointLiteral
*	TokenNameMULTIPLY
f	TokenNameIdentifier
/	TokenNameDIVIDE
100f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
CSSPrimitiveValue	TokenNameIdentifier
.	TokenNameDOT
CSS_NUMBER	TokenNameIdentifier
:	TokenNameCOLON
f	TokenNameIdentifier
=	TokenNameEQUAL
v	TokenNameIdentifier
.	TokenNameDOT
getFloatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
f	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
f	TokenNameIdentifier
>	TokenNameGREATER
255f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
255f	TokenNameFloatingPointLiteral
:	TokenNameCOLON
(	TokenNameLPAREN
f	TokenNameIdentifier
<	TokenNameLESS
0f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
0f	TokenNameFloatingPointLiteral
:	TokenNameCOLON
f	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
Math	TokenNameIdentifier
.	TokenNameDOT
round	TokenNameIdentifier
(	TokenNameLPAREN
f	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
"Color component argument is not an appropriate CSS value"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
float	TokenNamefloat
convertOpacity	TokenNameIdentifier
(	TokenNameLPAREN
Value	TokenNameIdentifier
v	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
float	TokenNamefloat
r	TokenNameIdentifier
=	TokenNameEQUAL
v	TokenNameIdentifier
.	TokenNameDOT
getFloatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
(	TokenNameLPAREN
r	TokenNameIdentifier
<	TokenNameLESS
0f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
0f	TokenNameFloatingPointLiteral
:	TokenNameCOLON
(	TokenNameLPAREN
r	TokenNameIdentifier
>	TokenNameGREATER
1.0f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
1.0f	TokenNameFloatingPointLiteral
:	TokenNameCOLON
r	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
