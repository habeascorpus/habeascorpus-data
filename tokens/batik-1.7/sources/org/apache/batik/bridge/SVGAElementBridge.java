package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
bridge	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Cursor	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Iterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
events	TokenNameIdentifier
.	TokenNameDOT
AbstractEvent	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
events	TokenNameIdentifier
.	TokenNameDOT
NodeEventTarget	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
svg	TokenNameIdentifier
.	TokenNameDOT
SVGOMAElement	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
svg	TokenNameIdentifier
.	TokenNameDOT
SVGOMAnimationElement	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
svg	TokenNameIdentifier
.	TokenNameDOT
SVGOMDocument	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
GraphicsNode	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ParsedURL	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
XMLConstants	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Element	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
events	TokenNameIdentifier
.	TokenNameDOT
Event	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
events	TokenNameIdentifier
.	TokenNameDOT
EventListener	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
svg	TokenNameIdentifier
.	TokenNameDOT
SVGAElement	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
SVGAElementBridge	TokenNameIdentifier
extends	TokenNameextends
SVGGElementBridge	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
AnchorListener	TokenNameIdentifier
al	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
CursorMouseOverListener	TokenNameIdentifier
bl	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
CursorMouseOutListener	TokenNameIdentifier
cl	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
SVGAElementBridge	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
SVG_A_TAG	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Bridge	TokenNameIdentifier
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
SVGAElementBridge	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
buildGraphicsNode	TokenNameIdentifier
(	TokenNameLPAREN
BridgeContext	TokenNameIdentifier
ctx	TokenNameIdentifier
,	TokenNameCOMMA
Element	TokenNameIdentifier
e	TokenNameIdentifier
,	TokenNameCOMMA
GraphicsNode	TokenNameIdentifier
node	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
.	TokenNameDOT
buildGraphicsNode	TokenNameIdentifier
(	TokenNameLPAREN
ctx	TokenNameIdentifier
,	TokenNameCOMMA
e	TokenNameIdentifier
,	TokenNameCOMMA
node	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
ctx	TokenNameIdentifier
.	TokenNameDOT
isInteractive	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
NodeEventTarget	TokenNameIdentifier
target	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
NodeEventTarget	TokenNameIdentifier
)	TokenNameRPAREN
e	TokenNameIdentifier
;	TokenNameSEMICOLON
CursorHolder	TokenNameIdentifier
ch	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CursorHolder	TokenNameIdentifier
(	TokenNameLPAREN
CursorManager	TokenNameIdentifier
.	TokenNameDOT
DEFAULT_CURSOR	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
al	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AnchorListener	TokenNameIdentifier
(	TokenNameLPAREN
ctx	TokenNameIdentifier
.	TokenNameDOT
getUserAgent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
ch	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
target	TokenNameIdentifier
.	TokenNameDOT
addEventListenerNS	TokenNameIdentifier
(	TokenNameLPAREN
XMLConstants	TokenNameIdentifier
.	TokenNameDOT
XML_EVENTS_NAMESPACE_URI	TokenNameIdentifier
,	TokenNameCOMMA
SVG_EVENT_CLICK	TokenNameIdentifier
,	TokenNameCOMMA
al	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ctx	TokenNameIdentifier
.	TokenNameDOT
storeEventListenerNS	TokenNameIdentifier
(	TokenNameLPAREN
target	TokenNameIdentifier
,	TokenNameCOMMA
XMLConstants	TokenNameIdentifier
.	TokenNameDOT
XML_EVENTS_NAMESPACE_URI	TokenNameIdentifier
,	TokenNameCOMMA
SVG_EVENT_CLICK	TokenNameIdentifier
,	TokenNameCOMMA
al	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
bl	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CursorMouseOverListener	TokenNameIdentifier
(	TokenNameLPAREN
ctx	TokenNameIdentifier
.	TokenNameDOT
getUserAgent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
ch	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
target	TokenNameIdentifier
.	TokenNameDOT
addEventListenerNS	TokenNameIdentifier
(	TokenNameLPAREN
XMLConstants	TokenNameIdentifier
.	TokenNameDOT
XML_EVENTS_NAMESPACE_URI	TokenNameIdentifier
,	TokenNameCOMMA
SVG_EVENT_MOUSEOVER	TokenNameIdentifier
,	TokenNameCOMMA
bl	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ctx	TokenNameIdentifier
.	TokenNameDOT
storeEventListenerNS	TokenNameIdentifier
(	TokenNameLPAREN
target	TokenNameIdentifier
,	TokenNameCOMMA
XMLConstants	TokenNameIdentifier
.	TokenNameDOT
XML_EVENTS_NAMESPACE_URI	TokenNameIdentifier
,	TokenNameCOMMA
SVG_EVENT_MOUSEOVER	TokenNameIdentifier
,	TokenNameCOMMA
bl	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cl	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CursorMouseOutListener	TokenNameIdentifier
(	TokenNameLPAREN
ctx	TokenNameIdentifier
.	TokenNameDOT
getUserAgent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
ch	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
target	TokenNameIdentifier
.	TokenNameDOT
addEventListenerNS	TokenNameIdentifier
(	TokenNameLPAREN
XMLConstants	TokenNameIdentifier
.	TokenNameDOT
XML_EVENTS_NAMESPACE_URI	TokenNameIdentifier
,	TokenNameCOMMA
SVG_EVENT_MOUSEOUT	TokenNameIdentifier
,	TokenNameCOMMA
cl	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ctx	TokenNameIdentifier
.	TokenNameDOT
storeEventListenerNS	TokenNameIdentifier
(	TokenNameLPAREN
target	TokenNameIdentifier
,	TokenNameCOMMA
XMLConstants	TokenNameIdentifier
.	TokenNameDOT
XML_EVENTS_NAMESPACE_URI	TokenNameIdentifier
,	TokenNameCOMMA
SVG_EVENT_MOUSEOUT	TokenNameIdentifier
,	TokenNameCOMMA
cl	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
dispose	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
NodeEventTarget	TokenNameIdentifier
target	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
NodeEventTarget	TokenNameIdentifier
)	TokenNameRPAREN
e	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
al	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
target	TokenNameIdentifier
.	TokenNameDOT
removeEventListenerNS	TokenNameIdentifier
(	TokenNameLPAREN
XMLConstants	TokenNameIdentifier
.	TokenNameDOT
XML_EVENTS_NAMESPACE_URI	TokenNameIdentifier
,	TokenNameCOMMA
SVG_EVENT_CLICK	TokenNameIdentifier
,	TokenNameCOMMA
al	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
al	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
bl	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
target	TokenNameIdentifier
.	TokenNameDOT
removeEventListenerNS	TokenNameIdentifier
(	TokenNameLPAREN
XMLConstants	TokenNameIdentifier
.	TokenNameDOT
XML_EVENTS_NAMESPACE_URI	TokenNameIdentifier
,	TokenNameCOMMA
SVG_EVENT_MOUSEOVER	TokenNameIdentifier
,	TokenNameCOMMA
bl	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
bl	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
cl	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
target	TokenNameIdentifier
.	TokenNameDOT
removeEventListenerNS	TokenNameIdentifier
(	TokenNameLPAREN
XMLConstants	TokenNameIdentifier
.	TokenNameDOT
XML_EVENTS_NAMESPACE_URI	TokenNameIdentifier
,	TokenNameCOMMA
SVG_EVENT_MOUSEOUT	TokenNameIdentifier
,	TokenNameCOMMA
cl	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cl	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
super	TokenNamesuper
.	TokenNameDOT
dispose	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isComposite	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
CursorHolder	TokenNameIdentifier
{	TokenNameLBRACE
Cursor	TokenNameIdentifier
cursor	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
public	TokenNamepublic
CursorHolder	TokenNameIdentifier
(	TokenNameLPAREN
Cursor	TokenNameIdentifier
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
cursor	TokenNameIdentifier
=	TokenNameEQUAL
c	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
holdCursor	TokenNameIdentifier
(	TokenNameLPAREN
Cursor	TokenNameIdentifier
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
cursor	TokenNameIdentifier
=	TokenNameEQUAL
c	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Cursor	TokenNameIdentifier
getCursor	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
cursor	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
AnchorListener	TokenNameIdentifier
implements	TokenNameimplements
EventListener	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
UserAgent	TokenNameIdentifier
userAgent	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
CursorHolder	TokenNameIdentifier
holder	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
AnchorListener	TokenNameIdentifier
(	TokenNameLPAREN
UserAgent	TokenNameIdentifier
ua	TokenNameIdentifier
,	TokenNameCOMMA
CursorHolder	TokenNameIdentifier
ch	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
userAgent	TokenNameIdentifier
=	TokenNameEQUAL
ua	TokenNameIdentifier
;	TokenNameSEMICOLON
holder	TokenNameIdentifier
=	TokenNameEQUAL
ch	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
handleEvent	TokenNameIdentifier
(	TokenNameLPAREN
Event	TokenNameIdentifier
evt	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
(	TokenNameLPAREN
evt	TokenNameIdentifier
instanceof	TokenNameinstanceof
AbstractEvent	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
final	TokenNamefinal
AbstractEvent	TokenNameIdentifier
ae	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
AbstractEvent	TokenNameIdentifier
)	TokenNameRPAREN
evt	TokenNameIdentifier
;	TokenNameSEMICOLON
List	TokenNameIdentifier
l	TokenNameIdentifier
=	TokenNameEQUAL
ae	TokenNameIdentifier
.	TokenNameDOT
getDefaultActions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
l	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
Iterator	TokenNameIdentifier
i	TokenNameIdentifier
=	TokenNameEQUAL
l	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
i	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
o	TokenNameIdentifier
=	TokenNameEQUAL
i	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
o	TokenNameIdentifier
instanceof	TokenNameinstanceof
AnchorDefaultActionable	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
SVGAElement	TokenNameIdentifier
elt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SVGAElement	TokenNameIdentifier
)	TokenNameRPAREN
evt	TokenNameIdentifier
.	TokenNameDOT
getCurrentTarget	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ae	TokenNameIdentifier
.	TokenNameDOT
addDefaultAction	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
AnchorDefaultActionable	TokenNameIdentifier
(	TokenNameLPAREN
elt	TokenNameIdentifier
,	TokenNameCOMMA
userAgent	TokenNameIdentifier
,	TokenNameCOMMA
holder	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
AnchorDefaultActionable	TokenNameIdentifier
implements	TokenNameimplements
Runnable	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
SVGOMAElement	TokenNameIdentifier
elt	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
UserAgent	TokenNameIdentifier
userAgent	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
CursorHolder	TokenNameIdentifier
holder	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
AnchorDefaultActionable	TokenNameIdentifier
(	TokenNameLPAREN
SVGAElement	TokenNameIdentifier
e	TokenNameIdentifier
,	TokenNameCOMMA
UserAgent	TokenNameIdentifier
ua	TokenNameIdentifier
,	TokenNameCOMMA
CursorHolder	TokenNameIdentifier
ch	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
elt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SVGOMAElement	TokenNameIdentifier
)	TokenNameRPAREN
e	TokenNameIdentifier
;	TokenNameSEMICOLON
userAgent	TokenNameIdentifier
=	TokenNameEQUAL
ua	TokenNameIdentifier
;	TokenNameSEMICOLON
holder	TokenNameIdentifier
=	TokenNameEQUAL
ch	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
run	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
userAgent	TokenNameIdentifier
.	TokenNameDOT
setSVGCursor	TokenNameIdentifier
(	TokenNameLPAREN
holder	TokenNameIdentifier
.	TokenNameDOT
getCursor	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
href	TokenNameIdentifier
=	TokenNameEQUAL
elt	TokenNameIdentifier
.	TokenNameDOT
getHref	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getAnimVal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ParsedURL	TokenNameIdentifier
purl	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ParsedURL	TokenNameIdentifier
(	TokenNameLPAREN
elt	TokenNameIdentifier
.	TokenNameDOT
getBaseURI	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
href	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SVGOMDocument	TokenNameIdentifier
doc	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SVGOMDocument	TokenNameIdentifier
)	TokenNameRPAREN
elt	TokenNameIdentifier
.	TokenNameDOT
getOwnerDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ParsedURL	TokenNameIdentifier
durl	TokenNameIdentifier
=	TokenNameEQUAL
doc	TokenNameIdentifier
.	TokenNameDOT
getParsedURL	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
purl	TokenNameIdentifier
.	TokenNameDOT
sameFile	TokenNameIdentifier
(	TokenNameLPAREN
durl	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
frag	TokenNameIdentifier
=	TokenNameEQUAL
purl	TokenNameIdentifier
.	TokenNameDOT
getRef	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
frag	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
frag	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
Element	TokenNameIdentifier
refElt	TokenNameIdentifier
=	TokenNameEQUAL
doc	TokenNameIdentifier
.	TokenNameDOT
getElementById	TokenNameIdentifier
(	TokenNameLPAREN
frag	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
refElt	TokenNameIdentifier
instanceof	TokenNameinstanceof
SVGOMAnimationElement	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
SVGOMAnimationElement	TokenNameIdentifier
aelt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SVGOMAnimationElement	TokenNameIdentifier
)	TokenNameRPAREN
refElt	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
t	TokenNameIdentifier
=	TokenNameEQUAL
aelt	TokenNameIdentifier
.	TokenNameDOT
getHyperlinkBeginTime	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
Float	TokenNameIdentifier
.	TokenNameDOT
isNaN	TokenNameIdentifier
(	TokenNameLPAREN
t	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
aelt	TokenNameIdentifier
.	TokenNameDOT
beginElement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
doc	TokenNameIdentifier
.	TokenNameDOT
getRootElement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
setCurrentTime	TokenNameIdentifier
(	TokenNameLPAREN
t	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
userAgent	TokenNameIdentifier
.	TokenNameDOT
openLink	TokenNameIdentifier
(	TokenNameLPAREN
elt	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
CursorMouseOverListener	TokenNameIdentifier
implements	TokenNameimplements
EventListener	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
UserAgent	TokenNameIdentifier
userAgent	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
CursorHolder	TokenNameIdentifier
holder	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
CursorMouseOverListener	TokenNameIdentifier
(	TokenNameLPAREN
UserAgent	TokenNameIdentifier
ua	TokenNameIdentifier
,	TokenNameCOMMA
CursorHolder	TokenNameIdentifier
ch	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
userAgent	TokenNameIdentifier
=	TokenNameEQUAL
ua	TokenNameIdentifier
;	TokenNameSEMICOLON
holder	TokenNameIdentifier
=	TokenNameEQUAL
ch	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
handleEvent	TokenNameIdentifier
(	TokenNameLPAREN
Event	TokenNameIdentifier
evt	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
(	TokenNameLPAREN
evt	TokenNameIdentifier
instanceof	TokenNameinstanceof
AbstractEvent	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
final	TokenNamefinal
AbstractEvent	TokenNameIdentifier
ae	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
AbstractEvent	TokenNameIdentifier
)	TokenNameRPAREN
evt	TokenNameIdentifier
;	TokenNameSEMICOLON
List	TokenNameIdentifier
l	TokenNameIdentifier
=	TokenNameEQUAL
ae	TokenNameIdentifier
.	TokenNameDOT
getDefaultActions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
l	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
Iterator	TokenNameIdentifier
i	TokenNameIdentifier
=	TokenNameEQUAL
l	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
i	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
o	TokenNameIdentifier
=	TokenNameEQUAL
i	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
o	TokenNameIdentifier
instanceof	TokenNameinstanceof
MouseOverDefaultActionable	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
Element	TokenNameIdentifier
target	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Element	TokenNameIdentifier
)	TokenNameRPAREN
ae	TokenNameIdentifier
.	TokenNameDOT
getTarget	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SVGAElement	TokenNameIdentifier
elt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SVGAElement	TokenNameIdentifier
)	TokenNameRPAREN
ae	TokenNameIdentifier
.	TokenNameDOT
getCurrentTarget	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ae	TokenNameIdentifier
.	TokenNameDOT
addDefaultAction	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
MouseOverDefaultActionable	TokenNameIdentifier
(	TokenNameLPAREN
target	TokenNameIdentifier
,	TokenNameCOMMA
elt	TokenNameIdentifier
,	TokenNameCOMMA
userAgent	TokenNameIdentifier
,	TokenNameCOMMA
holder	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
MouseOverDefaultActionable	TokenNameIdentifier
implements	TokenNameimplements
Runnable	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
Element	TokenNameIdentifier
target	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
SVGAElement	TokenNameIdentifier
elt	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
UserAgent	TokenNameIdentifier
userAgent	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
CursorHolder	TokenNameIdentifier
holder	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
MouseOverDefaultActionable	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
t	TokenNameIdentifier
,	TokenNameCOMMA
SVGAElement	TokenNameIdentifier
e	TokenNameIdentifier
,	TokenNameCOMMA
UserAgent	TokenNameIdentifier
ua	TokenNameIdentifier
,	TokenNameCOMMA
CursorHolder	TokenNameIdentifier
ch	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
target	TokenNameIdentifier
=	TokenNameEQUAL
t	TokenNameIdentifier
;	TokenNameSEMICOLON
elt	TokenNameIdentifier
=	TokenNameEQUAL
e	TokenNameIdentifier
;	TokenNameSEMICOLON
userAgent	TokenNameIdentifier
=	TokenNameEQUAL
ua	TokenNameIdentifier
;	TokenNameSEMICOLON
holder	TokenNameIdentifier
=	TokenNameEQUAL
ch	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
run	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
CSSUtilities	TokenNameIdentifier
.	TokenNameDOT
isAutoCursor	TokenNameIdentifier
(	TokenNameLPAREN
target	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
holder	TokenNameIdentifier
.	TokenNameDOT
holdCursor	TokenNameIdentifier
(	TokenNameLPAREN
CursorManager	TokenNameIdentifier
.	TokenNameDOT
DEFAULT_CURSOR	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
userAgent	TokenNameIdentifier
.	TokenNameDOT
setSVGCursor	TokenNameIdentifier
(	TokenNameLPAREN
CursorManager	TokenNameIdentifier
.	TokenNameDOT
ANCHOR_CURSOR	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
elt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
href	TokenNameIdentifier
=	TokenNameEQUAL
elt	TokenNameIdentifier
.	TokenNameDOT
getHref	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getAnimVal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
userAgent	TokenNameIdentifier
.	TokenNameDOT
displayMessage	TokenNameIdentifier
(	TokenNameLPAREN
href	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
CursorMouseOutListener	TokenNameIdentifier
implements	TokenNameimplements
EventListener	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
UserAgent	TokenNameIdentifier
userAgent	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
CursorHolder	TokenNameIdentifier
holder	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
CursorMouseOutListener	TokenNameIdentifier
(	TokenNameLPAREN
UserAgent	TokenNameIdentifier
ua	TokenNameIdentifier
,	TokenNameCOMMA
CursorHolder	TokenNameIdentifier
ch	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
userAgent	TokenNameIdentifier
=	TokenNameEQUAL
ua	TokenNameIdentifier
;	TokenNameSEMICOLON
holder	TokenNameIdentifier
=	TokenNameEQUAL
ch	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
handleEvent	TokenNameIdentifier
(	TokenNameLPAREN
Event	TokenNameIdentifier
evt	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
(	TokenNameLPAREN
evt	TokenNameIdentifier
instanceof	TokenNameinstanceof
AbstractEvent	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
final	TokenNamefinal
AbstractEvent	TokenNameIdentifier
ae	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
AbstractEvent	TokenNameIdentifier
)	TokenNameRPAREN
evt	TokenNameIdentifier
;	TokenNameSEMICOLON
List	TokenNameIdentifier
l	TokenNameIdentifier
=	TokenNameEQUAL
ae	TokenNameIdentifier
.	TokenNameDOT
getDefaultActions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
l	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
Iterator	TokenNameIdentifier
i	TokenNameIdentifier
=	TokenNameEQUAL
l	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
i	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
o	TokenNameIdentifier
=	TokenNameEQUAL
i	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
o	TokenNameIdentifier
instanceof	TokenNameinstanceof
MouseOutDefaultActionable	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
SVGAElement	TokenNameIdentifier
elt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SVGAElement	TokenNameIdentifier
)	TokenNameRPAREN
evt	TokenNameIdentifier
.	TokenNameDOT
getCurrentTarget	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ae	TokenNameIdentifier
.	TokenNameDOT
addDefaultAction	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
MouseOutDefaultActionable	TokenNameIdentifier
(	TokenNameLPAREN
elt	TokenNameIdentifier
,	TokenNameCOMMA
userAgent	TokenNameIdentifier
,	TokenNameCOMMA
holder	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
MouseOutDefaultActionable	TokenNameIdentifier
implements	TokenNameimplements
Runnable	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
SVGAElement	TokenNameIdentifier
elt	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
UserAgent	TokenNameIdentifier
userAgent	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
CursorHolder	TokenNameIdentifier
holder	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
MouseOutDefaultActionable	TokenNameIdentifier
(	TokenNameLPAREN
SVGAElement	TokenNameIdentifier
e	TokenNameIdentifier
,	TokenNameCOMMA
UserAgent	TokenNameIdentifier
ua	TokenNameIdentifier
,	TokenNameCOMMA
CursorHolder	TokenNameIdentifier
ch	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
elt	TokenNameIdentifier
=	TokenNameEQUAL
e	TokenNameIdentifier
;	TokenNameSEMICOLON
userAgent	TokenNameIdentifier
=	TokenNameEQUAL
ua	TokenNameIdentifier
;	TokenNameSEMICOLON
holder	TokenNameIdentifier
=	TokenNameEQUAL
ch	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
run	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
elt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
userAgent	TokenNameIdentifier
.	TokenNameDOT
displayMessage	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
