package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
ext	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Color	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Rectangle	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
RenderingHints	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
geom	TokenNameIdentifier
.	TokenNameDOT
AffineTransform	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
geom	TokenNameIdentifier
.	TokenNameDOT
NoninvertibleTransformException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
geom	TokenNameIdentifier
.	TokenNameDOT
Rectangle2D	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
image	TokenNameIdentifier
.	TokenNameDOT
ColorModel	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
class	TokenNameclass
RadialGradientPaintContext	TokenNameIdentifier
extends	TokenNameextends
MultipleGradientPaintContext	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
boolean	TokenNameboolean
isSimpleFocus	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
private	TokenNameprivate
boolean	TokenNameboolean
isNonCyclic	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
private	TokenNameprivate
float	TokenNamefloat
radius	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
float	TokenNamefloat
centerX	TokenNameIdentifier
,	TokenNameCOMMA
centerY	TokenNameIdentifier
,	TokenNameCOMMA
focusX	TokenNameIdentifier
,	TokenNameCOMMA
focusY	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
float	TokenNamefloat
radiusSq	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
float	TokenNamefloat
constA	TokenNameIdentifier
,	TokenNameCOMMA
constB	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
float	TokenNamefloat
trivial	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
FIXED_POINT_IMPL	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
DEFAULT_IMPL	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
ANTI_ALIAS_IMPL	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
fillMethod	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
float	TokenNamefloat
SCALEBACK	TokenNameIdentifier
=	TokenNameEQUAL
0.999f	TokenNameFloatingPointLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
RadialGradientPaintContext	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
cm	TokenNameIdentifier
,	TokenNameCOMMA
Rectangle	TokenNameIdentifier
deviceBounds	TokenNameIdentifier
,	TokenNameCOMMA
Rectangle2D	TokenNameIdentifier
userBounds	TokenNameIdentifier
,	TokenNameCOMMA
AffineTransform	TokenNameIdentifier
t	TokenNameIdentifier
,	TokenNameCOMMA
RenderingHints	TokenNameIdentifier
hints	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
cx	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
cy	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
r	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
fx	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
fy	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
fractions	TokenNameIdentifier
,	TokenNameCOMMA
Color	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
colors	TokenNameIdentifier
,	TokenNameCOMMA
MultipleGradientPaint	TokenNameIdentifier
.	TokenNameDOT
CycleMethodEnum	TokenNameIdentifier
cycleMethod	TokenNameIdentifier
,	TokenNameCOMMA
MultipleGradientPaint	TokenNameIdentifier
.	TokenNameDOT
ColorSpaceEnum	TokenNameIdentifier
colorSpace	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
NoninvertibleTransformException	TokenNameIdentifier
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
cm	TokenNameIdentifier
,	TokenNameCOMMA
deviceBounds	TokenNameIdentifier
,	TokenNameCOMMA
userBounds	TokenNameIdentifier
,	TokenNameCOMMA
t	TokenNameIdentifier
,	TokenNameCOMMA
hints	TokenNameIdentifier
,	TokenNameCOMMA
fractions	TokenNameIdentifier
,	TokenNameCOMMA
colors	TokenNameIdentifier
,	TokenNameCOMMA
cycleMethod	TokenNameIdentifier
,	TokenNameCOMMA
colorSpace	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
centerX	TokenNameIdentifier
=	TokenNameEQUAL
cx	TokenNameIdentifier
;	TokenNameSEMICOLON
centerY	TokenNameIdentifier
=	TokenNameEQUAL
cy	TokenNameIdentifier
;	TokenNameSEMICOLON
focusX	TokenNameIdentifier
=	TokenNameEQUAL
fx	TokenNameIdentifier
;	TokenNameSEMICOLON
focusY	TokenNameIdentifier
=	TokenNameEQUAL
fy	TokenNameIdentifier
;	TokenNameSEMICOLON
radius	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
isSimpleFocus	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
focusX	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
centerX	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
focusY	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
centerY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
isNonCyclic	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
cycleMethod	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
RadialGradientPaint	TokenNameIdentifier
.	TokenNameDOT
NO_CYCLE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
radiusSq	TokenNameIdentifier
=	TokenNameEQUAL
radius	TokenNameIdentifier
*	TokenNameMULTIPLY
radius	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
dX	TokenNameIdentifier
=	TokenNameEQUAL
focusX	TokenNameIdentifier
-	TokenNameMINUS
centerX	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
dY	TokenNameIdentifier
=	TokenNameEQUAL
focusY	TokenNameIdentifier
-	TokenNameMINUS
centerY	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
dist	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
sqrt	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
dX	TokenNameIdentifier
*	TokenNameMULTIPLY
dX	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
dY	TokenNameIdentifier
*	TokenNameMULTIPLY
dY	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dist	TokenNameIdentifier
>	TokenNameGREATER
radius	TokenNameIdentifier
*	TokenNameMULTIPLY
SCALEBACK	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
double	TokenNamedouble
angle	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
atan2	TokenNameIdentifier
(	TokenNameLPAREN
dY	TokenNameIdentifier
,	TokenNameCOMMA
dX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
focusX	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
SCALEBACK	TokenNameIdentifier
*	TokenNameMULTIPLY
radius	TokenNameIdentifier
*	TokenNameMULTIPLY
Math	TokenNameIdentifier
.	TokenNameDOT
cos	TokenNameIdentifier
(	TokenNameLPAREN
angle	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
centerX	TokenNameIdentifier
;	TokenNameSEMICOLON
focusY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
SCALEBACK	TokenNameIdentifier
*	TokenNameMULTIPLY
radius	TokenNameIdentifier
*	TokenNameMULTIPLY
Math	TokenNameIdentifier
.	TokenNameDOT
sin	TokenNameIdentifier
(	TokenNameLPAREN
angle	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
centerY	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
dX	TokenNameIdentifier
=	TokenNameEQUAL
focusX	TokenNameIdentifier
-	TokenNameMINUS
centerX	TokenNameIdentifier
;	TokenNameSEMICOLON
trivial	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
Math	TokenNameIdentifier
.	TokenNameDOT
sqrt	TokenNameIdentifier
(	TokenNameLPAREN
radiusSq	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
dX	TokenNameIdentifier
*	TokenNameMULTIPLY
dX	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
constA	TokenNameIdentifier
=	TokenNameEQUAL
a02	TokenNameIdentifier
-	TokenNameMINUS
centerX	TokenNameIdentifier
;	TokenNameSEMICOLON
constB	TokenNameIdentifier
=	TokenNameEQUAL
a12	TokenNameIdentifier
-	TokenNameMINUS
centerY	TokenNameIdentifier
;	TokenNameSEMICOLON
Object	TokenNameIdentifier
colorRend	TokenNameIdentifier
=	TokenNameEQUAL
hints	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
RenderingHints	TokenNameIdentifier
.	TokenNameDOT
KEY_COLOR_RENDERING	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Object	TokenNameIdentifier
rend	TokenNameIdentifier
=	TokenNameEQUAL
hints	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
RenderingHints	TokenNameIdentifier
.	TokenNameDOT
KEY_RENDERING	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fillMethod	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
rend	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
RenderingHints	TokenNameIdentifier
.	TokenNameDOT
VALUE_RENDER_QUALITY	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
colorRend	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
RenderingHints	TokenNameIdentifier
.	TokenNameDOT
VALUE_COLOR_RENDER_QUALITY	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
fillMethod	TokenNameIdentifier
=	TokenNameEQUAL
ANTI_ALIAS_IMPL	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
rend	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
RenderingHints	TokenNameIdentifier
.	TokenNameDOT
VALUE_RENDER_SPEED	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
colorRend	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
RenderingHints	TokenNameIdentifier
.	TokenNameDOT
VALUE_COLOR_RENDER_SPEED	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
fillMethod	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_IMPL	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
fillMethod	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
fillMethod	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_IMPL	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
false	TokenNamefalse
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
hasDiscontinuity	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fillMethod	TokenNameIdentifier
=	TokenNameEQUAL
ANTI_ALIAS_IMPL	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
fillMethod	TokenNameIdentifier
=	TokenNameEQUAL
DEFAULT_IMPL	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
fillMethod	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
DEFAULT_IMPL	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
isSimpleFocus	TokenNameIdentifier
&&	TokenNameAND_AND
isNonCyclic	TokenNameIdentifier
&&	TokenNameAND_AND
isSimpleLookup	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
calculateFixedPointSqrtLookupTable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fillMethod	TokenNameIdentifier
=	TokenNameEQUAL
FIXED_POINT_IMPL	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
fillRaster	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
pixels	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
off	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
adjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
x	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
y	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
w	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
h	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
fillMethod	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
FIXED_POINT_IMPL	TokenNameIdentifier
:	TokenNameCOLON
fixedPointSimplestCaseNonCyclicFillRaster	TokenNameIdentifier
(	TokenNameLPAREN
pixels	TokenNameIdentifier
,	TokenNameCOMMA
off	TokenNameIdentifier
,	TokenNameCOMMA
adjust	TokenNameIdentifier
,	TokenNameCOMMA
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
h	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
ANTI_ALIAS_IMPL	TokenNameIdentifier
:	TokenNameCOLON
antiAliasFillRaster	TokenNameIdentifier
(	TokenNameLPAREN
pixels	TokenNameIdentifier
,	TokenNameCOMMA
off	TokenNameIdentifier
,	TokenNameCOMMA
adjust	TokenNameIdentifier
,	TokenNameCOMMA
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
h	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
DEFAULT_IMPL	TokenNameIdentifier
:	TokenNameCOLON
default	TokenNamedefault
:	TokenNameCOLON
cyclicCircularGradientFillRaster	TokenNameIdentifier
(	TokenNameLPAREN
pixels	TokenNameIdentifier
,	TokenNameCOMMA
off	TokenNameIdentifier
,	TokenNameCOMMA
adjust	TokenNameIdentifier
,	TokenNameCOMMA
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
h	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
fixedPointSimplestCaseNonCyclicFillRaster	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
pixels	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
off	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
adjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
x	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
y	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
w	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
h	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
float	TokenNamefloat
iSq	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
float	TokenNamefloat
indexFactor	TokenNameIdentifier
=	TokenNameEQUAL
fastGradientArraySize	TokenNameIdentifier
/	TokenNameDIVIDE
radius	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
float	TokenNamefloat
constX	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
a00	TokenNameIdentifier
*	TokenNameMULTIPLY
x	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
a01	TokenNameIdentifier
*	TokenNameMULTIPLY
y	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
constA	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
float	TokenNamefloat
constY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
a10	TokenNameIdentifier
*	TokenNameMULTIPLY
x	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
a11	TokenNameIdentifier
*	TokenNameMULTIPLY
y	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
constB	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
float	TokenNamefloat
deltaX	TokenNameIdentifier
=	TokenNameEQUAL
indexFactor	TokenNameIdentifier
*	TokenNameMULTIPLY
a00	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
float	TokenNamefloat
deltaY	TokenNameIdentifier
=	TokenNameEQUAL
indexFactor	TokenNameIdentifier
*	TokenNameMULTIPLY
a10	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
dX	TokenNameIdentifier
,	TokenNameCOMMA
dY	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
fixedArraySizeSq	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
fastGradientArraySize	TokenNameIdentifier
*	TokenNameMULTIPLY
fastGradientArraySize	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
g	TokenNameIdentifier
,	TokenNameCOMMA
gDelta	TokenNameIdentifier
,	TokenNameCOMMA
gDeltaDelta	TokenNameIdentifier
,	TokenNameCOMMA
temp	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
gIndex	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
iSqInt	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
end	TokenNameIdentifier
,	TokenNameCOMMA
j	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
indexer	TokenNameIdentifier
=	TokenNameEQUAL
off	TokenNameIdentifier
;	TokenNameSEMICOLON
temp	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
deltaX	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaX	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
deltaY	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaY	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
gDeltaDelta	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
temp	TokenNameIdentifier
*	TokenNameMULTIPLY
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
temp	TokenNameIdentifier
>	TokenNameGREATER
fixedArraySizeSq	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
val	TokenNameIdentifier
=	TokenNameEQUAL
gradientOverflow	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
j	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
j	TokenNameIdentifier
<	TokenNameLESS
h	TokenNameIdentifier
;	TokenNameSEMICOLON
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
end	TokenNameIdentifier
=	TokenNameEQUAL
indexer	TokenNameIdentifier
+	TokenNamePLUS
w	TokenNameIdentifier
;	TokenNameSEMICOLON
indexer	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
;	TokenNameSEMICOLON
indexer	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
pixels	TokenNameIdentifier
[	TokenNameLBRACKET
indexer	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
val	TokenNameIdentifier
;	TokenNameSEMICOLON
indexer	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
adjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
j	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
j	TokenNameIdentifier
<	TokenNameLESS
h	TokenNameIdentifier
;	TokenNameSEMICOLON
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
dX	TokenNameIdentifier
=	TokenNameEQUAL
indexFactor	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
(	TokenNameLPAREN
a01	TokenNameIdentifier
*	TokenNameMULTIPLY
j	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
constX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dY	TokenNameIdentifier
=	TokenNameEQUAL
indexFactor	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
(	TokenNameLPAREN
a11	TokenNameIdentifier
*	TokenNameMULTIPLY
j	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
constY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
g	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
dY	TokenNameIdentifier
*	TokenNameMULTIPLY
dY	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
dX	TokenNameIdentifier
*	TokenNameMULTIPLY
dX	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
gDelta	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
deltaY	TokenNameIdentifier
*	TokenNameMULTIPLY
dY	TokenNameIdentifier
+	TokenNamePLUS
deltaX	TokenNameIdentifier
*	TokenNameMULTIPLY
dX	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
2	TokenNameIntegerLiteral
+	TokenNamePLUS
temp	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
end	TokenNameIdentifier
=	TokenNameEQUAL
indexer	TokenNameIdentifier
+	TokenNamePLUS
w	TokenNameIdentifier
;	TokenNameSEMICOLON
indexer	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
;	TokenNameSEMICOLON
indexer	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
g	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
fixedArraySizeSq	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
pixels	TokenNameIdentifier
[	TokenNameLBRACKET
indexer	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
gradientOverflow	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
iSq	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
g	TokenNameIdentifier
*	TokenNameMULTIPLY
invSqStepFloat	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
iSqInt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
iSq	TokenNameIdentifier
;	TokenNameSEMICOLON
iSq	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
iSqInt	TokenNameIdentifier
;	TokenNameSEMICOLON
gIndex	TokenNameIdentifier
=	TokenNameEQUAL
sqrtLutFixed	TokenNameIdentifier
[	TokenNameLBRACKET
iSqInt	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
gIndex	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
(	TokenNameLPAREN
iSq	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
sqrtLutFixed	TokenNameIdentifier
[	TokenNameLBRACKET
iSqInt	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
-	TokenNameMINUS
gIndex	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pixels	TokenNameIdentifier
[	TokenNameLBRACKET
indexer	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
gradient	TokenNameIdentifier
[	TokenNameLBRACKET
gIndex	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
g	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
gDelta	TokenNameIdentifier
;	TokenNameSEMICOLON
gDelta	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
gDeltaDelta	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
indexer	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
adjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
float	TokenNamefloat
invSqStepFloat	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MAX_PRECISION	TokenNameIdentifier
=	TokenNameEQUAL
256	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
sqrtLutFixed	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
MAX_PRECISION	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
private	TokenNameprivate
void	TokenNamevoid
calculateFixedPointSqrtLookupTable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
float	TokenNamefloat
sqStepFloat	TokenNameIdentifier
;	TokenNameSEMICOLON
sqStepFloat	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
fastGradientArraySize	TokenNameIdentifier
*	TokenNameMULTIPLY
fastGradientArraySize	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
(	TokenNameLPAREN
MAX_PRECISION	TokenNameIdentifier
-	TokenNameMINUS
2.0f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
workTbl	TokenNameIdentifier
=	TokenNameEQUAL
sqrtLutFixed	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
i	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
MAX_PRECISION	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
workTbl	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
Math	TokenNameIdentifier
.	TokenNameDOT
sqrt	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
*	TokenNameMULTIPLY
sqStepFloat	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
workTbl	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
workTbl	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
invSqStepFloat	TokenNameIdentifier
=	TokenNameEQUAL
1.0f	TokenNameFloatingPointLiteral
/	TokenNameDIVIDE
sqStepFloat	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
cyclicCircularGradientFillRaster	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
pixels	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
off	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
adjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
x	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
y	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
w	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
h	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
double	TokenNamedouble
constC	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
(	TokenNameLPAREN
radiusSq	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
centerX	TokenNameIdentifier
*	TokenNameMULTIPLY
centerX	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
centerY	TokenNameIdentifier
*	TokenNameMULTIPLY
centerY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
A	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
B	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
C	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
slope	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
yintcpt	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
solutionX	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
solutionY	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
float	TokenNamefloat
constX	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
a00	TokenNameIdentifier
*	TokenNameMULTIPLY
x	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
a01	TokenNameIdentifier
*	TokenNameMULTIPLY
y	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
a02	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
float	TokenNamefloat
constY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
a10	TokenNameIdentifier
*	TokenNameMULTIPLY
x	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
a11	TokenNameIdentifier
*	TokenNameMULTIPLY
y	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
a12	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
float	TokenNamefloat
precalc2	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
centerY	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
float	TokenNamefloat
precalc3	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
centerX	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
X	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
Y	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
g	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
det	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
currentToFocusSq	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
intersectToFocusSq	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
deltaXSq	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
indexer	TokenNameIdentifier
=	TokenNameEQUAL
off	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
i	TokenNameIdentifier
,	TokenNameCOMMA
j	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
pixInc	TokenNameIdentifier
=	TokenNameEQUAL
w	TokenNameIdentifier
+	TokenNamePLUS
adjust	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
j	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
j	TokenNameIdentifier
<	TokenNameLESS
h	TokenNameIdentifier
;	TokenNameSEMICOLON
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
X	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
a01	TokenNameIdentifier
*	TokenNameMULTIPLY
j	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
constX	TokenNameIdentifier
;	TokenNameSEMICOLON
Y	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
a11	TokenNameIdentifier
*	TokenNameMULTIPLY
j	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
constY	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
w	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
X	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
)	TokenNameRPAREN
>	TokenNameGREATER
-	TokenNameMINUS
0.000001f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
(	TokenNameLPAREN
X	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
)	TokenNameRPAREN
<	TokenNameLESS
0.000001f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
solutionX	TokenNameIdentifier
=	TokenNameEQUAL
focusX	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionY	TokenNameIdentifier
=	TokenNameEQUAL
centerY	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionY	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
Y	TokenNameIdentifier
>	TokenNameGREATER
focusY	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
trivial	TokenNameIdentifier
:	TokenNameCOLON
-	TokenNameMINUS
trivial	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
slope	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Y	TokenNameIdentifier
-	TokenNameMINUS
focusY	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
(	TokenNameLPAREN
X	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
yintcpt	TokenNameIdentifier
=	TokenNameEQUAL
Y	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
X	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
A	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
slope	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
B	TokenNameIdentifier
=	TokenNameEQUAL
precalc3	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
centerY	TokenNameIdentifier
-	TokenNameMINUS
yintcpt	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
C	TokenNameIdentifier
=	TokenNameEQUAL
constC	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
yintcpt	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
yintcpt	TokenNameIdentifier
-	TokenNameMINUS
precalc2	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
det	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
Math	TokenNameIdentifier
.	TokenNameDOT
sqrt	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
B	TokenNameIdentifier
*	TokenNameMULTIPLY
B	TokenNameIdentifier
)	TokenNameRPAREN
-	TokenNameMINUS
(	TokenNameLPAREN
4	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
A	TokenNameIdentifier
*	TokenNameMULTIPLY
C	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
solutionX	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
B	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionX	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
X	TokenNameIdentifier
<	TokenNameLESS
focusX	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
-	TokenNameMINUS
det	TokenNameIdentifier
:	TokenNameCOLON
det	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionX	TokenNameIdentifier
=	TokenNameEQUAL
solutionX	TokenNameIdentifier
/	TokenNameDIVIDE
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
A	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
solutionY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
solutionX	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
yintcpt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
solutionX	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaXSq	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
solutionY	TokenNameIdentifier
-	TokenNameMINUS
focusY	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaYSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
intersectToFocusSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
+	TokenNamePLUS
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
X	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaXSq	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
Y	TokenNameIdentifier
-	TokenNameMINUS
focusY	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaYSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
currentToFocusSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
+	TokenNamePLUS
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
g	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
Math	TokenNameIdentifier
.	TokenNameDOT
sqrt	TokenNameIdentifier
(	TokenNameLPAREN
currentToFocusSq	TokenNameIdentifier
/	TokenNameDIVIDE
intersectToFocusSq	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pixels	TokenNameIdentifier
[	TokenNameLBRACKET
indexer	TokenNameIdentifier
+	TokenNamePLUS
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
indexIntoGradientsArrays	TokenNameIdentifier
(	TokenNameLPAREN
g	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
X	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
a00	TokenNameIdentifier
;	TokenNameSEMICOLON
Y	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
a10	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
indexer	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
pixInc	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
antiAliasFillRaster	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
pixels	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
off	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
adjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
x	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
y	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
w	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
h	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
double	TokenNamedouble
constC	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
(	TokenNameLPAREN
radiusSq	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
centerX	TokenNameIdentifier
*	TokenNameMULTIPLY
centerX	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
centerY	TokenNameIdentifier
*	TokenNameMULTIPLY
centerY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
float	TokenNamefloat
precalc2	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
centerY	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
float	TokenNamefloat
precalc3	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
centerX	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
float	TokenNamefloat
constX	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
a00	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
x	TokenNameIdentifier
-	TokenNameMINUS
.5f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
a01	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
y	TokenNameIdentifier
+	TokenNamePLUS
.5f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
a02	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
float	TokenNamefloat
constY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
a10	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
x	TokenNameIdentifier
-	TokenNameMINUS
.5f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
a11	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
y	TokenNameIdentifier
+	TokenNamePLUS
.5f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
a12	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
X	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
Y	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
i	TokenNameIdentifier
,	TokenNameCOMMA
j	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
indexer	TokenNameIdentifier
=	TokenNameEQUAL
off	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
prevGs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
double	TokenNamedouble
[	TokenNameLBRACKET
w	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
double	TokenNamedouble
deltaXSq	TokenNameIdentifier
,	TokenNameCOMMA
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
solutionX	TokenNameIdentifier
,	TokenNameCOMMA
solutionY	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
slope	TokenNameIdentifier
,	TokenNameCOMMA
yintcpt	TokenNameIdentifier
,	TokenNameCOMMA
A	TokenNameIdentifier
,	TokenNameCOMMA
B	TokenNameIdentifier
,	TokenNameCOMMA
C	TokenNameIdentifier
,	TokenNameCOMMA
det	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
intersectToFocusSq	TokenNameIdentifier
,	TokenNameCOMMA
currentToFocusSq	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
g00	TokenNameIdentifier
,	TokenNameCOMMA
g01	TokenNameIdentifier
,	TokenNameCOMMA
g10	TokenNameIdentifier
,	TokenNameCOMMA
g11	TokenNameIdentifier
;	TokenNameSEMICOLON
X	TokenNameIdentifier
=	TokenNameEQUAL
constX	TokenNameIdentifier
-	TokenNameMINUS
a01	TokenNameIdentifier
;	TokenNameSEMICOLON
Y	TokenNameIdentifier
=	TokenNameEQUAL
constY	TokenNameIdentifier
-	TokenNameMINUS
a11	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
w	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
float	TokenNamefloat
dx	TokenNameIdentifier
=	TokenNameEQUAL
X	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
dx	TokenNameIdentifier
>	TokenNameGREATER
-	TokenNameMINUS
0.000001f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
dx	TokenNameIdentifier
<	TokenNameLESS
0.000001f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
solutionX	TokenNameIdentifier
=	TokenNameEQUAL
focusX	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionY	TokenNameIdentifier
=	TokenNameEQUAL
centerY	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionY	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
Y	TokenNameIdentifier
>	TokenNameGREATER
focusY	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
trivial	TokenNameIdentifier
:	TokenNameCOLON
-	TokenNameMINUS
trivial	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
slope	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Y	TokenNameIdentifier
-	TokenNameMINUS
focusY	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
(	TokenNameLPAREN
X	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
yintcpt	TokenNameIdentifier
=	TokenNameEQUAL
Y	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
X	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
A	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
slope	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
B	TokenNameIdentifier
=	TokenNameEQUAL
precalc3	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
centerY	TokenNameIdentifier
-	TokenNameMINUS
yintcpt	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
C	TokenNameIdentifier
=	TokenNameEQUAL
constC	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
yintcpt	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
yintcpt	TokenNameIdentifier
-	TokenNameMINUS
precalc2	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
det	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
sqrt	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
B	TokenNameIdentifier
*	TokenNameMULTIPLY
B	TokenNameIdentifier
)	TokenNameRPAREN
-	TokenNameMINUS
(	TokenNameLPAREN
4	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
A	TokenNameIdentifier
*	TokenNameMULTIPLY
C	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
solutionX	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
B	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionX	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
X	TokenNameIdentifier
<	TokenNameLESS
focusX	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
-	TokenNameMINUS
det	TokenNameIdentifier
:	TokenNameCOLON
det	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionX	TokenNameIdentifier
=	TokenNameEQUAL
solutionX	TokenNameIdentifier
/	TokenNameDIVIDE
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
A	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
solutionY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
solutionX	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
yintcpt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
solutionX	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaXSq	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
solutionY	TokenNameIdentifier
-	TokenNameMINUS
focusY	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaYSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
intersectToFocusSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
+	TokenNamePLUS
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
X	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaXSq	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
Y	TokenNameIdentifier
-	TokenNameMINUS
focusY	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaYSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
currentToFocusSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
+	TokenNamePLUS
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
prevGs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
sqrt	TokenNameIdentifier
(	TokenNameLPAREN
currentToFocusSq	TokenNameIdentifier
/	TokenNameDIVIDE
intersectToFocusSq	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
X	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
a00	TokenNameIdentifier
;	TokenNameSEMICOLON
Y	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
a10	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
j	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
j	TokenNameIdentifier
<	TokenNameLESS
h	TokenNameIdentifier
;	TokenNameSEMICOLON
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
X	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
a01	TokenNameIdentifier
*	TokenNameMULTIPLY
j	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
constX	TokenNameIdentifier
;	TokenNameSEMICOLON
Y	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
a11	TokenNameIdentifier
*	TokenNameMULTIPLY
j	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
constY	TokenNameIdentifier
;	TokenNameSEMICOLON
g10	TokenNameIdentifier
=	TokenNameEQUAL
prevGs	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
float	TokenNamefloat
dx	TokenNameIdentifier
=	TokenNameEQUAL
X	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
dx	TokenNameIdentifier
>	TokenNameGREATER
-	TokenNameMINUS
0.000001f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
dx	TokenNameIdentifier
<	TokenNameLESS
0.000001f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
solutionX	TokenNameIdentifier
=	TokenNameEQUAL
focusX	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionY	TokenNameIdentifier
=	TokenNameEQUAL
centerY	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionY	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
Y	TokenNameIdentifier
>	TokenNameGREATER
focusY	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
trivial	TokenNameIdentifier
:	TokenNameCOLON
-	TokenNameMINUS
trivial	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
slope	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Y	TokenNameIdentifier
-	TokenNameMINUS
focusY	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
(	TokenNameLPAREN
X	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
yintcpt	TokenNameIdentifier
=	TokenNameEQUAL
Y	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
X	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
A	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
slope	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
B	TokenNameIdentifier
=	TokenNameEQUAL
precalc3	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
centerY	TokenNameIdentifier
-	TokenNameMINUS
yintcpt	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
C	TokenNameIdentifier
=	TokenNameEQUAL
constC	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
yintcpt	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
yintcpt	TokenNameIdentifier
-	TokenNameMINUS
precalc2	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
det	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
sqrt	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
B	TokenNameIdentifier
*	TokenNameMULTIPLY
B	TokenNameIdentifier
)	TokenNameRPAREN
-	TokenNameMINUS
(	TokenNameLPAREN
4	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
A	TokenNameIdentifier
*	TokenNameMULTIPLY
C	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
solutionX	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
B	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionX	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
X	TokenNameIdentifier
<	TokenNameLESS
focusX	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
-	TokenNameMINUS
det	TokenNameIdentifier
:	TokenNameCOLON
det	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionX	TokenNameIdentifier
=	TokenNameEQUAL
solutionX	TokenNameIdentifier
/	TokenNameDIVIDE
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
A	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
solutionY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
solutionX	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
yintcpt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
solutionX	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaXSq	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
solutionY	TokenNameIdentifier
-	TokenNameMINUS
focusY	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaYSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
intersectToFocusSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
+	TokenNamePLUS
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
X	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaXSq	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
Y	TokenNameIdentifier
-	TokenNameMINUS
focusY	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaYSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
currentToFocusSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
+	TokenNamePLUS
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
g11	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
sqrt	TokenNameIdentifier
(	TokenNameLPAREN
currentToFocusSq	TokenNameIdentifier
/	TokenNameDIVIDE
intersectToFocusSq	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
prevGs	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
g11	TokenNameIdentifier
;	TokenNameSEMICOLON
X	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
a00	TokenNameIdentifier
;	TokenNameSEMICOLON
Y	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
a10	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
i	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
w	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
g00	TokenNameIdentifier
=	TokenNameEQUAL
g10	TokenNameIdentifier
;	TokenNameSEMICOLON
g01	TokenNameIdentifier
=	TokenNameEQUAL
g11	TokenNameIdentifier
;	TokenNameSEMICOLON
g10	TokenNameIdentifier
=	TokenNameEQUAL
prevGs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dx	TokenNameIdentifier
=	TokenNameEQUAL
X	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
dx	TokenNameIdentifier
>	TokenNameGREATER
-	TokenNameMINUS
0.000001f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
dx	TokenNameIdentifier
<	TokenNameLESS
0.000001f	TokenNameFloatingPointLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
solutionX	TokenNameIdentifier
=	TokenNameEQUAL
focusX	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionY	TokenNameIdentifier
=	TokenNameEQUAL
centerY	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionY	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
Y	TokenNameIdentifier
>	TokenNameGREATER
focusY	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
trivial	TokenNameIdentifier
:	TokenNameCOLON
-	TokenNameMINUS
trivial	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
slope	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Y	TokenNameIdentifier
-	TokenNameMINUS
focusY	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
(	TokenNameLPAREN
X	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
yintcpt	TokenNameIdentifier
=	TokenNameEQUAL
Y	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
X	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
A	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
slope	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
B	TokenNameIdentifier
=	TokenNameEQUAL
precalc3	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
centerY	TokenNameIdentifier
-	TokenNameMINUS
yintcpt	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
C	TokenNameIdentifier
=	TokenNameEQUAL
constC	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
yintcpt	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
yintcpt	TokenNameIdentifier
-	TokenNameMINUS
precalc2	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
det	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
sqrt	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
B	TokenNameIdentifier
*	TokenNameMULTIPLY
B	TokenNameIdentifier
)	TokenNameRPAREN
-	TokenNameMINUS
(	TokenNameLPAREN
4	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
A	TokenNameIdentifier
*	TokenNameMULTIPLY
C	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
solutionX	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
B	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionX	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
X	TokenNameIdentifier
<	TokenNameLESS
focusX	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
-	TokenNameMINUS
det	TokenNameIdentifier
:	TokenNameCOLON
det	TokenNameIdentifier
;	TokenNameSEMICOLON
solutionX	TokenNameIdentifier
=	TokenNameEQUAL
solutionX	TokenNameIdentifier
/	TokenNameDIVIDE
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
A	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
solutionY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
slope	TokenNameIdentifier
*	TokenNameMULTIPLY
solutionX	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
yintcpt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
solutionX	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaXSq	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
solutionY	TokenNameIdentifier
-	TokenNameMINUS
focusY	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaYSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
intersectToFocusSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
+	TokenNamePLUS
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
X	TokenNameIdentifier
-	TokenNameMINUS
focusX	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaXSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaXSq	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
Y	TokenNameIdentifier
-	TokenNameMINUS
focusY	TokenNameIdentifier
;	TokenNameSEMICOLON
deltaYSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaYSq	TokenNameIdentifier
*	TokenNameMULTIPLY
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
currentToFocusSq	TokenNameIdentifier
=	TokenNameEQUAL
deltaXSq	TokenNameIdentifier
+	TokenNamePLUS
deltaYSq	TokenNameIdentifier
;	TokenNameSEMICOLON
g11	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
sqrt	TokenNameIdentifier
(	TokenNameLPAREN
currentToFocusSq	TokenNameIdentifier
/	TokenNameDIVIDE
intersectToFocusSq	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
prevGs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
g11	TokenNameIdentifier
;	TokenNameSEMICOLON
pixels	TokenNameIdentifier
[	TokenNameLBRACKET
indexer	TokenNameIdentifier
+	TokenNamePLUS
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
indexGradientAntiAlias	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
g00	TokenNameIdentifier
+	TokenNamePLUS
g01	TokenNameIdentifier
+	TokenNamePLUS
g10	TokenNameIdentifier
+	TokenNamePLUS
g11	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
4	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
Math	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
(	TokenNameLPAREN
Math	TokenNameIdentifier
.	TokenNameDOT
abs	TokenNameIdentifier
(	TokenNameLPAREN
g11	TokenNameIdentifier
-	TokenNameMINUS
g00	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
Math	TokenNameIdentifier
.	TokenNameDOT
abs	TokenNameIdentifier
(	TokenNameLPAREN
g10	TokenNameIdentifier
-	TokenNameMINUS
g01	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
X	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
a00	TokenNameIdentifier
;	TokenNameSEMICOLON
Y	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
a10	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
indexer	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
w	TokenNameIdentifier
+	TokenNamePLUS
adjust	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
