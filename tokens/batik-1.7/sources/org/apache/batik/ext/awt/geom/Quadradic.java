package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
ext	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
geom	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
geom	TokenNameIdentifier
.	TokenNameDOT
Point2D	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
geom	TokenNameIdentifier
.	TokenNameDOT
QuadCurve2D	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
geom	TokenNameIdentifier
.	TokenNameDOT
Rectangle2D	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
Quadradic	TokenNameIdentifier
extends	TokenNameextends
AbstractSegment	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
p1	TokenNameIdentifier
,	TokenNameCOMMA
p2	TokenNameIdentifier
,	TokenNameCOMMA
p3	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
Quadradic	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
p1	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p3	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Quadradic	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
x1	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
y1	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
x2	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
y2	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
x3	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
y3	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
p1	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
x1	TokenNameIdentifier
,	TokenNameCOMMA
y1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
x2	TokenNameIdentifier
,	TokenNameCOMMA
y2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
p3	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
x3	TokenNameIdentifier
,	TokenNameCOMMA
y3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Quadradic	TokenNameIdentifier
(	TokenNameLPAREN
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
p1	TokenNameIdentifier
,	TokenNameCOMMA
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
p2	TokenNameIdentifier
,	TokenNameCOMMA
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
p3	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
p1	TokenNameIdentifier
=	TokenNameEQUAL
p1	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
p2	TokenNameIdentifier
=	TokenNameEQUAL
p2	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
p3	TokenNameIdentifier
=	TokenNameEQUAL
p3	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Object	TokenNameIdentifier
clone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Quadradic	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Segment	TokenNameIdentifier
reverse	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Quadradic	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
getMinMax	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
p1	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
p2	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
p3	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
minMax	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
p3	TokenNameIdentifier
>	TokenNameGREATER
p1	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
minMax	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
p1	TokenNameIdentifier
;	TokenNameSEMICOLON
minMax	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
p3	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
minMax	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
p3	TokenNameIdentifier
;	TokenNameSEMICOLON
minMax	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
p1	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
double	TokenNamedouble
a	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
p1	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
p2	TokenNameIdentifier
+	TokenNamePLUS
p3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
b	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
p2	TokenNameIdentifier
-	TokenNameMINUS
p1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
a	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
double	TokenNamedouble
tv	TokenNameIdentifier
=	TokenNameEQUAL
b	TokenNameIdentifier
/	TokenNameDIVIDE
a	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
tv	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
tv	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
tv	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
p1	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
p2	TokenNameIdentifier
+	TokenNamePLUS
p3	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
tv	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
(	TokenNameLPAREN
p2	TokenNameIdentifier
-	TokenNameMINUS
p1	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
tv	TokenNameIdentifier
+	TokenNamePLUS
p1	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
tv	TokenNameIdentifier
<	TokenNameLESS
minMax	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
minMax	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
tv	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
tv	TokenNameIdentifier
>	TokenNameGREATER
minMax	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
minMax	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
tv	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
minX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
minMax	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
getMinMax	TokenNameIdentifier
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
minMax	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
minMax	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
maxX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
minMax	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
getMinMax	TokenNameIdentifier
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
minMax	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
minMax	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
minY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
minMax	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
getMinMax	TokenNameIdentifier
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
,	TokenNameCOMMA
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
,	TokenNameCOMMA
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
,	TokenNameCOMMA
minMax	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
minMax	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
maxY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
minMax	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
getMinMax	TokenNameIdentifier
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
,	TokenNameCOMMA
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
,	TokenNameCOMMA
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
,	TokenNameCOMMA
minMax	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
minMax	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Rectangle2D	TokenNameIdentifier
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
minMaxX	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
getMinMax	TokenNameIdentifier
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
minMaxX	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
minMaxY	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
getMinMax	TokenNameIdentifier
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
,	TokenNameCOMMA
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
,	TokenNameCOMMA
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
,	TokenNameCOMMA
minMaxY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
Rectangle2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
minMaxX	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
minMaxY	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
minMaxX	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
-	TokenNameMINUS
minMaxX	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
minMaxY	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
-	TokenNameMINUS
minMaxY	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
int	TokenNameint
findRoots	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
y	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
roots	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
eqn	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
y	TokenNameIdentifier
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
(	TokenNameLPAREN
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
}	TokenNameRBRACE
;	TokenNameSEMICOLON
return	TokenNamereturn
QuadCurve2D	TokenNameIdentifier
.	TokenNameDOT
solveQuadratic	TokenNameIdentifier
(	TokenNameLPAREN
eqn	TokenNameIdentifier
,	TokenNameCOMMA
roots	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
evalDt	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
t	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
double	TokenNamedouble
x	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
t	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
(	TokenNameLPAREN
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
-	TokenNameMINUS
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
y	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
t	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
(	TokenNameLPAREN
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
eval	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
t	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
double	TokenNamedouble
x	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
t	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
(	TokenNameLPAREN
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
-	TokenNameMINUS
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
t	TokenNameIdentifier
+	TokenNamePLUS
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
y	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
t	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
(	TokenNameLPAREN
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
t	TokenNameIdentifier
+	TokenNamePLUS
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Segment	TokenNameIdentifier
getSegment	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
t0	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
t1	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
double	TokenNamedouble
dt	TokenNameIdentifier
=	TokenNameEQUAL
t1	TokenNameIdentifier
-	TokenNameMINUS
t0	TokenNameIdentifier
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
np1	TokenNameIdentifier
=	TokenNameEQUAL
eval	TokenNameIdentifier
(	TokenNameLPAREN
t0	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
dp1	TokenNameIdentifier
=	TokenNameEQUAL
evalDt	TokenNameIdentifier
(	TokenNameLPAREN
t0	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
np2	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
np1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
.5	TokenNameDoubleLiteral
*	TokenNameMULTIPLY
dt	TokenNameIdentifier
*	TokenNameMULTIPLY
dp1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
,	TokenNameCOMMA
np1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
.5	TokenNameDoubleLiteral
*	TokenNameMULTIPLY
dt	TokenNameIdentifier
*	TokenNameMULTIPLY
dp1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
np3	TokenNameIdentifier
=	TokenNameEQUAL
eval	TokenNameIdentifier
(	TokenNameLPAREN
t1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
Quadradic	TokenNameIdentifier
(	TokenNameLPAREN
np1	TokenNameIdentifier
,	TokenNameCOMMA
np2	TokenNameIdentifier
,	TokenNameCOMMA
np3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
subdivide	TokenNameIdentifier
(	TokenNameLPAREN
Quadradic	TokenNameIdentifier
q0	TokenNameIdentifier
,	TokenNameCOMMA
Quadradic	TokenNameIdentifier
q1	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
q0	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
q1	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
double	TokenNamedouble
x	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
.25	TokenNameDoubleLiteral
+	TokenNamePLUS
(	TokenNameLPAREN
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
-	TokenNameMINUS
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
y	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
.25	TokenNameDoubleLiteral
+	TokenNamePLUS
(	TokenNameLPAREN
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
dx	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
.25	TokenNameDoubleLiteral
+	TokenNamePLUS
(	TokenNameLPAREN
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
-	TokenNameMINUS
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
.5	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
double	TokenNamedouble
dy	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
.25	TokenNameDoubleLiteral
+	TokenNamePLUS
(	TokenNameLPAREN
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
.5	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
q0	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
q0	TokenNameIdentifier
.	TokenNameDOT
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
;	TokenNameSEMICOLON
q0	TokenNameIdentifier
.	TokenNameDOT
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
q0	TokenNameIdentifier
.	TokenNameDOT
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
x	TokenNameIdentifier
-	TokenNameMINUS
dx	TokenNameIdentifier
;	TokenNameSEMICOLON
q0	TokenNameIdentifier
.	TokenNameDOT
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
y	TokenNameIdentifier
-	TokenNameMINUS
dy	TokenNameIdentifier
;	TokenNameSEMICOLON
q0	TokenNameIdentifier
.	TokenNameDOT
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
x	TokenNameIdentifier
;	TokenNameSEMICOLON
q0	TokenNameIdentifier
.	TokenNameDOT
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
y	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
q1	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
q1	TokenNameIdentifier
.	TokenNameDOT
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
x	TokenNameIdentifier
;	TokenNameSEMICOLON
q1	TokenNameIdentifier
.	TokenNameDOT
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
y	TokenNameIdentifier
;	TokenNameSEMICOLON
q1	TokenNameIdentifier
.	TokenNameDOT
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
x	TokenNameIdentifier
+	TokenNamePLUS
dx	TokenNameIdentifier
;	TokenNameSEMICOLON
q1	TokenNameIdentifier
.	TokenNameDOT
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
y	TokenNameIdentifier
+	TokenNamePLUS
dy	TokenNameIdentifier
;	TokenNameSEMICOLON
q1	TokenNameIdentifier
.	TokenNameDOT
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
;	TokenNameSEMICOLON
q1	TokenNameIdentifier
.	TokenNameDOT
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
subdivide	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
t	TokenNameIdentifier
,	TokenNameCOMMA
Quadradic	TokenNameIdentifier
q0	TokenNameIdentifier
,	TokenNameCOMMA
Quadradic	TokenNameIdentifier
q1	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
np	TokenNameIdentifier
=	TokenNameEQUAL
eval	TokenNameIdentifier
(	TokenNameLPAREN
t	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
npd	TokenNameIdentifier
=	TokenNameEQUAL
evalDt	TokenNameIdentifier
(	TokenNameLPAREN
t	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
q0	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
q0	TokenNameIdentifier
.	TokenNameDOT
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
;	TokenNameSEMICOLON
q0	TokenNameIdentifier
.	TokenNameDOT
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
q0	TokenNameIdentifier
.	TokenNameDOT
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
np	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
npd	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
*	TokenNameMULTIPLY
t	TokenNameIdentifier
*	TokenNameMULTIPLY
.5	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
q0	TokenNameIdentifier
.	TokenNameDOT
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
np	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
npd	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
*	TokenNameMULTIPLY
t	TokenNameIdentifier
*	TokenNameMULTIPLY
.5	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
q0	TokenNameIdentifier
.	TokenNameDOT
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
np	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
;	TokenNameSEMICOLON
q0	TokenNameIdentifier
.	TokenNameDOT
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
np	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
q1	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
q1	TokenNameIdentifier
.	TokenNameDOT
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
np	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
;	TokenNameSEMICOLON
q1	TokenNameIdentifier
.	TokenNameDOT
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
np	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
q1	TokenNameIdentifier
.	TokenNameDOT
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
np	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
npd	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
-	TokenNameMINUS
t	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
.5	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
q1	TokenNameIdentifier
.	TokenNameDOT
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
np	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
npd	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
-	TokenNameMINUS
t	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
.5	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
q1	TokenNameIdentifier
.	TokenNameDOT
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
;	TokenNameSEMICOLON
q1	TokenNameIdentifier
.	TokenNameDOT
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
subdivide	TokenNameIdentifier
(	TokenNameLPAREN
Segment	TokenNameIdentifier
s0	TokenNameIdentifier
,	TokenNameCOMMA
Segment	TokenNameIdentifier
s1	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Quadradic	TokenNameIdentifier
q0	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
,	TokenNameCOMMA
q1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
s0	TokenNameIdentifier
instanceof	TokenNameinstanceof
Quadradic	TokenNameIdentifier
)	TokenNameRPAREN
q0	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Quadradic	TokenNameIdentifier
)	TokenNameRPAREN
s0	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
s1	TokenNameIdentifier
instanceof	TokenNameinstanceof
Quadradic	TokenNameIdentifier
)	TokenNameRPAREN
q1	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Quadradic	TokenNameIdentifier
)	TokenNameRPAREN
s1	TokenNameIdentifier
;	TokenNameSEMICOLON
subdivide	TokenNameIdentifier
(	TokenNameLPAREN
q0	TokenNameIdentifier
,	TokenNameCOMMA
q1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
subdivide	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
t	TokenNameIdentifier
,	TokenNameCOMMA
Segment	TokenNameIdentifier
s0	TokenNameIdentifier
,	TokenNameCOMMA
Segment	TokenNameIdentifier
s1	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Quadradic	TokenNameIdentifier
q0	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
,	TokenNameCOMMA
q1	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
s0	TokenNameIdentifier
instanceof	TokenNameinstanceof
Quadradic	TokenNameIdentifier
)	TokenNameRPAREN
q0	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Quadradic	TokenNameIdentifier
)	TokenNameRPAREN
s0	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
s1	TokenNameIdentifier
instanceof	TokenNameinstanceof
Quadradic	TokenNameIdentifier
)	TokenNameRPAREN
q1	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Quadradic	TokenNameIdentifier
)	TokenNameRPAREN
s1	TokenNameIdentifier
;	TokenNameSEMICOLON
subdivide	TokenNameIdentifier
(	TokenNameLPAREN
t	TokenNameIdentifier
,	TokenNameCOMMA
q0	TokenNameIdentifier
,	TokenNameCOMMA
q1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
int	TokenNameint
count	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
protected	TokenNameprotected
double	TokenNamedouble
subLength	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
leftLegLen	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
rightLegLen	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
maxErr	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
count	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
double	TokenNamedouble
dx	TokenNameIdentifier
,	TokenNameCOMMA
dy	TokenNameIdentifier
;	TokenNameSEMICOLON
dx	TokenNameIdentifier
=	TokenNameEQUAL
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
-	TokenNameMINUS
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
;	TokenNameSEMICOLON
dy	TokenNameIdentifier
=	TokenNameEQUAL
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
cordLen	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
sqrt	TokenNameIdentifier
(	TokenNameLPAREN
dx	TokenNameIdentifier
*	TokenNameMULTIPLY
dx	TokenNameIdentifier
+	TokenNamePLUS
dy	TokenNameIdentifier
*	TokenNameMULTIPLY
dy	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
hullLen	TokenNameIdentifier
=	TokenNameEQUAL
leftLegLen	TokenNameIdentifier
+	TokenNamePLUS
rightLegLen	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
hullLen	TokenNameIdentifier
<	TokenNameLESS
maxErr	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
(	TokenNameLPAREN
hullLen	TokenNameIdentifier
+	TokenNamePLUS
cordLen	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
.5	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
double	TokenNamedouble
err	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
hullLen	TokenNameIdentifier
-	TokenNameMINUS
cordLen	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
err	TokenNameIdentifier
<	TokenNameLESS
maxErr	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
(	TokenNameLPAREN
hullLen	TokenNameIdentifier
+	TokenNamePLUS
cordLen	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
.5	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
Quadradic	TokenNameIdentifier
q	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Quadradic	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
x	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
.25	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
double	TokenNamedouble
y	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
.25	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
dx	TokenNameIdentifier
=	TokenNameEQUAL
.25	TokenNameDoubleLiteral
*	TokenNameMULTIPLY
dx	TokenNameIdentifier
;	TokenNameSEMICOLON
dy	TokenNameIdentifier
=	TokenNameEQUAL
.25	TokenNameDoubleLiteral
*	TokenNameMULTIPLY
dy	TokenNameIdentifier
;	TokenNameSEMICOLON
q	TokenNameIdentifier
.	TokenNameDOT
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
;	TokenNameSEMICOLON
q	TokenNameIdentifier
.	TokenNameDOT
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
q	TokenNameIdentifier
.	TokenNameDOT
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
x	TokenNameIdentifier
-	TokenNameMINUS
dx	TokenNameIdentifier
;	TokenNameSEMICOLON
q	TokenNameIdentifier
.	TokenNameDOT
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
y	TokenNameIdentifier
-	TokenNameMINUS
dy	TokenNameIdentifier
;	TokenNameSEMICOLON
q	TokenNameIdentifier
.	TokenNameDOT
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
x	TokenNameIdentifier
;	TokenNameSEMICOLON
q	TokenNameIdentifier
.	TokenNameDOT
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
y	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
midLen	TokenNameIdentifier
=	TokenNameEQUAL
.25	TokenNameDoubleLiteral
*	TokenNameMULTIPLY
cordLen	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
len	TokenNameIdentifier
=	TokenNameEQUAL
q	TokenNameIdentifier
.	TokenNameDOT
subLength	TokenNameIdentifier
(	TokenNameLPAREN
leftLegLen	TokenNameIdentifier
*	TokenNameMULTIPLY
.5	TokenNameDoubleLiteral
,	TokenNameCOMMA
midLen	TokenNameIdentifier
,	TokenNameCOMMA
maxErr	TokenNameIdentifier
*	TokenNameMULTIPLY
.5	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
q	TokenNameIdentifier
.	TokenNameDOT
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
x	TokenNameIdentifier
;	TokenNameSEMICOLON
q	TokenNameIdentifier
.	TokenNameDOT
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
y	TokenNameIdentifier
;	TokenNameSEMICOLON
q	TokenNameIdentifier
.	TokenNameDOT
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
x	TokenNameIdentifier
+	TokenNamePLUS
dx	TokenNameIdentifier
;	TokenNameSEMICOLON
q	TokenNameIdentifier
.	TokenNameDOT
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
y	TokenNameIdentifier
+	TokenNamePLUS
dy	TokenNameIdentifier
;	TokenNameSEMICOLON
q	TokenNameIdentifier
.	TokenNameDOT
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
=	TokenNameEQUAL
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
;	TokenNameSEMICOLON
q	TokenNameIdentifier
.	TokenNameDOT
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
=	TokenNameEQUAL
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
len	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
q	TokenNameIdentifier
.	TokenNameDOT
subLength	TokenNameIdentifier
(	TokenNameLPAREN
midLen	TokenNameIdentifier
,	TokenNameCOMMA
rightLegLen	TokenNameIdentifier
*	TokenNameMULTIPLY
.5	TokenNameDoubleLiteral
,	TokenNameCOMMA
maxErr	TokenNameIdentifier
*	TokenNameMULTIPLY
.5	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
len	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
getLength	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getLength	TokenNameIdentifier
(	TokenNameLPAREN
0.000001	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
getLength	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
maxErr	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
double	TokenNamedouble
dx	TokenNameIdentifier
,	TokenNameCOMMA
dy	TokenNameIdentifier
;	TokenNameSEMICOLON
dx	TokenNameIdentifier
=	TokenNameEQUAL
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
-	TokenNameMINUS
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
;	TokenNameSEMICOLON
dy	TokenNameIdentifier
=	TokenNameEQUAL
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
leftLegLen	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
sqrt	TokenNameIdentifier
(	TokenNameLPAREN
dx	TokenNameIdentifier
*	TokenNameMULTIPLY
dx	TokenNameIdentifier
+	TokenNamePLUS
dy	TokenNameIdentifier
*	TokenNameMULTIPLY
dy	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dx	TokenNameIdentifier
=	TokenNameEQUAL
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
-	TokenNameMINUS
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
;	TokenNameSEMICOLON
dy	TokenNameIdentifier
=	TokenNameEQUAL
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
-	TokenNameMINUS
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
rightLegLen	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
sqrt	TokenNameIdentifier
(	TokenNameLPAREN
dx	TokenNameIdentifier
*	TokenNameMULTIPLY
dx	TokenNameIdentifier
+	TokenNamePLUS
dy	TokenNameIdentifier
*	TokenNameMULTIPLY
dy	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
eps	TokenNameIdentifier
=	TokenNameEQUAL
maxErr	TokenNameIdentifier
*	TokenNameMULTIPLY
(	TokenNameLPAREN
leftLegLen	TokenNameIdentifier
+	TokenNamePLUS
rightLegLen	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
subLength	TokenNameIdentifier
(	TokenNameLPAREN
leftLegLen	TokenNameIdentifier
,	TokenNameCOMMA
rightLegLen	TokenNameIdentifier
,	TokenNameCOMMA
eps	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"M"	TokenNameStringLiteral
+	TokenNamePLUS
p1	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
','	TokenNameCharacterLiteral
+	TokenNamePLUS
p1	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
'Q'	TokenNameCharacterLiteral
+	TokenNamePLUS
p2	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
','	TokenNameCharacterLiteral
+	TokenNamePLUS
p2	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+	TokenNamePLUS
' '	TokenNameCharacterLiteral
+	TokenNamePLUS
p3	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+	TokenNamePLUS
','	TokenNameCharacterLiteral
+	TokenNamePLUS
p3	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
