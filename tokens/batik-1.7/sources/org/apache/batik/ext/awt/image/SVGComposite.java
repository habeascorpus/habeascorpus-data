package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
ext	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
image	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
AlphaComposite	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Composite	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
CompositeContext	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
RenderingHints	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
color	TokenNameIdentifier
.	TokenNameDOT
ColorSpace	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
image	TokenNameIdentifier
.	TokenNameDOT
ColorModel	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
image	TokenNameIdentifier
.	TokenNameDOT
DataBufferInt	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
image	TokenNameIdentifier
.	TokenNameDOT
PackedColorModel	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
image	TokenNameIdentifier
.	TokenNameDOT
Raster	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
image	TokenNameIdentifier
.	TokenNameDOT
SinglePixelPackedSampleModel	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
image	TokenNameIdentifier
.	TokenNameDOT
WritableRaster	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
SVGComposite	TokenNameIdentifier
implements	TokenNameimplements
Composite	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
SVGComposite	TokenNameIdentifier
OVER	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SVGComposite	TokenNameIdentifier
(	TokenNameLPAREN
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
OVER	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
SVGComposite	TokenNameIdentifier
IN	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SVGComposite	TokenNameIdentifier
(	TokenNameLPAREN
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
IN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
SVGComposite	TokenNameIdentifier
OUT	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SVGComposite	TokenNameIdentifier
(	TokenNameLPAREN
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
OUT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
SVGComposite	TokenNameIdentifier
ATOP	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SVGComposite	TokenNameIdentifier
(	TokenNameLPAREN
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
ATOP	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
SVGComposite	TokenNameIdentifier
XOR	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SVGComposite	TokenNameIdentifier
(	TokenNameLPAREN
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
XOR	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
SVGComposite	TokenNameIdentifier
MULTIPLY	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SVGComposite	TokenNameIdentifier
(	TokenNameLPAREN
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
MULTIPLY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
SVGComposite	TokenNameIdentifier
SCREEN	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SVGComposite	TokenNameIdentifier
(	TokenNameLPAREN
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
SCREEN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
SVGComposite	TokenNameIdentifier
DARKEN	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SVGComposite	TokenNameIdentifier
(	TokenNameLPAREN
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
DARKEN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
SVGComposite	TokenNameIdentifier
LIGHTEN	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SVGComposite	TokenNameIdentifier
(	TokenNameLPAREN
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
LIGHTEN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
CompositeRule	TokenNameIdentifier
rule	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
CompositeRule	TokenNameIdentifier
getRule	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
rule	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
SVGComposite	TokenNameIdentifier
(	TokenNameLPAREN
CompositeRule	TokenNameIdentifier
rule	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
rule	TokenNameIdentifier
=	TokenNameEQUAL
rule	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
equals	TokenNameIdentifier
(	TokenNameLPAREN
Object	TokenNameIdentifier
o	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
o	TokenNameIdentifier
instanceof	TokenNameinstanceof
SVGComposite	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
SVGComposite	TokenNameIdentifier
svgc	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SVGComposite	TokenNameIdentifier
)	TokenNameRPAREN
o	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
(	TokenNameLPAREN
svgc	TokenNameIdentifier
.	TokenNameDOT
getRule	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
getRule	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
o	TokenNameIdentifier
instanceof	TokenNameinstanceof
AlphaComposite	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
AlphaComposite	TokenNameIdentifier
ac	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
AlphaComposite	TokenNameIdentifier
)	TokenNameRPAREN
o	TokenNameIdentifier
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
getRule	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getRule	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
RULE_OVER	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
(	TokenNameLPAREN
ac	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
AlphaComposite	TokenNameIdentifier
.	TokenNameDOT
SrcOver	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
RULE_IN	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
(	TokenNameLPAREN
ac	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
AlphaComposite	TokenNameIdentifier
.	TokenNameDOT
SrcIn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
RULE_OUT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
(	TokenNameLPAREN
ac	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
AlphaComposite	TokenNameIdentifier
.	TokenNameDOT
SrcOut	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
is_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
cm	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
(	TokenNameLPAREN
cm	TokenNameIdentifier
instanceof	TokenNameinstanceof
PackedColorModel	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
PackedColorModel	TokenNameIdentifier
pcm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
PackedColorModel	TokenNameIdentifier
)	TokenNameRPAREN
cm	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
masks	TokenNameIdentifier
=	TokenNameEQUAL
pcm	TokenNameIdentifier
.	TokenNameDOT
getMasks	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
masks	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
4	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
masks	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
!=	TokenNameNOT_EQUAL
0x00ff0000	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
masks	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
!=	TokenNameNOT_EQUAL
0x0000ff00	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
masks	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
!=	TokenNameNOT_EQUAL
0x000000ff	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
masks	TokenNameIdentifier
[	TokenNameLBRACKET
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
!=	TokenNameNOT_EQUAL
0xff000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
CompositeContext	TokenNameIdentifier
createContext	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
,	TokenNameCOMMA
RenderingHints	TokenNameIdentifier
hints	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
false	TokenNamefalse
)	TokenNameRPAREN
{	TokenNameLBRACE
ColorSpace	TokenNameIdentifier
srcCS	TokenNameIdentifier
=	TokenNameEQUAL
srcCM	TokenNameIdentifier
.	TokenNameDOT
getColorSpace	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ColorSpace	TokenNameIdentifier
dstCS	TokenNameIdentifier
=	TokenNameEQUAL
dstCM	TokenNameIdentifier
.	TokenNameDOT
getColorSpace	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"srcCS: "	TokenNameStringLiteral
+	TokenNamePLUS
srcCS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"dstCS: "	TokenNameStringLiteral
+	TokenNamePLUS
dstCS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"lRGB: "	TokenNameStringLiteral
+	TokenNamePLUS
ColorSpace	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
ColorSpace	TokenNameIdentifier
.	TokenNameDOT
CS_LINEAR_RGB	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"sRGB: "	TokenNameStringLiteral
+	TokenNamePLUS
ColorSpace	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
ColorSpace	TokenNameIdentifier
.	TokenNameDOT
CS_sRGB	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
boolean	TokenNameboolean
use_int_pack	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
is_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
is_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
rule	TokenNameIdentifier
.	TokenNameDOT
getRule	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
RULE_OVER	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
dstCM	TokenNameIdentifier
.	TokenNameDOT
hasAlpha	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
use_int_pack	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
OverCompositeContext_INT_PACK_NA	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
new	TokenNamenew
OverCompositeContext_NA	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
use_int_pack	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
OverCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
.	TokenNameDOT
isAlphaPremultiplied	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
OverCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
new	TokenNamenew
OverCompositeContext_INT_PACK_UNPRE	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
RULE_IN	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
use_int_pack	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
InCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
new	TokenNamenew
InCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
RULE_OUT	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
use_int_pack	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
OutCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
new	TokenNamenew
OutCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
RULE_ATOP	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
use_int_pack	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
AtopCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
new	TokenNamenew
AtopCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
RULE_XOR	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
use_int_pack	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
XorCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
new	TokenNamenew
XorCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
RULE_ARITHMETIC	TokenNameIdentifier
:	TokenNameCOLON
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
coeff	TokenNameIdentifier
=	TokenNameEQUAL
rule	TokenNameIdentifier
.	TokenNameDOT
getCoefficients	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
use_int_pack	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
ArithCompositeContext_INT_PACK_LUT	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
,	TokenNameCOMMA
coeff	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
coeff	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
coeff	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
coeff	TokenNameIdentifier
[	TokenNameLBRACKET
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
new	TokenNamenew
ArithCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
,	TokenNameCOMMA
coeff	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
coeff	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
coeff	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
,	TokenNameCOMMA
coeff	TokenNameIdentifier
[	TokenNameLBRACKET
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
RULE_MULTIPLY	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
use_int_pack	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
MultiplyCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
new	TokenNamenew
MultiplyCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
RULE_SCREEN	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
use_int_pack	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
ScreenCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
new	TokenNamenew
ScreenCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
RULE_DARKEN	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
use_int_pack	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
DarkenCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
new	TokenNamenew
DarkenCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
CompositeRule	TokenNameIdentifier
.	TokenNameDOT
RULE_LIGHTEN	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
use_int_pack	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
new	TokenNamenew
LightenCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
new	TokenNamenew
LightenCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
throw	TokenNamethrow
new	TokenNamenew
UnsupportedOperationException	TokenNameIdentifier
(	TokenNameLPAREN
"Unknown composite rule requested."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
abstract	TokenNameabstract
static	TokenNamestatic
class	TokenNameclass
AlphaPreCompositeContext	TokenNameIdentifier
implements	TokenNameimplements
CompositeContext	TokenNameIdentifier
{	TokenNameLBRACE
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
;	TokenNameSEMICOLON
AlphaPreCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
srcCM	TokenNameIdentifier
=	TokenNameEQUAL
srcCM	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
dstCM	TokenNameIdentifier
=	TokenNameEQUAL
dstCM	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
dispose	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
srcCM	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
dstCM	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
abstract	TokenNameabstract
void	TokenNamevoid
precompose	TokenNameIdentifier
(	TokenNameLPAREN
Raster	TokenNameIdentifier
src	TokenNameIdentifier
,	TokenNameCOMMA
Raster	TokenNameIdentifier
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
WritableRaster	TokenNameIdentifier
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
void	TokenNamevoid
compose	TokenNameIdentifier
(	TokenNameLPAREN
Raster	TokenNameIdentifier
src	TokenNameIdentifier
,	TokenNameCOMMA
Raster	TokenNameIdentifier
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
WritableRaster	TokenNameIdentifier
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ColorModel	TokenNameIdentifier
srcPreCM	TokenNameIdentifier
=	TokenNameEQUAL
srcCM	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
srcCM	TokenNameIdentifier
.	TokenNameDOT
isAlphaPremultiplied	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
srcPreCM	TokenNameIdentifier
=	TokenNameEQUAL
GraphicsUtil	TokenNameIdentifier
.	TokenNameDOT
coerceData	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
WritableRaster	TokenNameIdentifier
)	TokenNameRPAREN
src	TokenNameIdentifier
,	TokenNameCOMMA
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ColorModel	TokenNameIdentifier
dstPreCM	TokenNameIdentifier
=	TokenNameEQUAL
dstCM	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
dstCM	TokenNameIdentifier
.	TokenNameDOT
isAlphaPremultiplied	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
dstPreCM	TokenNameIdentifier
=	TokenNameEQUAL
GraphicsUtil	TokenNameIdentifier
.	TokenNameDOT
coerceData	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
WritableRaster	TokenNameIdentifier
)	TokenNameRPAREN
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
precompose	TokenNameIdentifier
(	TokenNameLPAREN
src	TokenNameIdentifier
,	TokenNameCOMMA
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
srcCM	TokenNameIdentifier
.	TokenNameDOT
isAlphaPremultiplied	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
GraphicsUtil	TokenNameIdentifier
.	TokenNameDOT
coerceData	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
WritableRaster	TokenNameIdentifier
)	TokenNameRPAREN
src	TokenNameIdentifier
,	TokenNameCOMMA
srcPreCM	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
dstCM	TokenNameIdentifier
.	TokenNameDOT
isAlphaPremultiplied	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
GraphicsUtil	TokenNameIdentifier
.	TokenNameDOT
coerceData	TokenNameIdentifier
(	TokenNameLPAREN
dstOut	TokenNameIdentifier
,	TokenNameCOMMA
dstPreCM	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dstIn	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
GraphicsUtil	TokenNameIdentifier
.	TokenNameDOT
coerceData	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
WritableRaster	TokenNameIdentifier
)	TokenNameRPAREN
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
dstPreCM	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
abstract	TokenNameabstract
static	TokenNamestatic
class	TokenNameclass
AlphaPreCompositeContext_INT_PACK	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext	TokenNameIdentifier
{	TokenNameLBRACE
AlphaPreCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
abstract	TokenNameabstract
void	TokenNamevoid
precompose_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
width	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
height	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
srcAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
srcSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstInPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstInAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstInSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstOutPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstOutAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstOutSp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
protected	TokenNameprotected
void	TokenNamevoid
precompose	TokenNameIdentifier
(	TokenNameLPAREN
Raster	TokenNameIdentifier
src	TokenNameIdentifier
,	TokenNameCOMMA
Raster	TokenNameIdentifier
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
WritableRaster	TokenNameIdentifier
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
x0	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
w	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y0	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
h	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SinglePixelPackedSampleModel	TokenNameIdentifier
srcSPPSM	TokenNameIdentifier
;	TokenNameSEMICOLON
srcSPPSM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SinglePixelPackedSampleModel	TokenNameIdentifier
)	TokenNameRPAREN
src	TokenNameIdentifier
.	TokenNameDOT
getSampleModel	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
srcScanStride	TokenNameIdentifier
=	TokenNameEQUAL
srcSPPSM	TokenNameIdentifier
.	TokenNameDOT
getScanlineStride	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DataBufferInt	TokenNameIdentifier
srcDB	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
DataBufferInt	TokenNameIdentifier
)	TokenNameRPAREN
src	TokenNameIdentifier
.	TokenNameDOT
getDataBuffer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPixels	TokenNameIdentifier
=	TokenNameEQUAL
srcDB	TokenNameIdentifier
.	TokenNameDOT
getBankData	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
srcBase	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcDB	TokenNameIdentifier
.	TokenNameDOT
getOffset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
srcSPPSM	TokenNameIdentifier
.	TokenNameDOT
getOffset	TokenNameIdentifier
(	TokenNameLPAREN
x0	TokenNameIdentifier
-	TokenNameMINUS
src	TokenNameIdentifier
.	TokenNameDOT
getSampleModelTranslateX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
y0	TokenNameIdentifier
-	TokenNameMINUS
src	TokenNameIdentifier
.	TokenNameDOT
getSampleModelTranslateY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SinglePixelPackedSampleModel	TokenNameIdentifier
dstInSPPSM	TokenNameIdentifier
;	TokenNameSEMICOLON
dstInSPPSM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SinglePixelPackedSampleModel	TokenNameIdentifier
)	TokenNameRPAREN
dstIn	TokenNameIdentifier
.	TokenNameDOT
getSampleModel	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
dstInScanStride	TokenNameIdentifier
=	TokenNameEQUAL
dstInSPPSM	TokenNameIdentifier
.	TokenNameDOT
getScanlineStride	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DataBufferInt	TokenNameIdentifier
dstInDB	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
DataBufferInt	TokenNameIdentifier
)	TokenNameRPAREN
dstIn	TokenNameIdentifier
.	TokenNameDOT
getDataBuffer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstInPixels	TokenNameIdentifier
=	TokenNameEQUAL
dstInDB	TokenNameIdentifier
.	TokenNameDOT
getBankData	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
dstInBase	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstInDB	TokenNameIdentifier
.	TokenNameDOT
getOffset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
dstInSPPSM	TokenNameIdentifier
.	TokenNameDOT
getOffset	TokenNameIdentifier
(	TokenNameLPAREN
x0	TokenNameIdentifier
-	TokenNameMINUS
dstIn	TokenNameIdentifier
.	TokenNameDOT
getSampleModelTranslateX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
y0	TokenNameIdentifier
-	TokenNameMINUS
dstIn	TokenNameIdentifier
.	TokenNameDOT
getSampleModelTranslateY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SinglePixelPackedSampleModel	TokenNameIdentifier
dstOutSPPSM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SinglePixelPackedSampleModel	TokenNameIdentifier
)	TokenNameRPAREN
dstOut	TokenNameIdentifier
.	TokenNameDOT
getSampleModel	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
dstOutScanStride	TokenNameIdentifier
=	TokenNameEQUAL
dstOutSPPSM	TokenNameIdentifier
.	TokenNameDOT
getScanlineStride	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DataBufferInt	TokenNameIdentifier
dstOutDB	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
DataBufferInt	TokenNameIdentifier
)	TokenNameRPAREN
dstOut	TokenNameIdentifier
.	TokenNameDOT
getDataBuffer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstOutPixels	TokenNameIdentifier
=	TokenNameEQUAL
dstOutDB	TokenNameIdentifier
.	TokenNameDOT
getBankData	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
dstOutBase	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstOutDB	TokenNameIdentifier
.	TokenNameDOT
getOffset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
dstOutSPPSM	TokenNameIdentifier
.	TokenNameDOT
getOffset	TokenNameIdentifier
(	TokenNameLPAREN
x0	TokenNameIdentifier
-	TokenNameMINUS
dstOut	TokenNameIdentifier
.	TokenNameDOT
getSampleModelTranslateX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
y0	TokenNameIdentifier
-	TokenNameMINUS
dstOut	TokenNameIdentifier
.	TokenNameDOT
getSampleModelTranslateY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
srcAdjust	TokenNameIdentifier
=	TokenNameEQUAL
srcScanStride	TokenNameIdentifier
-	TokenNameMINUS
w	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
dstInAdjust	TokenNameIdentifier
=	TokenNameEQUAL
dstInScanStride	TokenNameIdentifier
-	TokenNameMINUS
w	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
dstOutAdjust	TokenNameIdentifier
=	TokenNameEQUAL
dstOutScanStride	TokenNameIdentifier
-	TokenNameMINUS
w	TokenNameIdentifier
;	TokenNameSEMICOLON
precompose_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
w	TokenNameIdentifier
,	TokenNameCOMMA
h	TokenNameIdentifier
,	TokenNameCOMMA
srcPixels	TokenNameIdentifier
,	TokenNameCOMMA
srcAdjust	TokenNameIdentifier
,	TokenNameCOMMA
srcBase	TokenNameIdentifier
,	TokenNameCOMMA
dstInPixels	TokenNameIdentifier
,	TokenNameCOMMA
dstInAdjust	TokenNameIdentifier
,	TokenNameCOMMA
dstInBase	TokenNameIdentifier
,	TokenNameCOMMA
dstOutPixels	TokenNameIdentifier
,	TokenNameCOMMA
dstOutAdjust	TokenNameIdentifier
,	TokenNameCOMMA
dstOutBase	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
OverCompositeContext	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext	TokenNameIdentifier
{	TokenNameLBRACE
OverCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose	TokenNameIdentifier
(	TokenNameLPAREN
Raster	TokenNameIdentifier
src	TokenNameIdentifier
,	TokenNameCOMMA
Raster	TokenNameIdentifier
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
WritableRaster	TokenNameIdentifier
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
x	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
w	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y0	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y1	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
+	TokenNamePLUS
dstOut	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
y1	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
src	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
srcPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
dstIn	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
sp	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
w	TokenNameIdentifier
*	TokenNameMULTIPLY
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
sp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
dstM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
dstOut	TokenNameIdentifier
.	TokenNameDOT
setPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
OverCompositeContext_NA	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext	TokenNameIdentifier
{	TokenNameLBRACE
OverCompositeContext_NA	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose	TokenNameIdentifier
(	TokenNameLPAREN
Raster	TokenNameIdentifier
src	TokenNameIdentifier
,	TokenNameCOMMA
Raster	TokenNameIdentifier
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
WritableRaster	TokenNameIdentifier
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
x	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
w	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y0	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y1	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
+	TokenNamePLUS
dstOut	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
y1	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
src	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
srcPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
dstIn	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
srcSP	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
dstSP	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
w	TokenNameIdentifier
*	TokenNameMULTIPLY
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
srcSP	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
dstM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
srcSP	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
dstSP	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
srcSP	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
dstSP	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
srcSP	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
dstSP	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
dstSP	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
srcSP	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
dstSP	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
srcSP	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
dstSP	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
dstSP	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
srcSP	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
dstSP	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
srcSP	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
dstSP	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
dstOut	TokenNameIdentifier
.	TokenNameDOT
setPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
OverCompositeContext_INT_PACK	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext_INT_PACK	TokenNameIdentifier
{	TokenNameLBRACE
OverCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
width	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
height	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
srcAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
srcSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstInPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstInAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstInSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstOutPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstOutAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstOutSp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
srcP	TokenNameIdentifier
,	TokenNameCOMMA
dstInP	TokenNameIdentifier
,	TokenNameCOMMA
dstM	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
height	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
dstOutSp	TokenNameIdentifier
+	TokenNamePLUS
width	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
dstOutSp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcP	TokenNameIdentifier
=	TokenNameEQUAL
srcPixels	TokenNameIdentifier
[	TokenNameLBRACKET
srcSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstInP	TokenNameIdentifier
=	TokenNameEQUAL
dstInPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstInSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstOutSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
dstInP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
&	TokenNameAND
0x00FF0000	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
dstInP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
&	TokenNameAND
0x0000FF00	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
dstInP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
&	TokenNameAND
0x000000FF	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
dstInP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
srcSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
srcAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstInSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstInAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstOutAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
OverCompositeContext_INT_PACK_NA	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext_INT_PACK	TokenNameIdentifier
{	TokenNameLBRACE
OverCompositeContext_INT_PACK_NA	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
width	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
height	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
srcAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
srcSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstInPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstInAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstInSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstOutPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstOutAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstOutSp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
srcP	TokenNameIdentifier
,	TokenNameCOMMA
dstInP	TokenNameIdentifier
,	TokenNameCOMMA
dstM	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
height	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
dstOutSp	TokenNameIdentifier
+	TokenNamePLUS
width	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
dstOutSp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcP	TokenNameIdentifier
=	TokenNameEQUAL
srcPixels	TokenNameIdentifier
[	TokenNameLBRACKET
srcSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstInP	TokenNameIdentifier
=	TokenNameEQUAL
dstInPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstInSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstOutSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
&	TokenNameAND
0x00FF0000	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
dstInP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
&	TokenNameAND
0x0000FF00	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
dstInP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
&	TokenNameAND
0x000000FF	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
dstInP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
srcSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
srcAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstInSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstInAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstOutAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
OverCompositeContext_INT_PACK_UNPRE	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext_INT_PACK	TokenNameIdentifier
{	TokenNameLBRACE
OverCompositeContext_INT_PACK_UNPRE	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
.	TokenNameDOT
isAlphaPremultiplied	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
"OverCompositeContext_INT_PACK_UNPRE is only for"	TokenNameStringLiteral
+	TokenNamePLUS
"sources with unpremultiplied alpha"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
compose	TokenNameIdentifier
(	TokenNameLPAREN
Raster	TokenNameIdentifier
src	TokenNameIdentifier
,	TokenNameCOMMA
Raster	TokenNameIdentifier
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
WritableRaster	TokenNameIdentifier
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ColorModel	TokenNameIdentifier
dstPreCM	TokenNameIdentifier
=	TokenNameEQUAL
dstCM	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
dstCM	TokenNameIdentifier
.	TokenNameDOT
isAlphaPremultiplied	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
dstPreCM	TokenNameIdentifier
=	TokenNameEQUAL
GraphicsUtil	TokenNameIdentifier
.	TokenNameDOT
coerceData	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
WritableRaster	TokenNameIdentifier
)	TokenNameRPAREN
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
precompose	TokenNameIdentifier
(	TokenNameLPAREN
src	TokenNameIdentifier
,	TokenNameCOMMA
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
dstCM	TokenNameIdentifier
.	TokenNameDOT
isAlphaPremultiplied	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
GraphicsUtil	TokenNameIdentifier
.	TokenNameDOT
coerceData	TokenNameIdentifier
(	TokenNameLPAREN
dstOut	TokenNameIdentifier
,	TokenNameCOMMA
dstPreCM	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dstIn	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
GraphicsUtil	TokenNameIdentifier
.	TokenNameDOT
coerceData	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
WritableRaster	TokenNameIdentifier
)	TokenNameRPAREN
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
dstPreCM	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
width	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
height	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
srcAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
srcSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstInPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstInAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstInSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstOutPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstOutAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstOutSp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
srcP	TokenNameIdentifier
,	TokenNameCOMMA
srcM	TokenNameIdentifier
,	TokenNameCOMMA
dstP	TokenNameIdentifier
,	TokenNameCOMMA
dstM	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
height	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
dstOutSp	TokenNameIdentifier
+	TokenNamePLUS
width	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
dstOutSp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcP	TokenNameIdentifier
=	TokenNameEQUAL
srcPixels	TokenNameIdentifier
[	TokenNameLBRACKET
srcSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstP	TokenNameIdentifier
=	TokenNameEQUAL
dstInPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstInSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
srcM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstOutSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
srcSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
srcAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstInSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstInAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstOutAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
InCompositeContext	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext	TokenNameIdentifier
{	TokenNameLBRACE
InCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose	TokenNameIdentifier
(	TokenNameLPAREN
Raster	TokenNameIdentifier
src	TokenNameIdentifier
,	TokenNameCOMMA
Raster	TokenNameIdentifier
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
WritableRaster	TokenNameIdentifier
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
x	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
w	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y0	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y1	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
+	TokenNamePLUS
dstOut	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
y1	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
src	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
srcPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
dstIn	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
sp	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
w	TokenNameIdentifier
*	TokenNameMULTIPLY
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
sp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
srcM	TokenNameIdentifier
=	TokenNameEQUAL
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
dstOut	TokenNameIdentifier
.	TokenNameDOT
setPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
InCompositeContext_INT_PACK	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext_INT_PACK	TokenNameIdentifier
{	TokenNameLBRACE
InCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
width	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
height	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
srcAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
srcSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstInPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstInAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstInSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstOutPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstOutAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstOutSp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
srcP	TokenNameIdentifier
,	TokenNameCOMMA
srcM	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
height	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
dstOutSp	TokenNameIdentifier
+	TokenNamePLUS
width	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
dstOutSp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstInPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstInSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
srcP	TokenNameIdentifier
=	TokenNameEQUAL
srcPixels	TokenNameIdentifier
[	TokenNameLBRACKET
srcSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstOutPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstOutSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
srcSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
srcAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstInSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstInAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstOutAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
OutCompositeContext	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext	TokenNameIdentifier
{	TokenNameLBRACE
OutCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose	TokenNameIdentifier
(	TokenNameLPAREN
Raster	TokenNameIdentifier
src	TokenNameIdentifier
,	TokenNameCOMMA
Raster	TokenNameIdentifier
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
WritableRaster	TokenNameIdentifier
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
x	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
w	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y0	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y1	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
+	TokenNamePLUS
dstOut	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
y1	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
src	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
srcPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
dstIn	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
sp	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
w	TokenNameIdentifier
*	TokenNameMULTIPLY
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
sp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
srcM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
dstOut	TokenNameIdentifier
.	TokenNameDOT
setPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
OutCompositeContext_INT_PACK	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext_INT_PACK	TokenNameIdentifier
{	TokenNameLBRACE
OutCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
width	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
height	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
srcAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
srcSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstInPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstInAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstInSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstOutPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstOutAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstOutSp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
srcP	TokenNameIdentifier
,	TokenNameCOMMA
srcM	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
height	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
dstOutSp	TokenNameIdentifier
+	TokenNamePLUS
width	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
dstOutSp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
(	TokenNameLPAREN
dstInPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstInSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
srcP	TokenNameIdentifier
=	TokenNameEQUAL
srcPixels	TokenNameIdentifier
[	TokenNameLBRACKET
srcSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstOutPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstOutSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
srcSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
srcAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstInSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstInAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstOutAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
AtopCompositeContext	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext	TokenNameIdentifier
{	TokenNameLBRACE
AtopCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose	TokenNameIdentifier
(	TokenNameLPAREN
Raster	TokenNameIdentifier
src	TokenNameIdentifier
,	TokenNameCOMMA
Raster	TokenNameIdentifier
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
WritableRaster	TokenNameIdentifier
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
x	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
w	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y0	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y1	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
+	TokenNamePLUS
dstOut	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
y1	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
src	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
srcPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
dstIn	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
sp	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
w	TokenNameIdentifier
*	TokenNameMULTIPLY
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
sp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
srcM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
dstM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
sp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
dstOut	TokenNameIdentifier
.	TokenNameDOT
setPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
AtopCompositeContext_INT_PACK	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext_INT_PACK	TokenNameIdentifier
{	TokenNameLBRACE
AtopCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
width	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
height	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
srcAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
srcSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstInPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstInAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstInSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstOutPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstOutAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstOutSp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
srcP	TokenNameIdentifier
,	TokenNameCOMMA
srcM	TokenNameIdentifier
,	TokenNameCOMMA
dstP	TokenNameIdentifier
,	TokenNameCOMMA
dstM	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
height	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
dstOutSp	TokenNameIdentifier
+	TokenNamePLUS
width	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
dstOutSp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcP	TokenNameIdentifier
=	TokenNameEQUAL
srcPixels	TokenNameIdentifier
[	TokenNameLBRACKET
srcSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstP	TokenNameIdentifier
=	TokenNameEQUAL
dstInPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstInSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
srcM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstOutSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
srcSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
srcAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstInSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstInAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstOutAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
XorCompositeContext	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext	TokenNameIdentifier
{	TokenNameLBRACE
XorCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose	TokenNameIdentifier
(	TokenNameLPAREN
Raster	TokenNameIdentifier
src	TokenNameIdentifier
,	TokenNameCOMMA
Raster	TokenNameIdentifier
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
WritableRaster	TokenNameIdentifier
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
x	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
w	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y0	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y1	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
+	TokenNamePLUS
dstOut	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
y1	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
src	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
srcPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
dstIn	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
sp	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
w	TokenNameIdentifier
*	TokenNameMULTIPLY
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
sp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
srcM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
dstM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
dstOut	TokenNameIdentifier
.	TokenNameDOT
setPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
XorCompositeContext_INT_PACK	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext_INT_PACK	TokenNameIdentifier
{	TokenNameLBRACE
XorCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
width	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
height	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
srcAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
srcSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstInPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstInAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstInSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstOutPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstOutAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstOutSp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
srcP	TokenNameIdentifier
,	TokenNameCOMMA
srcM	TokenNameIdentifier
,	TokenNameCOMMA
dstP	TokenNameIdentifier
,	TokenNameCOMMA
dstM	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
height	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
dstOutSp	TokenNameIdentifier
+	TokenNamePLUS
width	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
dstOutSp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcP	TokenNameIdentifier
=	TokenNameEQUAL
srcPixels	TokenNameIdentifier
[	TokenNameLBRACKET
srcSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstP	TokenNameIdentifier
=	TokenNameEQUAL
dstInPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstInSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
srcM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstOutSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
srcSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
srcAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstInSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstInAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstOutAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
ArithCompositeContext	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext	TokenNameIdentifier
{	TokenNameLBRACE
float	TokenNamefloat
k1	TokenNameIdentifier
,	TokenNameCOMMA
k2	TokenNameIdentifier
,	TokenNameCOMMA
k3	TokenNameIdentifier
,	TokenNameCOMMA
k4	TokenNameIdentifier
;	TokenNameSEMICOLON
ArithCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k1	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k2	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k3	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k4	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
k1	TokenNameIdentifier
=	TokenNameEQUAL
k1	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
k2	TokenNameIdentifier
=	TokenNameEQUAL
k2	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
k3	TokenNameIdentifier
=	TokenNameEQUAL
k3	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
k4	TokenNameIdentifier
=	TokenNameEQUAL
k4	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose	TokenNameIdentifier
(	TokenNameLPAREN
Raster	TokenNameIdentifier
src	TokenNameIdentifier
,	TokenNameCOMMA
Raster	TokenNameIdentifier
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
WritableRaster	TokenNameIdentifier
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
x	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
w	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
bands	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getNumBands	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y0	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y1	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
+	TokenNamePLUS
dstOut	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
kk1	TokenNameIdentifier
=	TokenNameEQUAL
k1	TokenNameIdentifier
/	TokenNameDIVIDE
255.0f	TokenNameFloatingPointLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
kk4	TokenNameIdentifier
=	TokenNameEQUAL
k4	TokenNameIdentifier
*	TokenNameMULTIPLY
255.0f	TokenNameFloatingPointLiteral
+	TokenNamePLUS
0.5f	TokenNameFloatingPointLiteral
;	TokenNameSEMICOLON
int	TokenNameint
y	TokenNameIdentifier
,	TokenNameCOMMA
i	TokenNameIdentifier
,	TokenNameCOMMA
b	TokenNameIdentifier
,	TokenNameCOMMA
val	TokenNameIdentifier
,	TokenNameCOMMA
max	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
y	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
y1	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
src	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
srcPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
dstIn	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
srcPix	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
max	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
b	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
b	TokenNameIdentifier
<	TokenNameLESS
bands	TokenNameIdentifier
;	TokenNameSEMICOLON
b	TokenNameIdentifier
++	TokenNamePLUS_PLUS
,	TokenNameCOMMA
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
val	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
kk1	TokenNameIdentifier
*	TokenNameMULTIPLY
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
+	TokenNamePLUS
k2	TokenNameIdentifier
*	TokenNameMULTIPLY
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
k3	TokenNameIdentifier
*	TokenNameMULTIPLY
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
kk4	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
val	TokenNameIdentifier
&	TokenNameAND
0xFFFFFF00	TokenNameIntegerLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
val	TokenNameIdentifier
&	TokenNameAND
0x80000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
val	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
else	TokenNameelse
val	TokenNameIdentifier
=	TokenNameEQUAL
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
val	TokenNameIdentifier
>	TokenNameGREATER
max	TokenNameIdentifier
)	TokenNameRPAREN
max	TokenNameIdentifier
=	TokenNameEQUAL
val	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
val	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
val	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
kk1	TokenNameIdentifier
*	TokenNameMULTIPLY
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
+	TokenNamePLUS
k2	TokenNameIdentifier
*	TokenNameMULTIPLY
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
k3	TokenNameIdentifier
*	TokenNameMULTIPLY
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
kk4	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
val	TokenNameIdentifier
&	TokenNameAND
0xFFFFFF00	TokenNameIntegerLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
val	TokenNameIdentifier
&	TokenNameAND
0x80000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
val	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
else	TokenNameelse
val	TokenNameIdentifier
=	TokenNameEQUAL
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
val	TokenNameIdentifier
>	TokenNameGREATER
max	TokenNameIdentifier
)	TokenNameRPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
val	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
max	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
dstOut	TokenNameIdentifier
.	TokenNameDOT
setPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
ArithCompositeContext_INT_PACK	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext_INT_PACK	TokenNameIdentifier
{	TokenNameLBRACE
float	TokenNamefloat
k1	TokenNameIdentifier
,	TokenNameCOMMA
k2	TokenNameIdentifier
,	TokenNameCOMMA
k3	TokenNameIdentifier
,	TokenNameCOMMA
k4	TokenNameIdentifier
;	TokenNameSEMICOLON
ArithCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k1	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k2	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k3	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k4	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
k1	TokenNameIdentifier
=	TokenNameEQUAL
k1	TokenNameIdentifier
/	TokenNameDIVIDE
255.0f	TokenNameFloatingPointLiteral
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
k2	TokenNameIdentifier
=	TokenNameEQUAL
k2	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
k3	TokenNameIdentifier
=	TokenNameEQUAL
k3	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
k4	TokenNameIdentifier
=	TokenNameEQUAL
k4	TokenNameIdentifier
*	TokenNameMULTIPLY
255.0f	TokenNameFloatingPointLiteral
+	TokenNamePLUS
0.5f	TokenNameFloatingPointLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
width	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
height	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
srcAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
srcSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstInPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstInAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstInSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstOutPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstOutAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstOutSp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
srcP	TokenNameIdentifier
,	TokenNameCOMMA
dstP	TokenNameIdentifier
,	TokenNameCOMMA
a	TokenNameIdentifier
,	TokenNameCOMMA
r	TokenNameIdentifier
,	TokenNameCOMMA
g	TokenNameIdentifier
,	TokenNameCOMMA
b	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
height	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
dstOutSp	TokenNameIdentifier
+	TokenNamePLUS
width	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
dstOutSp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcP	TokenNameIdentifier
=	TokenNameEQUAL
srcPixels	TokenNameIdentifier
[	TokenNameLBRACKET
srcSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstP	TokenNameIdentifier
=	TokenNameEQUAL
dstInPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstInSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
a	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
k1	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
k2	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
k3	TokenNameIdentifier
+	TokenNamePLUS
k4	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
a	TokenNameIdentifier
&	TokenNameAND
0xFFFFFF00	TokenNameIntegerLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
a	TokenNameIdentifier
&	TokenNameAND
0x80000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
a	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
else	TokenNameelse
a	TokenNameIdentifier
=	TokenNameEQUAL
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
r	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
k1	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
k2	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
k3	TokenNameIdentifier
+	TokenNamePLUS
k4	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
r	TokenNameIdentifier
&	TokenNameAND
0xFFFFFF00	TokenNameIntegerLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
r	TokenNameIdentifier
&	TokenNameAND
0x80000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
r	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
else	TokenNameelse
r	TokenNameIdentifier
=	TokenNameEQUAL
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
a	TokenNameIdentifier
<	TokenNameLESS
r	TokenNameIdentifier
)	TokenNameRPAREN
a	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
;	TokenNameSEMICOLON
g	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
k1	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
k2	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
k3	TokenNameIdentifier
+	TokenNamePLUS
k4	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
g	TokenNameIdentifier
&	TokenNameAND
0xFFFFFF00	TokenNameIntegerLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
g	TokenNameIdentifier
&	TokenNameAND
0x80000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
g	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
else	TokenNameelse
g	TokenNameIdentifier
=	TokenNameEQUAL
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
a	TokenNameIdentifier
<	TokenNameLESS
g	TokenNameIdentifier
)	TokenNameRPAREN
a	TokenNameIdentifier
=	TokenNameEQUAL
g	TokenNameIdentifier
;	TokenNameSEMICOLON
b	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
(	TokenNameLPAREN
dstP	TokenNameIdentifier
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
k1	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
srcP	TokenNameIdentifier
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
k2	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
dstP	TokenNameIdentifier
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
k3	TokenNameIdentifier
+	TokenNamePLUS
k4	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
b	TokenNameIdentifier
&	TokenNameAND
0xFFFFFF00	TokenNameIntegerLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
b	TokenNameIdentifier
&	TokenNameAND
0x80000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
b	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
else	TokenNameelse
b	TokenNameIdentifier
=	TokenNameEQUAL
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
a	TokenNameIdentifier
<	TokenNameLESS
b	TokenNameIdentifier
)	TokenNameRPAREN
a	TokenNameIdentifier
=	TokenNameEQUAL
b	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstOutSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
a	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
r	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
g	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
b	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
srcSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
srcAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstInSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstInAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstOutAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
ArithCompositeContext_INT_PACK_LUT	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext_INT_PACK	TokenNameIdentifier
{	TokenNameLBRACE
byte	TokenNamebyte
[	TokenNameLBRACKET
]	TokenNameRBRACKET
lut	TokenNameIdentifier
;	TokenNameSEMICOLON
ArithCompositeContext_INT_PACK_LUT	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k1	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k2	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k3	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k4	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k1	TokenNameIdentifier
=	TokenNameEQUAL
k1	TokenNameIdentifier
/	TokenNameDIVIDE
255.0f	TokenNameFloatingPointLiteral
;	TokenNameSEMICOLON
k4	TokenNameIdentifier
=	TokenNameEQUAL
k4	TokenNameIdentifier
*	TokenNameMULTIPLY
255.0f	TokenNameFloatingPointLiteral
+	TokenNamePLUS
0.5f	TokenNameFloatingPointLiteral
;	TokenNameSEMICOLON
int	TokenNameint
sz	TokenNameIdentifier
=	TokenNameEQUAL
256	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
256	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
lut	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
byte	TokenNamebyte
[	TokenNameLBRACKET
sz	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
val	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
sz	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
val	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
int	TokenNameint
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
i	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
(	TokenNameLPAREN
i	TokenNameIdentifier
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
k1	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
i	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
k2	TokenNameIdentifier
+	TokenNamePLUS
(	TokenNameLPAREN
i	TokenNameIdentifier
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
*	TokenNameMULTIPLY
k3	TokenNameIdentifier
+	TokenNamePLUS
k4	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
val	TokenNameIdentifier
&	TokenNameAND
0xFFFFFF00	TokenNameIntegerLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
val	TokenNameIdentifier
&	TokenNameAND
0x80000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
val	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
else	TokenNameelse
val	TokenNameIdentifier
=	TokenNameEQUAL
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
lut	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
val	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
width	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
height	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
srcAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
srcSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstInPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstInAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstInSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstOutPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstOutAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstOutSp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
byte	TokenNamebyte
[	TokenNameLBRACKET
]	TokenNameRBRACKET
workTbl	TokenNameIdentifier
=	TokenNameEQUAL
lut	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
srcP	TokenNameIdentifier
,	TokenNameCOMMA
dstP	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
height	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
dstOutSp	TokenNameIdentifier
+	TokenNamePLUS
width	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
dstOutSp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcP	TokenNameIdentifier
=	TokenNameEQUAL
srcPixels	TokenNameIdentifier
[	TokenNameLBRACKET
srcSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstP	TokenNameIdentifier
=	TokenNameEQUAL
dstInPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstInSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
a	TokenNameIdentifier
=	TokenNameEQUAL
0xFF	TokenNameIntegerLiteral
&	TokenNameAND
workTbl	TokenNameIdentifier
[	TokenNameLBRACKET
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF00	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
r	TokenNameIdentifier
=	TokenNameEQUAL
0xFF	TokenNameIntegerLiteral
&	TokenNameAND
workTbl	TokenNameIdentifier
[	TokenNameLBRACKET
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF00	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0x00FF	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
g	TokenNameIdentifier
=	TokenNameEQUAL
0xFF	TokenNameIntegerLiteral
&	TokenNameAND
workTbl	TokenNameIdentifier
[	TokenNameLBRACKET
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF00	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0x00FF	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
b	TokenNameIdentifier
=	TokenNameEQUAL
0xFF	TokenNameIntegerLiteral
&	TokenNameAND
workTbl	TokenNameIdentifier
[	TokenNameLBRACKET
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcP	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF00	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
dstP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0x00FF	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
r	TokenNameIdentifier
>	TokenNameGREATER
a	TokenNameIdentifier
)	TokenNameRPAREN
a	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
g	TokenNameIdentifier
>	TokenNameGREATER
a	TokenNameIdentifier
)	TokenNameRPAREN
a	TokenNameIdentifier
=	TokenNameEQUAL
g	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
b	TokenNameIdentifier
>	TokenNameGREATER
a	TokenNameIdentifier
)	TokenNameRPAREN
a	TokenNameIdentifier
=	TokenNameEQUAL
b	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstOutSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
a	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
r	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
g	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
b	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
srcSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
srcAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstInSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstInAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstOutAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
MultiplyCompositeContext	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext	TokenNameIdentifier
{	TokenNameLBRACE
MultiplyCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose	TokenNameIdentifier
(	TokenNameLPAREN
Raster	TokenNameIdentifier
src	TokenNameIdentifier
,	TokenNameCOMMA
Raster	TokenNameIdentifier
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
WritableRaster	TokenNameIdentifier
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
x	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
w	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y0	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y1	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
+	TokenNamePLUS
dstOut	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
srcM	TokenNameIdentifier
,	TokenNameCOMMA
dstM	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
y1	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
src	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
srcPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
dstIn	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
sp	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
w	TokenNameIdentifier
*	TokenNameMULTIPLY
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
sp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcM	TokenNameIdentifier
=	TokenNameEQUAL
255	TokenNameIntegerLiteral
-	TokenNameMINUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstM	TokenNameIdentifier
=	TokenNameEQUAL
255	TokenNameIntegerLiteral
-	TokenNameMINUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
-	TokenNameMINUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
dstOut	TokenNameIdentifier
.	TokenNameDOT
setPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
MultiplyCompositeContext_INT_PACK	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext_INT_PACK	TokenNameIdentifier
{	TokenNameLBRACE
MultiplyCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
width	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
height	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
srcAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
srcSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstInPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstInAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstInSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstOutPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstOutAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstOutSp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
srcP	TokenNameIdentifier
,	TokenNameCOMMA
srcA	TokenNameIdentifier
,	TokenNameCOMMA
srcR	TokenNameIdentifier
,	TokenNameCOMMA
srcG	TokenNameIdentifier
,	TokenNameCOMMA
srcB	TokenNameIdentifier
,	TokenNameCOMMA
srcM	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
dstP	TokenNameIdentifier
,	TokenNameCOMMA
dstA	TokenNameIdentifier
,	TokenNameCOMMA
dstR	TokenNameIdentifier
,	TokenNameCOMMA
dstG	TokenNameIdentifier
,	TokenNameCOMMA
dstB	TokenNameIdentifier
,	TokenNameCOMMA
dstM	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
height	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
dstOutSp	TokenNameIdentifier
+	TokenNamePLUS
width	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
dstOutSp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcP	TokenNameIdentifier
=	TokenNameEQUAL
srcPixels	TokenNameIdentifier
[	TokenNameLBRACKET
srcSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstP	TokenNameIdentifier
=	TokenNameEQUAL
dstInPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstInSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
srcA	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dstA	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
srcR	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstR	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
srcG	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstG	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
srcB	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstB	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
srcM	TokenNameIdentifier
=	TokenNameEQUAL
255	TokenNameIntegerLiteral
-	TokenNameMINUS
dstA	TokenNameIdentifier
;	TokenNameSEMICOLON
dstM	TokenNameIdentifier
=	TokenNameEQUAL
255	TokenNameIntegerLiteral
-	TokenNameMINUS
srcA	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstOutSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcR	TokenNameIdentifier
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
dstR	TokenNameIdentifier
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
srcR	TokenNameIdentifier
*	TokenNameMULTIPLY
dstR	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcG	TokenNameIdentifier
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
dstG	TokenNameIdentifier
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
srcG	TokenNameIdentifier
*	TokenNameMULTIPLY
dstG	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF000000	TokenNameIntegerLiteral
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcB	TokenNameIdentifier
*	TokenNameMULTIPLY
srcM	TokenNameIdentifier
+	TokenNamePLUS
dstB	TokenNameIdentifier
*	TokenNameMULTIPLY
dstM	TokenNameIdentifier
+	TokenNamePLUS
srcB	TokenNameIdentifier
*	TokenNameMULTIPLY
dstB	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
srcA	TokenNameIdentifier
+	TokenNamePLUS
dstA	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
(	TokenNameLPAREN
srcA	TokenNameIdentifier
*	TokenNameMULTIPLY
dstA	TokenNameIdentifier
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
srcSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
srcAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstInSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstInAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstOutAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
ScreenCompositeContext	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext	TokenNameIdentifier
{	TokenNameLBRACE
ScreenCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose	TokenNameIdentifier
(	TokenNameLPAREN
Raster	TokenNameIdentifier
src	TokenNameIdentifier
,	TokenNameCOMMA
Raster	TokenNameIdentifier
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
WritableRaster	TokenNameIdentifier
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
x	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
w	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y0	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y1	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
+	TokenNamePLUS
dstOut	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
y1	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
src	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
srcPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
dstIn	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
sp	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
w	TokenNameIdentifier
*	TokenNameMULTIPLY
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
sp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
iSrcPix	TokenNameIdentifier
=	TokenNameEQUAL
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
iDstPix	TokenNameIdentifier
=	TokenNameEQUAL
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
iSrcPix	TokenNameIdentifier
+	TokenNamePLUS
iDstPix	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
(	TokenNameLPAREN
iDstPix	TokenNameIdentifier
*	TokenNameMULTIPLY
iSrcPix	TokenNameIdentifier
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
iSrcPix	TokenNameIdentifier
=	TokenNameEQUAL
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
iDstPix	TokenNameIdentifier
=	TokenNameEQUAL
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
iSrcPix	TokenNameIdentifier
+	TokenNamePLUS
iDstPix	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
(	TokenNameLPAREN
iDstPix	TokenNameIdentifier
*	TokenNameMULTIPLY
iSrcPix	TokenNameIdentifier
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
iSrcPix	TokenNameIdentifier
=	TokenNameEQUAL
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
iDstPix	TokenNameIdentifier
=	TokenNameEQUAL
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
iSrcPix	TokenNameIdentifier
+	TokenNamePLUS
iDstPix	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
(	TokenNameLPAREN
iDstPix	TokenNameIdentifier
*	TokenNameMULTIPLY
iSrcPix	TokenNameIdentifier
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
iSrcPix	TokenNameIdentifier
=	TokenNameEQUAL
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
iDstPix	TokenNameIdentifier
=	TokenNameEQUAL
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
iSrcPix	TokenNameIdentifier
+	TokenNamePLUS
iDstPix	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
(	TokenNameLPAREN
iDstPix	TokenNameIdentifier
*	TokenNameMULTIPLY
iSrcPix	TokenNameIdentifier
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
dstOut	TokenNameIdentifier
.	TokenNameDOT
setPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
ScreenCompositeContext_INT_PACK	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext_INT_PACK	TokenNameIdentifier
{	TokenNameLBRACE
ScreenCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
width	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
height	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
srcAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
srcSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstInPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstInAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstInSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstOutPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstOutAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstOutSp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
srcP	TokenNameIdentifier
,	TokenNameCOMMA
srcA	TokenNameIdentifier
,	TokenNameCOMMA
srcR	TokenNameIdentifier
,	TokenNameCOMMA
srcG	TokenNameIdentifier
,	TokenNameCOMMA
srcB	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
dstP	TokenNameIdentifier
,	TokenNameCOMMA
dstA	TokenNameIdentifier
,	TokenNameCOMMA
dstR	TokenNameIdentifier
,	TokenNameCOMMA
dstG	TokenNameIdentifier
,	TokenNameCOMMA
dstB	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
height	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
dstOutSp	TokenNameIdentifier
+	TokenNamePLUS
width	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
dstOutSp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcP	TokenNameIdentifier
=	TokenNameEQUAL
srcPixels	TokenNameIdentifier
[	TokenNameLBRACKET
srcSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstP	TokenNameIdentifier
=	TokenNameEQUAL
dstInPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstInSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
srcA	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dstA	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
srcR	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstR	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
srcG	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstG	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
srcB	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstB	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstOutPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstOutSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
srcR	TokenNameIdentifier
+	TokenNamePLUS
dstR	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
(	TokenNameLPAREN
srcR	TokenNameIdentifier
*	TokenNameMULTIPLY
dstR	TokenNameIdentifier
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
srcG	TokenNameIdentifier
+	TokenNamePLUS
dstG	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
(	TokenNameLPAREN
srcG	TokenNameIdentifier
*	TokenNameMULTIPLY
dstG	TokenNameIdentifier
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
srcB	TokenNameIdentifier
+	TokenNamePLUS
dstB	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
(	TokenNameLPAREN
srcB	TokenNameIdentifier
*	TokenNameMULTIPLY
dstB	TokenNameIdentifier
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
(	TokenNameLPAREN
srcA	TokenNameIdentifier
+	TokenNamePLUS
dstA	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
(	TokenNameLPAREN
srcA	TokenNameIdentifier
*	TokenNameMULTIPLY
dstA	TokenNameIdentifier
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
srcSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
srcAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstInSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstInAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstOutAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
DarkenCompositeContext	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext	TokenNameIdentifier
{	TokenNameLBRACE
DarkenCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose	TokenNameIdentifier
(	TokenNameLPAREN
Raster	TokenNameIdentifier
src	TokenNameIdentifier
,	TokenNameCOMMA
Raster	TokenNameIdentifier
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
WritableRaster	TokenNameIdentifier
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
x	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
w	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y0	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y1	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
+	TokenNamePLUS
dstOut	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
sp	TokenNameIdentifier
,	TokenNameCOMMA
srcM	TokenNameIdentifier
,	TokenNameCOMMA
dstM	TokenNameIdentifier
,	TokenNameCOMMA
t1	TokenNameIdentifier
,	TokenNameCOMMA
t2	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
y1	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
src	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
srcPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
dstIn	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sp	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
w	TokenNameIdentifier
*	TokenNameMULTIPLY
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
sp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcM	TokenNameIdentifier
=	TokenNameEQUAL
255	TokenNameIntegerLiteral
-	TokenNameMINUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstM	TokenNameIdentifier
=	TokenNameEQUAL
255	TokenNameIntegerLiteral
-	TokenNameMINUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
t1	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcM	TokenNameIdentifier
*	TokenNameMULTIPLY
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
t2	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
dstM	TokenNameIdentifier
*	TokenNameMULTIPLY
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
t1	TokenNameIdentifier
>	TokenNameGREATER
t2	TokenNameIdentifier
)	TokenNameRPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
t2	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
t1	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
t1	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcM	TokenNameIdentifier
*	TokenNameMULTIPLY
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
t2	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
dstM	TokenNameIdentifier
*	TokenNameMULTIPLY
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
t1	TokenNameIdentifier
>	TokenNameGREATER
t2	TokenNameIdentifier
)	TokenNameRPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
t2	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
t1	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
t1	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcM	TokenNameIdentifier
*	TokenNameMULTIPLY
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
t2	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
dstM	TokenNameIdentifier
*	TokenNameMULTIPLY
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
t1	TokenNameIdentifier
>	TokenNameGREATER
t2	TokenNameIdentifier
)	TokenNameRPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
t2	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
t1	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
-	TokenNameMINUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
dstOut	TokenNameIdentifier
.	TokenNameDOT
setPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
DarkenCompositeContext_INT_PACK	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext_INT_PACK	TokenNameIdentifier
{	TokenNameLBRACE
DarkenCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
width	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
height	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
srcAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
srcSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstInPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstInAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstInSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstOutPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstOutAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstOutSp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
srcP	TokenNameIdentifier
,	TokenNameCOMMA
srcM	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
dstP	TokenNameIdentifier
,	TokenNameCOMMA
dstM	TokenNameIdentifier
,	TokenNameCOMMA
dstA	TokenNameIdentifier
,	TokenNameCOMMA
dstR	TokenNameIdentifier
,	TokenNameCOMMA
dstG	TokenNameIdentifier
,	TokenNameCOMMA
dstB	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
srcV	TokenNameIdentifier
,	TokenNameCOMMA
dstV	TokenNameIdentifier
,	TokenNameCOMMA
tmp	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
height	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
dstOutSp	TokenNameIdentifier
+	TokenNamePLUS
width	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
dstOutSp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcP	TokenNameIdentifier
=	TokenNameEQUAL
srcPixels	TokenNameIdentifier
[	TokenNameLBRACKET
srcSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstP	TokenNameIdentifier
=	TokenNameEQUAL
dstInPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstInSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
srcV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dstV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
srcM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
dstV	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
srcV	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstA	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcV	TokenNameIdentifier
+	TokenNamePLUS
dstV	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
(	TokenNameLPAREN
srcV	TokenNameIdentifier
*	TokenNameMULTIPLY
dstV	TokenNameIdentifier
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
srcV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstR	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcM	TokenNameIdentifier
*	TokenNameMULTIPLY
srcV	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
dstV	TokenNameIdentifier
;	TokenNameSEMICOLON
tmp	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
dstM	TokenNameIdentifier
*	TokenNameMULTIPLY
dstV	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
srcV	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dstR	TokenNameIdentifier
>	TokenNameGREATER
tmp	TokenNameIdentifier
)	TokenNameRPAREN
dstR	TokenNameIdentifier
=	TokenNameEQUAL
tmp	TokenNameIdentifier
;	TokenNameSEMICOLON
srcV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstG	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcM	TokenNameIdentifier
*	TokenNameMULTIPLY
srcV	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
dstV	TokenNameIdentifier
;	TokenNameSEMICOLON
tmp	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
dstM	TokenNameIdentifier
*	TokenNameMULTIPLY
dstV	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
srcV	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dstG	TokenNameIdentifier
>	TokenNameGREATER
tmp	TokenNameIdentifier
)	TokenNameRPAREN
dstG	TokenNameIdentifier
=	TokenNameEQUAL
tmp	TokenNameIdentifier
;	TokenNameSEMICOLON
srcV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstB	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcM	TokenNameIdentifier
*	TokenNameMULTIPLY
srcV	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
dstV	TokenNameIdentifier
;	TokenNameSEMICOLON
tmp	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
dstM	TokenNameIdentifier
*	TokenNameMULTIPLY
dstV	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
srcV	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dstB	TokenNameIdentifier
>	TokenNameGREATER
tmp	TokenNameIdentifier
)	TokenNameRPAREN
dstB	TokenNameIdentifier
=	TokenNameEQUAL
tmp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstA	TokenNameIdentifier
&=	TokenNameAND_EQUAL
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstR	TokenNameIdentifier
&=	TokenNameAND_EQUAL
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstG	TokenNameIdentifier
&=	TokenNameAND_EQUAL
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstB	TokenNameIdentifier
&=	TokenNameAND_EQUAL
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstOutPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstOutSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
dstA	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
dstR	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
dstG	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
dstB	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
srcSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
srcAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstInSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstInAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstOutAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
LightenCompositeContext	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext	TokenNameIdentifier
{	TokenNameLBRACE
LightenCompositeContext	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose	TokenNameIdentifier
(	TokenNameLPAREN
Raster	TokenNameIdentifier
src	TokenNameIdentifier
,	TokenNameCOMMA
Raster	TokenNameIdentifier
dstIn	TokenNameIdentifier
,	TokenNameCOMMA
WritableRaster	TokenNameIdentifier
dstOut	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
x	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
w	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y0	TokenNameIdentifier
=	TokenNameEQUAL
dstOut	TokenNameIdentifier
.	TokenNameDOT
getMinY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
y1	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
+	TokenNamePLUS
dstOut	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
sp	TokenNameIdentifier
,	TokenNameCOMMA
srcM	TokenNameIdentifier
,	TokenNameCOMMA
dstM	TokenNameIdentifier
,	TokenNameCOMMA
t1	TokenNameIdentifier
,	TokenNameCOMMA
t2	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
y0	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
y1	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
srcPix	TokenNameIdentifier
=	TokenNameEQUAL
src	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
srcPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
=	TokenNameEQUAL
dstIn	TokenNameIdentifier
.	TokenNameDOT
getPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sp	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
w	TokenNameIdentifier
*	TokenNameMULTIPLY
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
sp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcM	TokenNameIdentifier
=	TokenNameEQUAL
255	TokenNameIntegerLiteral
-	TokenNameMINUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstM	TokenNameIdentifier
=	TokenNameEQUAL
255	TokenNameIntegerLiteral
-	TokenNameMINUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
t1	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcM	TokenNameIdentifier
*	TokenNameMULTIPLY
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
t2	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
dstM	TokenNameIdentifier
*	TokenNameMULTIPLY
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
t1	TokenNameIdentifier
>	TokenNameGREATER
t2	TokenNameIdentifier
)	TokenNameRPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
t1	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
t2	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
t1	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcM	TokenNameIdentifier
*	TokenNameMULTIPLY
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
t2	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
dstM	TokenNameIdentifier
*	TokenNameMULTIPLY
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
t1	TokenNameIdentifier
>	TokenNameGREATER
t2	TokenNameIdentifier
)	TokenNameRPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
t1	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
t2	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
t1	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcM	TokenNameIdentifier
*	TokenNameMULTIPLY
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
t2	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
dstM	TokenNameIdentifier
*	TokenNameMULTIPLY
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
t1	TokenNameIdentifier
>	TokenNameGREATER
t2	TokenNameIdentifier
)	TokenNameRPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
t1	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
t2	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
-	TokenNameMINUS
(	TokenNameLPAREN
(	TokenNameLPAREN
dstPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
srcPix	TokenNameIdentifier
[	TokenNameLBRACKET
sp	TokenNameIdentifier
]	TokenNameRBRACKET
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
sp	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
dstOut	TokenNameIdentifier
.	TokenNameDOT
setPixels	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
,	TokenNameCOMMA
w	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
dstPix	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
LightenCompositeContext_INT_PACK	TokenNameIdentifier
extends	TokenNameextends
AlphaPreCompositeContext_INT_PACK	TokenNameIdentifier
{	TokenNameLBRACE
LightenCompositeContext_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
ColorModel	TokenNameIdentifier
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
ColorModel	TokenNameIdentifier
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
srcCM	TokenNameIdentifier
,	TokenNameCOMMA
dstCM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
precompose_INT_PACK	TokenNameIdentifier
(	TokenNameLPAREN
final	TokenNamefinal
int	TokenNameint
width	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
height	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
srcPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
srcAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
srcSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstInPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstInAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstInSp	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
dstOutPixels	TokenNameIdentifier
,	TokenNameCOMMA
final	TokenNamefinal
int	TokenNameint
dstOutAdjust	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
dstOutSp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
norm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
255	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
pt5	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
23	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
srcP	TokenNameIdentifier
,	TokenNameCOMMA
srcM	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
dstP	TokenNameIdentifier
,	TokenNameCOMMA
dstM	TokenNameIdentifier
,	TokenNameCOMMA
dstA	TokenNameIdentifier
,	TokenNameCOMMA
dstR	TokenNameIdentifier
,	TokenNameCOMMA
dstG	TokenNameIdentifier
,	TokenNameCOMMA
dstB	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
srcV	TokenNameIdentifier
,	TokenNameCOMMA
dstV	TokenNameIdentifier
,	TokenNameCOMMA
tmp	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
y	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
y	TokenNameIdentifier
<	TokenNameLESS
height	TokenNameIdentifier
;	TokenNameSEMICOLON
y	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
dstOutSp	TokenNameIdentifier
+	TokenNamePLUS
width	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
dstOutSp	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
srcP	TokenNameIdentifier
=	TokenNameEQUAL
srcPixels	TokenNameIdentifier
[	TokenNameLBRACKET
srcSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
dstP	TokenNameIdentifier
=	TokenNameEQUAL
dstInPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstInSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
srcV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dstV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
srcM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
dstV	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
255	TokenNameIntegerLiteral
-	TokenNameMINUS
srcV	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
;	TokenNameSEMICOLON
dstA	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcV	TokenNameIdentifier
+	TokenNamePLUS
dstV	TokenNameIdentifier
-	TokenNameMINUS
(	TokenNameLPAREN
(	TokenNameLPAREN
srcV	TokenNameIdentifier
*	TokenNameMULTIPLY
dstV	TokenNameIdentifier
*	TokenNameMULTIPLY
norm	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
srcV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstR	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcM	TokenNameIdentifier
*	TokenNameMULTIPLY
srcV	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
dstV	TokenNameIdentifier
;	TokenNameSEMICOLON
tmp	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
dstM	TokenNameIdentifier
*	TokenNameMULTIPLY
dstV	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
srcV	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dstR	TokenNameIdentifier
<	TokenNameLESS
tmp	TokenNameIdentifier
)	TokenNameRPAREN
dstR	TokenNameIdentifier
=	TokenNameEQUAL
tmp	TokenNameIdentifier
;	TokenNameSEMICOLON
srcV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
>>	TokenNameRIGHT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstG	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcM	TokenNameIdentifier
*	TokenNameMULTIPLY
srcV	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
dstV	TokenNameIdentifier
;	TokenNameSEMICOLON
tmp	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
dstM	TokenNameIdentifier
*	TokenNameMULTIPLY
dstV	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
srcV	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dstG	TokenNameIdentifier
<	TokenNameLESS
tmp	TokenNameIdentifier
)	TokenNameRPAREN
dstG	TokenNameIdentifier
=	TokenNameEQUAL
tmp	TokenNameIdentifier
;	TokenNameSEMICOLON
srcV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
srcP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstV	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dstP	TokenNameIdentifier
)	TokenNameRPAREN
&	TokenNameAND
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstB	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
srcM	TokenNameIdentifier
*	TokenNameMULTIPLY
srcV	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
dstV	TokenNameIdentifier
;	TokenNameSEMICOLON
tmp	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
dstM	TokenNameIdentifier
*	TokenNameMULTIPLY
dstV	TokenNameIdentifier
+	TokenNamePLUS
pt5	TokenNameIdentifier
)	TokenNameRPAREN
>>>	TokenNameUNSIGNED_RIGHT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
srcV	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dstB	TokenNameIdentifier
<	TokenNameLESS
tmp	TokenNameIdentifier
)	TokenNameRPAREN
dstB	TokenNameIdentifier
=	TokenNameEQUAL
tmp	TokenNameIdentifier
;	TokenNameSEMICOLON
dstA	TokenNameIdentifier
&=	TokenNameAND_EQUAL
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstR	TokenNameIdentifier
&=	TokenNameAND_EQUAL
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstG	TokenNameIdentifier
&=	TokenNameAND_EQUAL
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstB	TokenNameIdentifier
&=	TokenNameAND_EQUAL
0xFF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
dstOutPixels	TokenNameIdentifier
[	TokenNameLBRACKET
dstOutSp	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
dstA	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
dstR	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
(	TokenNameLPAREN
dstG	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
|	TokenNameOR
dstB	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
srcSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
srcAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstInSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstInAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
dstOutSp	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dstOutAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
