package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
ext	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
image	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
class	TokenNameclass
CompositeRule	TokenNameIdentifier
implements	TokenNameimplements
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
Serializable	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
RULE_OVER	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
RULE_IN	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
RULE_OUT	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
RULE_ATOP	TokenNameIdentifier
=	TokenNameEQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
RULE_XOR	TokenNameIdentifier
=	TokenNameEQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
RULE_ARITHMETIC	TokenNameIdentifier
=	TokenNameEQUAL
6	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
RULE_MULTIPLY	TokenNameIdentifier
=	TokenNameEQUAL
7	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
RULE_SCREEN	TokenNameIdentifier
=	TokenNameEQUAL
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
RULE_DARKEN	TokenNameIdentifier
=	TokenNameEQUAL
9	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
RULE_LIGHTEN	TokenNameIdentifier
=	TokenNameEQUAL
10	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CompositeRule	TokenNameIdentifier
OVER	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CompositeRule	TokenNameIdentifier
(	TokenNameLPAREN
RULE_OVER	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CompositeRule	TokenNameIdentifier
IN	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CompositeRule	TokenNameIdentifier
(	TokenNameLPAREN
RULE_IN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CompositeRule	TokenNameIdentifier
OUT	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CompositeRule	TokenNameIdentifier
(	TokenNameLPAREN
RULE_OUT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CompositeRule	TokenNameIdentifier
ATOP	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CompositeRule	TokenNameIdentifier
(	TokenNameLPAREN
RULE_ATOP	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CompositeRule	TokenNameIdentifier
XOR	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CompositeRule	TokenNameIdentifier
(	TokenNameLPAREN
RULE_XOR	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
CompositeRule	TokenNameIdentifier
ARITHMETIC	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
k1	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k2	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k3	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k4	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
CompositeRule	TokenNameIdentifier
(	TokenNameLPAREN
k1	TokenNameIdentifier
,	TokenNameCOMMA
k2	TokenNameIdentifier
,	TokenNameCOMMA
k3	TokenNameIdentifier
,	TokenNameCOMMA
k4	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CompositeRule	TokenNameIdentifier
MULTIPLY	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CompositeRule	TokenNameIdentifier
(	TokenNameLPAREN
RULE_MULTIPLY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CompositeRule	TokenNameIdentifier
SCREEN	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CompositeRule	TokenNameIdentifier
(	TokenNameLPAREN
RULE_SCREEN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CompositeRule	TokenNameIdentifier
DARKEN	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CompositeRule	TokenNameIdentifier
(	TokenNameLPAREN
RULE_DARKEN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
CompositeRule	TokenNameIdentifier
LIGHTEN	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CompositeRule	TokenNameIdentifier
(	TokenNameLPAREN
RULE_LIGHTEN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
int	TokenNameint
getRule	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
rule	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
int	TokenNameint
rule	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
float	TokenNamefloat
k1	TokenNameIdentifier
,	TokenNameCOMMA
k2	TokenNameIdentifier
,	TokenNameCOMMA
k3	TokenNameIdentifier
,	TokenNameCOMMA
k4	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
CompositeRule	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
rule	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
rule	TokenNameIdentifier
=	TokenNameEQUAL
rule	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
CompositeRule	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
k1	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k2	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k3	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
k4	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
rule	TokenNameIdentifier
=	TokenNameEQUAL
RULE_ARITHMETIC	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
k1	TokenNameIdentifier
=	TokenNameEQUAL
k1	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
k2	TokenNameIdentifier
=	TokenNameEQUAL
k2	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
k3	TokenNameIdentifier
=	TokenNameEQUAL
k3	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
k4	TokenNameIdentifier
=	TokenNameEQUAL
k4	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getCoefficients	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
rule	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
RULE_ARITHMETIC	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
k1	TokenNameIdentifier
,	TokenNameCOMMA
k2	TokenNameIdentifier
,	TokenNameCOMMA
k3	TokenNameIdentifier
,	TokenNameCOMMA
k4	TokenNameIdentifier
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Object	TokenNameIdentifier
readResolve	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
ObjectStreamException	TokenNameIdentifier
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
rule	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
RULE_OVER	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
OVER	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_IN	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
IN	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_OUT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
OUT	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_ATOP	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
ATOP	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_XOR	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
XOR	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_ARITHMETIC	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
this	TokenNamethis
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_MULTIPLY	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
MULTIPLY	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_SCREEN	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
SCREEN	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_DARKEN	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
DARKEN	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_LIGHTEN	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
LIGHTEN	TokenNameIdentifier
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
throw	TokenNamethrow
new	TokenNamenew
Error	TokenNameIdentifier
(	TokenNameLPAREN
"Unknown Composite Rule type"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
rule	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
RULE_OVER	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"[CompositeRule: OVER]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_IN	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"[CompositeRule: IN]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_OUT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"[CompositeRule: OUT]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_ATOP	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"[CompositeRule: ATOP]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_XOR	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"[CompositeRule: XOR]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_ARITHMETIC	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
(	TokenNameLPAREN
"[CompositeRule: ARITHMATIC k1:"	TokenNameStringLiteral
+	TokenNamePLUS
k1	TokenNameIdentifier
+	TokenNamePLUS
" k2: "	TokenNameStringLiteral
+	TokenNamePLUS
k2	TokenNameIdentifier
+	TokenNamePLUS
" k3: "	TokenNameStringLiteral
+	TokenNamePLUS
k3	TokenNameIdentifier
+	TokenNamePLUS
" k4: "	TokenNameStringLiteral
+	TokenNamePLUS
k4	TokenNameIdentifier
+	TokenNamePLUS
']'	TokenNameCharacterLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_MULTIPLY	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"[CompositeRule: MULTIPLY]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_SCREEN	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"[CompositeRule: SCREEN]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_DARKEN	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"[CompositeRule: DARKEN]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
RULE_LIGHTEN	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"[CompositeRule: LIGHTEN]"	TokenNameStringLiteral
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
throw	TokenNamethrow
new	TokenNamenew
Error	TokenNameIdentifier
(	TokenNameLPAREN
"Unknown Composite Rule type"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
