package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
swing	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
event	TokenNameIdentifier
.	TokenNameDOT
InputEvent	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
event	TokenNameIdentifier
.	TokenNameDOT
MouseEvent	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
geom	TokenNameIdentifier
.	TokenNameDOT
AffineTransform	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
AbstractImageZoomInteractor	TokenNameIdentifier
extends	TokenNameextends
InteractorAdapter	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
boolean	TokenNameboolean
finished	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
xStart	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
yStart	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
xCurrent	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
yCurrent	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
boolean	TokenNameboolean
endInteraction	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
finished	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
mousePressed	TokenNameIdentifier
(	TokenNameLPAREN
MouseEvent	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
finished	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
JGVTComponent	TokenNameIdentifier
c	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
JGVTComponent	TokenNameIdentifier
)	TokenNameRPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getSource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
.	TokenNameDOT
setPaintingTransform	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finished	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
xStart	TokenNameIdentifier
=	TokenNameEQUAL
e	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
yStart	TokenNameIdentifier
=	TokenNameEQUAL
e	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
mouseReleased	TokenNameIdentifier
(	TokenNameLPAREN
MouseEvent	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
finished	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
JGVTComponent	TokenNameIdentifier
c	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
JGVTComponent	TokenNameIdentifier
)	TokenNameRPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getSource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
AffineTransform	TokenNameIdentifier
pt	TokenNameIdentifier
=	TokenNameEQUAL
c	TokenNameIdentifier
.	TokenNameDOT
getPaintingTransform	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
pt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
AffineTransform	TokenNameIdentifier
rt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
AffineTransform	TokenNameIdentifier
)	TokenNameRPAREN
c	TokenNameIdentifier
.	TokenNameDOT
getRenderingTransform	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
clone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rt	TokenNameIdentifier
.	TokenNameDOT
preConcatenate	TokenNameIdentifier
(	TokenNameLPAREN
pt	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
.	TokenNameDOT
setRenderingTransform	TokenNameIdentifier
(	TokenNameLPAREN
rt	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
mouseDragged	TokenNameIdentifier
(	TokenNameLPAREN
MouseEvent	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
AffineTransform	TokenNameIdentifier
at	TokenNameIdentifier
;	TokenNameSEMICOLON
JGVTComponent	TokenNameIdentifier
c	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
JGVTComponent	TokenNameIdentifier
)	TokenNameRPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getSource	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
xCurrent	TokenNameIdentifier
=	TokenNameEQUAL
e	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
yCurrent	TokenNameIdentifier
=	TokenNameEQUAL
e	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
at	TokenNameIdentifier
=	TokenNameEQUAL
AffineTransform	TokenNameIdentifier
.	TokenNameDOT
getTranslateInstance	TokenNameIdentifier
(	TokenNameLPAREN
xStart	TokenNameIdentifier
,	TokenNameCOMMA
yStart	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
dy	TokenNameIdentifier
=	TokenNameEQUAL
yCurrent	TokenNameIdentifier
-	TokenNameMINUS
yStart	TokenNameIdentifier
;	TokenNameSEMICOLON
double	TokenNamedouble
s	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dy	TokenNameIdentifier
<	TokenNameLESS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
dy	TokenNameIdentifier
-=	TokenNameMINUS_EQUAL
10	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dy	TokenNameIdentifier
>	TokenNameGREATER
-	TokenNameMINUS
15	TokenNameIntegerLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
1.0	TokenNameDoubleLiteral
:	TokenNameCOLON
-	TokenNameMINUS
15.0	TokenNameDoubleLiteral
/	TokenNameDIVIDE
dy	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
dy	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
10	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
s	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
dy	TokenNameIdentifier
<	TokenNameLESS
15	TokenNameIntegerLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
1.0	TokenNameDoubleLiteral
:	TokenNameCOLON
dy	TokenNameIdentifier
/	TokenNameDIVIDE
15.0	TokenNameDoubleLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
at	TokenNameIdentifier
.	TokenNameDOT
scale	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
s	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
at	TokenNameIdentifier
.	TokenNameDOT
translate	TokenNameIdentifier
(	TokenNameLPAREN
-	TokenNameMINUS
xStart	TokenNameIdentifier
,	TokenNameCOMMA
-	TokenNameMINUS
yStart	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
c	TokenNameIdentifier
.	TokenNameDOT
setPaintingTransform	TokenNameIdentifier
(	TokenNameLPAREN
at	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
