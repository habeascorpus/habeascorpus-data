package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
flow	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
font	TokenNameIdentifier
.	TokenNameDOT
GVTGlyphVector	TokenNameIdentifier
;	TokenNameSEMICOLON
class	TokenNameclass
GlyphGroupInfo	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
start	TokenNameIdentifier
,	TokenNameCOMMA
end	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
glyphCount	TokenNameIdentifier
,	TokenNameCOMMA
lastGlyphCount	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
hideLast	TokenNameIdentifier
;	TokenNameSEMICOLON
float	TokenNamefloat
advance	TokenNameIdentifier
,	TokenNameCOMMA
lastAdvance	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
range	TokenNameIdentifier
;	TokenNameSEMICOLON
GVTGlyphVector	TokenNameIdentifier
gv	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
[	TokenNameLBRACKET
]	TokenNameRBRACKET
hide	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
GlyphGroupInfo	TokenNameIdentifier
(	TokenNameLPAREN
GVTGlyphVector	TokenNameIdentifier
gv	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
start	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
end	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
[	TokenNameLBRACKET
]	TokenNameRBRACKET
glyphHide	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
glyphGroupHideLast	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
glyphPos	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
advAdj	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
[	TokenNameLBRACKET
]	TokenNameRBRACKET
lastAdvAdj	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
[	TokenNameLBRACKET
]	TokenNameRBRACKET
space	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
gv	TokenNameIdentifier
=	TokenNameEQUAL
gv	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
start	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
end	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
hide	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
boolean	TokenNameboolean
[	TokenNameLBRACKET
this	TokenNamethis
.	TokenNameDOT
end	TokenNameIdentifier
-	TokenNameMINUS
this	TokenNamethis
.	TokenNameDOT
start	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
hideLast	TokenNameIdentifier
=	TokenNameEQUAL
glyphGroupHideLast	TokenNameIdentifier
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
glyphHide	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
.	TokenNameDOT
start	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
.	TokenNameDOT
hide	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
this	TokenNamethis
.	TokenNameDOT
hide	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
adv	TokenNameIdentifier
=	TokenNameEQUAL
glyphPos	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
end	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
-	TokenNameMINUS
glyphPos	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
start	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
float	TokenNamefloat
ladv	TokenNameIdentifier
=	TokenNameEQUAL
adv	TokenNameIdentifier
;	TokenNameSEMICOLON
adv	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
advAdj	TokenNameIdentifier
[	TokenNameLBRACKET
end	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
glyphCount	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
-	TokenNameMINUS
start	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
g	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
;	TokenNameSEMICOLON
g	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
;	TokenNameSEMICOLON
g	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
glyphHide	TokenNameIdentifier
[	TokenNameLBRACKET
g	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
glyphCount	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
lastGlyphCount	TokenNameIdentifier
=	TokenNameEQUAL
glyphCount	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
g	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
g	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
start	TokenNameIdentifier
;	TokenNameSEMICOLON
g	TokenNameIdentifier
--	TokenNameMINUS_MINUS
)	TokenNameRPAREN
{	TokenNameLBRACE
ladv	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
lastAdvAdj	TokenNameIdentifier
[	TokenNameLBRACKET
g	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
space	TokenNameIdentifier
[	TokenNameLBRACKET
g	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
lastGlyphCount	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
hideLast	TokenNameIdentifier
)	TokenNameRPAREN
lastGlyphCount	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
glyphCount	TokenNameIdentifier
=	TokenNameEQUAL
glyphCount	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
lastGlyphCount	TokenNameIdentifier
=	TokenNameEQUAL
lastGlyphCount	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
advance	TokenNameIdentifier
=	TokenNameEQUAL
adv	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
lastAdvance	TokenNameIdentifier
=	TokenNameEQUAL
ladv	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
GVTGlyphVector	TokenNameIdentifier
getGlyphVector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
gv	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getStart	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
start	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getEnd	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
end	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getGlyphCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
glyphCount	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getLastGlyphCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
lastGlyphCount	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getHide	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
hide	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
getHideLast	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
hideLast	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
float	TokenNamefloat
getAdvance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
advance	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
float	TokenNamefloat
getLastAdvance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
lastAdvance	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setRange	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
range	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
range	TokenNameIdentifier
=	TokenNameEQUAL
range	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getRange	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
this	TokenNamethis
.	TokenNameDOT
range	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
