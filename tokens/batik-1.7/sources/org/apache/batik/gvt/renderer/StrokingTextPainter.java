package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
renderer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Graphics2D	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Paint	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
RenderingHints	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Shape	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
Stroke	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
font	TokenNameIdentifier
.	TokenNameDOT
FontRenderContext	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
font	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
geom	TokenNameIdentifier
.	TokenNameDOT
GeneralPath	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
geom	TokenNameIdentifier
.	TokenNameDOT
Point2D	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
awt	TokenNameIdentifier
.	TokenNameDOT
geom	TokenNameIdentifier
.	TokenNameDOT
Rectangle2D	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
AttributedCharacterIterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
AttributedString	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
CharacterIterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ArrayList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
HashSet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Iterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
List	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Set	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
TextNode	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
TextPainter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
font	TokenNameIdentifier
.	TokenNameDOT
FontFamilyResolver	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
font	TokenNameIdentifier
.	TokenNameDOT
GVTFont	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
font	TokenNameIdentifier
.	TokenNameDOT
GVTFontFamily	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
font	TokenNameIdentifier
.	TokenNameDOT
GVTGlyphMetrics	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
font	TokenNameIdentifier
.	TokenNameDOT
GVTLineMetrics	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
AttributedCharacterSpanIterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
BidiAttributedCharacterIterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
GVTAttributedCharacterIterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
Mark	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
TextHit	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
TextPaintInfo	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
TextPath	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
TextSpanLayout	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
StrokingTextPainter	TokenNameIdentifier
extends	TokenNameextends
BasicTextPainter	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
AttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
Attribute	TokenNameIdentifier
PAINT_INFO	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
PAINT_INFO	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
AttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
Attribute	TokenNameIdentifier
FLOW_REGIONS	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
FLOW_REGIONS	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
AttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
Attribute	TokenNameIdentifier
FLOW_PARAGRAPH	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
FLOW_PARAGRAPH	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
AttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
Attribute	TokenNameIdentifier
TEXT_COMPOUND_ID	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
TEXT_COMPOUND_ID	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
AttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
Attribute	TokenNameIdentifier
GVT_FONT	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
GVT_FONT	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
AttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
Attribute	TokenNameIdentifier
GVT_FONTS	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
GVT_FONTS	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
AttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
Attribute	TokenNameIdentifier
BIDI_LEVEL	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
BIDI_LEVEL	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
AttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
Attribute	TokenNameIdentifier
XPOS	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
X	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
AttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
Attribute	TokenNameIdentifier
YPOS	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
Y	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
AttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
Attribute	TokenNameIdentifier
TEXTPATH	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
TEXTPATH	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
AttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
Attribute	TokenNameIdentifier
WRITING_MODE	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
WRITING_MODE	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
Integer	TokenNameIdentifier
WRITING_MODE_TTB	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
WRITING_MODE_TTB	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
Integer	TokenNameIdentifier
WRITING_MODE_RTL	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
WRITING_MODE_RTL	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
AttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
Attribute	TokenNameIdentifier
ANCHOR_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
ANCHOR_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
Integer	TokenNameIdentifier
ADJUST_SPACING	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
ADJUST_SPACING	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
Integer	TokenNameIdentifier
ADJUST_ALL	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
ADJUST_ALL	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
ALT_GLYPH_HANDLER	TokenNameIdentifier
=	TokenNameEQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
ALT_GLYPH_HANDLER	TokenNameIdentifier
;	TokenNameSEMICOLON
static	TokenNamestatic
Set	TokenNameIdentifier
extendedAtts	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashSet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
extendedAtts	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
FLOW_PARAGRAPH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
extendedAtts	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
TEXT_COMPOUND_ID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
extendedAtts	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
GVT_FONT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
static	TokenNamestatic
TextPainter	TokenNameIdentifier
singleton	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StrokingTextPainter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
TextPainter	TokenNameIdentifier
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
singleton	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
paint	TokenNameIdentifier
(	TokenNameLPAREN
TextNode	TokenNameIdentifier
node	TokenNameIdentifier
,	TokenNameCOMMA
Graphics2D	TokenNameIdentifier
g2d	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
=	TokenNameEQUAL
node	TokenNameIdentifier
.	TokenNameDOT
getAttributedCharacterIterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
aci	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
List	TokenNameIdentifier
textRuns	TokenNameIdentifier
=	TokenNameEQUAL
getTextRuns	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
,	TokenNameCOMMA
aci	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
paintDecorations	TokenNameIdentifier
(	TokenNameLPAREN
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
g2d	TokenNameIdentifier
,	TokenNameCOMMA
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_UNDERLINE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
paintDecorations	TokenNameIdentifier
(	TokenNameLPAREN
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
g2d	TokenNameIdentifier
,	TokenNameCOMMA
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_OVERLINE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
paintTextRuns	TokenNameIdentifier
(	TokenNameLPAREN
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
g2d	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
paintDecorations	TokenNameIdentifier
(	TokenNameLPAREN
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
g2d	TokenNameIdentifier
,	TokenNameCOMMA
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_STRIKETHROUGH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
printAttrs	TokenNameIdentifier
(	TokenNameLPAREN
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
aci	TokenNameIdentifier
.	TokenNameDOT
first	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
start	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getBeginIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
print	TokenNameIdentifier
(	TokenNameLPAREN
"AttrRuns: "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
current	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
CharacterIterator	TokenNameIdentifier
.	TokenNameDOT
DONE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getRunLimit	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
print	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
+	TokenNamePLUS
(	TokenNameLPAREN
end	TokenNameIdentifier
-	TokenNameMINUS
start	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
", "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
.	TokenNameDOT
setIndex	TokenNameIdentifier
(	TokenNameLPAREN
end	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
start	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
getTextRuns	TokenNameIdentifier
(	TokenNameLPAREN
TextNode	TokenNameIdentifier
node	TokenNameIdentifier
,	TokenNameCOMMA
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
textRuns	TokenNameIdentifier
=	TokenNameEQUAL
node	TokenNameIdentifier
.	TokenNameDOT
getTextRuns	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
textRuns	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
textRuns	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
AttributedCharacterIterator	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
chunkACIs	TokenNameIdentifier
=	TokenNameEQUAL
getTextChunkACIs	TokenNameIdentifier
(	TokenNameLPAREN
aci	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
textRuns	TokenNameIdentifier
=	TokenNameEQUAL
computeTextRuns	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
,	TokenNameCOMMA
aci	TokenNameIdentifier
,	TokenNameCOMMA
chunkACIs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
node	TokenNameIdentifier
.	TokenNameDOT
setTextRuns	TokenNameIdentifier
(	TokenNameLPAREN
textRuns	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
node	TokenNameIdentifier
.	TokenNameDOT
getTextRuns	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
List	TokenNameIdentifier
computeTextRuns	TokenNameIdentifier
(	TokenNameLPAREN
TextNode	TokenNameIdentifier
node	TokenNameIdentifier
,	TokenNameCOMMA
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
,	TokenNameCOMMA
AttributedCharacterIterator	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
chunkACIs	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
chunkCharMaps	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
chunkACIs	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
int	TokenNameint
chunkStart	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getBeginIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
chunkACIs	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
BidiAttributedCharacterIterator	TokenNameIdentifier
iter	TokenNameIdentifier
;	TokenNameSEMICOLON
iter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BidiAttributedCharacterIterator	TokenNameIdentifier
(	TokenNameLPAREN
chunkACIs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
,	TokenNameCOMMA
fontRenderContext	TokenNameIdentifier
,	TokenNameCOMMA
chunkStart	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
chunkACIs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
iter	TokenNameIdentifier
;	TokenNameSEMICOLON
chunkCharMaps	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
iter	TokenNameIdentifier
.	TokenNameDOT
getCharMap	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
chunkACIs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
createModifiedACIForFontMatching	TokenNameIdentifier
(	TokenNameLPAREN
chunkACIs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
chunkStart	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
chunkACIs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
getEndIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
chunkACIs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
getBeginIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
List	TokenNameIdentifier
textRuns	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TextChunk	TokenNameIdentifier
chunk	TokenNameIdentifier
,	TokenNameCOMMA
prevChunk	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
currentChunk	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
location	TokenNameIdentifier
=	TokenNameEQUAL
node	TokenNameIdentifier
.	TokenNameDOT
getLocation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
do	TokenNamedo
{	TokenNameLBRACE
chunkACIs	TokenNameIdentifier
[	TokenNameLBRACKET
currentChunk	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
first	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
chunk	TokenNameIdentifier
=	TokenNameEQUAL
getTextChunk	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
,	TokenNameCOMMA
chunkACIs	TokenNameIdentifier
[	TokenNameLBRACKET
currentChunk	TokenNameIdentifier
]	TokenNameRBRACKET
,	TokenNameCOMMA
chunkCharMaps	TokenNameIdentifier
[	TokenNameLBRACKET
currentChunk	TokenNameIdentifier
]	TokenNameRBRACKET
,	TokenNameCOMMA
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
prevChunk	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
chunkACIs	TokenNameIdentifier
[	TokenNameLBRACKET
currentChunk	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
first	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
chunk	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
location	TokenNameIdentifier
=	TokenNameEQUAL
adjustChunkOffsets	TokenNameIdentifier
(	TokenNameLPAREN
location	TokenNameIdentifier
,	TokenNameCOMMA
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
chunk	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
prevChunk	TokenNameIdentifier
=	TokenNameEQUAL
chunk	TokenNameIdentifier
;	TokenNameSEMICOLON
currentChunk	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
chunk	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
currentChunk	TokenNameIdentifier
<	TokenNameLESS
chunkACIs	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
textRuns	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
AttributedCharacterIterator	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getTextChunkACIs	TokenNameIdentifier
(	TokenNameLPAREN
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
List	TokenNameIdentifier
aciList	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ArrayList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
chunkStartIndex	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getBeginIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
.	TokenNameDOT
first	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Object	TokenNameIdentifier
writingMode	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
WRITING_MODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
vertical	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
writingMode	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
WRITING_MODE_TTB	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
setIndex	TokenNameIdentifier
(	TokenNameLPAREN
chunkStartIndex	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
CharacterIterator	TokenNameIdentifier
.	TokenNameDOT
DONE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
TextPath	TokenNameIdentifier
prevTextPath	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
start	TokenNameIdentifier
=	TokenNameEQUAL
chunkStartIndex	TokenNameIdentifier
,	TokenNameCOMMA
end	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
.	TokenNameDOT
setIndex	TokenNameIdentifier
(	TokenNameLPAREN
start	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
CharacterIterator	TokenNameIdentifier
.	TokenNameDOT
DONE	TokenNameIdentifier
;	TokenNameSEMICOLON
start	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
TextPath	TokenNameIdentifier
textPath	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextPath	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
TEXTPATH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
start	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
chunkStartIndex	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
vertical	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Float	TokenNameIdentifier
runY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Float	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
YPOS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
runY	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
runY	TokenNameIdentifier
.	TokenNameDOT
isNaN	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Float	TokenNameIdentifier
runX	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Float	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
XPOS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
runX	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
runX	TokenNameIdentifier
.	TokenNameDOT
isNaN	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
prevTextPath	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
textPath	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
prevTextPath	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
textPath	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
prevTextPath	TokenNameIdentifier
=	TokenNameEQUAL
textPath	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
FLOW_PARAGRAPH	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
end	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getRunLimit	TokenNameIdentifier
(	TokenNameLPAREN
FLOW_PARAGRAPH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
.	TokenNameDOT
setIndex	TokenNameIdentifier
(	TokenNameLPAREN
end	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
end	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getRunLimit	TokenNameIdentifier
(	TokenNameLPAREN
TEXT_COMPOUND_ID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
start	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
chunkStartIndex	TokenNameIdentifier
)	TokenNameRPAREN
continue	TokenNamecontinue
;	TokenNameSEMICOLON
TextNode	TokenNameIdentifier
.	TokenNameDOT
Anchor	TokenNameIdentifier
anchor	TokenNameIdentifier
;	TokenNameSEMICOLON
anchor	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextNode	TokenNameIdentifier
.	TokenNameDOT
Anchor	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
ANCHOR_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
anchor	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
TextNode	TokenNameIdentifier
.	TokenNameDOT
Anchor	TokenNameIdentifier
.	TokenNameDOT
START	TokenNameIdentifier
)	TokenNameRPAREN
continue	TokenNamecontinue
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
vertical	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Float	TokenNameIdentifier
runY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Float	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
YPOS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
runY	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
||	TokenNameOR_OR
runY	TokenNameIdentifier
.	TokenNameDOT
isNaN	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Float	TokenNameIdentifier
runX	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Float	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
XPOS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
runX	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
||	TokenNameOR_OR
runX	TokenNameIdentifier
.	TokenNameDOT
isNaN	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
aci	TokenNameIdentifier
.	TokenNameDOT
setIndex	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
vertical	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Float	TokenNameIdentifier
runY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Float	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
YPOS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
runY	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
||	TokenNameOR_OR
runY	TokenNameIdentifier
.	TokenNameDOT
isNaN	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Float	TokenNameIdentifier
runX	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Float	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
XPOS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
runX	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
||	TokenNameOR_OR
runX	TokenNameIdentifier
.	TokenNameDOT
isNaN	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
aciList	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
AttributedCharacterSpanIterator	TokenNameIdentifier
(	TokenNameLPAREN
aci	TokenNameIdentifier
,	TokenNameCOMMA
i	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
i	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
chunkStartIndex	TokenNameIdentifier
=	TokenNameEQUAL
i	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
int	TokenNameint
chunkEndIndex	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
aciList	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
AttributedCharacterSpanIterator	TokenNameIdentifier
(	TokenNameLPAREN
aci	TokenNameIdentifier
,	TokenNameCOMMA
chunkStartIndex	TokenNameIdentifier
,	TokenNameCOMMA
chunkEndIndex	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
chunkStartIndex	TokenNameIdentifier
=	TokenNameEQUAL
chunkEndIndex	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
AttributedCharacterIterator	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
aciArray	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AttributedCharacterIterator	TokenNameIdentifier
[	TokenNameLBRACKET
aciList	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
Iterator	TokenNameIdentifier
iter	TokenNameIdentifier
=	TokenNameEQUAL
aciList	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
iter	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
aciArray	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
AttributedCharacterIterator	TokenNameIdentifier
)	TokenNameRPAREN
iter	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
aciArray	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
static	TokenNamestatic
AttributedCharacterIterator	TokenNameIdentifier
createModifiedACIForFontMatching	TokenNameIdentifier
(	TokenNameLPAREN
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
aci	TokenNameIdentifier
.	TokenNameDOT
first	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
AttributedString	TokenNameIdentifier
as	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
asOff	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
begin	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getBeginIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
moreChunks	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
int	TokenNameint
start	TokenNameIdentifier
,	TokenNameCOMMA
end	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getRunStart	TokenNameIdentifier
(	TokenNameLPAREN
TEXT_COMPOUND_ID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
moreChunks	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
start	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
end	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getRunLimit	TokenNameIdentifier
(	TokenNameLPAREN
TEXT_COMPOUND_ID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
aciLength	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
-	TokenNameMINUS
start	TokenNameIdentifier
;	TokenNameSEMICOLON
List	TokenNameIdentifier
fonts	TokenNameIdentifier
;	TokenNameSEMICOLON
fonts	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
List	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
GVT_FONTS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
fontSize	TokenNameIdentifier
=	TokenNameEQUAL
12	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Float	TokenNameIdentifier
fsFloat	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Float	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
SIZE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
fsFloat	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
fontSize	TokenNameIdentifier
=	TokenNameEQUAL
fsFloat	TokenNameIdentifier
.	TokenNameDOT
floatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
fonts	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
fonts	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
FontFamilyResolver	TokenNameIdentifier
.	TokenNameDOT
defaultFont	TokenNameIdentifier
.	TokenNameDOT
deriveFont	TokenNameIdentifier
(	TokenNameLPAREN
fontSize	TokenNameIdentifier
,	TokenNameCOMMA
aci	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
boolean	TokenNameboolean
[	TokenNameLBRACKET
]	TokenNameRBRACKET
fontAssigned	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
boolean	TokenNameboolean
[	TokenNameLBRACKET
aciLength	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
as	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
as	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AttributedString	TokenNameIdentifier
(	TokenNameLPAREN
aci	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
GVTFont	TokenNameIdentifier
defaultFont	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
numSet	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
firstUnset	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
firstUnsetSet	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
fonts	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
currentIndex	TokenNameIdentifier
=	TokenNameEQUAL
firstUnset	TokenNameIdentifier
;	TokenNameSEMICOLON
firstUnsetSet	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
.	TokenNameDOT
setIndex	TokenNameIdentifier
(	TokenNameLPAREN
currentIndex	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
GVTFont	TokenNameIdentifier
font	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
GVTFont	TokenNameIdentifier
)	TokenNameRPAREN
fonts	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
defaultFont	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
defaultFont	TokenNameIdentifier
=	TokenNameEQUAL
font	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
currentIndex	TokenNameIdentifier
<	TokenNameLESS
end	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
displayUpToIndex	TokenNameIdentifier
=	TokenNameEQUAL
font	TokenNameIdentifier
.	TokenNameDOT
canDisplayUpTo	TokenNameIdentifier
(	TokenNameLPAREN
aci	TokenNameIdentifier
,	TokenNameCOMMA
currentIndex	TokenNameIdentifier
,	TokenNameCOMMA
end	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Object	TokenNameIdentifier
altGlyphElement	TokenNameIdentifier
;	TokenNameSEMICOLON
altGlyphElement	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
ALT_GLYPH_HANDLER	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
altGlyphElement	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
displayUpToIndex	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
displayUpToIndex	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
displayUpToIndex	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
displayUpToIndex	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
currentIndex	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
firstUnsetSet	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
firstUnset	TokenNameIdentifier
=	TokenNameEQUAL
currentIndex	TokenNameIdentifier
;	TokenNameSEMICOLON
firstUnsetSet	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
currentIndex	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
int	TokenNameint
runStart	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
j	TokenNameIdentifier
=	TokenNameEQUAL
currentIndex	TokenNameIdentifier
;	TokenNameSEMICOLON
j	TokenNameIdentifier
<	TokenNameLESS
displayUpToIndex	TokenNameIdentifier
;	TokenNameSEMICOLON
j	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fontAssigned	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
-	TokenNameMINUS
start	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
runStart	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
as	TokenNameIdentifier
.	TokenNameDOT
addAttribute	TokenNameIdentifier
(	TokenNameLPAREN
GVT_FONT	TokenNameIdentifier
,	TokenNameCOMMA
font	TokenNameIdentifier
,	TokenNameCOMMA
runStart	TokenNameIdentifier
-	TokenNameMINUS
begin	TokenNameIdentifier
,	TokenNameCOMMA
j	TokenNameIdentifier
-	TokenNameMINUS
begin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
runStart	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
runStart	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
runStart	TokenNameIdentifier
=	TokenNameEQUAL
j	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fontAssigned	TokenNameIdentifier
[	TokenNameLBRACKET
j	TokenNameIdentifier
-	TokenNameMINUS
start	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
numSet	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
runStart	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
as	TokenNameIdentifier
.	TokenNameDOT
addAttribute	TokenNameIdentifier
(	TokenNameLPAREN
GVT_FONT	TokenNameIdentifier
,	TokenNameCOMMA
font	TokenNameIdentifier
,	TokenNameCOMMA
runStart	TokenNameIdentifier
-	TokenNameMINUS
begin	TokenNameIdentifier
,	TokenNameCOMMA
displayUpToIndex	TokenNameIdentifier
-	TokenNameMINUS
begin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
currentIndex	TokenNameIdentifier
=	TokenNameEQUAL
displayUpToIndex	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
numSet	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
aciLength	TokenNameIdentifier
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
runStart	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
GVTFontFamily	TokenNameIdentifier
prevFF	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
GVTFont	TokenNameIdentifier
prevF	TokenNameIdentifier
=	TokenNameEQUAL
defaultFont	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
aciLength	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fontAssigned	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
runStart	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
as	TokenNameIdentifier
.	TokenNameDOT
addAttribute	TokenNameIdentifier
(	TokenNameLPAREN
GVT_FONT	TokenNameIdentifier
,	TokenNameCOMMA
prevF	TokenNameIdentifier
,	TokenNameCOMMA
runStart	TokenNameIdentifier
+	TokenNamePLUS
asOff	TokenNameIdentifier
,	TokenNameCOMMA
i	TokenNameIdentifier
+	TokenNamePLUS
asOff	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
runStart	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
prevF	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
prevFF	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
char	TokenNamechar
c	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
setIndex	TokenNameIdentifier
(	TokenNameLPAREN
start	TokenNameIdentifier
+	TokenNamePLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
GVTFontFamily	TokenNameIdentifier
fontFamily	TokenNameIdentifier
;	TokenNameSEMICOLON
fontFamily	TokenNameIdentifier
=	TokenNameEQUAL
FontFamilyResolver	TokenNameIdentifier
.	TokenNameDOT
getFamilyThatCanDisplay	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
runStart	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
runStart	TokenNameIdentifier
=	TokenNameEQUAL
i	TokenNameIdentifier
;	TokenNameSEMICOLON
prevFF	TokenNameIdentifier
=	TokenNameEQUAL
fontFamily	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
prevFF	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
prevF	TokenNameIdentifier
=	TokenNameEQUAL
defaultFont	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
prevF	TokenNameIdentifier
=	TokenNameEQUAL
fontFamily	TokenNameIdentifier
.	TokenNameDOT
deriveFont	TokenNameIdentifier
(	TokenNameLPAREN
fontSize	TokenNameIdentifier
,	TokenNameCOMMA
aci	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
prevFF	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
fontFamily	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
as	TokenNameIdentifier
.	TokenNameDOT
addAttribute	TokenNameIdentifier
(	TokenNameLPAREN
GVT_FONT	TokenNameIdentifier
,	TokenNameCOMMA
prevF	TokenNameIdentifier
,	TokenNameCOMMA
runStart	TokenNameIdentifier
+	TokenNamePLUS
asOff	TokenNameIdentifier
,	TokenNameCOMMA
i	TokenNameIdentifier
+	TokenNamePLUS
asOff	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
runStart	TokenNameIdentifier
=	TokenNameEQUAL
i	TokenNameIdentifier
;	TokenNameSEMICOLON
prevFF	TokenNameIdentifier
=	TokenNameEQUAL
fontFamily	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
prevFF	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
prevF	TokenNameIdentifier
=	TokenNameEQUAL
defaultFont	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
prevF	TokenNameIdentifier
=	TokenNameEQUAL
fontFamily	TokenNameIdentifier
.	TokenNameDOT
deriveFont	TokenNameIdentifier
(	TokenNameLPAREN
fontSize	TokenNameIdentifier
,	TokenNameCOMMA
aci	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
runStart	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
as	TokenNameIdentifier
.	TokenNameDOT
addAttribute	TokenNameIdentifier
(	TokenNameLPAREN
GVT_FONT	TokenNameIdentifier
,	TokenNameCOMMA
prevF	TokenNameIdentifier
,	TokenNameCOMMA
runStart	TokenNameIdentifier
+	TokenNamePLUS
asOff	TokenNameIdentifier
,	TokenNameCOMMA
aciLength	TokenNameIdentifier
+	TokenNamePLUS
asOff	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
asOff	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
aciLength	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
setIndex	TokenNameIdentifier
(	TokenNameLPAREN
end	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
AttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
DONE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
moreChunks	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
start	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
as	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
as	TokenNameIdentifier
.	TokenNameDOT
getIterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
aci	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
TextChunk	TokenNameIdentifier
getTextChunk	TokenNameIdentifier
(	TokenNameLPAREN
TextNode	TokenNameIdentifier
node	TokenNameIdentifier
,	TokenNameCOMMA
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
charMap	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
TextChunk	TokenNameIdentifier
prevChunk	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
beginChunk	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
prevChunk	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
beginChunk	TokenNameIdentifier
=	TokenNameEQUAL
prevChunk	TokenNameIdentifier
.	TokenNameDOT
end	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
endChunk	TokenNameIdentifier
=	TokenNameEQUAL
beginChunk	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
begin	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
current	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
CharacterIterator	TokenNameIdentifier
.	TokenNameDOT
DONE	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
offset	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
advance	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
isChunkStart	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
TextSpanLayout	TokenNameIdentifier
layout	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
do	TokenNamedo
{	TokenNameLBRACE
int	TokenNameint
start	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getRunStart	TokenNameIdentifier
(	TokenNameLPAREN
extendedAtts	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
end	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getRunLimit	TokenNameIdentifier
(	TokenNameLPAREN
extendedAtts	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
AttributedCharacterIterator	TokenNameIdentifier
runaci	TokenNameIdentifier
;	TokenNameSEMICOLON
runaci	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AttributedCharacterSpanIterator	TokenNameIdentifier
(	TokenNameLPAREN
aci	TokenNameIdentifier
,	TokenNameCOMMA
start	TokenNameIdentifier
,	TokenNameCOMMA
end	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
subCharMap	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
end	TokenNameIdentifier
-	TokenNameMINUS
start	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
charMap	TokenNameIdentifier
,	TokenNameCOMMA
start	TokenNameIdentifier
-	TokenNameMINUS
begin	TokenNameIdentifier
,	TokenNameCOMMA
subCharMap	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
subCharMap	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
FontRenderContext	TokenNameIdentifier
frc	TokenNameIdentifier
=	TokenNameEQUAL
fontRenderContext	TokenNameIdentifier
;	TokenNameSEMICOLON
RenderingHints	TokenNameIdentifier
rh	TokenNameIdentifier
=	TokenNameEQUAL
node	TokenNameIdentifier
.	TokenNameDOT
getRenderingHints	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
rh	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
rh	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
RenderingHints	TokenNameIdentifier
.	TokenNameDOT
KEY_TEXT_ANTIALIASING	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
RenderingHints	TokenNameIdentifier
.	TokenNameDOT
VALUE_TEXT_ANTIALIAS_OFF	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
frc	TokenNameIdentifier
=	TokenNameEQUAL
aaOffFontRenderContext	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
layout	TokenNameIdentifier
=	TokenNameEQUAL
getTextLayoutFactory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
createTextLayout	TokenNameIdentifier
(	TokenNameLPAREN
runaci	TokenNameIdentifier
,	TokenNameCOMMA
subCharMap	TokenNameIdentifier
,	TokenNameCOMMA
offset	TokenNameIdentifier
,	TokenNameCOMMA
frc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
textRuns	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
TextRun	TokenNameIdentifier
(	TokenNameLPAREN
layout	TokenNameIdentifier
,	TokenNameCOMMA
runaci	TokenNameIdentifier
,	TokenNameCOMMA
isChunkStart	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
layoutAdvance	TokenNameIdentifier
=	TokenNameEQUAL
layout	TokenNameIdentifier
.	TokenNameDOT
getAdvance2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
advance	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
layoutAdvance	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
advance	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
layoutAdvance	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
endChunk	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
setIndex	TokenNameIdentifier
(	TokenNameLPAREN
end	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
CharacterIterator	TokenNameIdentifier
.	TokenNameDOT
DONE	TokenNameIdentifier
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
isChunkStart	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
TextChunk	TokenNameIdentifier
(	TokenNameLPAREN
beginChunk	TokenNameIdentifier
,	TokenNameCOMMA
endChunk	TokenNameIdentifier
,	TokenNameCOMMA
advance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Point2D	TokenNameIdentifier
adjustChunkOffsets	TokenNameIdentifier
(	TokenNameLPAREN
Point2D	TokenNameIdentifier
location	TokenNameIdentifier
,	TokenNameCOMMA
List	TokenNameIdentifier
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
TextChunk	TokenNameIdentifier
chunk	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
TextRun	TokenNameIdentifier
r	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextRun	TokenNameIdentifier
)	TokenNameRPAREN
textRuns	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
chunk	TokenNameIdentifier
.	TokenNameDOT
begin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
anchorType	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
.	TokenNameDOT
getAnchorType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Float	TokenNameIdentifier
length	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
.	TokenNameDOT
getLength	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Integer	TokenNameIdentifier
lengthAdj	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
.	TokenNameDOT
getLengthAdjust	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
doAdjust	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
length	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
||	TokenNameOR_OR
length	TokenNameIdentifier
.	TokenNameDOT
isNaN	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
doAdjust	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
int	TokenNameint
numChars	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
n	TokenNameIdentifier
=	TokenNameEQUAL
chunk	TokenNameIdentifier
.	TokenNameDOT
begin	TokenNameIdentifier
;	TokenNameSEMICOLON
n	TokenNameIdentifier
<	TokenNameLESS
chunk	TokenNameIdentifier
.	TokenNameDOT
end	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
n	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
r	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextRun	TokenNameIdentifier
)	TokenNameRPAREN
textRuns	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
n	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
.	TokenNameDOT
getACI	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
numChars	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
aci	TokenNameIdentifier
.	TokenNameDOT
getEndIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
aci	TokenNameIdentifier
.	TokenNameDOT
getBeginIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
lengthAdj	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
ADJUST_SPACING	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
numChars	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
doAdjust	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
float	TokenNamefloat
xScale	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
yScale	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
r	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextRun	TokenNameIdentifier
)	TokenNameRPAREN
textRuns	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
chunk	TokenNameIdentifier
.	TokenNameDOT
end	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TextSpanLayout	TokenNameIdentifier
layout	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
GVTGlyphMetrics	TokenNameIdentifier
lastMetrics	TokenNameIdentifier
=	TokenNameEQUAL
layout	TokenNameIdentifier
.	TokenNameDOT
getGlyphMetrics	TokenNameIdentifier
(	TokenNameLPAREN
layout	TokenNameIdentifier
.	TokenNameDOT
getGlyphCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
GVTLineMetrics	TokenNameIdentifier
lastLineMetrics	TokenNameIdentifier
=	TokenNameEQUAL
layout	TokenNameIdentifier
.	TokenNameDOT
getLineMetrics	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Rectangle2D	TokenNameIdentifier
lastBounds	TokenNameIdentifier
=	TokenNameEQUAL
lastMetrics	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
halfLeading	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
lastMetrics	TokenNameIdentifier
.	TokenNameDOT
getVerticalAdvance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
(	TokenNameLPAREN
lastLineMetrics	TokenNameIdentifier
.	TokenNameDOT
getAscent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
lastLineMetrics	TokenNameIdentifier
.	TokenNameDOT
getDescent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
/	TokenNameDIVIDE
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
lastW	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
lastBounds	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
lastBounds	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
lastH	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
halfLeading	TokenNameIdentifier
+	TokenNamePLUS
lastLineMetrics	TokenNameIdentifier
.	TokenNameDOT
getAscent	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
lastBounds	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
lastBounds	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
visualAdvance	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
doAdjust	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
visualAdvance	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
chunk	TokenNameIdentifier
.	TokenNameDOT
advance	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
lastW	TokenNameIdentifier
-	TokenNameMINUS
lastMetrics	TokenNameIdentifier
.	TokenNameDOT
getHorizontalAdvance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
chunk	TokenNameIdentifier
.	TokenNameDOT
advance	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
lastMetrics	TokenNameIdentifier
.	TokenNameDOT
getVerticalAdvance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
lastH	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Point2D	TokenNameIdentifier
advance	TokenNameIdentifier
=	TokenNameEQUAL
chunk	TokenNameIdentifier
.	TokenNameDOT
advance	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
layout	TokenNameIdentifier
.	TokenNameDOT
isVertical	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
lengthAdj	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ADJUST_SPACING	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
yScale	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
length	TokenNameIdentifier
.	TokenNameDOT
floatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
lastH	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
(	TokenNameLPAREN
advance	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
lastMetrics	TokenNameIdentifier
.	TokenNameDOT
getVerticalAdvance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
double	TokenNamedouble
adv	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
advance	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
lastMetrics	TokenNameIdentifier
.	TokenNameDOT
getVerticalAdvance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
lastH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
yScale	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
length	TokenNameIdentifier
.	TokenNameDOT
floatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
/	TokenNameDIVIDE
adv	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
visualAdvance	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
length	TokenNameIdentifier
.	TokenNameDOT
floatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
lengthAdj	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ADJUST_SPACING	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
xScale	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
length	TokenNameIdentifier
.	TokenNameDOT
floatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
lastW	TokenNameIdentifier
)	TokenNameRPAREN
/	TokenNameDIVIDE
(	TokenNameLPAREN
advance	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
lastMetrics	TokenNameIdentifier
.	TokenNameDOT
getHorizontalAdvance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
double	TokenNamedouble
adv	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
advance	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
lastW	TokenNameIdentifier
-	TokenNameMINUS
lastMetrics	TokenNameIdentifier
.	TokenNameDOT
getHorizontalAdvance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
xScale	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
length	TokenNameIdentifier
.	TokenNameDOT
floatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
/	TokenNameDIVIDE
adv	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
visualAdvance	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
length	TokenNameIdentifier
.	TokenNameDOT
floatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
adv	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
n	TokenNameIdentifier
=	TokenNameEQUAL
chunk	TokenNameIdentifier
.	TokenNameDOT
begin	TokenNameIdentifier
;	TokenNameSEMICOLON
n	TokenNameIdentifier
<	TokenNameLESS
chunk	TokenNameIdentifier
.	TokenNameDOT
end	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
n	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
r	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextRun	TokenNameIdentifier
)	TokenNameRPAREN
textRuns	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
n	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
layout	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
layout	TokenNameIdentifier
.	TokenNameDOT
setScale	TokenNameIdentifier
(	TokenNameLPAREN
xScale	TokenNameIdentifier
,	TokenNameCOMMA
yScale	TokenNameIdentifier
,	TokenNameCOMMA
lengthAdj	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ADJUST_SPACING	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
lAdv	TokenNameIdentifier
=	TokenNameEQUAL
layout	TokenNameIdentifier
.	TokenNameDOT
getAdvance2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
adv	TokenNameIdentifier
.	TokenNameDOT
x	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
lAdv	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
adv	TokenNameIdentifier
.	TokenNameDOT
y	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
lAdv	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
chunk	TokenNameIdentifier
.	TokenNameDOT
advance	TokenNameIdentifier
=	TokenNameEQUAL
adv	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
float	TokenNamefloat
dx	TokenNameIdentifier
=	TokenNameEQUAL
0f	TokenNameFloatingPointLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
dy	TokenNameIdentifier
=	TokenNameEQUAL
0f	TokenNameFloatingPointLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
anchorType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
TextNode	TokenNameIdentifier
.	TokenNameDOT
Anchor	TokenNameIdentifier
.	TokenNameDOT
ANCHOR_MIDDLE	TokenNameIdentifier
:	TokenNameCOLON
dx	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
-	TokenNameMINUS
visualAdvance	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
/	TokenNameDIVIDE
2d	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dy	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
-	TokenNameMINUS
visualAdvance	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
/	TokenNameDIVIDE
2d	TokenNameDoubleLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
TextNode	TokenNameIdentifier
.	TokenNameDOT
Anchor	TokenNameIdentifier
.	TokenNameDOT
ANCHOR_END	TokenNameIdentifier
:	TokenNameCOLON
dx	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
-	TokenNameMINUS
visualAdvance	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dy	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
(	TokenNameLPAREN
-	TokenNameMINUS
visualAdvance	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
r	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextRun	TokenNameIdentifier
)	TokenNameRPAREN
textRuns	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
chunk	TokenNameIdentifier
.	TokenNameDOT
begin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
layout	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
AttributedCharacterIterator	TokenNameIdentifier
runaci	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
.	TokenNameDOT
getACI	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
runaci	TokenNameIdentifier
.	TokenNameDOT
first	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
vertical	TokenNameIdentifier
=	TokenNameEQUAL
layout	TokenNameIdentifier
.	TokenNameDOT
isVertical	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Float	TokenNameIdentifier
runX	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Float	TokenNameIdentifier
)	TokenNameRPAREN
runaci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
XPOS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Float	TokenNameIdentifier
runY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Float	TokenNameIdentifier
)	TokenNameRPAREN
runaci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
YPOS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TextPath	TokenNameIdentifier
textPath	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextPath	TokenNameIdentifier
)	TokenNameRPAREN
runaci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
TEXTPATH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
absX	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
location	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
absY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
location	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
tpShiftX	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
float	TokenNamefloat
tpShiftY	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
runX	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
!	TokenNameNOT
runX	TokenNameIdentifier
.	TokenNameDOT
isNaN	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
absX	TokenNameIdentifier
=	TokenNameEQUAL
runX	TokenNameIdentifier
.	TokenNameDOT
floatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tpShiftX	TokenNameIdentifier
=	TokenNameEQUAL
absX	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
runY	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
!	TokenNameNOT
runY	TokenNameIdentifier
.	TokenNameDOT
isNaN	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
absY	TokenNameIdentifier
=	TokenNameEQUAL
runY	TokenNameIdentifier
.	TokenNameDOT
floatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tpShiftY	TokenNameIdentifier
=	TokenNameEQUAL
absY	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
vertical	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
absY	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dy	TokenNameIdentifier
;	TokenNameSEMICOLON
tpShiftY	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dy	TokenNameIdentifier
;	TokenNameSEMICOLON
tpShiftX	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
absX	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dx	TokenNameIdentifier
;	TokenNameSEMICOLON
tpShiftX	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
dx	TokenNameIdentifier
;	TokenNameSEMICOLON
tpShiftY	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
n	TokenNameIdentifier
=	TokenNameEQUAL
chunk	TokenNameIdentifier
.	TokenNameDOT
begin	TokenNameIdentifier
;	TokenNameSEMICOLON
n	TokenNameIdentifier
<	TokenNameLESS
chunk	TokenNameIdentifier
.	TokenNameDOT
end	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
n	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
r	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextRun	TokenNameIdentifier
)	TokenNameRPAREN
textRuns	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
n	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
layout	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
runaci	TokenNameIdentifier
=	TokenNameEQUAL
r	TokenNameIdentifier
.	TokenNameDOT
getACI	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
runaci	TokenNameIdentifier
.	TokenNameDOT
first	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
textPath	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextPath	TokenNameIdentifier
)	TokenNameRPAREN
runaci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
TEXTPATH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
vertical	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
runX	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Float	TokenNameIdentifier
)	TokenNameRPAREN
runaci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
XPOS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
runX	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
!	TokenNameNOT
runX	TokenNameIdentifier
.	TokenNameDOT
isNaN	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
absX	TokenNameIdentifier
=	TokenNameEQUAL
runX	TokenNameIdentifier
.	TokenNameDOT
floatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
runY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Float	TokenNameIdentifier
)	TokenNameRPAREN
runaci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
YPOS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
runY	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
!	TokenNameNOT
runY	TokenNameIdentifier
.	TokenNameDOT
isNaN	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
absY	TokenNameIdentifier
=	TokenNameEQUAL
runY	TokenNameIdentifier
.	TokenNameDOT
floatValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
textPath	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
layout	TokenNameIdentifier
.	TokenNameDOT
setOffset	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
absX	TokenNameIdentifier
,	TokenNameCOMMA
absY	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
ladv	TokenNameIdentifier
=	TokenNameEQUAL
layout	TokenNameIdentifier
.	TokenNameDOT
getAdvance2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
absX	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
ladv	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
absY	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
ladv	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
layout	TokenNameIdentifier
.	TokenNameDOT
setOffset	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
tpShiftX	TokenNameIdentifier
,	TokenNameCOMMA
tpShiftY	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Point2D	TokenNameIdentifier
ladv	TokenNameIdentifier
=	TokenNameEQUAL
layout	TokenNameIdentifier
.	TokenNameDOT
getAdvance2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tpShiftX	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
ladv	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tpShiftY	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
ladv	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ladv	TokenNameIdentifier
=	TokenNameEQUAL
layout	TokenNameIdentifier
.	TokenNameDOT
getTextPathAdvance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
absX	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
ladv	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
absY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
ladv	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
absX	TokenNameIdentifier
,	TokenNameCOMMA
absY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
paintDecorations	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
Graphics2D	TokenNameIdentifier
g2d	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
decorationType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Paint	TokenNameIdentifier
prevPaint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Paint	TokenNameIdentifier
prevStrokePaint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Stroke	TokenNameIdentifier
prevStroke	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Rectangle2D	TokenNameIdentifier
decorationRect	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
double	TokenNamedouble
yLoc	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
height	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
textRuns	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
TextRun	TokenNameIdentifier
textRun	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextRun	TokenNameIdentifier
)	TokenNameRPAREN
textRuns	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
AttributedCharacterIterator	TokenNameIdentifier
runaci	TokenNameIdentifier
=	TokenNameEQUAL
textRun	TokenNameIdentifier
.	TokenNameDOT
getACI	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
runaci	TokenNameIdentifier
.	TokenNameDOT
first	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TextPaintInfo	TokenNameIdentifier
tpi	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextPaintInfo	TokenNameIdentifier
)	TokenNameRPAREN
runaci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
PAINT_INFO	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
tpi	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
tpi	TokenNameIdentifier
.	TokenNameDOT
composite	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
g2d	TokenNameIdentifier
.	TokenNameDOT
setComposite	TokenNameIdentifier
(	TokenNameLPAREN
tpi	TokenNameIdentifier
.	TokenNameDOT
composite	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Paint	TokenNameIdentifier
paint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Stroke	TokenNameIdentifier
stroke	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Paint	TokenNameIdentifier
strokePaint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
tpi	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
decorationType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_UNDERLINE	TokenNameIdentifier
:	TokenNameCOLON
paint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
underlinePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
stroke	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
underlineStroke	TokenNameIdentifier
;	TokenNameSEMICOLON
strokePaint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
underlineStrokePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_OVERLINE	TokenNameIdentifier
:	TokenNameCOLON
paint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
overlinePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
stroke	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
overlineStroke	TokenNameIdentifier
;	TokenNameSEMICOLON
strokePaint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
overlineStrokePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_STRIKETHROUGH	TokenNameIdentifier
:	TokenNameCOLON
paint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
strikethroughPaint	TokenNameIdentifier
;	TokenNameSEMICOLON
stroke	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
strikethroughStroke	TokenNameIdentifier
;	TokenNameSEMICOLON
strokePaint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
strikethroughStrokePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
textRun	TokenNameIdentifier
.	TokenNameDOT
isFirstRunInChunk	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Shape	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getDecorationOutline	TokenNameIdentifier
(	TokenNameLPAREN
decorationType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Rectangle2D	TokenNameIdentifier
r2d	TokenNameIdentifier
=	TokenNameEQUAL
s	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
yLoc	TokenNameIdentifier
=	TokenNameEQUAL
r2d	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
height	TokenNameIdentifier
=	TokenNameEQUAL
r2d	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
textRun	TokenNameIdentifier
.	TokenNameDOT
isFirstRunInChunk	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
paint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
prevPaint	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
stroke	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
prevStroke	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
strokePaint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
prevStrokePaint	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
prevPaint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
g2d	TokenNameIdentifier
.	TokenNameDOT
setPaint	TokenNameIdentifier
(	TokenNameLPAREN
prevPaint	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
g2d	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
prevStroke	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
prevStrokePaint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
g2d	TokenNameIdentifier
.	TokenNameDOT
setPaint	TokenNameIdentifier
(	TokenNameLPAREN
prevStrokePaint	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
g2d	TokenNameIdentifier
.	TokenNameDOT
setStroke	TokenNameIdentifier
(	TokenNameLPAREN
prevStroke	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
g2d	TokenNameIdentifier
.	TokenNameDOT
draw	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
decorationRect	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
paint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
strokePaint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isVertical	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isOnATextPath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Shape	TokenNameIdentifier
decorationShape	TokenNameIdentifier
=	TokenNameEQUAL
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getDecorationOutline	TokenNameIdentifier
(	TokenNameLPAREN
decorationType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
Rectangle2D	TokenNameIdentifier
r2d	TokenNameIdentifier
=	TokenNameEQUAL
decorationShape	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
decorationRect	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Rectangle2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
r2d	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
yLoc	TokenNameIdentifier
,	TokenNameCOMMA
r2d	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
height	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Rectangle2D	TokenNameIdentifier
bounds	TokenNameIdentifier
=	TokenNameEQUAL
decorationShape	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
minX	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
min	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
bounds	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
maxX	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
.	TokenNameDOT
getMaxX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
bounds	TokenNameIdentifier
.	TokenNameDOT
getMaxX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
decorationRect	TokenNameIdentifier
.	TokenNameDOT
setRect	TokenNameIdentifier
(	TokenNameLPAREN
minX	TokenNameIdentifier
,	TokenNameCOMMA
yLoc	TokenNameIdentifier
,	TokenNameCOMMA
maxX	TokenNameIdentifier
-	TokenNameMINUS
minX	TokenNameIdentifier
,	TokenNameCOMMA
height	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
prevPaint	TokenNameIdentifier
=	TokenNameEQUAL
paint	TokenNameIdentifier
;	TokenNameSEMICOLON
prevStroke	TokenNameIdentifier
=	TokenNameEQUAL
stroke	TokenNameIdentifier
;	TokenNameSEMICOLON
prevStrokePaint	TokenNameIdentifier
=	TokenNameEQUAL
strokePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
prevPaint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
g2d	TokenNameIdentifier
.	TokenNameDOT
setPaint	TokenNameIdentifier
(	TokenNameLPAREN
prevPaint	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
g2d	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
prevStroke	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
prevStrokePaint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
g2d	TokenNameIdentifier
.	TokenNameDOT
setPaint	TokenNameIdentifier
(	TokenNameLPAREN
prevStrokePaint	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
g2d	TokenNameIdentifier
.	TokenNameDOT
setStroke	TokenNameIdentifier
(	TokenNameLPAREN
prevStroke	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
g2d	TokenNameIdentifier
.	TokenNameDOT
draw	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
paintTextRuns	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
Graphics2D	TokenNameIdentifier
g2d	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
textRuns	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
TextRun	TokenNameIdentifier
textRun	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextRun	TokenNameIdentifier
)	TokenNameRPAREN
textRuns	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
AttributedCharacterIterator	TokenNameIdentifier
runaci	TokenNameIdentifier
=	TokenNameEQUAL
textRun	TokenNameIdentifier
.	TokenNameDOT
getACI	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
runaci	TokenNameIdentifier
.	TokenNameDOT
first	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TextPaintInfo	TokenNameIdentifier
tpi	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextPaintInfo	TokenNameIdentifier
)	TokenNameRPAREN
runaci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
PAINT_INFO	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
tpi	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
tpi	TokenNameIdentifier
.	TokenNameDOT
composite	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
g2d	TokenNameIdentifier
.	TokenNameDOT
setComposite	TokenNameIdentifier
(	TokenNameLPAREN
tpi	TokenNameIdentifier
.	TokenNameDOT
composite	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
draw	TokenNameIdentifier
(	TokenNameLPAREN
g2d	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
Shape	TokenNameIdentifier
getOutline	TokenNameIdentifier
(	TokenNameLPAREN
TextNode	TokenNameIdentifier
node	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
GeneralPath	TokenNameIdentifier
outline	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
=	TokenNameEQUAL
node	TokenNameIdentifier
.	TokenNameDOT
getAttributedCharacterIterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
aci	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
List	TokenNameIdentifier
textRuns	TokenNameIdentifier
=	TokenNameEQUAL
getTextRuns	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
,	TokenNameCOMMA
aci	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
textRuns	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
TextRun	TokenNameIdentifier
textRun	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextRun	TokenNameIdentifier
)	TokenNameRPAREN
textRuns	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TextSpanLayout	TokenNameIdentifier
textRunLayout	TokenNameIdentifier
=	TokenNameEQUAL
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
GeneralPath	TokenNameIdentifier
textRunOutline	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GeneralPath	TokenNameIdentifier
(	TokenNameLPAREN
textRunLayout	TokenNameIdentifier
.	TokenNameDOT
getOutline	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
outline	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
outline	TokenNameIdentifier
=	TokenNameEQUAL
textRunOutline	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
outline	TokenNameIdentifier
.	TokenNameDOT
setWindingRule	TokenNameIdentifier
(	TokenNameLPAREN
GeneralPath	TokenNameIdentifier
.	TokenNameDOT
WIND_NON_ZERO	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
outline	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
textRunOutline	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
Shape	TokenNameIdentifier
underline	TokenNameIdentifier
=	TokenNameEQUAL
getDecorationOutline	TokenNameIdentifier
(	TokenNameLPAREN
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_UNDERLINE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Shape	TokenNameIdentifier
strikeThrough	TokenNameIdentifier
=	TokenNameEQUAL
getDecorationOutline	TokenNameIdentifier
(	TokenNameLPAREN
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_STRIKETHROUGH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Shape	TokenNameIdentifier
overline	TokenNameIdentifier
=	TokenNameEQUAL
getDecorationOutline	TokenNameIdentifier
(	TokenNameLPAREN
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_OVERLINE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
underline	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
outline	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
outline	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GeneralPath	TokenNameIdentifier
(	TokenNameLPAREN
underline	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
outline	TokenNameIdentifier
.	TokenNameDOT
setWindingRule	TokenNameIdentifier
(	TokenNameLPAREN
GeneralPath	TokenNameIdentifier
.	TokenNameDOT
WIND_NON_ZERO	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
outline	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
underline	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
strikeThrough	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
outline	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
outline	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GeneralPath	TokenNameIdentifier
(	TokenNameLPAREN
strikeThrough	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
outline	TokenNameIdentifier
.	TokenNameDOT
setWindingRule	TokenNameIdentifier
(	TokenNameLPAREN
GeneralPath	TokenNameIdentifier
.	TokenNameDOT
WIND_NON_ZERO	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
outline	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
strikeThrough	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
overline	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
outline	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
outline	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GeneralPath	TokenNameIdentifier
(	TokenNameLPAREN
overline	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
outline	TokenNameIdentifier
.	TokenNameDOT
setWindingRule	TokenNameIdentifier
(	TokenNameLPAREN
GeneralPath	TokenNameIdentifier
.	TokenNameDOT
WIND_NON_ZERO	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
outline	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
overline	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
outline	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Rectangle2D	TokenNameIdentifier
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
TextNode	TokenNameIdentifier
node	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
=	TokenNameEQUAL
node	TokenNameIdentifier
.	TokenNameDOT
getAttributedCharacterIterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
aci	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
List	TokenNameIdentifier
textRuns	TokenNameIdentifier
=	TokenNameEQUAL
getTextRuns	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
,	TokenNameCOMMA
aci	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Rectangle2D	TokenNameIdentifier
bounds	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
textRuns	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
TextRun	TokenNameIdentifier
textRun	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextRun	TokenNameIdentifier
)	TokenNameRPAREN
textRuns	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TextSpanLayout	TokenNameIdentifier
textRunLayout	TokenNameIdentifier
=	TokenNameEQUAL
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Rectangle2D	TokenNameIdentifier
runBounds	TokenNameIdentifier
=	TokenNameEQUAL
textRunLayout	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
runBounds	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
bounds	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
bounds	TokenNameIdentifier
=	TokenNameEQUAL
runBounds	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
bounds	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
runBounds	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
Shape	TokenNameIdentifier
underline	TokenNameIdentifier
=	TokenNameEQUAL
getDecorationStrokeOutline	TokenNameIdentifier
(	TokenNameLPAREN
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_UNDERLINE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
underline	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
bounds	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
bounds	TokenNameIdentifier
=	TokenNameEQUAL
underline	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
bounds	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
underline	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Shape	TokenNameIdentifier
strikeThrough	TokenNameIdentifier
=	TokenNameEQUAL
getDecorationStrokeOutline	TokenNameIdentifier
(	TokenNameLPAREN
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_STRIKETHROUGH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
strikeThrough	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
bounds	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
bounds	TokenNameIdentifier
=	TokenNameEQUAL
strikeThrough	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
bounds	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
strikeThrough	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Shape	TokenNameIdentifier
overline	TokenNameIdentifier
=	TokenNameEQUAL
getDecorationStrokeOutline	TokenNameIdentifier
(	TokenNameLPAREN
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_OVERLINE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
overline	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
bounds	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
bounds	TokenNameIdentifier
=	TokenNameEQUAL
overline	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
bounds	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
overline	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
bounds	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Shape	TokenNameIdentifier
getDecorationOutline	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
decorationType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
GeneralPath	TokenNameIdentifier
outline	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Paint	TokenNameIdentifier
prevPaint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Paint	TokenNameIdentifier
prevStrokePaint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Stroke	TokenNameIdentifier
prevStroke	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Rectangle2D	TokenNameIdentifier
decorationRect	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
double	TokenNamedouble
yLoc	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
height	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
textRuns	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
TextRun	TokenNameIdentifier
textRun	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextRun	TokenNameIdentifier
)	TokenNameRPAREN
textRuns	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
AttributedCharacterIterator	TokenNameIdentifier
runaci	TokenNameIdentifier
=	TokenNameEQUAL
textRun	TokenNameIdentifier
.	TokenNameDOT
getACI	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
runaci	TokenNameIdentifier
.	TokenNameDOT
first	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Paint	TokenNameIdentifier
paint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Stroke	TokenNameIdentifier
stroke	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Paint	TokenNameIdentifier
strokePaint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
TextPaintInfo	TokenNameIdentifier
tpi	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextPaintInfo	TokenNameIdentifier
)	TokenNameRPAREN
runaci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
PAINT_INFO	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
tpi	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
decorationType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_UNDERLINE	TokenNameIdentifier
:	TokenNameCOLON
paint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
underlinePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
stroke	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
underlineStroke	TokenNameIdentifier
;	TokenNameSEMICOLON
strokePaint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
underlineStrokePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_OVERLINE	TokenNameIdentifier
:	TokenNameCOLON
paint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
overlinePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
stroke	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
overlineStroke	TokenNameIdentifier
;	TokenNameSEMICOLON
strokePaint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
overlineStrokePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_STRIKETHROUGH	TokenNameIdentifier
:	TokenNameCOLON
paint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
strikethroughPaint	TokenNameIdentifier
;	TokenNameSEMICOLON
stroke	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
strikethroughStroke	TokenNameIdentifier
;	TokenNameSEMICOLON
strokePaint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
strikethroughStrokePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
textRun	TokenNameIdentifier
.	TokenNameDOT
isFirstRunInChunk	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Shape	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getDecorationOutline	TokenNameIdentifier
(	TokenNameLPAREN
decorationType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Rectangle2D	TokenNameIdentifier
r2d	TokenNameIdentifier
=	TokenNameEQUAL
s	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
yLoc	TokenNameIdentifier
=	TokenNameEQUAL
r2d	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
height	TokenNameIdentifier
=	TokenNameEQUAL
r2d	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
textRun	TokenNameIdentifier
.	TokenNameDOT
isFirstRunInChunk	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
paint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
prevPaint	TokenNameIdentifier
||	TokenNameOR_OR
stroke	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
prevStroke	TokenNameIdentifier
||	TokenNameOR_OR
strokePaint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
prevStrokePaint	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
outline	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
outline	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GeneralPath	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
outline	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
decorationRect	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
paint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
strokePaint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isVertical	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isOnATextPath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Shape	TokenNameIdentifier
decorationShape	TokenNameIdentifier
=	TokenNameEQUAL
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getDecorationOutline	TokenNameIdentifier
(	TokenNameLPAREN
decorationType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
Rectangle2D	TokenNameIdentifier
r2d	TokenNameIdentifier
=	TokenNameEQUAL
decorationShape	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
decorationRect	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Rectangle2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
r2d	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
yLoc	TokenNameIdentifier
,	TokenNameCOMMA
r2d	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
height	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Rectangle2D	TokenNameIdentifier
bounds	TokenNameIdentifier
=	TokenNameEQUAL
decorationShape	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
minX	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
min	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
bounds	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
maxX	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
.	TokenNameDOT
getMaxX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
bounds	TokenNameIdentifier
.	TokenNameDOT
getMaxX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
decorationRect	TokenNameIdentifier
.	TokenNameDOT
setRect	TokenNameIdentifier
(	TokenNameLPAREN
minX	TokenNameIdentifier
,	TokenNameCOMMA
yLoc	TokenNameIdentifier
,	TokenNameCOMMA
maxX	TokenNameIdentifier
-	TokenNameMINUS
minX	TokenNameIdentifier
,	TokenNameCOMMA
height	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
prevPaint	TokenNameIdentifier
=	TokenNameEQUAL
paint	TokenNameIdentifier
;	TokenNameSEMICOLON
prevStroke	TokenNameIdentifier
=	TokenNameEQUAL
stroke	TokenNameIdentifier
;	TokenNameSEMICOLON
prevStrokePaint	TokenNameIdentifier
=	TokenNameEQUAL
strokePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
outline	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
outline	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GeneralPath	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
outline	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
outline	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Shape	TokenNameIdentifier
getDecorationStrokeOutline	TokenNameIdentifier
(	TokenNameLPAREN
List	TokenNameIdentifier
textRuns	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
decorationType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
GeneralPath	TokenNameIdentifier
outline	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Paint	TokenNameIdentifier
prevPaint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Paint	TokenNameIdentifier
prevStrokePaint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Stroke	TokenNameIdentifier
prevStroke	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Rectangle2D	TokenNameIdentifier
decorationRect	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
double	TokenNamedouble
yLoc	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
height	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
textRuns	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
TextRun	TokenNameIdentifier
textRun	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextRun	TokenNameIdentifier
)	TokenNameRPAREN
textRuns	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
AttributedCharacterIterator	TokenNameIdentifier
runaci	TokenNameIdentifier
=	TokenNameEQUAL
textRun	TokenNameIdentifier
.	TokenNameDOT
getACI	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
runaci	TokenNameIdentifier
.	TokenNameDOT
first	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Paint	TokenNameIdentifier
paint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Stroke	TokenNameIdentifier
stroke	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Paint	TokenNameIdentifier
strokePaint	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
TextPaintInfo	TokenNameIdentifier
tpi	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextPaintInfo	TokenNameIdentifier
)	TokenNameRPAREN
runaci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
PAINT_INFO	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
tpi	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
decorationType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_UNDERLINE	TokenNameIdentifier
:	TokenNameCOLON
paint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
underlinePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
stroke	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
underlineStroke	TokenNameIdentifier
;	TokenNameSEMICOLON
strokePaint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
underlineStrokePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_OVERLINE	TokenNameIdentifier
:	TokenNameCOLON
paint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
overlinePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
stroke	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
overlineStroke	TokenNameIdentifier
;	TokenNameSEMICOLON
strokePaint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
overlineStrokePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
TextSpanLayout	TokenNameIdentifier
.	TokenNameDOT
DECORATION_STRIKETHROUGH	TokenNameIdentifier
:	TokenNameCOLON
paint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
strikethroughPaint	TokenNameIdentifier
;	TokenNameSEMICOLON
stroke	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
strikethroughStroke	TokenNameIdentifier
;	TokenNameSEMICOLON
strokePaint	TokenNameIdentifier
=	TokenNameEQUAL
tpi	TokenNameIdentifier
.	TokenNameDOT
strikethroughStrokePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
textRun	TokenNameIdentifier
.	TokenNameDOT
isFirstRunInChunk	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Shape	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getDecorationOutline	TokenNameIdentifier
(	TokenNameLPAREN
decorationType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Rectangle2D	TokenNameIdentifier
r2d	TokenNameIdentifier
=	TokenNameEQUAL
s	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
yLoc	TokenNameIdentifier
=	TokenNameEQUAL
r2d	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
height	TokenNameIdentifier
=	TokenNameEQUAL
r2d	TokenNameIdentifier
.	TokenNameDOT
getHeight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
textRun	TokenNameIdentifier
.	TokenNameDOT
isFirstRunInChunk	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
paint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
prevPaint	TokenNameIdentifier
||	TokenNameOR_OR
stroke	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
prevStroke	TokenNameIdentifier
||	TokenNameOR_OR
strokePaint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
prevStrokePaint	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
Shape	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
prevStroke	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
prevStrokePaint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
s	TokenNameIdentifier
=	TokenNameEQUAL
prevStroke	TokenNameIdentifier
.	TokenNameDOT
createStrokedShape	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
prevPaint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
s	TokenNameIdentifier
=	TokenNameEQUAL
decorationRect	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
s	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
outline	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
outline	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GeneralPath	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
outline	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
decorationRect	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
paint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
strokePaint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isVertical	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isOnATextPath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Shape	TokenNameIdentifier
decorationShape	TokenNameIdentifier
=	TokenNameEQUAL
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getDecorationOutline	TokenNameIdentifier
(	TokenNameLPAREN
decorationType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
Rectangle2D	TokenNameIdentifier
r2d	TokenNameIdentifier
=	TokenNameEQUAL
decorationShape	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
decorationRect	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Rectangle2D	TokenNameIdentifier
.	TokenNameDOT
Double	TokenNameIdentifier
(	TokenNameLPAREN
r2d	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
yLoc	TokenNameIdentifier
,	TokenNameCOMMA
r2d	TokenNameIdentifier
.	TokenNameDOT
getWidth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
height	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Rectangle2D	TokenNameIdentifier
bounds	TokenNameIdentifier
=	TokenNameEQUAL
decorationShape	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
minX	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
min	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
bounds	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
double	TokenNamedouble
maxX	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
max	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
.	TokenNameDOT
getMaxX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
bounds	TokenNameIdentifier
.	TokenNameDOT
getMaxX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
decorationRect	TokenNameIdentifier
.	TokenNameDOT
setRect	TokenNameIdentifier
(	TokenNameLPAREN
minX	TokenNameIdentifier
,	TokenNameCOMMA
yLoc	TokenNameIdentifier
,	TokenNameCOMMA
maxX	TokenNameIdentifier
-	TokenNameMINUS
minX	TokenNameIdentifier
,	TokenNameCOMMA
height	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
prevPaint	TokenNameIdentifier
=	TokenNameEQUAL
paint	TokenNameIdentifier
;	TokenNameSEMICOLON
prevStroke	TokenNameIdentifier
=	TokenNameEQUAL
stroke	TokenNameIdentifier
;	TokenNameSEMICOLON
prevStrokePaint	TokenNameIdentifier
=	TokenNameEQUAL
strokePaint	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
Shape	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
prevStroke	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
prevStrokePaint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
s	TokenNameIdentifier
=	TokenNameEQUAL
prevStroke	TokenNameIdentifier
.	TokenNameDOT
createStrokedShape	TokenNameIdentifier
(	TokenNameLPAREN
decorationRect	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
prevPaint	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
s	TokenNameIdentifier
=	TokenNameEQUAL
decorationRect	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
s	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
outline	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
outline	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GeneralPath	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
outline	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
outline	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Mark	TokenNameIdentifier
getMark	TokenNameIdentifier
(	TokenNameLPAREN
TextNode	TokenNameIdentifier
node	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
index	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
leadingEdge	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
=	TokenNameEQUAL
node	TokenNameIdentifier
.	TokenNameDOT
getAttributedCharacterIterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
aci	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
index	TokenNameIdentifier
<	TokenNameLESS
aci	TokenNameIdentifier
.	TokenNameDOT
getBeginIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
index	TokenNameIdentifier
>	TokenNameGREATER
aci	TokenNameIdentifier
.	TokenNameDOT
getEndIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
TextHit	TokenNameIdentifier
textHit	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TextHit	TokenNameIdentifier
(	TokenNameLPAREN
index	TokenNameIdentifier
,	TokenNameCOMMA
leadingEdge	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
BasicTextPainter	TokenNameIdentifier
.	TokenNameDOT
BasicMark	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
,	TokenNameCOMMA
textHit	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Mark	TokenNameIdentifier
hitTest	TokenNameIdentifier
(	TokenNameLPAREN
double	TokenNamedouble
x	TokenNameIdentifier
,	TokenNameCOMMA
double	TokenNamedouble
y	TokenNameIdentifier
,	TokenNameCOMMA
TextNode	TokenNameIdentifier
node	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
=	TokenNameEQUAL
node	TokenNameIdentifier
.	TokenNameDOT
getAttributedCharacterIterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
aci	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
List	TokenNameIdentifier
textRuns	TokenNameIdentifier
=	TokenNameEQUAL
getTextRuns	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
,	TokenNameCOMMA
aci	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
textRuns	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
TextRun	TokenNameIdentifier
textRun	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextRun	TokenNameIdentifier
)	TokenNameRPAREN
textRuns	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TextSpanLayout	TokenNameIdentifier
layout	TokenNameIdentifier
=	TokenNameEQUAL
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TextHit	TokenNameIdentifier
textHit	TokenNameIdentifier
=	TokenNameEQUAL
layout	TokenNameIdentifier
.	TokenNameDOT
hitTestChar	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
y	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
textHit	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
layout	TokenNameIdentifier
.	TokenNameDOT
getBounds2D	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
contains	TokenNameIdentifier
(	TokenNameLPAREN
x	TokenNameIdentifier
,	TokenNameCOMMA
y	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
BasicTextPainter	TokenNameIdentifier
.	TokenNameDOT
BasicMark	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
,	TokenNameCOMMA
textHit	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Mark	TokenNameIdentifier
selectFirst	TokenNameIdentifier
(	TokenNameLPAREN
TextNode	TokenNameIdentifier
node	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
=	TokenNameEQUAL
node	TokenNameIdentifier
.	TokenNameDOT
getAttributedCharacterIterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
aci	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
TextHit	TokenNameIdentifier
textHit	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TextHit	TokenNameIdentifier
(	TokenNameLPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getBeginIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
BasicTextPainter	TokenNameIdentifier
.	TokenNameDOT
BasicMark	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
,	TokenNameCOMMA
textHit	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Mark	TokenNameIdentifier
selectLast	TokenNameIdentifier
(	TokenNameLPAREN
TextNode	TokenNameIdentifier
node	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
=	TokenNameEQUAL
node	TokenNameIdentifier
.	TokenNameDOT
getAttributedCharacterIterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
aci	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
TextHit	TokenNameIdentifier
textHit	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TextHit	TokenNameIdentifier
(	TokenNameLPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getEndIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
BasicTextPainter	TokenNameIdentifier
.	TokenNameDOT
BasicMark	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
,	TokenNameCOMMA
textHit	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getSelected	TokenNameIdentifier
(	TokenNameLPAREN
Mark	TokenNameIdentifier
startMark	TokenNameIdentifier
,	TokenNameCOMMA
Mark	TokenNameIdentifier
finishMark	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
startMark	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
finishMark	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
BasicTextPainter	TokenNameIdentifier
.	TokenNameDOT
BasicMark	TokenNameIdentifier
start	TokenNameIdentifier
;	TokenNameSEMICOLON
BasicTextPainter	TokenNameIdentifier
.	TokenNameDOT
BasicMark	TokenNameIdentifier
finish	TokenNameIdentifier
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
start	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
BasicTextPainter	TokenNameIdentifier
.	TokenNameDOT
BasicMark	TokenNameIdentifier
)	TokenNameRPAREN
startMark	TokenNameIdentifier
;	TokenNameSEMICOLON
finish	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
BasicTextPainter	TokenNameIdentifier
.	TokenNameDOT
BasicMark	TokenNameIdentifier
)	TokenNameRPAREN
finishMark	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ClassCastException	TokenNameIdentifier
cce	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
Error	TokenNameIdentifier
(	TokenNameLPAREN
"This Mark was not instantiated by this TextPainter class!"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
TextNode	TokenNameIdentifier
textNode	TokenNameIdentifier
=	TokenNameEQUAL
start	TokenNameIdentifier
.	TokenNameDOT
getTextNode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
textNode	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
textNode	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
finish	TokenNameIdentifier
.	TokenNameDOT
getTextNode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
Error	TokenNameIdentifier
(	TokenNameLPAREN
"Markers are from different TextNodes!"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
=	TokenNameEQUAL
textNode	TokenNameIdentifier
.	TokenNameDOT
getAttributedCharacterIterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
aci	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
result	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
result	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
start	TokenNameIdentifier
.	TokenNameDOT
getHit	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getCharIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
result	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
finish	TokenNameIdentifier
.	TokenNameDOT
getHit	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getCharIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
List	TokenNameIdentifier
textRuns	TokenNameIdentifier
=	TokenNameEQUAL
getTextRuns	TokenNameIdentifier
(	TokenNameLPAREN
textNode	TokenNameIdentifier
,	TokenNameCOMMA
aci	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Iterator	TokenNameIdentifier
trI	TokenNameIdentifier
=	TokenNameEQUAL
textRuns	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
startGlyphIndex	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
endGlyphIndex	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
TextSpanLayout	TokenNameIdentifier
startLayout	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
,	TokenNameCOMMA
endLayout	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
trI	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
TextRun	TokenNameIdentifier
tr	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextRun	TokenNameIdentifier
)	TokenNameRPAREN
trI	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TextSpanLayout	TokenNameIdentifier
tsl	TokenNameIdentifier
=	TokenNameEQUAL
tr	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
startGlyphIndex	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
startGlyphIndex	TokenNameIdentifier
=	TokenNameEQUAL
tsl	TokenNameIdentifier
.	TokenNameDOT
getGlyphIndex	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
startGlyphIndex	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
startLayout	TokenNameIdentifier
=	TokenNameEQUAL
tsl	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
endGlyphIndex	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
endGlyphIndex	TokenNameIdentifier
=	TokenNameEQUAL
tsl	TokenNameIdentifier
.	TokenNameDOT
getGlyphIndex	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
endGlyphIndex	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
endLayout	TokenNameIdentifier
=	TokenNameEQUAL
tsl	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
startGlyphIndex	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
endGlyphIndex	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
startLayout	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
endLayout	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
startCharCount	TokenNameIdentifier
=	TokenNameEQUAL
startLayout	TokenNameIdentifier
.	TokenNameDOT
getCharacterCount	TokenNameIdentifier
(	TokenNameLPAREN
startGlyphIndex	TokenNameIdentifier
,	TokenNameCOMMA
startGlyphIndex	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
endCharCount	TokenNameIdentifier
=	TokenNameEQUAL
endLayout	TokenNameIdentifier
.	TokenNameDOT
getCharacterCount	TokenNameIdentifier
(	TokenNameLPAREN
endGlyphIndex	TokenNameIdentifier
,	TokenNameCOMMA
endGlyphIndex	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
startCharCount	TokenNameIdentifier
>	TokenNameGREATER
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
result	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
>	TokenNameGREATER
result	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
&&	TokenNameAND_AND
startLayout	TokenNameIdentifier
.	TokenNameDOT
isLeftToRight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
result	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
+=	TokenNamePLUS_EQUAL
startCharCount	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
result	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
>	TokenNameGREATER
result	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
&&	TokenNameAND_AND
!	TokenNameNOT
startLayout	TokenNameIdentifier
.	TokenNameDOT
isLeftToRight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
result	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
-=	TokenNameMINUS_EQUAL
startCharCount	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
endCharCount	TokenNameIdentifier
>	TokenNameGREATER
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
result	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
>	TokenNameGREATER
result	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
&&	TokenNameAND_AND
endLayout	TokenNameIdentifier
.	TokenNameDOT
isLeftToRight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
result	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
+=	TokenNamePLUS_EQUAL
endCharCount	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
result	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
>	TokenNameGREATER
result	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
&&	TokenNameAND_AND
!	TokenNameNOT
endLayout	TokenNameIdentifier
.	TokenNameDOT
isLeftToRight	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
result	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
-=	TokenNameMINUS_EQUAL
endCharCount	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
result	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Shape	TokenNameIdentifier
getHighlightShape	TokenNameIdentifier
(	TokenNameLPAREN
Mark	TokenNameIdentifier
beginMark	TokenNameIdentifier
,	TokenNameCOMMA
Mark	TokenNameIdentifier
endMark	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
beginMark	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
endMark	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
BasicTextPainter	TokenNameIdentifier
.	TokenNameDOT
BasicMark	TokenNameIdentifier
begin	TokenNameIdentifier
;	TokenNameSEMICOLON
BasicTextPainter	TokenNameIdentifier
.	TokenNameDOT
BasicMark	TokenNameIdentifier
end	TokenNameIdentifier
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
begin	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
BasicTextPainter	TokenNameIdentifier
.	TokenNameDOT
BasicMark	TokenNameIdentifier
)	TokenNameRPAREN
beginMark	TokenNameIdentifier
;	TokenNameSEMICOLON
end	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
BasicTextPainter	TokenNameIdentifier
.	TokenNameDOT
BasicMark	TokenNameIdentifier
)	TokenNameRPAREN
endMark	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ClassCastException	TokenNameIdentifier
cce	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
Error	TokenNameIdentifier
(	TokenNameLPAREN
"This Mark was not instantiated by this TextPainter class!"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
TextNode	TokenNameIdentifier
textNode	TokenNameIdentifier
=	TokenNameEQUAL
begin	TokenNameIdentifier
.	TokenNameDOT
getTextNode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
textNode	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
textNode	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
end	TokenNameIdentifier
.	TokenNameDOT
getTextNode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
Error	TokenNameIdentifier
(	TokenNameLPAREN
"Markers are from different TextNodes!"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
;	TokenNameSEMICOLON
aci	TokenNameIdentifier
=	TokenNameEQUAL
textNode	TokenNameIdentifier
.	TokenNameDOT
getAttributedCharacterIterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
aci	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
beginIndex	TokenNameIdentifier
=	TokenNameEQUAL
begin	TokenNameIdentifier
.	TokenNameDOT
getHit	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getCharIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
endIndex	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
.	TokenNameDOT
getHit	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getCharIndex	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
beginIndex	TokenNameIdentifier
>	TokenNameGREATER
endIndex	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
BasicTextPainter	TokenNameIdentifier
.	TokenNameDOT
BasicMark	TokenNameIdentifier
tmpMark	TokenNameIdentifier
=	TokenNameEQUAL
begin	TokenNameIdentifier
;	TokenNameSEMICOLON
begin	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
end	TokenNameIdentifier
=	TokenNameEQUAL
tmpMark	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
tmpIndex	TokenNameIdentifier
=	TokenNameEQUAL
beginIndex	TokenNameIdentifier
;	TokenNameSEMICOLON
beginIndex	TokenNameIdentifier
=	TokenNameEQUAL
endIndex	TokenNameIdentifier
;	TokenNameSEMICOLON
endIndex	TokenNameIdentifier
=	TokenNameEQUAL
tmpIndex	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
List	TokenNameIdentifier
textRuns	TokenNameIdentifier
=	TokenNameEQUAL
getTextRuns	TokenNameIdentifier
(	TokenNameLPAREN
textNode	TokenNameIdentifier
,	TokenNameCOMMA
aci	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
GeneralPath	TokenNameIdentifier
highlightedShape	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
GeneralPath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
textRuns	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
TextRun	TokenNameIdentifier
textRun	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextRun	TokenNameIdentifier
)	TokenNameRPAREN
textRuns	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TextSpanLayout	TokenNameIdentifier
layout	TokenNameIdentifier
=	TokenNameEQUAL
textRun	TokenNameIdentifier
.	TokenNameDOT
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Shape	TokenNameIdentifier
layoutHighlightedShape	TokenNameIdentifier
=	TokenNameEQUAL
layout	TokenNameIdentifier
.	TokenNameDOT
getHighlightShape	TokenNameIdentifier
(	TokenNameLPAREN
beginIndex	TokenNameIdentifier
,	TokenNameCOMMA
endIndex	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
layoutHighlightedShape	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
!	TokenNameNOT
layoutHighlightedShape	TokenNameIdentifier
.	TokenNameDOT
getBounds	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isEmpty	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
highlightedShape	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
layoutHighlightedShape	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
highlightedShape	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
class	TokenNameclass
TextChunk	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
int	TokenNameint
begin	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
int	TokenNameint
end	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
Point2D	TokenNameIdentifier
advance	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
TextChunk	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
begin	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
end	TokenNameIdentifier
,	TokenNameCOMMA
Point2D	TokenNameIdentifier
advance	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
begin	TokenNameIdentifier
=	TokenNameEQUAL
begin	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
end	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
advance	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Point2D	TokenNameIdentifier
.	TokenNameDOT
Float	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
advance	TokenNameIdentifier
.	TokenNameDOT
getX	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
(	TokenNameLPAREN
float	TokenNamefloat
)	TokenNameRPAREN
advance	TokenNameIdentifier
.	TokenNameDOT
getY	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
class	TokenNameclass
TextRun	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
TextSpanLayout	TokenNameIdentifier
layout	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
anchorType	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
boolean	TokenNameboolean
firstRunInChunk	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
Float	TokenNameIdentifier
length	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
Integer	TokenNameIdentifier
lengthAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
TextRun	TokenNameIdentifier
(	TokenNameLPAREN
TextSpanLayout	TokenNameIdentifier
layout	TokenNameIdentifier
,	TokenNameCOMMA
AttributedCharacterIterator	TokenNameIdentifier
aci	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
firstRunInChunk	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
layout	TokenNameIdentifier
=	TokenNameEQUAL
layout	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
aci	TokenNameIdentifier
=	TokenNameEQUAL
aci	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
aci	TokenNameIdentifier
.	TokenNameDOT
first	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
firstRunInChunk	TokenNameIdentifier
=	TokenNameEQUAL
firstRunInChunk	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
anchorType	TokenNameIdentifier
=	TokenNameEQUAL
TextNode	TokenNameIdentifier
.	TokenNameDOT
Anchor	TokenNameIdentifier
.	TokenNameDOT
ANCHOR_START	TokenNameIdentifier
;	TokenNameSEMICOLON
TextNode	TokenNameIdentifier
.	TokenNameDOT
Anchor	TokenNameIdentifier
anchor	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TextNode	TokenNameIdentifier
.	TokenNameDOT
Anchor	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
ANCHOR_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
anchor	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
anchorType	TokenNameIdentifier
=	TokenNameEQUAL
anchor	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
WRITING_MODE	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
WRITING_MODE_RTL	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
anchorType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
TextNode	TokenNameIdentifier
.	TokenNameDOT
Anchor	TokenNameIdentifier
.	TokenNameDOT
ANCHOR_START	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
anchorType	TokenNameIdentifier
=	TokenNameEQUAL
TextNode	TokenNameIdentifier
.	TokenNameDOT
Anchor	TokenNameIdentifier
.	TokenNameDOT
ANCHOR_END	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
anchorType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
TextNode	TokenNameIdentifier
.	TokenNameDOT
Anchor	TokenNameIdentifier
.	TokenNameDOT
ANCHOR_END	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
anchorType	TokenNameIdentifier
=	TokenNameEQUAL
TextNode	TokenNameIdentifier
.	TokenNameDOT
Anchor	TokenNameIdentifier
.	TokenNameDOT
ANCHOR_START	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
length	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Float	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
BBOX_WIDTH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
lengthAdjust	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Integer	TokenNameIdentifier
)	TokenNameRPAREN
aci	TokenNameIdentifier
.	TokenNameDOT
getAttribute	TokenNameIdentifier
(	TokenNameLPAREN
GVTAttributedCharacterIterator	TokenNameIdentifier
.	TokenNameDOT
TextAttribute	TokenNameIdentifier
.	TokenNameDOT
LENGTH_ADJUST	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
AttributedCharacterIterator	TokenNameIdentifier
getACI	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
aci	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
TextSpanLayout	TokenNameIdentifier
getLayout	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
layout	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getAnchorType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
anchorType	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Float	TokenNameIdentifier
getLength	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
length	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Integer	TokenNameIdentifier
getLengthAdjust	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
lengthAdjust	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isFirstRunInChunk	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
firstRunInChunk	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
