package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
gvt	TokenNameIdentifier
.	TokenNameDOT
font	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
KerningTable	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
Kern	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
entries	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
KerningTable	TokenNameIdentifier
(	TokenNameLPAREN
Kern	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
entries	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
entries	TokenNameIdentifier
=	TokenNameEQUAL
entries	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
float	TokenNamefloat
getKerningValue	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
glyphCode1	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
glyphCode2	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
glyphUnicode1	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
glyphUnicode2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
entries	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
entries	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
matchesFirstGlyph	TokenNameIdentifier
(	TokenNameLPAREN
glyphCode1	TokenNameIdentifier
,	TokenNameCOMMA
glyphUnicode1	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
entries	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
matchesSecondGlyph	TokenNameIdentifier
(	TokenNameLPAREN
glyphCode2	TokenNameIdentifier
,	TokenNameCOMMA
glyphUnicode2	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
entries	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
getAdjustValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
0f	TokenNameFloatingPointLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
