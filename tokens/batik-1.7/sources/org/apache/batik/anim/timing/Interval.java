package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
anim	TokenNameIdentifier
.	TokenNameDOT
timing	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Iterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
LinkedList	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
Interval	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
float	TokenNamefloat
begin	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
float	TokenNamefloat
end	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
InstanceTime	TokenNameIdentifier
beginInstanceTime	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
InstanceTime	TokenNameIdentifier
endInstanceTime	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
LinkedList	TokenNameIdentifier
beginDependents	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
LinkedList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
protected	TokenNameprotected
LinkedList	TokenNameIdentifier
endDependents	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
LinkedList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
Interval	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
begin	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
end	TokenNameIdentifier
,	TokenNameCOMMA
InstanceTime	TokenNameIdentifier
beginInstanceTime	TokenNameIdentifier
,	TokenNameCOMMA
InstanceTime	TokenNameIdentifier
endInstanceTime	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
begin	TokenNameIdentifier
=	TokenNameEQUAL
begin	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
end	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
beginInstanceTime	TokenNameIdentifier
=	TokenNameEQUAL
beginInstanceTime	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
endInstanceTime	TokenNameIdentifier
=	TokenNameEQUAL
endInstanceTime	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
TimedElement	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
begin	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
".."	TokenNameStringLiteral
+	TokenNamePLUS
TimedElement	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
end	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
float	TokenNamefloat
getBegin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
begin	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
float	TokenNamefloat
getEnd	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
end	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
InstanceTime	TokenNameIdentifier
getBeginInstanceTime	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
beginInstanceTime	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
InstanceTime	TokenNameIdentifier
getEndInstanceTime	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
endInstanceTime	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
void	TokenNamevoid
addDependent	TokenNameIdentifier
(	TokenNameLPAREN
InstanceTime	TokenNameIdentifier
dependent	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
forBegin	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
forBegin	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
beginDependents	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
dependent	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
endDependents	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
dependent	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
void	TokenNamevoid
removeDependent	TokenNameIdentifier
(	TokenNameLPAREN
InstanceTime	TokenNameIdentifier
dependent	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
forBegin	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
forBegin	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
beginDependents	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
dependent	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
endDependents	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
dependent	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
float	TokenNamefloat
setBegin	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
begin	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
float	TokenNamefloat
minTime	TokenNameIdentifier
=	TokenNameEQUAL
Float	TokenNameIdentifier
.	TokenNameDOT
POSITIVE_INFINITY	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
begin	TokenNameIdentifier
=	TokenNameEQUAL
begin	TokenNameIdentifier
;	TokenNameSEMICOLON
Iterator	TokenNameIdentifier
i	TokenNameIdentifier
=	TokenNameEQUAL
beginDependents	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
i	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
InstanceTime	TokenNameIdentifier
it	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
InstanceTime	TokenNameIdentifier
)	TokenNameRPAREN
i	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
t	TokenNameIdentifier
=	TokenNameEQUAL
it	TokenNameIdentifier
.	TokenNameDOT
dependentUpdate	TokenNameIdentifier
(	TokenNameLPAREN
begin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
t	TokenNameIdentifier
<	TokenNameLESS
minTime	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
minTime	TokenNameIdentifier
=	TokenNameEQUAL
t	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
minTime	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
float	TokenNamefloat
setEnd	TokenNameIdentifier
(	TokenNameLPAREN
float	TokenNamefloat
end	TokenNameIdentifier
,	TokenNameCOMMA
InstanceTime	TokenNameIdentifier
endInstanceTime	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
float	TokenNamefloat
minTime	TokenNameIdentifier
=	TokenNameEQUAL
Float	TokenNameIdentifier
.	TokenNameDOT
POSITIVE_INFINITY	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
end	TokenNameIdentifier
=	TokenNameEQUAL
end	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
endInstanceTime	TokenNameIdentifier
=	TokenNameEQUAL
endInstanceTime	TokenNameIdentifier
;	TokenNameSEMICOLON
Iterator	TokenNameIdentifier
i	TokenNameIdentifier
=	TokenNameEQUAL
endDependents	TokenNameIdentifier
.	TokenNameDOT
iterator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
i	TokenNameIdentifier
.	TokenNameDOT
hasNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
InstanceTime	TokenNameIdentifier
it	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
InstanceTime	TokenNameIdentifier
)	TokenNameRPAREN
i	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
float	TokenNamefloat
t	TokenNameIdentifier
=	TokenNameEQUAL
it	TokenNameIdentifier
.	TokenNameDOT
dependentUpdate	TokenNameIdentifier
(	TokenNameLPAREN
end	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
t	TokenNameIdentifier
<	TokenNameLESS
minTime	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
minTime	TokenNameIdentifier
=	TokenNameEQUAL
t	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
minTime	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
