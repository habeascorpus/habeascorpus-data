package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
batik	TokenNameIdentifier
.	TokenNameDOT
anim	TokenNameIdentifier
.	TokenNameDOT
timing	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
ref	TokenNameIdentifier
.	TokenNameDOT
WeakReference	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
HashMap	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
SyncbaseTimingSpecifier	TokenNameIdentifier
extends	TokenNameextends
OffsetTimingSpecifier	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
String	TokenNameIdentifier
syncbaseID	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
TimedElement	TokenNameIdentifier
syncbaseElement	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
boolean	TokenNameboolean
syncBegin	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
HashMap	TokenNameIdentifier
instances	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
HashMap	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
SyncbaseTimingSpecifier	TokenNameIdentifier
(	TokenNameLPAREN
TimedElement	TokenNameIdentifier
owner	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
isBegin	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
offset	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
syncbaseID	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
syncBegin	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
owner	TokenNameIdentifier
,	TokenNameCOMMA
isBegin	TokenNameIdentifier
,	TokenNameCOMMA
offset	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
syncbaseID	TokenNameIdentifier
=	TokenNameEQUAL
syncbaseID	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
syncBegin	TokenNameIdentifier
=	TokenNameEQUAL
syncBegin	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
syncbaseElement	TokenNameIdentifier
=	TokenNameEQUAL
owner	TokenNameIdentifier
.	TokenNameDOT
getTimedElementById	TokenNameIdentifier
(	TokenNameLPAREN
syncbaseID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
syncbaseElement	TokenNameIdentifier
.	TokenNameDOT
addDependent	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
,	TokenNameCOMMA
syncBegin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
syncbaseID	TokenNameIdentifier
+	TokenNamePLUS
"."	TokenNameStringLiteral
+	TokenNamePLUS
(	TokenNameLPAREN
syncBegin	TokenNameIdentifier
?	TokenNameQUESTION
"begin"	TokenNameStringLiteral
:	TokenNameCOLON
"end"	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
(	TokenNameLPAREN
offset	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
?	TokenNameQUESTION
super	TokenNamesuper
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
initialize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isEventCondition	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
float	TokenNamefloat
newInterval	TokenNameIdentifier
(	TokenNameLPAREN
Interval	TokenNameIdentifier
interval	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
owner	TokenNameIdentifier
.	TokenNameDOT
hasPropagated	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
Float	TokenNameIdentifier
.	TokenNameDOT
POSITIVE_INFINITY	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
InstanceTime	TokenNameIdentifier
instance	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
InstanceTime	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
,	TokenNameCOMMA
(	TokenNameLPAREN
syncBegin	TokenNameIdentifier
?	TokenNameQUESTION
interval	TokenNameIdentifier
.	TokenNameDOT
getBegin	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
interval	TokenNameIdentifier
.	TokenNameDOT
getEnd	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
offset	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
instances	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
interval	TokenNameIdentifier
,	TokenNameCOMMA
instance	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interval	TokenNameIdentifier
.	TokenNameDOT
addDependent	TokenNameIdentifier
(	TokenNameLPAREN
instance	TokenNameIdentifier
,	TokenNameCOMMA
syncBegin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
owner	TokenNameIdentifier
.	TokenNameDOT
addInstanceTime	TokenNameIdentifier
(	TokenNameLPAREN
instance	TokenNameIdentifier
,	TokenNameCOMMA
isBegin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
float	TokenNamefloat
removeInterval	TokenNameIdentifier
(	TokenNameLPAREN
Interval	TokenNameIdentifier
interval	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
owner	TokenNameIdentifier
.	TokenNameDOT
hasPropagated	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
Float	TokenNameIdentifier
.	TokenNameDOT
POSITIVE_INFINITY	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
InstanceTime	TokenNameIdentifier
instance	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
InstanceTime	TokenNameIdentifier
)	TokenNameRPAREN
instances	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
interval	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
interval	TokenNameIdentifier
.	TokenNameDOT
removeDependent	TokenNameIdentifier
(	TokenNameLPAREN
instance	TokenNameIdentifier
,	TokenNameCOMMA
syncBegin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
owner	TokenNameIdentifier
.	TokenNameDOT
removeInstanceTime	TokenNameIdentifier
(	TokenNameLPAREN
instance	TokenNameIdentifier
,	TokenNameCOMMA
isBegin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
float	TokenNamefloat
handleTimebaseUpdate	TokenNameIdentifier
(	TokenNameLPAREN
InstanceTime	TokenNameIdentifier
instanceTime	TokenNameIdentifier
,	TokenNameCOMMA
float	TokenNamefloat
newTime	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
owner	TokenNameIdentifier
.	TokenNameDOT
hasPropagated	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
Float	TokenNameIdentifier
.	TokenNameDOT
POSITIVE_INFINITY	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
owner	TokenNameIdentifier
.	TokenNameDOT
instanceTimeChanged	TokenNameIdentifier
(	TokenNameLPAREN
instanceTime	TokenNameIdentifier
,	TokenNameCOMMA
isBegin	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
