package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
serialize	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
BufferedReader	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStream	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
InputStreamReader	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Hashtable	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Locale	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
DOMMessageFormatter	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
class	TokenNameclass
HTMLdtd	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
HTMLPublicId	TokenNameIdentifier
=	TokenNameEQUAL
"-//W3C//DTD HTML 4.01//EN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
HTMLSystemId	TokenNameIdentifier
=	TokenNameEQUAL
"http://www.w3.org/TR/html4/strict.dtd"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
XHTMLPublicId	TokenNameIdentifier
=	TokenNameEQUAL
"-//W3C//DTD XHTML 1.0 Strict//EN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
XHTMLSystemId	TokenNameIdentifier
=	TokenNameEQUAL
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
Hashtable	TokenNameIdentifier
_byChar	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
Hashtable	TokenNameIdentifier
_byName	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
Hashtable	TokenNameIdentifier
_boolAttrs	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
Hashtable	TokenNameIdentifier
_elemDefs	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ENTITIES_RESOURCE	TokenNameIdentifier
=	TokenNameEQUAL
"HTMLEntities.res"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
ONLY_OPENING	TokenNameIdentifier
=	TokenNameEQUAL
0x0001	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
ELEM_CONTENT	TokenNameIdentifier
=	TokenNameEQUAL
0x0002	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
PRESERVE	TokenNameIdentifier
=	TokenNameEQUAL
0x0004	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
OPT_CLOSING	TokenNameIdentifier
=	TokenNameEQUAL
0x0008	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
EMPTY	TokenNameIdentifier
=	TokenNameEQUAL
0x0010	TokenNameIntegerLiteral
|	TokenNameOR
ONLY_OPENING	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
ALLOWED_HEAD	TokenNameIdentifier
=	TokenNameEQUAL
0x0020	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
CLOSE_P	TokenNameIdentifier
=	TokenNameEQUAL
0x0040	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
CLOSE_DD_DT	TokenNameIdentifier
=	TokenNameEQUAL
0x0080	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
CLOSE_SELF	TokenNameIdentifier
=	TokenNameEQUAL
0x0100	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
CLOSE_TABLE	TokenNameIdentifier
=	TokenNameEQUAL
0x0200	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
CLOSE_TH_TD	TokenNameIdentifier
=	TokenNameEQUAL
0x04000	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isEmptyTag	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tagName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isElement	TokenNameIdentifier
(	TokenNameLPAREN
tagName	TokenNameIdentifier
,	TokenNameCOMMA
EMPTY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isElementContent	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tagName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isElement	TokenNameIdentifier
(	TokenNameLPAREN
tagName	TokenNameIdentifier
,	TokenNameCOMMA
ELEM_CONTENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isPreserveSpace	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tagName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isElement	TokenNameIdentifier
(	TokenNameLPAREN
tagName	TokenNameIdentifier
,	TokenNameCOMMA
PRESERVE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isOptionalClosing	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tagName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isElement	TokenNameIdentifier
(	TokenNameLPAREN
tagName	TokenNameIdentifier
,	TokenNameCOMMA
OPT_CLOSING	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isOnlyOpening	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tagName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isElement	TokenNameIdentifier
(	TokenNameLPAREN
tagName	TokenNameIdentifier
,	TokenNameCOMMA
ONLY_OPENING	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isClosing	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tagName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
openTag	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
openTag	TokenNameIdentifier
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
"HEAD"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
!	TokenNameNOT
isElement	TokenNameIdentifier
(	TokenNameLPAREN
tagName	TokenNameIdentifier
,	TokenNameCOMMA
ALLOWED_HEAD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
openTag	TokenNameIdentifier
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
"P"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
isElement	TokenNameIdentifier
(	TokenNameLPAREN
tagName	TokenNameIdentifier
,	TokenNameCOMMA
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
openTag	TokenNameIdentifier
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
"DT"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
openTag	TokenNameIdentifier
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
"DD"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
isElement	TokenNameIdentifier
(	TokenNameLPAREN
tagName	TokenNameIdentifier
,	TokenNameCOMMA
CLOSE_DD_DT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
openTag	TokenNameIdentifier
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
"LI"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
openTag	TokenNameIdentifier
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
"OPTION"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
isElement	TokenNameIdentifier
(	TokenNameLPAREN
tagName	TokenNameIdentifier
,	TokenNameCOMMA
CLOSE_SELF	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
openTag	TokenNameIdentifier
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
"THEAD"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
openTag	TokenNameIdentifier
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
"TFOOT"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
openTag	TokenNameIdentifier
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
"TBODY"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
openTag	TokenNameIdentifier
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
"TR"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
openTag	TokenNameIdentifier
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
"COLGROUP"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
isElement	TokenNameIdentifier
(	TokenNameLPAREN
tagName	TokenNameIdentifier
,	TokenNameCOMMA
CLOSE_TABLE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
openTag	TokenNameIdentifier
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
"TH"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
openTag	TokenNameIdentifier
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
"TD"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
isElement	TokenNameIdentifier
(	TokenNameLPAREN
tagName	TokenNameIdentifier
,	TokenNameCOMMA
CLOSE_TH_TD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isURI	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tagName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
attrName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
attrName	TokenNameIdentifier
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
"href"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
attrName	TokenNameIdentifier
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
"src"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isBoolean	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tagName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
attrName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
attrNames	TokenNameIdentifier
;	TokenNameSEMICOLON
attrNames	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
)	TokenNameRPAREN
_boolAttrs	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
tagName	TokenNameIdentifier
.	TokenNameDOT
toUpperCase	TokenNameIdentifier
(	TokenNameLPAREN
Locale	TokenNameIdentifier
.	TokenNameDOT
ENGLISH	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
attrNames	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
attrNames	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
if	TokenNameif
(	TokenNameLPAREN
attrNames	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
attrName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
charFromName	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
value	TokenNameIdentifier
;	TokenNameSEMICOLON
initialize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
value	TokenNameIdentifier
=	TokenNameEQUAL
_byName	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
value	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
value	TokenNameIdentifier
instanceof	TokenNameinstanceof
Integer	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
(	TokenNameLPAREN
Integer	TokenNameIdentifier
)	TokenNameRPAREN
value	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
intValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
fromChar	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
value	TokenNameIdentifier
>	TokenNameGREATER
0xffff	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
String	TokenNameIdentifier
name	TokenNameIdentifier
;	TokenNameSEMICOLON
initialize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
name	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
_byChar	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Integer	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
name	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
void	TokenNamevoid
initialize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
InputStream	TokenNameIdentifier
is	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
BufferedReader	TokenNameIdentifier
reader	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
index	TokenNameIdentifier
;	TokenNameSEMICOLON
String	TokenNameIdentifier
name	TokenNameIdentifier
;	TokenNameSEMICOLON
String	TokenNameIdentifier
value	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
code	TokenNameIdentifier
;	TokenNameSEMICOLON
String	TokenNameIdentifier
line	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
_byName	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
_byName	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Hashtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
_byChar	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Hashtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
is	TokenNameIdentifier
=	TokenNameEQUAL
HTMLdtd	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
.	TokenNameDOT
getResourceAsStream	TokenNameIdentifier
(	TokenNameLPAREN
ENTITIES_RESOURCE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
is	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
DOMMessageFormatter	TokenNameIdentifier
.	TokenNameDOT
formatMessage	TokenNameIdentifier
(	TokenNameLPAREN
DOMMessageFormatter	TokenNameIdentifier
.	TokenNameDOT
SERIALIZER_DOMAIN	TokenNameIdentifier
,	TokenNameCOMMA
"ResourceNotFound"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
ENTITIES_RESOURCE	TokenNameIdentifier
}	TokenNameRBRACE
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
reader	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BufferedReader	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
InputStreamReader	TokenNameIdentifier
(	TokenNameLPAREN
is	TokenNameIdentifier
,	TokenNameCOMMA
"ASCII"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
line	TokenNameIdentifier
=	TokenNameEQUAL
reader	TokenNameIdentifier
.	TokenNameDOT
readLine	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
line	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
line	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
||	TokenNameOR_OR
line	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
'#'	TokenNameCharacterLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
line	TokenNameIdentifier
=	TokenNameEQUAL
reader	TokenNameIdentifier
.	TokenNameDOT
readLine	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
continue	TokenNamecontinue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
index	TokenNameIdentifier
=	TokenNameEQUAL
line	TokenNameIdentifier
.	TokenNameDOT
indexOf	TokenNameIdentifier
(	TokenNameLPAREN
' '	TokenNameCharacterLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
index	TokenNameIdentifier
>	TokenNameGREATER
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
name	TokenNameIdentifier
=	TokenNameEQUAL
line	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
index	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
index	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
index	TokenNameIdentifier
<	TokenNameLESS
line	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
value	TokenNameIdentifier
=	TokenNameEQUAL
line	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
index	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
index	TokenNameIdentifier
=	TokenNameEQUAL
value	TokenNameIdentifier
.	TokenNameDOT
indexOf	TokenNameIdentifier
(	TokenNameLPAREN
' '	TokenNameCharacterLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
index	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
value	TokenNameIdentifier
=	TokenNameEQUAL
value	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
index	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
code	TokenNameIdentifier
=	TokenNameEQUAL
Integer	TokenNameIdentifier
.	TokenNameDOT
parseInt	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineEntity	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
char	TokenNamechar
)	TokenNameRPAREN
code	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
line	TokenNameIdentifier
=	TokenNameEQUAL
reader	TokenNameIdentifier
.	TokenNameDOT
readLine	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
is	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
except	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
DOMMessageFormatter	TokenNameIdentifier
.	TokenNameDOT
formatMessage	TokenNameIdentifier
(	TokenNameLPAREN
DOMMessageFormatter	TokenNameIdentifier
.	TokenNameDOT
SERIALIZER_DOMAIN	TokenNameIdentifier
,	TokenNameCOMMA
"ResourceNotLoaded"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
ENTITIES_RESOURCE	TokenNameIdentifier
,	TokenNameCOMMA
except	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
is	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
is	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
except	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
void	TokenNamevoid
defineEntity	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
,	TokenNameCOMMA
char	TokenNamechar
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
_byName	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
_byName	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Integer	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
_byChar	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Integer	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
void	TokenNamevoid
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
flags	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
_elemDefs	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Integer	TokenNameIdentifier
(	TokenNameLPAREN
flags	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
void	TokenNamevoid
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tagName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
attrName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
tagName	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
attrName	TokenNameIdentifier
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
void	TokenNamevoid
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
tagName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
attrNames	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
_boolAttrs	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
tagName	TokenNameIdentifier
,	TokenNameCOMMA
attrNames	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
boolean	TokenNameboolean
isElement	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
flag	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Integer	TokenNameIdentifier
flags	TokenNameIdentifier
;	TokenNameSEMICOLON
flags	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Integer	TokenNameIdentifier
)	TokenNameRPAREN
_elemDefs	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
.	TokenNameDOT
toUpperCase	TokenNameIdentifier
(	TokenNameLPAREN
Locale	TokenNameIdentifier
.	TokenNameDOT
ENGLISH	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
flags	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
(	TokenNameLPAREN
(	TokenNameLPAREN
flags	TokenNameIdentifier
.	TokenNameDOT
intValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&	TokenNameAND
flag	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
flag	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
{	TokenNameLBRACE
_elemDefs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Hashtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"ADDRESS"	TokenNameStringLiteral
,	TokenNameCOMMA
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"AREA"	TokenNameStringLiteral
,	TokenNameCOMMA
EMPTY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"BASE"	TokenNameStringLiteral
,	TokenNameCOMMA
EMPTY	TokenNameIdentifier
|	TokenNameOR
ALLOWED_HEAD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"BASEFONT"	TokenNameStringLiteral
,	TokenNameCOMMA
EMPTY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"BLOCKQUOTE"	TokenNameStringLiteral
,	TokenNameCOMMA
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"BODY"	TokenNameStringLiteral
,	TokenNameCOMMA
OPT_CLOSING	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"BR"	TokenNameStringLiteral
,	TokenNameCOMMA
EMPTY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"COL"	TokenNameStringLiteral
,	TokenNameCOMMA
EMPTY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"COLGROUP"	TokenNameStringLiteral
,	TokenNameCOMMA
ELEM_CONTENT	TokenNameIdentifier
|	TokenNameOR
OPT_CLOSING	TokenNameIdentifier
|	TokenNameOR
CLOSE_TABLE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"DD"	TokenNameStringLiteral
,	TokenNameCOMMA
OPT_CLOSING	TokenNameIdentifier
|	TokenNameOR
ONLY_OPENING	TokenNameIdentifier
|	TokenNameOR
CLOSE_DD_DT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"DIV"	TokenNameStringLiteral
,	TokenNameCOMMA
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"DL"	TokenNameStringLiteral
,	TokenNameCOMMA
ELEM_CONTENT	TokenNameIdentifier
|	TokenNameOR
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"DT"	TokenNameStringLiteral
,	TokenNameCOMMA
OPT_CLOSING	TokenNameIdentifier
|	TokenNameOR
ONLY_OPENING	TokenNameIdentifier
|	TokenNameOR
CLOSE_DD_DT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"FIELDSET"	TokenNameStringLiteral
,	TokenNameCOMMA
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"FORM"	TokenNameStringLiteral
,	TokenNameCOMMA
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"FRAME"	TokenNameStringLiteral
,	TokenNameCOMMA
EMPTY	TokenNameIdentifier
|	TokenNameOR
OPT_CLOSING	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"H1"	TokenNameStringLiteral
,	TokenNameCOMMA
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"H2"	TokenNameStringLiteral
,	TokenNameCOMMA
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"H3"	TokenNameStringLiteral
,	TokenNameCOMMA
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"H4"	TokenNameStringLiteral
,	TokenNameCOMMA
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"H5"	TokenNameStringLiteral
,	TokenNameCOMMA
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"H6"	TokenNameStringLiteral
,	TokenNameCOMMA
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"HEAD"	TokenNameStringLiteral
,	TokenNameCOMMA
ELEM_CONTENT	TokenNameIdentifier
|	TokenNameOR
OPT_CLOSING	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"HR"	TokenNameStringLiteral
,	TokenNameCOMMA
EMPTY	TokenNameIdentifier
|	TokenNameOR
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"HTML"	TokenNameStringLiteral
,	TokenNameCOMMA
ELEM_CONTENT	TokenNameIdentifier
|	TokenNameOR
OPT_CLOSING	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"IMG"	TokenNameStringLiteral
,	TokenNameCOMMA
EMPTY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"INPUT"	TokenNameStringLiteral
,	TokenNameCOMMA
EMPTY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"ISINDEX"	TokenNameStringLiteral
,	TokenNameCOMMA
EMPTY	TokenNameIdentifier
|	TokenNameOR
ALLOWED_HEAD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"LI"	TokenNameStringLiteral
,	TokenNameCOMMA
OPT_CLOSING	TokenNameIdentifier
|	TokenNameOR
ONLY_OPENING	TokenNameIdentifier
|	TokenNameOR
CLOSE_SELF	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"LINK"	TokenNameStringLiteral
,	TokenNameCOMMA
EMPTY	TokenNameIdentifier
|	TokenNameOR
ALLOWED_HEAD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"MAP"	TokenNameStringLiteral
,	TokenNameCOMMA
ALLOWED_HEAD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"META"	TokenNameStringLiteral
,	TokenNameCOMMA
EMPTY	TokenNameIdentifier
|	TokenNameOR
ALLOWED_HEAD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"OL"	TokenNameStringLiteral
,	TokenNameCOMMA
ELEM_CONTENT	TokenNameIdentifier
|	TokenNameOR
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"OPTGROUP"	TokenNameStringLiteral
,	TokenNameCOMMA
ELEM_CONTENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"OPTION"	TokenNameStringLiteral
,	TokenNameCOMMA
OPT_CLOSING	TokenNameIdentifier
|	TokenNameOR
ONLY_OPENING	TokenNameIdentifier
|	TokenNameOR
CLOSE_SELF	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"P"	TokenNameStringLiteral
,	TokenNameCOMMA
OPT_CLOSING	TokenNameIdentifier
|	TokenNameOR
CLOSE_P	TokenNameIdentifier
|	TokenNameOR
CLOSE_SELF	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"PARAM"	TokenNameStringLiteral
,	TokenNameCOMMA
EMPTY	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"PRE"	TokenNameStringLiteral
,	TokenNameCOMMA
PRESERVE	TokenNameIdentifier
|	TokenNameOR
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"SCRIPT"	TokenNameStringLiteral
,	TokenNameCOMMA
ALLOWED_HEAD	TokenNameIdentifier
|	TokenNameOR
PRESERVE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"NOSCRIPT"	TokenNameStringLiteral
,	TokenNameCOMMA
ALLOWED_HEAD	TokenNameIdentifier
|	TokenNameOR
PRESERVE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"SELECT"	TokenNameStringLiteral
,	TokenNameCOMMA
ELEM_CONTENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"STYLE"	TokenNameStringLiteral
,	TokenNameCOMMA
ALLOWED_HEAD	TokenNameIdentifier
|	TokenNameOR
PRESERVE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"TABLE"	TokenNameStringLiteral
,	TokenNameCOMMA
ELEM_CONTENT	TokenNameIdentifier
|	TokenNameOR
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"TBODY"	TokenNameStringLiteral
,	TokenNameCOMMA
ELEM_CONTENT	TokenNameIdentifier
|	TokenNameOR
OPT_CLOSING	TokenNameIdentifier
|	TokenNameOR
CLOSE_TABLE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"TD"	TokenNameStringLiteral
,	TokenNameCOMMA
OPT_CLOSING	TokenNameIdentifier
|	TokenNameOR
CLOSE_TH_TD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"TEXTAREA"	TokenNameStringLiteral
,	TokenNameCOMMA
PRESERVE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"TFOOT"	TokenNameStringLiteral
,	TokenNameCOMMA
ELEM_CONTENT	TokenNameIdentifier
|	TokenNameOR
OPT_CLOSING	TokenNameIdentifier
|	TokenNameOR
CLOSE_TABLE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"TH"	TokenNameStringLiteral
,	TokenNameCOMMA
OPT_CLOSING	TokenNameIdentifier
|	TokenNameOR
CLOSE_TH_TD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"THEAD"	TokenNameStringLiteral
,	TokenNameCOMMA
ELEM_CONTENT	TokenNameIdentifier
|	TokenNameOR
OPT_CLOSING	TokenNameIdentifier
|	TokenNameOR
CLOSE_TABLE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"TITLE"	TokenNameStringLiteral
,	TokenNameCOMMA
ALLOWED_HEAD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"TR"	TokenNameStringLiteral
,	TokenNameCOMMA
ELEM_CONTENT	TokenNameIdentifier
|	TokenNameOR
OPT_CLOSING	TokenNameIdentifier
|	TokenNameOR
CLOSE_TABLE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineElement	TokenNameIdentifier
(	TokenNameLPAREN
"UL"	TokenNameStringLiteral
,	TokenNameCOMMA
ELEM_CONTENT	TokenNameIdentifier
|	TokenNameOR
CLOSE_P	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
_boolAttrs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Hashtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"AREA"	TokenNameStringLiteral
,	TokenNameCOMMA
"href"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"BUTTON"	TokenNameStringLiteral
,	TokenNameCOMMA
"disabled"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"DIR"	TokenNameStringLiteral
,	TokenNameCOMMA
"compact"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"DL"	TokenNameStringLiteral
,	TokenNameCOMMA
"compact"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"FRAME"	TokenNameStringLiteral
,	TokenNameCOMMA
"noresize"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"HR"	TokenNameStringLiteral
,	TokenNameCOMMA
"noshade"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"IMAGE"	TokenNameStringLiteral
,	TokenNameCOMMA
"ismap"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"INPUT"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"defaultchecked"	TokenNameStringLiteral
,	TokenNameCOMMA
"checked"	TokenNameStringLiteral
,	TokenNameCOMMA
"readonly"	TokenNameStringLiteral
,	TokenNameCOMMA
"disabled"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"LINK"	TokenNameStringLiteral
,	TokenNameCOMMA
"link"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"MENU"	TokenNameStringLiteral
,	TokenNameCOMMA
"compact"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"OBJECT"	TokenNameStringLiteral
,	TokenNameCOMMA
"declare"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"OL"	TokenNameStringLiteral
,	TokenNameCOMMA
"compact"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"OPTGROUP"	TokenNameStringLiteral
,	TokenNameCOMMA
"disabled"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"OPTION"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"default-selected"	TokenNameStringLiteral
,	TokenNameCOMMA
"selected"	TokenNameStringLiteral
,	TokenNameCOMMA
"disabled"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"SCRIPT"	TokenNameStringLiteral
,	TokenNameCOMMA
"defer"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"SELECT"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"multiple"	TokenNameStringLiteral
,	TokenNameCOMMA
"disabled"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"STYLE"	TokenNameStringLiteral
,	TokenNameCOMMA
"disabled"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"TD"	TokenNameStringLiteral
,	TokenNameCOMMA
"nowrap"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"TH"	TokenNameStringLiteral
,	TokenNameCOMMA
"nowrap"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"TEXTAREA"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"disabled"	TokenNameStringLiteral
,	TokenNameCOMMA
"readonly"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
defineBoolean	TokenNameIdentifier
(	TokenNameLPAREN
"UL"	TokenNameStringLiteral
,	TokenNameCOMMA
"compact"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
initialize	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
