package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
regex	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Vector	TokenNameIdentifier
;	TokenNameSEMICOLON
class	TokenNameclass
Op	TokenNameIdentifier
{	TokenNameLBRACE
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
DOT	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
CHAR	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
RANGE	TokenNameIdentifier
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
NRANGE	TokenNameIdentifier
=	TokenNameEQUAL
4	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
ANCHOR	TokenNameIdentifier
=	TokenNameEQUAL
5	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
STRING	TokenNameIdentifier
=	TokenNameEQUAL
6	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
CLOSURE	TokenNameIdentifier
=	TokenNameEQUAL
7	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
NONGREEDYCLOSURE	TokenNameIdentifier
=	TokenNameEQUAL
8	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
QUESTION	TokenNameIdentifier
=	TokenNameEQUAL
9	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
NONGREEDYQUESTION	TokenNameIdentifier
=	TokenNameEQUAL
10	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
UNION	TokenNameIdentifier
=	TokenNameEQUAL
11	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
CAPTURE	TokenNameIdentifier
=	TokenNameEQUAL
15	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BACKREFERENCE	TokenNameIdentifier
=	TokenNameEQUAL
16	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
LOOKAHEAD	TokenNameIdentifier
=	TokenNameEQUAL
20	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
NEGATIVELOOKAHEAD	TokenNameIdentifier
=	TokenNameEQUAL
21	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
LOOKBEHIND	TokenNameIdentifier
=	TokenNameEQUAL
22	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
NEGATIVELOOKBEHIND	TokenNameIdentifier
=	TokenNameEQUAL
23	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
INDEPENDENT	TokenNameIdentifier
=	TokenNameEQUAL
24	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MODIFIER	TokenNameIdentifier
=	TokenNameEQUAL
25	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
CONDITION	TokenNameIdentifier
=	TokenNameEQUAL
26	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
int	TokenNameint
nofinstances	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
boolean	TokenNameboolean
COUNT	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
static	TokenNamestatic
Op	TokenNameIdentifier
createDot	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
COUNT	TokenNameIdentifier
)	TokenNameRPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
nofinstances	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
Op	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
DOT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
CharOp	TokenNameIdentifier
createChar	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
data	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
COUNT	TokenNameIdentifier
)	TokenNameRPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
nofinstances	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
CharOp	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
CHAR	TokenNameIdentifier
,	TokenNameCOMMA
data	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
CharOp	TokenNameIdentifier
createAnchor	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
data	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
COUNT	TokenNameIdentifier
)	TokenNameRPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
nofinstances	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
CharOp	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
ANCHOR	TokenNameIdentifier
,	TokenNameCOMMA
data	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
CharOp	TokenNameIdentifier
createCapture	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
number	TokenNameIdentifier
,	TokenNameCOMMA
Op	TokenNameIdentifier
next	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
COUNT	TokenNameIdentifier
)	TokenNameRPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
nofinstances	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
CharOp	TokenNameIdentifier
op	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CharOp	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
CAPTURE	TokenNameIdentifier
,	TokenNameCOMMA
number	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
op	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
=	TokenNameEQUAL
next	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
op	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
UnionOp	TokenNameIdentifier
createUnion	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
size	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
COUNT	TokenNameIdentifier
)	TokenNameRPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
nofinstances	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
UnionOp	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
UNION	TokenNameIdentifier
,	TokenNameCOMMA
size	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
ChildOp	TokenNameIdentifier
createClosure	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
id	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
COUNT	TokenNameIdentifier
)	TokenNameRPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
nofinstances	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
ModifierOp	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
CLOSURE	TokenNameIdentifier
,	TokenNameCOMMA
id	TokenNameIdentifier
,	TokenNameCOMMA
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
ChildOp	TokenNameIdentifier
createNonGreedyClosure	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
COUNT	TokenNameIdentifier
)	TokenNameRPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
nofinstances	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
ChildOp	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
NONGREEDYCLOSURE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
ChildOp	TokenNameIdentifier
createQuestion	TokenNameIdentifier
(	TokenNameLPAREN
boolean	TokenNameboolean
nongreedy	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
COUNT	TokenNameIdentifier
)	TokenNameRPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
nofinstances	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
ChildOp	TokenNameIdentifier
(	TokenNameLPAREN
nongreedy	TokenNameIdentifier
?	TokenNameQUESTION
Op	TokenNameIdentifier
.	TokenNameDOT
NONGREEDYQUESTION	TokenNameIdentifier
:	TokenNameCOLON
Op	TokenNameIdentifier
.	TokenNameDOT
QUESTION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
RangeOp	TokenNameIdentifier
createRange	TokenNameIdentifier
(	TokenNameLPAREN
Token	TokenNameIdentifier
tok	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
COUNT	TokenNameIdentifier
)	TokenNameRPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
nofinstances	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
RangeOp	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
RANGE	TokenNameIdentifier
,	TokenNameCOMMA
tok	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
ChildOp	TokenNameIdentifier
createLook	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
type	TokenNameIdentifier
,	TokenNameCOMMA
Op	TokenNameIdentifier
next	TokenNameIdentifier
,	TokenNameCOMMA
Op	TokenNameIdentifier
branch	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
COUNT	TokenNameIdentifier
)	TokenNameRPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
nofinstances	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
ChildOp	TokenNameIdentifier
op	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ChildOp	TokenNameIdentifier
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
op	TokenNameIdentifier
.	TokenNameDOT
setChild	TokenNameIdentifier
(	TokenNameLPAREN
branch	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
op	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
=	TokenNameEQUAL
next	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
op	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
CharOp	TokenNameIdentifier
createBackReference	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
refno	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
COUNT	TokenNameIdentifier
)	TokenNameRPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
nofinstances	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
CharOp	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
BACKREFERENCE	TokenNameIdentifier
,	TokenNameCOMMA
refno	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
StringOp	TokenNameIdentifier
createString	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
literal	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
COUNT	TokenNameIdentifier
)	TokenNameRPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
nofinstances	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
StringOp	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
STRING	TokenNameIdentifier
,	TokenNameCOMMA
literal	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
ChildOp	TokenNameIdentifier
createIndependent	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
next	TokenNameIdentifier
,	TokenNameCOMMA
Op	TokenNameIdentifier
branch	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
COUNT	TokenNameIdentifier
)	TokenNameRPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
nofinstances	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
ChildOp	TokenNameIdentifier
op	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ChildOp	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
INDEPENDENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
op	TokenNameIdentifier
.	TokenNameDOT
setChild	TokenNameIdentifier
(	TokenNameLPAREN
branch	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
op	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
=	TokenNameEQUAL
next	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
op	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
ModifierOp	TokenNameIdentifier
createModifier	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
next	TokenNameIdentifier
,	TokenNameCOMMA
Op	TokenNameIdentifier
branch	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
add	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
mask	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
COUNT	TokenNameIdentifier
)	TokenNameRPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
nofinstances	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
ModifierOp	TokenNameIdentifier
op	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ModifierOp	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
MODIFIER	TokenNameIdentifier
,	TokenNameCOMMA
add	TokenNameIdentifier
,	TokenNameCOMMA
mask	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
op	TokenNameIdentifier
.	TokenNameDOT
setChild	TokenNameIdentifier
(	TokenNameLPAREN
branch	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
op	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
=	TokenNameEQUAL
next	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
op	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
ConditionOp	TokenNameIdentifier
createCondition	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
next	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
ref	TokenNameIdentifier
,	TokenNameCOMMA
Op	TokenNameIdentifier
conditionflow	TokenNameIdentifier
,	TokenNameCOMMA
Op	TokenNameIdentifier
yesflow	TokenNameIdentifier
,	TokenNameCOMMA
Op	TokenNameIdentifier
noflow	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
COUNT	TokenNameIdentifier
)	TokenNameRPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
nofinstances	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
ConditionOp	TokenNameIdentifier
op	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ConditionOp	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
.	TokenNameDOT
CONDITION	TokenNameIdentifier
,	TokenNameCOMMA
ref	TokenNameIdentifier
,	TokenNameCOMMA
conditionflow	TokenNameIdentifier
,	TokenNameCOMMA
yesflow	TokenNameIdentifier
,	TokenNameCOMMA
noflow	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
op	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
=	TokenNameEQUAL
next	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
op	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
int	TokenNameint
type	TokenNameIdentifier
;	TokenNameSEMICOLON
Op	TokenNameIdentifier
next	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
protected	TokenNameprotected
Op	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
type	TokenNameIdentifier
=	TokenNameEQUAL
type	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Op	TokenNameIdentifier
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
index	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Internal Error: type="	TokenNameStringLiteral
+	TokenNamePLUS
this	TokenNamethis
.	TokenNameDOT
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Op	TokenNameIdentifier
getChild	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Internal Error: type="	TokenNameStringLiteral
+	TokenNamePLUS
this	TokenNamethis
.	TokenNameDOT
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
getData	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Internal Error: type="	TokenNameStringLiteral
+	TokenNamePLUS
this	TokenNamethis
.	TokenNameDOT
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
getData2	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Internal Error: type="	TokenNameStringLiteral
+	TokenNamePLUS
this	TokenNamethis
.	TokenNameDOT
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
RangeToken	TokenNameIdentifier
getToken	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Internal Error: type="	TokenNameStringLiteral
+	TokenNamePLUS
this	TokenNamethis
.	TokenNameDOT
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
String	TokenNameIdentifier
getString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
"Internal Error: type="	TokenNameStringLiteral
+	TokenNamePLUS
this	TokenNamethis
.	TokenNameDOT
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
class	TokenNameclass
CharOp	TokenNameIdentifier
extends	TokenNameextends
Op	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
charData	TokenNameIdentifier
;	TokenNameSEMICOLON
CharOp	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
type	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
data	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
charData	TokenNameIdentifier
=	TokenNameEQUAL
data	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
getData	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
this	TokenNamethis
.	TokenNameDOT
charData	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
class	TokenNameclass
UnionOp	TokenNameIdentifier
extends	TokenNameextends
Op	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
Vector	TokenNameIdentifier
branches	TokenNameIdentifier
;	TokenNameSEMICOLON
UnionOp	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
type	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
size	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
branches	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Vector	TokenNameIdentifier
(	TokenNameLPAREN
size	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
void	TokenNamevoid
addElement	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
op	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
branches	TokenNameIdentifier
.	TokenNameDOT
addElement	TokenNameIdentifier
(	TokenNameLPAREN
op	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
this	TokenNamethis
.	TokenNameDOT
branches	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Op	TokenNameIdentifier
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
index	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
Op	TokenNameIdentifier
)	TokenNameRPAREN
this	TokenNamethis
.	TokenNameDOT
branches	TokenNameIdentifier
.	TokenNameDOT
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
index	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
class	TokenNameclass
ChildOp	TokenNameIdentifier
extends	TokenNameextends
Op	TokenNameIdentifier
{	TokenNameLBRACE
Op	TokenNameIdentifier
child	TokenNameIdentifier
;	TokenNameSEMICOLON
ChildOp	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
void	TokenNamevoid
setChild	TokenNameIdentifier
(	TokenNameLPAREN
Op	TokenNameIdentifier
child	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
child	TokenNameIdentifier
=	TokenNameEQUAL
child	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Op	TokenNameIdentifier
getChild	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
this	TokenNamethis
.	TokenNameDOT
child	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
class	TokenNameclass
ModifierOp	TokenNameIdentifier
extends	TokenNameextends
ChildOp	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
v1	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
v2	TokenNameIdentifier
;	TokenNameSEMICOLON
ModifierOp	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
type	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
v1	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
v2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
v1	TokenNameIdentifier
=	TokenNameEQUAL
v1	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
v2	TokenNameIdentifier
=	TokenNameEQUAL
v2	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
getData	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
this	TokenNamethis
.	TokenNameDOT
v1	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
getData2	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
this	TokenNamethis
.	TokenNameDOT
v2	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
class	TokenNameclass
RangeOp	TokenNameIdentifier
extends	TokenNameextends
Op	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
Token	TokenNameIdentifier
tok	TokenNameIdentifier
;	TokenNameSEMICOLON
RangeOp	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
type	TokenNameIdentifier
,	TokenNameCOMMA
Token	TokenNameIdentifier
tok	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
tok	TokenNameIdentifier
=	TokenNameEQUAL
tok	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
RangeToken	TokenNameIdentifier
getToken	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
RangeToken	TokenNameIdentifier
)	TokenNameRPAREN
this	TokenNamethis
.	TokenNameDOT
tok	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
class	TokenNameclass
StringOp	TokenNameIdentifier
extends	TokenNameextends
Op	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
String	TokenNameIdentifier
string	TokenNameIdentifier
;	TokenNameSEMICOLON
StringOp	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
type	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
literal	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
string	TokenNameIdentifier
=	TokenNameEQUAL
literal	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
String	TokenNameIdentifier
getString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
this	TokenNamethis
.	TokenNameDOT
string	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
class	TokenNameclass
ConditionOp	TokenNameIdentifier
extends	TokenNameextends
Op	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
refNumber	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
Op	TokenNameIdentifier
condition	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
Op	TokenNameIdentifier
yes	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
Op	TokenNameIdentifier
no	TokenNameIdentifier
;	TokenNameSEMICOLON
ConditionOp	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
type	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
refno	TokenNameIdentifier
,	TokenNameCOMMA
Op	TokenNameIdentifier
conditionflow	TokenNameIdentifier
,	TokenNameCOMMA
Op	TokenNameIdentifier
yesflow	TokenNameIdentifier
,	TokenNameCOMMA
Op	TokenNameIdentifier
noflow	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
refNumber	TokenNameIdentifier
=	TokenNameEQUAL
refno	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
condition	TokenNameIdentifier
=	TokenNameEQUAL
conditionflow	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
yes	TokenNameIdentifier
=	TokenNameEQUAL
yesflow	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
no	TokenNameIdentifier
=	TokenNameEQUAL
noflow	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
