package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
StringReader	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
CoreDocumentImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
parsers	TokenNameIdentifier
.	TokenNameDOT
DOMParser	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
parsers	TokenNameIdentifier
.	TokenNameDOT
SAXParser	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSAnnotation	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSConstants	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSNamespaceItem	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Document	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Element	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Node	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
sax	TokenNameIdentifier
.	TokenNameDOT
ContentHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
sax	TokenNameIdentifier
.	TokenNameDOT
InputSource	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
sax	TokenNameIdentifier
.	TokenNameDOT
SAXException	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
XSAnnotationImpl	TokenNameIdentifier
implements	TokenNameimplements
XSAnnotation	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
String	TokenNameIdentifier
fData	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
SchemaGrammar	TokenNameIdentifier
fGrammar	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
public	TokenNamepublic
XSAnnotationImpl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
contents	TokenNameIdentifier
,	TokenNameCOMMA
SchemaGrammar	TokenNameIdentifier
grammar	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fData	TokenNameIdentifier
=	TokenNameEQUAL
contents	TokenNameIdentifier
;	TokenNameSEMICOLON
fGrammar	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
writeAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
Object	TokenNameIdentifier
target	TokenNameIdentifier
,	TokenNameCOMMA
short	TokenNameshort
targetType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
targetType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
XSAnnotation	TokenNameIdentifier
.	TokenNameDOT
W3C_DOM_ELEMENT	TokenNameIdentifier
||	TokenNameOR_OR
targetType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
XSAnnotation	TokenNameIdentifier
.	TokenNameDOT
W3C_DOM_DOCUMENT	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
writeToDOM	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
Node	TokenNameIdentifier
)	TokenNameRPAREN
target	TokenNameIdentifier
,	TokenNameCOMMA
targetType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
targetType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
SAX_CONTENTHANDLER	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
writeToSAX	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
ContentHandler	TokenNameIdentifier
)	TokenNameRPAREN
target	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getAnnotationString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
fData	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
short	TokenNameshort
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
XSConstants	TokenNameIdentifier
.	TokenNameDOT
ANNOTATION	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getNamespace	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSNamespaceItem	TokenNameIdentifier
getNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
synchronized	TokenNamesynchronized
void	TokenNamevoid
writeToSAX	TokenNameIdentifier
(	TokenNameLPAREN
ContentHandler	TokenNameIdentifier
handler	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
SAXParser	TokenNameIdentifier
parser	TokenNameIdentifier
=	TokenNameEQUAL
fGrammar	TokenNameIdentifier
.	TokenNameDOT
getSAXParser	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringReader	TokenNameIdentifier
aReader	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringReader	TokenNameIdentifier
(	TokenNameLPAREN
fData	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
InputSource	TokenNameIdentifier
aSource	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
InputSource	TokenNameIdentifier
(	TokenNameLPAREN
aReader	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
parser	TokenNameIdentifier
.	TokenNameDOT
setContentHandler	TokenNameIdentifier
(	TokenNameLPAREN
handler	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
parser	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
aSource	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
SAXException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
IOException	TokenNameIdentifier
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
parser	TokenNameIdentifier
.	TokenNameDOT
setContentHandler	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
synchronized	TokenNamesynchronized
void	TokenNamevoid
writeToDOM	TokenNameIdentifier
(	TokenNameLPAREN
Node	TokenNameIdentifier
target	TokenNameIdentifier
,	TokenNameCOMMA
short	TokenNameshort
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Document	TokenNameIdentifier
futureOwner	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
type	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
XSAnnotation	TokenNameIdentifier
.	TokenNameDOT
W3C_DOM_ELEMENT	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
target	TokenNameIdentifier
.	TokenNameDOT
getOwnerDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
:	TokenNameCOLON
(	TokenNameLPAREN
Document	TokenNameIdentifier
)	TokenNameRPAREN
target	TokenNameIdentifier
;	TokenNameSEMICOLON
DOMParser	TokenNameIdentifier
parser	TokenNameIdentifier
=	TokenNameEQUAL
fGrammar	TokenNameIdentifier
.	TokenNameDOT
getDOMParser	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringReader	TokenNameIdentifier
aReader	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringReader	TokenNameIdentifier
(	TokenNameLPAREN
fData	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
InputSource	TokenNameIdentifier
aSource	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
InputSource	TokenNameIdentifier
(	TokenNameLPAREN
aReader	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
parser	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
aSource	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
SAXException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
IOException	TokenNameIdentifier
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
Document	TokenNameIdentifier
aDocument	TokenNameIdentifier
=	TokenNameEQUAL
parser	TokenNameIdentifier
.	TokenNameDOT
getDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
parser	TokenNameIdentifier
.	TokenNameDOT
dropDocumentReferences	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
annotation	TokenNameIdentifier
=	TokenNameEQUAL
aDocument	TokenNameIdentifier
.	TokenNameDOT
getDocumentElement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Node	TokenNameIdentifier
newElem	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
futureOwner	TokenNameIdentifier
instanceof	TokenNameinstanceof
CoreDocumentImpl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
newElem	TokenNameIdentifier
=	TokenNameEQUAL
futureOwner	TokenNameIdentifier
.	TokenNameDOT
adoptNode	TokenNameIdentifier
(	TokenNameLPAREN
annotation	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
newElem	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
newElem	TokenNameIdentifier
=	TokenNameEQUAL
futureOwner	TokenNameIdentifier
.	TokenNameDOT
importNode	TokenNameIdentifier
(	TokenNameLPAREN
annotation	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
newElem	TokenNameIdentifier
=	TokenNameEQUAL
futureOwner	TokenNameIdentifier
.	TokenNameDOT
importNode	TokenNameIdentifier
(	TokenNameLPAREN
annotation	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
target	TokenNameIdentifier
.	TokenNameDOT
insertBefore	TokenNameIdentifier
(	TokenNameLPAREN
newElem	TokenNameIdentifier
,	TokenNameCOMMA
target	TokenNameIdentifier
.	TokenNameDOT
getFirstChild	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
