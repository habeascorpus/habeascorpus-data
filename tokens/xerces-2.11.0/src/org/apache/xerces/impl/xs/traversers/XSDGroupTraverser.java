package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
traversers	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
SchemaGrammar	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
SchemaSymbols	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSAnnotationImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSConstraints	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSGroupDecl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSModelGroupImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSParticleDecl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
XInt	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
XSObjectListImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
DOMUtil	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
XMLSymbols	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
QName	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSObjectList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Element	TokenNameIdentifier
;	TokenNameSEMICOLON
class	TokenNameclass
XSDGroupTraverser	TokenNameIdentifier
extends	TokenNameextends
XSDAbstractParticleTraverser	TokenNameIdentifier
{	TokenNameLBRACE
XSDGroupTraverser	TokenNameIdentifier
(	TokenNameLPAREN
XSDHandler	TokenNameIdentifier
handler	TokenNameIdentifier
,	TokenNameCOMMA
XSAttributeChecker	TokenNameIdentifier
gAttrCheck	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
handler	TokenNameIdentifier
,	TokenNameCOMMA
gAttrCheck	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
XSParticleDecl	TokenNameIdentifier
traverseLocal	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
elmNode	TokenNameIdentifier
,	TokenNameCOMMA
XSDocumentInfo	TokenNameIdentifier
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
SchemaGrammar	TokenNameIdentifier
grammar	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
attrValues	TokenNameIdentifier
=	TokenNameEQUAL
fAttrChecker	TokenNameIdentifier
.	TokenNameDOT
checkAttributes	TokenNameIdentifier
(	TokenNameLPAREN
elmNode	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
QName	TokenNameIdentifier
refAttr	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
QName	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_REF	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
XInt	TokenNameIdentifier
minAttr	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XInt	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_MINOCCURS	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
XInt	TokenNameIdentifier
maxAttr	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XInt	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_MAXOCCURS	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
XSGroupDecl	TokenNameIdentifier
group	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
refAttr	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"s4s-att-must-appear"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"group (local)"	TokenNameStringLiteral
,	TokenNameCOMMA
"ref"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
elmNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
group	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XSGroupDecl	TokenNameIdentifier
)	TokenNameRPAREN
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
getGlobalDecl	TokenNameIdentifier
(	TokenNameLPAREN
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
XSDHandler	TokenNameIdentifier
.	TokenNameDOT
GROUP_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
refAttr	TokenNameIdentifier
,	TokenNameCOMMA
elmNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
XSAnnotationImpl	TokenNameIdentifier
annotation	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
child	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getFirstChildElement	TokenNameIdentifier
(	TokenNameLPAREN
elmNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
child	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
annotation	TokenNameIdentifier
=	TokenNameEQUAL
traverseAnnotationDecl	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
child	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getNextSiblingElement	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
String	TokenNameIdentifier
text	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getSyntheticAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
elmNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
text	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
annotation	TokenNameIdentifier
=	TokenNameEQUAL
traverseSyntheticAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
elmNode	TokenNameIdentifier
,	TokenNameCOMMA
text	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
child	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"s4s-elt-must-match.1"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"group (local)"	TokenNameStringLiteral
,	TokenNameCOMMA
"(annotation?)"	TokenNameStringLiteral
,	TokenNameCOMMA
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
elmNode	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
,	TokenNameCOMMA
elmNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
minOccurs	TokenNameIdentifier
=	TokenNameEQUAL
minAttr	TokenNameIdentifier
.	TokenNameDOT
intValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
maxOccurs	TokenNameIdentifier
=	TokenNameEQUAL
maxAttr	TokenNameIdentifier
.	TokenNameDOT
intValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSParticleDecl	TokenNameIdentifier
particle	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
group	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
group	TokenNameIdentifier
.	TokenNameDOT
fModelGroup	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
!	TokenNameNOT
(	TokenNameLPAREN
minOccurs	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
&&	TokenNameAND_AND
maxOccurs	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fDeclPool	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
particle	TokenNameIdentifier
=	TokenNameEQUAL
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fDeclPool	TokenNameIdentifier
.	TokenNameDOT
getParticleDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
particle	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSParticleDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
particle	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
=	TokenNameEQUAL
XSParticleDecl	TokenNameIdentifier
.	TokenNameDOT
PARTICLE_MODELGROUP	TokenNameIdentifier
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fValue	TokenNameIdentifier
=	TokenNameEQUAL
group	TokenNameIdentifier
.	TokenNameDOT
fModelGroup	TokenNameIdentifier
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fMinOccurs	TokenNameIdentifier
=	TokenNameEQUAL
minOccurs	TokenNameIdentifier
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fMaxOccurs	TokenNameIdentifier
=	TokenNameEQUAL
maxOccurs	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
group	TokenNameIdentifier
.	TokenNameDOT
fModelGroup	TokenNameIdentifier
.	TokenNameDOT
fCompositor	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
XSModelGroupImpl	TokenNameIdentifier
.	TokenNameDOT
MODELGROUP_ALL	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Long	TokenNameIdentifier
defaultVals	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Long	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_FROMDEFAULT	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
=	TokenNameEQUAL
checkOccurrences	TokenNameIdentifier
(	TokenNameLPAREN
particle	TokenNameIdentifier
,	TokenNameCOMMA
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_GROUP	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
Element	TokenNameIdentifier
)	TokenNameRPAREN
elmNode	TokenNameIdentifier
.	TokenNameDOT
getParentNode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
GROUP_REF_WITH_ALL	TokenNameIdentifier
,	TokenNameCOMMA
defaultVals	TokenNameIdentifier
.	TokenNameDOT
longValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
refAttr	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
XSObjectList	TokenNameIdentifier
annotations	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
annotation	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
annotations	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSObjectListImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
(	TokenNameLPAREN
(	TokenNameLPAREN
XSObjectListImpl	TokenNameIdentifier
)	TokenNameRPAREN
annotations	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
addXSObject	TokenNameIdentifier
(	TokenNameLPAREN
annotation	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
annotations	TokenNameIdentifier
=	TokenNameEQUAL
XSObjectListImpl	TokenNameIdentifier
.	TokenNameDOT
EMPTY_LIST	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
particle	TokenNameIdentifier
.	TokenNameDOT
fAnnotations	TokenNameIdentifier
=	TokenNameEQUAL
annotations	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
particle	TokenNameIdentifier
.	TokenNameDOT
fAnnotations	TokenNameIdentifier
=	TokenNameEQUAL
group	TokenNameIdentifier
.	TokenNameDOT
fAnnotations	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
fAttrChecker	TokenNameIdentifier
.	TokenNameDOT
returnAttrArray	TokenNameIdentifier
(	TokenNameLPAREN
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
particle	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
XSGroupDecl	TokenNameIdentifier
traverseGlobal	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
elmNode	TokenNameIdentifier
,	TokenNameCOMMA
XSDocumentInfo	TokenNameIdentifier
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
SchemaGrammar	TokenNameIdentifier
grammar	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
attrValues	TokenNameIdentifier
=	TokenNameEQUAL
fAttrChecker	TokenNameIdentifier
.	TokenNameDOT
checkAttributes	TokenNameIdentifier
(	TokenNameLPAREN
elmNode	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
strNameAttr	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_NAME	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
strNameAttr	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"s4s-att-must-appear"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"group (global)"	TokenNameStringLiteral
,	TokenNameCOMMA
"name"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
elmNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
XSGroupDecl	TokenNameIdentifier
group	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSParticleDecl	TokenNameIdentifier
particle	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
l_elmChild	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getFirstChildElement	TokenNameIdentifier
(	TokenNameLPAREN
elmNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSAnnotationImpl	TokenNameIdentifier
annotation	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
l_elmChild	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"s4s-elt-must-match.2"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"group (global)"	TokenNameStringLiteral
,	TokenNameCOMMA
"(annotation?, (all | choice | sequence))"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
elmNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
String	TokenNameIdentifier
childName	TokenNameIdentifier
=	TokenNameEQUAL
l_elmChild	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
childName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
annotation	TokenNameIdentifier
=	TokenNameEQUAL
traverseAnnotationDecl	TokenNameIdentifier
(	TokenNameLPAREN
l_elmChild	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
l_elmChild	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getNextSiblingElement	TokenNameIdentifier
(	TokenNameLPAREN
l_elmChild	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
l_elmChild	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
childName	TokenNameIdentifier
=	TokenNameEQUAL
l_elmChild	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
String	TokenNameIdentifier
text	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getSyntheticAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
elmNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
text	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
annotation	TokenNameIdentifier
=	TokenNameEQUAL
traverseSyntheticAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
elmNode	TokenNameIdentifier
,	TokenNameCOMMA
text	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
l_elmChild	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"s4s-elt-must-match.2"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"group (global)"	TokenNameStringLiteral
,	TokenNameCOMMA
"(annotation?, (all | choice | sequence))"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
elmNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
childName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ALL	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
particle	TokenNameIdentifier
=	TokenNameEQUAL
traverseAll	TokenNameIdentifier
(	TokenNameLPAREN
l_elmChild	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
grammar	TokenNameIdentifier
,	TokenNameCOMMA
CHILD_OF_GROUP	TokenNameIdentifier
,	TokenNameCOMMA
group	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
childName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_CHOICE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
particle	TokenNameIdentifier
=	TokenNameEQUAL
traverseChoice	TokenNameIdentifier
(	TokenNameLPAREN
l_elmChild	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
grammar	TokenNameIdentifier
,	TokenNameCOMMA
CHILD_OF_GROUP	TokenNameIdentifier
,	TokenNameCOMMA
group	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
childName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_SEQUENCE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
particle	TokenNameIdentifier
=	TokenNameEQUAL
traverseSequence	TokenNameIdentifier
(	TokenNameLPAREN
l_elmChild	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
grammar	TokenNameIdentifier
,	TokenNameCOMMA
CHILD_OF_GROUP	TokenNameIdentifier
,	TokenNameCOMMA
group	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"s4s-elt-must-match.1"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"group (global)"	TokenNameStringLiteral
,	TokenNameCOMMA
"(annotation?, (all | choice | sequence))"	TokenNameStringLiteral
,	TokenNameCOMMA
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
l_elmChild	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
,	TokenNameCOMMA
l_elmChild	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
l_elmChild	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getNextSiblingElement	TokenNameIdentifier
(	TokenNameLPAREN
l_elmChild	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"s4s-elt-must-match.1"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"group (global)"	TokenNameStringLiteral
,	TokenNameCOMMA
"(annotation?, (all | choice | sequence))"	TokenNameStringLiteral
,	TokenNameCOMMA
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getNextSiblingElement	TokenNameIdentifier
(	TokenNameLPAREN
l_elmChild	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
,	TokenNameCOMMA
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getNextSiblingElement	TokenNameIdentifier
(	TokenNameLPAREN
l_elmChild	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
strNameAttr	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
group	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
=	TokenNameEQUAL
strNameAttr	TokenNameIdentifier
;	TokenNameSEMICOLON
group	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
=	TokenNameEQUAL
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
particle	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
particle	TokenNameIdentifier
=	TokenNameEQUAL
XSConstraints	TokenNameIdentifier
.	TokenNameDOT
getEmptySequence	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
group	TokenNameIdentifier
.	TokenNameDOT
fModelGroup	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XSModelGroupImpl	TokenNameIdentifier
)	TokenNameRPAREN
particle	TokenNameIdentifier
.	TokenNameDOT
fValue	TokenNameIdentifier
;	TokenNameSEMICOLON
XSObjectList	TokenNameIdentifier
annotations	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
annotation	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
annotations	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSObjectListImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
(	TokenNameLPAREN
(	TokenNameLPAREN
XSObjectListImpl	TokenNameIdentifier
)	TokenNameRPAREN
annotations	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
addXSObject	TokenNameIdentifier
(	TokenNameLPAREN
annotation	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
annotations	TokenNameIdentifier
=	TokenNameEQUAL
XSObjectListImpl	TokenNameIdentifier
.	TokenNameDOT
EMPTY_LIST	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
group	TokenNameIdentifier
.	TokenNameDOT
fAnnotations	TokenNameIdentifier
=	TokenNameEQUAL
annotations	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
grammar	TokenNameIdentifier
.	TokenNameDOT
getGlobalGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
group	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
grammar	TokenNameIdentifier
.	TokenNameDOT
addGlobalGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
group	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
String	TokenNameIdentifier
loc	TokenNameIdentifier
=	TokenNameEQUAL
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
schemaDocument2SystemId	TokenNameIdentifier
(	TokenNameLPAREN
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
XSGroupDecl	TokenNameIdentifier
group2	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
getGlobalGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
group	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
loc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
group2	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
grammar	TokenNameIdentifier
.	TokenNameDOT
addGlobalGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
group	TokenNameIdentifier
,	TokenNameCOMMA
loc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fTolerateDuplicates	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
group2	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
group	TokenNameIdentifier
=	TokenNameEQUAL
group2	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
addGlobalGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
group	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
group	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
group	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
redefinedGrp	TokenNameIdentifier
=	TokenNameEQUAL
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
getGrpOrAttrGrpRedefinedByRestriction	TokenNameIdentifier
(	TokenNameLPAREN
XSDHandler	TokenNameIdentifier
.	TokenNameDOT
GROUP_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
QName	TokenNameIdentifier
(	TokenNameLPAREN
XMLSymbols	TokenNameIdentifier
.	TokenNameDOT
EMPTY_STRING	TokenNameIdentifier
,	TokenNameCOMMA
strNameAttr	TokenNameIdentifier
,	TokenNameCOMMA
strNameAttr	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
elmNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
redefinedGrp	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
grammar	TokenNameIdentifier
.	TokenNameDOT
addRedefinedGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
group	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
XSGroupDecl	TokenNameIdentifier
)	TokenNameRPAREN
redefinedGrp	TokenNameIdentifier
,	TokenNameCOMMA
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
element2Locator	TokenNameIdentifier
(	TokenNameLPAREN
elmNode	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
fAttrChecker	TokenNameIdentifier
.	TokenNameDOT
returnAttrArray	TokenNameIdentifier
(	TokenNameLPAREN
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
group	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
