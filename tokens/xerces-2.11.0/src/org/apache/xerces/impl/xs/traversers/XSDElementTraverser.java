package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
traversers	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Locale	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
dv	TokenNameIdentifier
.	TokenNameDOT
ValidatedInfo	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
dv	TokenNameIdentifier
.	TokenNameDOT
XSSimpleType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
SchemaGrammar	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
SchemaSymbols	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSAnnotationImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSComplexTypeDecl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSConstraints	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSElementDecl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSParticleDecl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
XInt	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
XSObjectListImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
DOMUtil	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
SymbolTable	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
XMLChar	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
QName	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSConstants	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSObject	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSObjectList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSTypeDefinition	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Attr	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Element	TokenNameIdentifier
;	TokenNameSEMICOLON
class	TokenNameclass
XSDElementTraverser	TokenNameIdentifier
extends	TokenNameextends
XSDAbstractTraverser	TokenNameIdentifier
{	TokenNameLBRACE
protected	TokenNameprotected
final	TokenNamefinal
XSElementDecl	TokenNameIdentifier
fTempElementDecl	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
fDeferTraversingLocalElements	TokenNameIdentifier
;	TokenNameSEMICOLON
XSDElementTraverser	TokenNameIdentifier
(	TokenNameLPAREN
XSDHandler	TokenNameIdentifier
handler	TokenNameIdentifier
,	TokenNameCOMMA
XSAttributeChecker	TokenNameIdentifier
gAttrCheck	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
handler	TokenNameIdentifier
,	TokenNameCOMMA
gAttrCheck	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
XSParticleDecl	TokenNameIdentifier
traverseLocal	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
elmDecl	TokenNameIdentifier
,	TokenNameCOMMA
XSDocumentInfo	TokenNameIdentifier
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
SchemaGrammar	TokenNameIdentifier
grammar	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
allContextFlags	TokenNameIdentifier
,	TokenNameCOMMA
XSObject	TokenNameIdentifier
parent	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
XSParticleDecl	TokenNameIdentifier
particle	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fDeclPool	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
particle	TokenNameIdentifier
=	TokenNameEQUAL
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fDeclPool	TokenNameIdentifier
.	TokenNameDOT
getParticleDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
particle	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSParticleDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
fDeferTraversingLocalElements	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
particle	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
=	TokenNameEQUAL
XSParticleDecl	TokenNameIdentifier
.	TokenNameDOT
PARTICLE_ELEMENT	TokenNameIdentifier
;	TokenNameSEMICOLON
Attr	TokenNameIdentifier
attr	TokenNameIdentifier
=	TokenNameEQUAL
elmDecl	TokenNameIdentifier
.	TokenNameDOT
getAttributeNode	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATT_MINOCCURS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
attr	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
min	TokenNameIdentifier
=	TokenNameEQUAL
attr	TokenNameIdentifier
.	TokenNameDOT
getValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
m	TokenNameIdentifier
=	TokenNameEQUAL
Integer	TokenNameIdentifier
.	TokenNameDOT
parseInt	TokenNameIdentifier
(	TokenNameLPAREN
XMLChar	TokenNameIdentifier
.	TokenNameDOT
trim	TokenNameIdentifier
(	TokenNameLPAREN
min	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
m	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
particle	TokenNameIdentifier
.	TokenNameDOT
fMinOccurs	TokenNameIdentifier
=	TokenNameEQUAL
m	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
NumberFormatException	TokenNameIdentifier
ex	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fillInLocalElemInfo	TokenNameIdentifier
(	TokenNameLPAREN
elmDecl	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
allContextFlags	TokenNameIdentifier
,	TokenNameCOMMA
parent	TokenNameIdentifier
,	TokenNameCOMMA
particle	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
traverseLocal	TokenNameIdentifier
(	TokenNameLPAREN
particle	TokenNameIdentifier
,	TokenNameCOMMA
elmDecl	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
grammar	TokenNameIdentifier
,	TokenNameCOMMA
allContextFlags	TokenNameIdentifier
,	TokenNameCOMMA
parent	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
particle	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
XSParticleDecl	TokenNameIdentifier
.	TokenNameDOT
PARTICLE_EMPTY	TokenNameIdentifier
)	TokenNameRPAREN
particle	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
particle	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
traverseLocal	TokenNameIdentifier
(	TokenNameLPAREN
XSParticleDecl	TokenNameIdentifier
particle	TokenNameIdentifier
,	TokenNameCOMMA
Element	TokenNameIdentifier
elmDecl	TokenNameIdentifier
,	TokenNameCOMMA
XSDocumentInfo	TokenNameIdentifier
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
SchemaGrammar	TokenNameIdentifier
grammar	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
allContextFlags	TokenNameIdentifier
,	TokenNameCOMMA
XSObject	TokenNameIdentifier
parent	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
localNSDecls	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
localNSDecls	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fNamespaceSupport	TokenNameIdentifier
.	TokenNameDOT
setEffectiveContext	TokenNameIdentifier
(	TokenNameLPAREN
localNSDecls	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
attrValues	TokenNameIdentifier
=	TokenNameEQUAL
fAttrChecker	TokenNameIdentifier
.	TokenNameDOT
checkAttributes	TokenNameIdentifier
(	TokenNameLPAREN
elmDecl	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
QName	TokenNameIdentifier
refAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
QName	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_REF	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
XInt	TokenNameIdentifier
minAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XInt	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_MINOCCURS	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
XInt	TokenNameIdentifier
maxAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XInt	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_MAXOCCURS	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
XSElementDecl	TokenNameIdentifier
element	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
XSAnnotationImpl	TokenNameIdentifier
annotation	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
elmDecl	TokenNameIdentifier
.	TokenNameDOT
getAttributeNode	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATT_REF	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
refAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
element	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
)	TokenNameRPAREN
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
getGlobalDecl	TokenNameIdentifier
(	TokenNameLPAREN
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
XSDHandler	TokenNameIdentifier
.	TokenNameDOT
ELEMENT_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
refAtt	TokenNameIdentifier
,	TokenNameCOMMA
elmDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
child	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getFirstChildElement	TokenNameIdentifier
(	TokenNameLPAREN
elmDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
child	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
annotation	TokenNameIdentifier
=	TokenNameEQUAL
traverseAnnotationDecl	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
child	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getNextSiblingElement	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
String	TokenNameIdentifier
text	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getSyntheticAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
elmDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
text	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
annotation	TokenNameIdentifier
=	TokenNameEQUAL
traverseSyntheticAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
elmDecl	TokenNameIdentifier
,	TokenNameCOMMA
text	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
child	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"src-element.2.2"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
refAtt	TokenNameIdentifier
.	TokenNameDOT
rawname	TokenNameIdentifier
,	TokenNameCOMMA
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
,	TokenNameCOMMA
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
element	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
element	TokenNameIdentifier
=	TokenNameEQUAL
traverseNamedElement	TokenNameIdentifier
(	TokenNameLPAREN
elmDecl	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
grammar	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
parent	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
particle	TokenNameIdentifier
.	TokenNameDOT
fMinOccurs	TokenNameIdentifier
=	TokenNameEQUAL
minAtt	TokenNameIdentifier
.	TokenNameDOT
intValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fMaxOccurs	TokenNameIdentifier
=	TokenNameEQUAL
maxAtt	TokenNameIdentifier
.	TokenNameDOT
intValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
element	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
particle	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
=	TokenNameEQUAL
XSParticleDecl	TokenNameIdentifier
.	TokenNameDOT
PARTICLE_ELEMENT	TokenNameIdentifier
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fValue	TokenNameIdentifier
=	TokenNameEQUAL
element	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
particle	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
=	TokenNameEQUAL
XSParticleDecl	TokenNameIdentifier
.	TokenNameDOT
PARTICLE_EMPTY	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
refAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
XSObjectList	TokenNameIdentifier
annotations	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
annotation	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
annotations	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSObjectListImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
(	TokenNameLPAREN
(	TokenNameLPAREN
XSObjectListImpl	TokenNameIdentifier
)	TokenNameRPAREN
annotations	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
addXSObject	TokenNameIdentifier
(	TokenNameLPAREN
annotation	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
annotations	TokenNameIdentifier
=	TokenNameEQUAL
XSObjectListImpl	TokenNameIdentifier
.	TokenNameDOT
EMPTY_LIST	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
particle	TokenNameIdentifier
.	TokenNameDOT
fAnnotations	TokenNameIdentifier
=	TokenNameEQUAL
annotations	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
particle	TokenNameIdentifier
.	TokenNameDOT
fAnnotations	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
element	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
element	TokenNameIdentifier
.	TokenNameDOT
fAnnotations	TokenNameIdentifier
:	TokenNameCOLON
XSObjectListImpl	TokenNameIdentifier
.	TokenNameDOT
EMPTY_LIST	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Long	TokenNameIdentifier
defaultVals	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Long	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_FROMDEFAULT	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
checkOccurrences	TokenNameIdentifier
(	TokenNameLPAREN
particle	TokenNameIdentifier
,	TokenNameCOMMA
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ELEMENT	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
Element	TokenNameIdentifier
)	TokenNameRPAREN
elmDecl	TokenNameIdentifier
.	TokenNameDOT
getParentNode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
allContextFlags	TokenNameIdentifier
,	TokenNameCOMMA
defaultVals	TokenNameIdentifier
.	TokenNameDOT
longValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fAttrChecker	TokenNameIdentifier
.	TokenNameDOT
returnAttrArray	TokenNameIdentifier
(	TokenNameLPAREN
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
XSElementDecl	TokenNameIdentifier
traverseGlobal	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
elmDecl	TokenNameIdentifier
,	TokenNameCOMMA
XSDocumentInfo	TokenNameIdentifier
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
SchemaGrammar	TokenNameIdentifier
grammar	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
attrValues	TokenNameIdentifier
=	TokenNameEQUAL
fAttrChecker	TokenNameIdentifier
.	TokenNameDOT
checkAttributes	TokenNameIdentifier
(	TokenNameLPAREN
elmDecl	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSElementDecl	TokenNameIdentifier
element	TokenNameIdentifier
=	TokenNameEQUAL
traverseNamedElement	TokenNameIdentifier
(	TokenNameLPAREN
elmDecl	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
grammar	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fAttrChecker	TokenNameIdentifier
.	TokenNameDOT
returnAttrArray	TokenNameIdentifier
(	TokenNameLPAREN
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
element	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
XSElementDecl	TokenNameIdentifier
traverseNamedElement	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
elmDecl	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
XSDocumentInfo	TokenNameIdentifier
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
SchemaGrammar	TokenNameIdentifier
grammar	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
isGlobal	TokenNameIdentifier
,	TokenNameCOMMA
XSObject	TokenNameIdentifier
parent	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Boolean	TokenNameIdentifier
abstractAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Boolean	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_ABSTRACT	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
XInt	TokenNameIdentifier
blockAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XInt	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_BLOCK	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
String	TokenNameIdentifier
defaultAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_DEFAULT	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
XInt	TokenNameIdentifier
finalAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XInt	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_FINAL	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
String	TokenNameIdentifier
fixedAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_FIXED	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
XInt	TokenNameIdentifier
formAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XInt	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_FORM	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
String	TokenNameIdentifier
nameAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_NAME	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
Boolean	TokenNameIdentifier
nillableAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Boolean	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_NILLABLE	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
QName	TokenNameIdentifier
subGroupAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
QName	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_SUBSGROUP	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
QName	TokenNameIdentifier
typeAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
QName	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_TYPE	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
XSElementDecl	TokenNameIdentifier
element	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fDeclPool	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
element	TokenNameIdentifier
=	TokenNameEQUAL
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fDeclPool	TokenNameIdentifier
.	TokenNameDOT
getElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
element	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
nameAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
element	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
=	TokenNameEQUAL
fSymbolTable	TokenNameIdentifier
.	TokenNameDOT
addSymbol	TokenNameIdentifier
(	TokenNameLPAREN
nameAtt	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isGlobal	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
element	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
=	TokenNameEQUAL
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
;	TokenNameSEMICOLON
element	TokenNameIdentifier
.	TokenNameDOT
setIsGlobal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
parent	TokenNameIdentifier
instanceof	TokenNameinstanceof
XSComplexTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
element	TokenNameIdentifier
.	TokenNameDOT
setIsLocal	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
XSComplexTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
parent	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
formAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
formAtt	TokenNameIdentifier
.	TokenNameDOT
intValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
FORM_QUALIFIED	TokenNameIdentifier
)	TokenNameRPAREN
element	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
=	TokenNameEQUAL
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
element	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fAreLocalElementsQualified	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
element	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
=	TokenNameEQUAL
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
element	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
element	TokenNameIdentifier
.	TokenNameDOT
fBlock	TokenNameIdentifier
=	TokenNameEQUAL
blockAtt	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fBlockDefault	TokenNameIdentifier
:	TokenNameCOLON
blockAtt	TokenNameIdentifier
.	TokenNameDOT
shortValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
element	TokenNameIdentifier
.	TokenNameDOT
fFinal	TokenNameIdentifier
=	TokenNameEQUAL
finalAtt	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fFinalDefault	TokenNameIdentifier
:	TokenNameCOLON
finalAtt	TokenNameIdentifier
.	TokenNameDOT
shortValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
element	TokenNameIdentifier
.	TokenNameDOT
fBlock	TokenNameIdentifier
&=	TokenNameAND_EQUAL
(	TokenNameLPAREN
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_EXTENSION	TokenNameIdentifier
|	TokenNameOR
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_RESTRICTION	TokenNameIdentifier
|	TokenNameOR
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_SUBSTITUTION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
element	TokenNameIdentifier
.	TokenNameDOT
fFinal	TokenNameIdentifier
&=	TokenNameAND_EQUAL
(	TokenNameLPAREN
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_EXTENSION	TokenNameIdentifier
|	TokenNameOR
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_RESTRICTION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
nillableAtt	TokenNameIdentifier
.	TokenNameDOT
booleanValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
element	TokenNameIdentifier
.	TokenNameDOT
setIsNillable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
abstractAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
abstractAtt	TokenNameIdentifier
.	TokenNameDOT
booleanValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
element	TokenNameIdentifier
.	TokenNameDOT
setIsAbstract	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
fixedAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
element	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ValidatedInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
element	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
.	TokenNameDOT
normalizedValue	TokenNameIdentifier
=	TokenNameEQUAL
fixedAtt	TokenNameIdentifier
;	TokenNameSEMICOLON
element	TokenNameIdentifier
.	TokenNameDOT
setConstraintType	TokenNameIdentifier
(	TokenNameLPAREN
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_FIXED	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
defaultAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
element	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ValidatedInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
element	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
.	TokenNameDOT
normalizedValue	TokenNameIdentifier
=	TokenNameEQUAL
defaultAtt	TokenNameIdentifier
;	TokenNameSEMICOLON
element	TokenNameIdentifier
.	TokenNameDOT
setConstraintType	TokenNameIdentifier
(	TokenNameLPAREN
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_DEFAULT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
element	TokenNameIdentifier
.	TokenNameDOT
setConstraintType	TokenNameIdentifier
(	TokenNameLPAREN
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
subGroupAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
element	TokenNameIdentifier
.	TokenNameDOT
fSubGroup	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
)	TokenNameRPAREN
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
getGlobalDecl	TokenNameIdentifier
(	TokenNameLPAREN
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
XSDHandler	TokenNameIdentifier
.	TokenNameDOT
ELEMENT_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
subGroupAtt	TokenNameIdentifier
,	TokenNameCOMMA
elmDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Element	TokenNameIdentifier
child	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getFirstChildElement	TokenNameIdentifier
(	TokenNameLPAREN
elmDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSAnnotationImpl	TokenNameIdentifier
annotation	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
child	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
annotation	TokenNameIdentifier
=	TokenNameEQUAL
traverseAnnotationDecl	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
child	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getNextSiblingElement	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
String	TokenNameIdentifier
text	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getSyntheticAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
elmDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
text	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
annotation	TokenNameIdentifier
=	TokenNameEQUAL
traverseSyntheticAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
elmDecl	TokenNameIdentifier
,	TokenNameCOMMA
text	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
XSObjectList	TokenNameIdentifier
annotations	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
annotation	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
annotations	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSObjectListImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
(	TokenNameLPAREN
(	TokenNameLPAREN
XSObjectListImpl	TokenNameIdentifier
)	TokenNameRPAREN
annotations	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
addXSObject	TokenNameIdentifier
(	TokenNameLPAREN
annotation	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
annotations	TokenNameIdentifier
=	TokenNameEQUAL
XSObjectListImpl	TokenNameIdentifier
.	TokenNameDOT
EMPTY_LIST	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
element	TokenNameIdentifier
.	TokenNameDOT
fAnnotations	TokenNameIdentifier
=	TokenNameEQUAL
annotations	TokenNameIdentifier
;	TokenNameSEMICOLON
XSTypeDefinition	TokenNameIdentifier
elementType	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
boolean	TokenNameboolean
haveAnonType	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
child	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
childName	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
childName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_COMPLEXTYPE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
elementType	TokenNameIdentifier
=	TokenNameEQUAL
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fComplexTypeTraverser	TokenNameIdentifier
.	TokenNameDOT
traverseLocal	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
grammar	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
haveAnonType	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
child	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getNextSiblingElement	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
childName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_SIMPLETYPE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
elementType	TokenNameIdentifier
=	TokenNameEQUAL
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fSimpleTypeTraverser	TokenNameIdentifier
.	TokenNameDOT
traverseLocal	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
grammar	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
haveAnonType	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
child	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getNextSiblingElement	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
elementType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
typeAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
elementType	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XSTypeDefinition	TokenNameIdentifier
)	TokenNameRPAREN
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
getGlobalDecl	TokenNameIdentifier
(	TokenNameLPAREN
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
XSDHandler	TokenNameIdentifier
.	TokenNameDOT
TYPEDECL_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
typeAtt	TokenNameIdentifier
,	TokenNameCOMMA
elmDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
elementType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
element	TokenNameIdentifier
.	TokenNameDOT
fUnresolvedTypeName	TokenNameIdentifier
=	TokenNameEQUAL
typeAtt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
elementType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
element	TokenNameIdentifier
.	TokenNameDOT
fSubGroup	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
elementType	TokenNameIdentifier
=	TokenNameEQUAL
element	TokenNameIdentifier
.	TokenNameDOT
fSubGroup	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
elementType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
elementType	TokenNameIdentifier
=	TokenNameEQUAL
SchemaGrammar	TokenNameIdentifier
.	TokenNameDOT
fAnyType	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
element	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
=	TokenNameEQUAL
elementType	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
child	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
childName	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
child	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
(	TokenNameLPAREN
childName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_KEY	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
childName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_KEYREF	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
childName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_UNIQUE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
childName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_KEY	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
childName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_UNIQUE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
setHidden	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
,	TokenNameCOMMA
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fHiddenNodes	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fUniqueOrKeyTraverser	TokenNameIdentifier
.	TokenNameDOT
traverse	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
,	TokenNameCOMMA
element	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
grammar	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getAttrValue	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
,	TokenNameCOMMA
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATT_NAME	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
checkForDuplicateNames	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
","	TokenNameStringLiteral
+	TokenNamePLUS
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getAttrValue	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
,	TokenNameCOMMA
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATT_NAME	TokenNameIdentifier
)	TokenNameRPAREN
:	TokenNameCOLON
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getAttrValue	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
,	TokenNameCOMMA
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATT_NAME	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
getIDRegistry	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
getIDRegistry_sub	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
child	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
childName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_KEYREF	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
storeKeyRef	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
element	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
child	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getNextSiblingElement	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
child	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
childName	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
nameAtt	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
isGlobal	TokenNameIdentifier
)	TokenNameRPAREN
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"s4s-att-must-appear"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ELEMENT	TokenNameIdentifier
,	TokenNameCOMMA
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATT_NAME	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
elmDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"src-element.2.1"	TokenNameStringLiteral
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
elmDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
nameAtt	TokenNameIdentifier
=	TokenNameEQUAL
NO_NAME	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
child	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"s4s-elt-must-match.1"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
nameAtt	TokenNameIdentifier
,	TokenNameCOMMA
"(annotation?, (simpleType | complexType)?, (unique | key | keyref)*))"	TokenNameStringLiteral
,	TokenNameCOMMA
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
,	TokenNameCOMMA
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
defaultAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
fixedAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"src-element.1"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
nameAtt	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
elmDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
haveAnonType	TokenNameIdentifier
&&	TokenNameAND_AND
(	TokenNameLPAREN
typeAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"src-element.3"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
nameAtt	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
elmDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
checkNotationType	TokenNameIdentifier
(	TokenNameLPAREN
nameAtt	TokenNameIdentifier
,	TokenNameCOMMA
elementType	TokenNameIdentifier
,	TokenNameCOMMA
elmDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
element	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
fValidationState	TokenNameIdentifier
.	TokenNameDOT
setNamespaceSupport	TokenNameIdentifier
(	TokenNameLPAREN
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fNamespaceSupport	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
XSConstraints	TokenNameIdentifier
.	TokenNameDOT
ElementDefaultValidImmediate	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
,	TokenNameCOMMA
element	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
.	TokenNameDOT
normalizedValue	TokenNameIdentifier
,	TokenNameCOMMA
fValidationState	TokenNameIdentifier
,	TokenNameCOMMA
element	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"e-props-correct.2"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
nameAtt	TokenNameIdentifier
,	TokenNameCOMMA
element	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
.	TokenNameDOT
normalizedValue	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
elmDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
element	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
element	TokenNameIdentifier
.	TokenNameDOT
setConstraintType	TokenNameIdentifier
(	TokenNameLPAREN
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
element	TokenNameIdentifier
.	TokenNameDOT
fSubGroup	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
XSConstraints	TokenNameIdentifier
.	TokenNameDOT
checkTypeDerivationOk	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
,	TokenNameCOMMA
element	TokenNameIdentifier
.	TokenNameDOT
fSubGroup	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
,	TokenNameCOMMA
element	TokenNameIdentifier
.	TokenNameDOT
fSubGroup	TokenNameIdentifier
.	TokenNameDOT
fFinal	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"e-props-correct.4"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
nameAtt	TokenNameIdentifier
,	TokenNameCOMMA
subGroupAtt	TokenNameIdentifier
.	TokenNameDOT
prefix	TokenNameIdentifier
+	TokenNamePLUS
":"	TokenNameStringLiteral
+	TokenNamePLUS
subGroupAtt	TokenNameIdentifier
.	TokenNameDOT
localpart	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
elmDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
element	TokenNameIdentifier
.	TokenNameDOT
fSubGroup	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
element	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
elementType	TokenNameIdentifier
.	TokenNameDOT
getTypeCategory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
XSTypeDefinition	TokenNameIdentifier
.	TokenNameDOT
SIMPLE_TYPE	TokenNameIdentifier
&&	TokenNameAND_AND
(	TokenNameLPAREN
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
)	TokenNameRPAREN
elementType	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
isIDType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
elementType	TokenNameIdentifier
.	TokenNameDOT
getTypeCategory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
XSTypeDefinition	TokenNameIdentifier
.	TokenNameDOT
COMPLEX_TYPE	TokenNameIdentifier
&&	TokenNameAND_AND
(	TokenNameLPAREN
(	TokenNameLPAREN
XSComplexTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
elementType	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
containsTypeID	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"e-props-correct.5"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
element	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
elmDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
element	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
element	TokenNameIdentifier
.	TokenNameDOT
setConstraintType	TokenNameIdentifier
(	TokenNameLPAREN
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
element	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isGlobal	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
grammar	TokenNameIdentifier
.	TokenNameDOT
addGlobalElementDeclAll	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
grammar	TokenNameIdentifier
.	TokenNameDOT
getGlobalElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
grammar	TokenNameIdentifier
.	TokenNameDOT
addGlobalElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
String	TokenNameIdentifier
loc	TokenNameIdentifier
=	TokenNameEQUAL
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
schemaDocument2SystemId	TokenNameIdentifier
(	TokenNameLPAREN
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
XSElementDecl	TokenNameIdentifier
element2	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
getGlobalElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
loc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
element2	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
grammar	TokenNameIdentifier
.	TokenNameDOT
addGlobalElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
,	TokenNameCOMMA
loc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fTolerateDuplicates	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
element2	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
element	TokenNameIdentifier
=	TokenNameEQUAL
element2	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
addGlobalElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
element	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
void	TokenNamevoid
reset	TokenNameIdentifier
(	TokenNameLPAREN
SymbolTable	TokenNameIdentifier
symbolTable	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
validateAnnotations	TokenNameIdentifier
,	TokenNameCOMMA
Locale	TokenNameIdentifier
locale	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
.	TokenNameDOT
reset	TokenNameIdentifier
(	TokenNameLPAREN
symbolTable	TokenNameIdentifier
,	TokenNameCOMMA
validateAnnotations	TokenNameIdentifier
,	TokenNameCOMMA
locale	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fDeferTraversingLocalElements	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
