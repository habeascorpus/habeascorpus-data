package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
ref	TokenNameIdentifier
.	TokenNameDOT
SoftReference	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Vector	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
Constants	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
dv	TokenNameIdentifier
.	TokenNameDOT
SchemaDVFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
dv	TokenNameIdentifier
.	TokenNameDOT
ValidatedInfo	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
dv	TokenNameIdentifier
.	TokenNameDOT
XSSimpleType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
dv	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSSimpleTypeDecl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
identity	TokenNameIdentifier
.	TokenNameDOT
IdentityConstraint	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ObjectListImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
SimpleLocator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
StringListImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
XSNamedMap4Types	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
XSNamedMapImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
XSObjectListImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
parsers	TokenNameIdentifier
.	TokenNameDOT
DOMParser	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
parsers	TokenNameIdentifier
.	TokenNameDOT
SAXParser	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
parsers	TokenNameIdentifier
.	TokenNameDOT
XML11Configuration	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
SymbolHash	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
SymbolTable	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
NamespaceContext	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
grammars	TokenNameIdentifier
.	TokenNameDOT
XMLGrammarDescription	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
grammars	TokenNameIdentifier
.	TokenNameDOT
XSGrammar	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
StringList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSAnnotation	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSAttributeDeclaration	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSAttributeGroupDefinition	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSConstants	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSElementDeclaration	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSIDCDefinition	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSModel	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSModelGroupDefinition	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSNamedMap	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSNamespaceItem	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSNotationDeclaration	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSObjectList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSParticle	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSTypeDefinition	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSWildcard	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
datatypes	TokenNameIdentifier
.	TokenNameDOT
ObjectList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
sax	TokenNameIdentifier
.	TokenNameDOT
SAXException	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
SchemaGrammar	TokenNameIdentifier
implements	TokenNameimplements
XSGrammar	TokenNameIdentifier
,	TokenNameCOMMA
XSNamespaceItem	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
fTargetNamespace	TokenNameIdentifier
;	TokenNameSEMICOLON
SymbolHash	TokenNameIdentifier
fGlobalAttrDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
SymbolHash	TokenNameIdentifier
fGlobalAttrGrpDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
SymbolHash	TokenNameIdentifier
fGlobalElemDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
SymbolHash	TokenNameIdentifier
fGlobalGroupDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
SymbolHash	TokenNameIdentifier
fGlobalNotationDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
SymbolHash	TokenNameIdentifier
fGlobalIDConstraintDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
SymbolHash	TokenNameIdentifier
fGlobalTypeDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
SymbolHash	TokenNameIdentifier
fGlobalAttrDeclsExt	TokenNameIdentifier
;	TokenNameSEMICOLON
SymbolHash	TokenNameIdentifier
fGlobalAttrGrpDeclsExt	TokenNameIdentifier
;	TokenNameSEMICOLON
SymbolHash	TokenNameIdentifier
fGlobalElemDeclsExt	TokenNameIdentifier
;	TokenNameSEMICOLON
SymbolHash	TokenNameIdentifier
fGlobalGroupDeclsExt	TokenNameIdentifier
;	TokenNameSEMICOLON
SymbolHash	TokenNameIdentifier
fGlobalNotationDeclsExt	TokenNameIdentifier
;	TokenNameSEMICOLON
SymbolHash	TokenNameIdentifier
fGlobalIDConstraintDeclsExt	TokenNameIdentifier
;	TokenNameSEMICOLON
SymbolHash	TokenNameIdentifier
fGlobalTypeDeclsExt	TokenNameIdentifier
;	TokenNameSEMICOLON
SymbolHash	TokenNameIdentifier
fAllGlobalElemDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
XSDDescription	TokenNameIdentifier
fGrammarDescription	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
XSAnnotationImpl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
fAnnotations	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
fNumAnnotations	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
SymbolTable	TokenNameIdentifier
fSymbolTable	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
SoftReference	TokenNameIdentifier
fSAXParser	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
SoftReference	TokenNameIdentifier
fDOMParser	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
boolean	TokenNameboolean
fIsImmutable	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
protected	TokenNameprotected
SchemaGrammar	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
SchemaGrammar	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
targetNamespace	TokenNameIdentifier
,	TokenNameCOMMA
XSDDescription	TokenNameIdentifier
grammarDesc	TokenNameIdentifier
,	TokenNameCOMMA
SymbolTable	TokenNameIdentifier
symbolTable	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fTargetNamespace	TokenNameIdentifier
=	TokenNameEQUAL
targetNamespace	TokenNameIdentifier
;	TokenNameSEMICOLON
fGrammarDescription	TokenNameIdentifier
=	TokenNameEQUAL
grammarDesc	TokenNameIdentifier
;	TokenNameSEMICOLON
fSymbolTable	TokenNameIdentifier
=	TokenNameEQUAL
symbolTable	TokenNameIdentifier
;	TokenNameSEMICOLON
fGlobalAttrDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrGrpDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalGroupDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalNotationDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalIDConstraintDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrGrpDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalGroupDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalNotationDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalIDConstraintDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalTypeDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fAllGlobalElemDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
fTargetNamespace	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_SCHEMAFORSCHEMA	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalTypeDecls	TokenNameIdentifier
=	TokenNameEQUAL
SG_SchemaNS	TokenNameIdentifier
.	TokenNameDOT
fGlobalTypeDecls	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
fGlobalTypeDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
SchemaGrammar	TokenNameIdentifier
(	TokenNameLPAREN
SchemaGrammar	TokenNameIdentifier
grammar	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fTargetNamespace	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
;	TokenNameSEMICOLON
fGrammarDescription	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fGrammarDescription	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fSymbolTable	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fSymbolTable	TokenNameIdentifier
;	TokenNameSEMICOLON
fGlobalAttrDecls	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fGlobalAttrDecls	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrGrpDecls	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fGlobalAttrGrpDecls	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDecls	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fGlobalElemDecls	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalGroupDecls	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fGlobalGroupDecls	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalNotationDecls	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fGlobalNotationDecls	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalIDConstraintDecls	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fGlobalIDConstraintDecls	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalTypeDecls	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fGlobalTypeDecls	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fGlobalAttrDeclsExt	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrGrpDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fGlobalAttrGrpDeclsExt	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fGlobalElemDeclsExt	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalGroupDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fGlobalGroupDeclsExt	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalNotationDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fGlobalNotationDeclsExt	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalIDConstraintDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fGlobalIDConstraintDeclsExt	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalTypeDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fGlobalTypeDeclsExt	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fAllGlobalElemDecls	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fAllGlobalElemDecls	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fNumAnnotations	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fNumAnnotations	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
fNumAnnotations	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
fAnnotations	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAnnotationImpl	TokenNameIdentifier
[	TokenNameLBRACKET
grammar	TokenNameIdentifier
.	TokenNameDOT
fAnnotations	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
grammar	TokenNameIdentifier
.	TokenNameDOT
fAnnotations	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fAnnotations	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fNumAnnotations	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fSubGroupCount	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fSubGroupCount	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
fSubGroupCount	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
fSubGroups	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSElementDecl	TokenNameIdentifier
[	TokenNameLBRACKET
grammar	TokenNameIdentifier
.	TokenNameDOT
fSubGroups	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
grammar	TokenNameIdentifier
.	TokenNameDOT
fSubGroups	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fSubGroups	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fSubGroupCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fCTCount	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fCTCount	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
fCTCount	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
fComplexTypeDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSComplexTypeDecl	TokenNameIdentifier
[	TokenNameLBRACKET
grammar	TokenNameIdentifier
.	TokenNameDOT
fComplexTypeDecls	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
fCTLocators	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleLocator	TokenNameIdentifier
[	TokenNameLBRACKET
grammar	TokenNameIdentifier
.	TokenNameDOT
fCTLocators	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
grammar	TokenNameIdentifier
.	TokenNameDOT
fComplexTypeDecls	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fComplexTypeDecls	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fCTCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
grammar	TokenNameIdentifier
.	TokenNameDOT
fCTLocators	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fCTLocators	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fCTCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fRGCount	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
fRGCount	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
fRGCount	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
fRedefinedGroupDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSGroupDecl	TokenNameIdentifier
[	TokenNameLBRACKET
grammar	TokenNameIdentifier
.	TokenNameDOT
fRedefinedGroupDecls	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
fRGLocators	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleLocator	TokenNameIdentifier
[	TokenNameLBRACKET
grammar	TokenNameIdentifier
.	TokenNameDOT
fRGLocators	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
grammar	TokenNameIdentifier
.	TokenNameDOT
fRedefinedGroupDecls	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fRedefinedGroupDecls	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fRGCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
grammar	TokenNameIdentifier
.	TokenNameDOT
fRGLocators	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fRGLocators	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fRGCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
grammar	TokenNameIdentifier
.	TokenNameDOT
fImported	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
fImported	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Vector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
grammar	TokenNameIdentifier
.	TokenNameDOT
fImported	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
fImported	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
grammar	TokenNameIdentifier
.	TokenNameDOT
fImported	TokenNameIdentifier
.	TokenNameDOT
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
grammar	TokenNameIdentifier
.	TokenNameDOT
fLocations	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
k	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
k	TokenNameIdentifier
<	TokenNameLESS
grammar	TokenNameIdentifier
.	TokenNameDOT
fLocations	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
k	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
addDocument	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
grammar	TokenNameIdentifier
.	TokenNameDOT
fLocations	TokenNameIdentifier
.	TokenNameDOT
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
k	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BASICSET_COUNT	TokenNameIdentifier
=	TokenNameEQUAL
29	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
FULLSET_COUNT	TokenNameIdentifier
=	TokenNameEQUAL
46	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
GRAMMAR_XS	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
GRAMMAR_XSI	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
class	TokenNameclass
BuiltinSchemaGrammar	TokenNameIdentifier
extends	TokenNameextends
SchemaGrammar	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
EXTENDED_SCHEMA_FACTORY_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"org.apache.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
BuiltinSchemaGrammar	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
grammar	TokenNameIdentifier
,	TokenNameCOMMA
short	TokenNameshort
schemaVersion	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
SchemaDVFactory	TokenNameIdentifier
schemaFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
schemaVersion	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
Constants	TokenNameIdentifier
.	TokenNameDOT
SCHEMA_VERSION_1_0	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
schemaFactory	TokenNameIdentifier
=	TokenNameEQUAL
SchemaDVFactory	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
schemaFactory	TokenNameIdentifier
=	TokenNameEQUAL
SchemaDVFactory	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
EXTENDED_SCHEMA_FACTORY_CLASS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
grammar	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
GRAMMAR_XS	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fTargetNamespace	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_SCHEMAFORSCHEMA	TokenNameIdentifier
;	TokenNameSEMICOLON
fGrammarDescription	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSDDescription	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGrammarDescription	TokenNameIdentifier
.	TokenNameDOT
fContextType	TokenNameIdentifier
=	TokenNameEQUAL
XSDDescription	TokenNameIdentifier
.	TokenNameDOT
CONTEXT_PREPARSE	TokenNameIdentifier
;	TokenNameSEMICOLON
fGrammarDescription	TokenNameIdentifier
.	TokenNameDOT
setNamespace	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_SCHEMAFORSCHEMA	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrGrpDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalGroupDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalNotationDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalIDConstraintDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrGrpDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalGroupDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalNotationDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalIDConstraintDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalTypeDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fAllGlobalElemDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalTypeDecls	TokenNameIdentifier
=	TokenNameEQUAL
schemaFactory	TokenNameIdentifier
.	TokenNameDOT
getBuiltInTypes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
length	TokenNameIdentifier
=	TokenNameEQUAL
fGlobalTypeDecls	TokenNameIdentifier
.	TokenNameDOT
getLength	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSTypeDefinition	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
typeDefinitions	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSTypeDefinition	TokenNameIdentifier
[	TokenNameLBRACKET
length	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
fGlobalTypeDecls	TokenNameIdentifier
.	TokenNameDOT
getValues	TokenNameIdentifier
(	TokenNameLPAREN
typeDefinitions	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
XSTypeDefinition	TokenNameIdentifier
xtd	TokenNameIdentifier
=	TokenNameEQUAL
typeDefinitions	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
xtd	TokenNameIdentifier
instanceof	TokenNameinstanceof
XSSimpleTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
XSSimpleTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
xtd	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
fGlobalTypeDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
fAnyType	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
fAnyType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
grammar	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
GRAMMAR_XSI	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fTargetNamespace	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_XSI	TokenNameIdentifier
;	TokenNameSEMICOLON
fGrammarDescription	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSDDescription	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGrammarDescription	TokenNameIdentifier
.	TokenNameDOT
fContextType	TokenNameIdentifier
=	TokenNameEQUAL
XSDDescription	TokenNameIdentifier
.	TokenNameDOT
CONTEXT_PREPARSE	TokenNameIdentifier
;	TokenNameSEMICOLON
fGrammarDescription	TokenNameIdentifier
.	TokenNameDOT
setNamespace	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_XSI	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrGrpDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalGroupDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalNotationDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalIDConstraintDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalTypeDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrGrpDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalGroupDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalNotationDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalIDConstraintDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalTypeDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fAllGlobalElemDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
name	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
String	TokenNameIdentifier
tns	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
XSSimpleType	TokenNameIdentifier
type	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
short	TokenNameshort
scope	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
SCOPE_GLOBAL	TokenNameIdentifier
;	TokenNameSEMICOLON
name	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
XSI_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
tns	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_XSI	TokenNameIdentifier
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
schemaFactory	TokenNameIdentifier
.	TokenNameDOT
getBuiltInType	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATTVAL_QNAME	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
BuiltinAttrDecl	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
tns	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
,	TokenNameCOMMA
scope	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
name	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
XSI_NIL	TokenNameIdentifier
;	TokenNameSEMICOLON
tns	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_XSI	TokenNameIdentifier
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
schemaFactory	TokenNameIdentifier
.	TokenNameDOT
getBuiltInType	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATTVAL_BOOLEAN	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
BuiltinAttrDecl	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
tns	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
,	TokenNameCOMMA
scope	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSSimpleType	TokenNameIdentifier
anyURI	TokenNameIdentifier
=	TokenNameEQUAL
schemaFactory	TokenNameIdentifier
.	TokenNameDOT
getBuiltInType	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATTVAL_ANYURI	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
name	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
XSI_SCHEMALOCATION	TokenNameIdentifier
;	TokenNameSEMICOLON
tns	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_XSI	TokenNameIdentifier
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
schemaFactory	TokenNameIdentifier
.	TokenNameDOT
createTypeList	TokenNameIdentifier
(	TokenNameLPAREN
"#AnonType_schemaLocation"	TokenNameStringLiteral
,	TokenNameCOMMA
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_XSI	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
short	TokenNameshort
)	TokenNameRPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
anyURI	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
type	TokenNameIdentifier
instanceof	TokenNameinstanceof
XSSimpleTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
XSSimpleTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setAnonymous	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fGlobalAttrDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
BuiltinAttrDecl	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
tns	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
,	TokenNameCOMMA
scope	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
name	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
XSI_NONAMESPACESCHEMALOCATION	TokenNameIdentifier
;	TokenNameSEMICOLON
tns	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_XSI	TokenNameIdentifier
;	TokenNameSEMICOLON
type	TokenNameIdentifier
=	TokenNameEQUAL
anyURI	TokenNameIdentifier
;	TokenNameSEMICOLON
fGlobalAttrDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
BuiltinAttrDecl	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
,	TokenNameCOMMA
tns	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
,	TokenNameCOMMA
scope	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
XMLGrammarDescription	TokenNameIdentifier
getGrammarDescription	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
fGrammarDescription	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setImportedGrammars	TokenNameIdentifier
(	TokenNameLPAREN
Vector	TokenNameIdentifier
importedGrammars	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSAttributeDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSAttributeDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalAttributeGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSAttributeGroupDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalAttributeGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSAttributeGroupDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalElementDeclAll	TokenNameIdentifier
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSGroupDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSGroupDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalNotationDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSNotationDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalNotationDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSNotationDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSTypeDefinition	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSTypeDefinition	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalComplexTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSComplexTypeDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalComplexTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSComplexTypeDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalSimpleTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalSimpleTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addComplexTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSComplexTypeDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
SimpleLocator	TokenNameIdentifier
locator	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addRedefinedGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSGroupDecl	TokenNameIdentifier
derived	TokenNameIdentifier
,	TokenNameCOMMA
XSGroupDecl	TokenNameIdentifier
base	TokenNameIdentifier
,	TokenNameCOMMA
SimpleLocator	TokenNameIdentifier
locator	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
synchronized	TokenNamesynchronized
void	TokenNamevoid
addDocument	TokenNameIdentifier
(	TokenNameLPAREN
Object	TokenNameIdentifier
document	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
synchronized	TokenNamesynchronized
DOMParser	TokenNameIdentifier
getDOMParser	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
synchronized	TokenNamesynchronized
SAXParser	TokenNameIdentifier
getSAXParser	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
class	TokenNameclass
Schema4Annotations	TokenNameIdentifier
extends	TokenNameextends
SchemaGrammar	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
Schema4Annotations	TokenNameIdentifier
INSTANCE	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Schema4Annotations	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
Schema4Annotations	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
fTargetNamespace	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_SCHEMAFORSCHEMA	TokenNameIdentifier
;	TokenNameSEMICOLON
fGrammarDescription	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSDDescription	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGrammarDescription	TokenNameIdentifier
.	TokenNameDOT
fContextType	TokenNameIdentifier
=	TokenNameEQUAL
XSDDescription	TokenNameIdentifier
.	TokenNameDOT
CONTEXT_PREPARSE	TokenNameIdentifier
;	TokenNameSEMICOLON
fGrammarDescription	TokenNameIdentifier
.	TokenNameDOT
setNamespace	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_SCHEMAFORSCHEMA	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrGrpDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
6	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalGroupDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalNotationDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalIDConstraintDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalAttrGrpDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
6	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalGroupDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalNotationDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalIDConstraintDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalTypeDeclsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fAllGlobalElemDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SymbolHash	TokenNameIdentifier
(	TokenNameLPAREN
6	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalTypeDecls	TokenNameIdentifier
=	TokenNameEQUAL
SG_SchemaNS	TokenNameIdentifier
.	TokenNameDOT
fGlobalTypeDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
XSElementDecl	TokenNameIdentifier
annotationDecl	TokenNameIdentifier
=	TokenNameEQUAL
createAnnotationElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSElementDecl	TokenNameIdentifier
documentationDecl	TokenNameIdentifier
=	TokenNameEQUAL
createAnnotationElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_DOCUMENTATION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSElementDecl	TokenNameIdentifier
appinfoDecl	TokenNameIdentifier
=	TokenNameEQUAL
createAnnotationElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_APPINFO	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
annotationDecl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
annotationDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
documentationDecl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
documentationDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
appinfoDecl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
appinfoDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDeclsExt	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
","	TokenNameStringLiteral
+	TokenNamePLUS
annotationDecl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
annotationDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDeclsExt	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
","	TokenNameStringLiteral
+	TokenNamePLUS
documentationDecl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
documentationDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalElemDeclsExt	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
","	TokenNameStringLiteral
+	TokenNamePLUS
appinfoDecl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
appinfoDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fAllGlobalElemDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
annotationDecl	TokenNameIdentifier
,	TokenNameCOMMA
annotationDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fAllGlobalElemDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
documentationDecl	TokenNameIdentifier
,	TokenNameCOMMA
documentationDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fAllGlobalElemDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
appinfoDecl	TokenNameIdentifier
,	TokenNameCOMMA
appinfoDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSComplexTypeDecl	TokenNameIdentifier
annotationType	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSComplexTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSComplexTypeDecl	TokenNameIdentifier
documentationType	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSComplexTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSComplexTypeDecl	TokenNameIdentifier
appinfoType	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSComplexTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
annotationDecl	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
=	TokenNameEQUAL
annotationType	TokenNameIdentifier
;	TokenNameSEMICOLON
documentationDecl	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
=	TokenNameEQUAL
documentationType	TokenNameIdentifier
;	TokenNameSEMICOLON
appinfoDecl	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
=	TokenNameEQUAL
appinfoType	TokenNameIdentifier
;	TokenNameSEMICOLON
XSAttributeGroupDecl	TokenNameIdentifier
annotationAttrs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAttributeGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSAttributeGroupDecl	TokenNameIdentifier
documentationAttrs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAttributeGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSAttributeGroupDecl	TokenNameIdentifier
appinfoAttrs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAttributeGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
{	TokenNameLBRACE
XSAttributeUseImpl	TokenNameIdentifier
annotationIDAttr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAttributeUseImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
annotationIDAttr	TokenNameIdentifier
.	TokenNameDOT
fAttrDecl	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
annotationIDAttr	TokenNameIdentifier
.	TokenNameDOT
fAttrDecl	TokenNameIdentifier
.	TokenNameDOT
setValues	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATT_ID	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalTypeDecls	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATTVAL_ID	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
,	TokenNameCOMMA
XSConstants	TokenNameIdentifier
.	TokenNameDOT
SCOPE_LOCAL	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
annotationType	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
annotationIDAttr	TokenNameIdentifier
.	TokenNameDOT
fUse	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
USE_OPTIONAL	TokenNameIdentifier
;	TokenNameSEMICOLON
annotationIDAttr	TokenNameIdentifier
.	TokenNameDOT
fConstraintType	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
;	TokenNameSEMICOLON
XSAttributeUseImpl	TokenNameIdentifier
documentationSourceAttr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAttributeUseImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
documentationSourceAttr	TokenNameIdentifier
.	TokenNameDOT
fAttrDecl	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
documentationSourceAttr	TokenNameIdentifier
.	TokenNameDOT
fAttrDecl	TokenNameIdentifier
.	TokenNameDOT
setValues	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATT_SOURCE	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalTypeDecls	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATTVAL_ANYURI	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
,	TokenNameCOMMA
XSConstants	TokenNameIdentifier
.	TokenNameDOT
SCOPE_LOCAL	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
documentationType	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
documentationSourceAttr	TokenNameIdentifier
.	TokenNameDOT
fUse	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
USE_OPTIONAL	TokenNameIdentifier
;	TokenNameSEMICOLON
documentationSourceAttr	TokenNameIdentifier
.	TokenNameDOT
fConstraintType	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
;	TokenNameSEMICOLON
XSAttributeUseImpl	TokenNameIdentifier
documentationLangAttr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAttributeUseImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
documentationLangAttr	TokenNameIdentifier
.	TokenNameDOT
fAttrDecl	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
documentationLangAttr	TokenNameIdentifier
.	TokenNameDOT
fAttrDecl	TokenNameIdentifier
.	TokenNameDOT
setValues	TokenNameIdentifier
(	TokenNameLPAREN
"lang"	TokenNameStringLiteral
.	TokenNameDOT
intern	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
NamespaceContext	TokenNameIdentifier
.	TokenNameDOT
XML_URI	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalTypeDecls	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATTVAL_LANGUAGE	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
,	TokenNameCOMMA
XSConstants	TokenNameIdentifier
.	TokenNameDOT
SCOPE_LOCAL	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
documentationType	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
documentationLangAttr	TokenNameIdentifier
.	TokenNameDOT
fUse	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
USE_OPTIONAL	TokenNameIdentifier
;	TokenNameSEMICOLON
documentationLangAttr	TokenNameIdentifier
.	TokenNameDOT
fConstraintType	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
;	TokenNameSEMICOLON
XSAttributeUseImpl	TokenNameIdentifier
appinfoSourceAttr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAttributeUseImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
appinfoSourceAttr	TokenNameIdentifier
.	TokenNameDOT
fAttrDecl	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
appinfoSourceAttr	TokenNameIdentifier
.	TokenNameDOT
fAttrDecl	TokenNameIdentifier
.	TokenNameDOT
setValues	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATT_SOURCE	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalTypeDecls	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATTVAL_ANYURI	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
,	TokenNameCOMMA
XSConstants	TokenNameIdentifier
.	TokenNameDOT
SCOPE_LOCAL	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
appinfoType	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
appinfoSourceAttr	TokenNameIdentifier
.	TokenNameDOT
fUse	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
USE_OPTIONAL	TokenNameIdentifier
;	TokenNameSEMICOLON
appinfoSourceAttr	TokenNameIdentifier
.	TokenNameDOT
fConstraintType	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
;	TokenNameSEMICOLON
XSWildcardDecl	TokenNameIdentifier
otherAttrs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSWildcardDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
otherAttrs	TokenNameIdentifier
.	TokenNameDOT
fNamespaceList	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
fTargetNamespace	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
}	TokenNameRBRACE
;	TokenNameSEMICOLON
otherAttrs	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
=	TokenNameEQUAL
XSWildcard	TokenNameIdentifier
.	TokenNameDOT
NSCONSTRAINT_NOT	TokenNameIdentifier
;	TokenNameSEMICOLON
otherAttrs	TokenNameIdentifier
.	TokenNameDOT
fProcessContents	TokenNameIdentifier
=	TokenNameEQUAL
XSWildcard	TokenNameIdentifier
.	TokenNameDOT
PC_LAX	TokenNameIdentifier
;	TokenNameSEMICOLON
annotationAttrs	TokenNameIdentifier
.	TokenNameDOT
addAttributeUse	TokenNameIdentifier
(	TokenNameLPAREN
annotationIDAttr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
annotationAttrs	TokenNameIdentifier
.	TokenNameDOT
fAttributeWC	TokenNameIdentifier
=	TokenNameEQUAL
otherAttrs	TokenNameIdentifier
;	TokenNameSEMICOLON
documentationAttrs	TokenNameIdentifier
.	TokenNameDOT
addAttributeUse	TokenNameIdentifier
(	TokenNameLPAREN
documentationSourceAttr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
documentationAttrs	TokenNameIdentifier
.	TokenNameDOT
addAttributeUse	TokenNameIdentifier
(	TokenNameLPAREN
documentationLangAttr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
documentationAttrs	TokenNameIdentifier
.	TokenNameDOT
fAttributeWC	TokenNameIdentifier
=	TokenNameEQUAL
otherAttrs	TokenNameIdentifier
;	TokenNameSEMICOLON
appinfoAttrs	TokenNameIdentifier
.	TokenNameDOT
addAttributeUse	TokenNameIdentifier
(	TokenNameLPAREN
appinfoSourceAttr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
appinfoAttrs	TokenNameIdentifier
.	TokenNameDOT
fAttributeWC	TokenNameIdentifier
=	TokenNameEQUAL
otherAttrs	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
XSParticleDecl	TokenNameIdentifier
annotationParticle	TokenNameIdentifier
=	TokenNameEQUAL
createUnboundedModelGroupParticle	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
{	TokenNameLBRACE
XSModelGroupImpl	TokenNameIdentifier
annotationChoice	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSModelGroupImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
annotationChoice	TokenNameIdentifier
.	TokenNameDOT
fCompositor	TokenNameIdentifier
=	TokenNameEQUAL
XSModelGroupImpl	TokenNameIdentifier
.	TokenNameDOT
MODELGROUP_CHOICE	TokenNameIdentifier
;	TokenNameSEMICOLON
annotationChoice	TokenNameIdentifier
.	TokenNameDOT
fParticleCount	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
annotationChoice	TokenNameIdentifier
.	TokenNameDOT
fParticles	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSParticleDecl	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
annotationChoice	TokenNameIdentifier
.	TokenNameDOT
fParticles	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
createChoiceElementParticle	TokenNameIdentifier
(	TokenNameLPAREN
appinfoDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
annotationChoice	TokenNameIdentifier
.	TokenNameDOT
fParticles	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
createChoiceElementParticle	TokenNameIdentifier
(	TokenNameLPAREN
documentationDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
annotationParticle	TokenNameIdentifier
.	TokenNameDOT
fValue	TokenNameIdentifier
=	TokenNameEQUAL
annotationChoice	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
XSParticleDecl	TokenNameIdentifier
anyWCSequenceParticle	TokenNameIdentifier
=	TokenNameEQUAL
createUnboundedAnyWildcardSequenceParticle	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
annotationType	TokenNameIdentifier
.	TokenNameDOT
setValues	TokenNameIdentifier
(	TokenNameLPAREN
"#AnonType_"	TokenNameStringLiteral
+	TokenNamePLUS
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
,	TokenNameCOMMA
fTargetNamespace	TokenNameIdentifier
,	TokenNameCOMMA
SchemaGrammar	TokenNameIdentifier
.	TokenNameDOT
fAnyType	TokenNameIdentifier
,	TokenNameCOMMA
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_RESTRICTION	TokenNameIdentifier
,	TokenNameCOMMA
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_NONE	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
short	TokenNameshort
)	TokenNameRPAREN
(	TokenNameLPAREN
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_EXTENSION	TokenNameIdentifier
|	TokenNameOR
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_RESTRICTION	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
XSComplexTypeDecl	TokenNameIdentifier
.	TokenNameDOT
CONTENTTYPE_ELEMENT	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
annotationAttrs	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
annotationParticle	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
XSObjectListImpl	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
annotationType	TokenNameIdentifier
.	TokenNameDOT
setName	TokenNameIdentifier
(	TokenNameLPAREN
"#AnonType_"	TokenNameStringLiteral
+	TokenNamePLUS
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
annotationType	TokenNameIdentifier
.	TokenNameDOT
setIsAnonymous	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
documentationType	TokenNameIdentifier
.	TokenNameDOT
setValues	TokenNameIdentifier
(	TokenNameLPAREN
"#AnonType_"	TokenNameStringLiteral
+	TokenNamePLUS
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_DOCUMENTATION	TokenNameIdentifier
,	TokenNameCOMMA
fTargetNamespace	TokenNameIdentifier
,	TokenNameCOMMA
SchemaGrammar	TokenNameIdentifier
.	TokenNameDOT
fAnyType	TokenNameIdentifier
,	TokenNameCOMMA
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_RESTRICTION	TokenNameIdentifier
,	TokenNameCOMMA
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_NONE	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
short	TokenNameshort
)	TokenNameRPAREN
(	TokenNameLPAREN
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_EXTENSION	TokenNameIdentifier
|	TokenNameOR
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_RESTRICTION	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
XSComplexTypeDecl	TokenNameIdentifier
.	TokenNameDOT
CONTENTTYPE_MIXED	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
documentationAttrs	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
anyWCSequenceParticle	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
XSObjectListImpl	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
documentationType	TokenNameIdentifier
.	TokenNameDOT
setName	TokenNameIdentifier
(	TokenNameLPAREN
"#AnonType_"	TokenNameStringLiteral
+	TokenNamePLUS
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_DOCUMENTATION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
documentationType	TokenNameIdentifier
.	TokenNameDOT
setIsAnonymous	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
appinfoType	TokenNameIdentifier
.	TokenNameDOT
setValues	TokenNameIdentifier
(	TokenNameLPAREN
"#AnonType_"	TokenNameStringLiteral
+	TokenNamePLUS
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_APPINFO	TokenNameIdentifier
,	TokenNameCOMMA
fTargetNamespace	TokenNameIdentifier
,	TokenNameCOMMA
SchemaGrammar	TokenNameIdentifier
.	TokenNameDOT
fAnyType	TokenNameIdentifier
,	TokenNameCOMMA
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_RESTRICTION	TokenNameIdentifier
,	TokenNameCOMMA
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_NONE	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
short	TokenNameshort
)	TokenNameRPAREN
(	TokenNameLPAREN
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_EXTENSION	TokenNameIdentifier
|	TokenNameOR
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_RESTRICTION	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
XSComplexTypeDecl	TokenNameIdentifier
.	TokenNameDOT
CONTENTTYPE_MIXED	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
appinfoAttrs	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
anyWCSequenceParticle	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
XSObjectListImpl	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
appinfoType	TokenNameIdentifier
.	TokenNameDOT
setName	TokenNameIdentifier
(	TokenNameLPAREN
"#AnonType_"	TokenNameStringLiteral
+	TokenNamePLUS
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_APPINFO	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
appinfoType	TokenNameIdentifier
.	TokenNameDOT
setIsAnonymous	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XMLGrammarDescription	TokenNameIdentifier
getGrammarDescription	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
fGrammarDescription	TokenNameIdentifier
.	TokenNameDOT
makeClone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setImportedGrammars	TokenNameIdentifier
(	TokenNameLPAREN
Vector	TokenNameIdentifier
importedGrammars	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSAttributeDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSAttributeGroupDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalAttributeGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSAttributeGroupDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalAttributeGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSAttributeGroupDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalElementDeclAll	TokenNameIdentifier
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSGroupDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSGroupDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalNotationDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSNotationDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalNotationDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSNotationDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSTypeDefinition	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSTypeDefinition	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalComplexTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSComplexTypeDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalComplexTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSComplexTypeDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalSimpleTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalSimpleTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addComplexTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSComplexTypeDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
SimpleLocator	TokenNameIdentifier
locator	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addRedefinedGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSGroupDecl	TokenNameIdentifier
derived	TokenNameIdentifier
,	TokenNameCOMMA
XSGroupDecl	TokenNameIdentifier
base	TokenNameIdentifier
,	TokenNameCOMMA
SimpleLocator	TokenNameIdentifier
locator	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
synchronized	TokenNamesynchronized
void	TokenNamevoid
addDocument	TokenNameIdentifier
(	TokenNameLPAREN
Object	TokenNameIdentifier
document	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
synchronized	TokenNamesynchronized
DOMParser	TokenNameIdentifier
getDOMParser	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
synchronized	TokenNamesynchronized
SAXParser	TokenNameIdentifier
getSAXParser	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
XSElementDecl	TokenNameIdentifier
createAnnotationElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
localName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
XSElementDecl	TokenNameIdentifier
eDecl	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
eDecl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
=	TokenNameEQUAL
localName	TokenNameIdentifier
;	TokenNameSEMICOLON
eDecl	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
=	TokenNameEQUAL
fTargetNamespace	TokenNameIdentifier
;	TokenNameSEMICOLON
eDecl	TokenNameIdentifier
.	TokenNameDOT
setIsGlobal	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
eDecl	TokenNameIdentifier
.	TokenNameDOT
fBlock	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_EXTENSION	TokenNameIdentifier
|	TokenNameOR
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_RESTRICTION	TokenNameIdentifier
|	TokenNameOR
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_SUBSTITUTION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
eDecl	TokenNameIdentifier
.	TokenNameDOT
setConstraintType	TokenNameIdentifier
(	TokenNameLPAREN
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
eDecl	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
XSParticleDecl	TokenNameIdentifier
createUnboundedModelGroupParticle	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
XSParticleDecl	TokenNameIdentifier
particle	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSParticleDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fMinOccurs	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fMaxOccurs	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
OCCURRENCE_UNBOUNDED	TokenNameIdentifier
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
=	TokenNameEQUAL
XSParticleDecl	TokenNameIdentifier
.	TokenNameDOT
PARTICLE_MODELGROUP	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
particle	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
XSParticleDecl	TokenNameIdentifier
createChoiceElementParticle	TokenNameIdentifier
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
ref	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
XSParticleDecl	TokenNameIdentifier
particle	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSParticleDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fMinOccurs	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fMaxOccurs	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
=	TokenNameEQUAL
XSParticleDecl	TokenNameIdentifier
.	TokenNameDOT
PARTICLE_ELEMENT	TokenNameIdentifier
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fValue	TokenNameIdentifier
=	TokenNameEQUAL
ref	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
particle	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
XSParticleDecl	TokenNameIdentifier
createUnboundedAnyWildcardSequenceParticle	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
XSParticleDecl	TokenNameIdentifier
particle	TokenNameIdentifier
=	TokenNameEQUAL
createUnboundedModelGroupParticle	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSModelGroupImpl	TokenNameIdentifier
sequence	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSModelGroupImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sequence	TokenNameIdentifier
.	TokenNameDOT
fCompositor	TokenNameIdentifier
=	TokenNameEQUAL
XSModelGroupImpl	TokenNameIdentifier
.	TokenNameDOT
MODELGROUP_SEQUENCE	TokenNameIdentifier
;	TokenNameSEMICOLON
sequence	TokenNameIdentifier
.	TokenNameDOT
fParticleCount	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
sequence	TokenNameIdentifier
.	TokenNameDOT
fParticles	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSParticleDecl	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
sequence	TokenNameIdentifier
.	TokenNameDOT
fParticles	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
createAnyLaxWildcardParticle	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fValue	TokenNameIdentifier
=	TokenNameEQUAL
sequence	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
particle	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
XSParticleDecl	TokenNameIdentifier
createAnyLaxWildcardParticle	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
XSParticleDecl	TokenNameIdentifier
particle	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSParticleDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fMinOccurs	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fMaxOccurs	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
=	TokenNameEQUAL
XSParticleDecl	TokenNameIdentifier
.	TokenNameDOT
PARTICLE_WILDCARD	TokenNameIdentifier
;	TokenNameSEMICOLON
XSWildcardDecl	TokenNameIdentifier
anyWC	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSWildcardDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
anyWC	TokenNameIdentifier
.	TokenNameDOT
fNamespaceList	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
anyWC	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
=	TokenNameEQUAL
XSWildcard	TokenNameIdentifier
.	TokenNameDOT
NSCONSTRAINT_ANY	TokenNameIdentifier
;	TokenNameSEMICOLON
anyWC	TokenNameIdentifier
.	TokenNameDOT
fProcessContents	TokenNameIdentifier
=	TokenNameEQUAL
XSWildcard	TokenNameIdentifier
.	TokenNameDOT
PC_LAX	TokenNameIdentifier
;	TokenNameSEMICOLON
particle	TokenNameIdentifier
.	TokenNameDOT
fValue	TokenNameIdentifier
=	TokenNameEQUAL
anyWC	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
particle	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
XMLGrammarDescription	TokenNameIdentifier
getGrammarDescription	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
fGrammarDescription	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isNamespaceAware	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Vector	TokenNameIdentifier
fImported	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
public	TokenNamepublic
void	TokenNamevoid
setImportedGrammars	TokenNameIdentifier
(	TokenNameLPAREN
Vector	TokenNameIdentifier
importedGrammars	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fImported	TokenNameIdentifier
=	TokenNameEQUAL
importedGrammars	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Vector	TokenNameIdentifier
getImportedGrammars	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
fImported	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
String	TokenNameIdentifier
getTargetNamespace	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
fTargetNamespace	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSAttributeDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalAttrDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
decl	TokenNameIdentifier
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSAttributeDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalAttrDeclsExt	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
decl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
getNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
decl	TokenNameIdentifier
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalAttributeGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSAttributeGroupDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalAttrGrpDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
decl	TokenNameIdentifier
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalAttributeGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSAttributeGroupDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalAttrGrpDeclsExt	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
decl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
getNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
decl	TokenNameIdentifier
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalElementDeclAll	TokenNameIdentifier
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fAllGlobalElemDecls	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
decl	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
fAllGlobalElemDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
decl	TokenNameIdentifier
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
fSubGroup	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fSubGroupCount	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
fSubGroups	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
fSubGroups	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fSubGroups	TokenNameIdentifier
,	TokenNameCOMMA
fSubGroupCount	TokenNameIdentifier
+	TokenNamePLUS
INC_SIZE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fSubGroups	TokenNameIdentifier
[	TokenNameLBRACKET
fSubGroupCount	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
decl	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalElemDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
decl	TokenNameIdentifier
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalElemDeclsExt	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
decl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
getNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
decl	TokenNameIdentifier
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSGroupDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalGroupDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
decl	TokenNameIdentifier
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSGroupDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalGroupDeclsExt	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
decl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
getNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
decl	TokenNameIdentifier
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalNotationDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSNotationDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalNotationDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
decl	TokenNameIdentifier
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalNotationDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSNotationDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalNotationDeclsExt	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
decl	TokenNameIdentifier
.	TokenNameDOT
fName	TokenNameIdentifier
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
getNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
decl	TokenNameIdentifier
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSTypeDefinition	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalTypeDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
decl	TokenNameIdentifier
instanceof	TokenNameinstanceof
XSComplexTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
XSComplexTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
decl	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
decl	TokenNameIdentifier
instanceof	TokenNameinstanceof
XSSimpleTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
XSSimpleTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
decl	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSTypeDefinition	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalTypeDeclsExt	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
decl	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
getNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
decl	TokenNameIdentifier
instanceof	TokenNameinstanceof
XSComplexTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
XSComplexTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
decl	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
decl	TokenNameIdentifier
instanceof	TokenNameinstanceof
XSSimpleTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
XSSimpleTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
decl	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalComplexTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSComplexTypeDecl	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalTypeDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
decl	TokenNameIdentifier
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalComplexTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSComplexTypeDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalTypeDeclsExt	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
decl	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
getNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
decl	TokenNameIdentifier
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalSimpleTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalTypeDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
decl	TokenNameIdentifier
instanceof	TokenNameinstanceof
XSSimpleTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
XSSimpleTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
decl	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addGlobalSimpleTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalTypeDeclsExt	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
decl	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
getNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
decl	TokenNameIdentifier
instanceof	TokenNameinstanceof
XSSimpleTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
XSSimpleTypeDecl	TokenNameIdentifier
)	TokenNameRPAREN
decl	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
addIDConstraintDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
elmDecl	TokenNameIdentifier
,	TokenNameCOMMA
IdentityConstraint	TokenNameIdentifier
decl	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
elmDecl	TokenNameIdentifier
.	TokenNameDOT
addIDConstraint	TokenNameIdentifier
(	TokenNameLPAREN
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGlobalIDConstraintDecls	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
decl	TokenNameIdentifier
.	TokenNameDOT
getIdentityConstraintName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
void	TokenNamevoid
addIDConstraintDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
elmDecl	TokenNameIdentifier
,	TokenNameCOMMA
IdentityConstraint	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fGlobalIDConstraintDeclsExt	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
decl	TokenNameIdentifier
.	TokenNameDOT
getIdentityConstraintName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
decl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
XSAttributeDecl	TokenNameIdentifier
getGlobalAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
declName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSAttributeDecl	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalAttrDecls	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
declName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
XSAttributeDecl	TokenNameIdentifier
getGlobalAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
declName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSAttributeDecl	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalAttrDeclsExt	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
declName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
XSAttributeGroupDecl	TokenNameIdentifier
getGlobalAttributeGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
declName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSAttributeGroupDecl	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalAttrGrpDecls	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
declName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
XSAttributeGroupDecl	TokenNameIdentifier
getGlobalAttributeGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
declName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSAttributeGroupDecl	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalAttrGrpDeclsExt	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
declName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
XSElementDecl	TokenNameIdentifier
getGlobalElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
declName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalElemDecls	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
declName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
XSElementDecl	TokenNameIdentifier
getGlobalElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
declName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalElemDeclsExt	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
declName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
XSGroupDecl	TokenNameIdentifier
getGlobalGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
declName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSGroupDecl	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalGroupDecls	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
declName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
XSGroupDecl	TokenNameIdentifier
getGlobalGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
declName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSGroupDecl	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalGroupDeclsExt	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
declName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
XSNotationDecl	TokenNameIdentifier
getGlobalNotationDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
declName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSNotationDecl	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalNotationDecls	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
declName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
XSNotationDecl	TokenNameIdentifier
getGlobalNotationDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
declName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSNotationDecl	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalNotationDeclsExt	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
declName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
XSTypeDefinition	TokenNameIdentifier
getGlobalTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
declName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSTypeDefinition	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalTypeDecls	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
declName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
XSTypeDefinition	TokenNameIdentifier
getGlobalTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
declName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSTypeDefinition	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalTypeDeclsExt	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
declName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
IdentityConstraint	TokenNameIdentifier
getIDConstraintDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
declName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
IdentityConstraint	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalIDConstraintDecls	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
declName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
IdentityConstraint	TokenNameIdentifier
getIDConstraintDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
declName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
IdentityConstraint	TokenNameIdentifier
)	TokenNameRPAREN
fGlobalIDConstraintDeclsExt	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
location	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
?	TokenNameQUESTION
location	TokenNameIdentifier
:	TokenNameCOLON
""	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
","	TokenNameStringLiteral
+	TokenNamePLUS
declName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
boolean	TokenNameboolean
hasIDConstraints	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
fGlobalIDConstraintDecls	TokenNameIdentifier
.	TokenNameDOT
getLength	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
INITIAL_SIZE	TokenNameIdentifier
=	TokenNameEQUAL
16	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
INC_SIZE	TokenNameIdentifier
=	TokenNameEQUAL
16	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
fCTCount	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
XSComplexTypeDecl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
fComplexTypeDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSComplexTypeDecl	TokenNameIdentifier
[	TokenNameLBRACKET
INITIAL_SIZE	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
private	TokenNameprivate
SimpleLocator	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
fCTLocators	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleLocator	TokenNameIdentifier
[	TokenNameLBRACKET
INITIAL_SIZE	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
REDEFINED_GROUP_INIT_SIZE	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
fRGCount	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
XSGroupDecl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
fRedefinedGroupDecls	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSGroupDecl	TokenNameIdentifier
[	TokenNameLBRACKET
REDEFINED_GROUP_INIT_SIZE	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
private	TokenNameprivate
SimpleLocator	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
fRGLocators	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleLocator	TokenNameIdentifier
[	TokenNameLBRACKET
REDEFINED_GROUP_INIT_SIZE	TokenNameIdentifier
/	TokenNameDIVIDE
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
boolean	TokenNameboolean
fFullChecked	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
public	TokenNamepublic
void	TokenNamevoid
addComplexTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSComplexTypeDecl	TokenNameIdentifier
decl	TokenNameIdentifier
,	TokenNameCOMMA
SimpleLocator	TokenNameIdentifier
locator	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fCTCount	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
fComplexTypeDecls	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fComplexTypeDecls	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fComplexTypeDecls	TokenNameIdentifier
,	TokenNameCOMMA
fCTCount	TokenNameIdentifier
+	TokenNamePLUS
INC_SIZE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fCTLocators	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fCTLocators	TokenNameIdentifier
,	TokenNameCOMMA
fCTCount	TokenNameIdentifier
+	TokenNamePLUS
INC_SIZE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fCTLocators	TokenNameIdentifier
[	TokenNameLBRACKET
fCTCount	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
locator	TokenNameIdentifier
;	TokenNameSEMICOLON
fComplexTypeDecls	TokenNameIdentifier
[	TokenNameLBRACKET
fCTCount	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
decl	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addRedefinedGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
XSGroupDecl	TokenNameIdentifier
derived	TokenNameIdentifier
,	TokenNameCOMMA
XSGroupDecl	TokenNameIdentifier
base	TokenNameIdentifier
,	TokenNameCOMMA
SimpleLocator	TokenNameIdentifier
locator	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fRGCount	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
fRedefinedGroupDecls	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fRedefinedGroupDecls	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fRedefinedGroupDecls	TokenNameIdentifier
,	TokenNameCOMMA
fRGCount	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fRGLocators	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fRGLocators	TokenNameIdentifier
,	TokenNameCOMMA
fRGCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fRGLocators	TokenNameIdentifier
[	TokenNameLBRACKET
fRGCount	TokenNameIdentifier
/	TokenNameDIVIDE
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
locator	TokenNameIdentifier
;	TokenNameSEMICOLON
fRedefinedGroupDecls	TokenNameIdentifier
[	TokenNameLBRACKET
fRGCount	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
derived	TokenNameIdentifier
;	TokenNameSEMICOLON
fRedefinedGroupDecls	TokenNameIdentifier
[	TokenNameLBRACKET
fRGCount	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
base	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
XSComplexTypeDecl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getUncheckedComplexTypeDecls	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fCTCount	TokenNameIdentifier
<	TokenNameLESS
fComplexTypeDecls	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fComplexTypeDecls	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fComplexTypeDecls	TokenNameIdentifier
,	TokenNameCOMMA
fCTCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fCTLocators	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fCTLocators	TokenNameIdentifier
,	TokenNameCOMMA
fCTCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
fComplexTypeDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
SimpleLocator	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getUncheckedCTLocators	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fCTCount	TokenNameIdentifier
<	TokenNameLESS
fCTLocators	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fComplexTypeDecls	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fComplexTypeDecls	TokenNameIdentifier
,	TokenNameCOMMA
fCTCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fCTLocators	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fCTLocators	TokenNameIdentifier
,	TokenNameCOMMA
fCTCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
fCTLocators	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
XSGroupDecl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getRedefinedGroupDecls	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fRGCount	TokenNameIdentifier
<	TokenNameLESS
fRedefinedGroupDecls	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fRedefinedGroupDecls	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fRedefinedGroupDecls	TokenNameIdentifier
,	TokenNameCOMMA
fRGCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fRGLocators	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fRGLocators	TokenNameIdentifier
,	TokenNameCOMMA
fRGCount	TokenNameIdentifier
/	TokenNameDIVIDE
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
fRedefinedGroupDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
SimpleLocator	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getRGLocators	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fRGCount	TokenNameIdentifier
<	TokenNameLESS
fRedefinedGroupDecls	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fRedefinedGroupDecls	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fRedefinedGroupDecls	TokenNameIdentifier
,	TokenNameCOMMA
fRGCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fRGLocators	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fRGLocators	TokenNameIdentifier
,	TokenNameCOMMA
fRGCount	TokenNameIdentifier
/	TokenNameDIVIDE
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
fRGLocators	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
void	TokenNamevoid
setUncheckedTypeNum	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
newSize	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fCTCount	TokenNameIdentifier
=	TokenNameEQUAL
newSize	TokenNameIdentifier
;	TokenNameSEMICOLON
fComplexTypeDecls	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fComplexTypeDecls	TokenNameIdentifier
,	TokenNameCOMMA
fCTCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fCTLocators	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fCTLocators	TokenNameIdentifier
,	TokenNameCOMMA
fCTCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
int	TokenNameint
fSubGroupCount	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
XSElementDecl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
fSubGroups	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSElementDecl	TokenNameIdentifier
[	TokenNameLBRACKET
INITIAL_SIZE	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
final	TokenNamefinal
XSElementDecl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getSubstitutionGroups	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fSubGroupCount	TokenNameIdentifier
<	TokenNameLESS
fSubGroups	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
fSubGroups	TokenNameIdentifier
=	TokenNameEQUAL
resize	TokenNameIdentifier
(	TokenNameLPAREN
fSubGroups	TokenNameIdentifier
,	TokenNameCOMMA
fSubGroupCount	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
fSubGroups	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
static	TokenNamestatic
XSComplexTypeDecl	TokenNameIdentifier
fAnyType	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAnyType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
class	TokenNameclass
XSAnyType	TokenNameIdentifier
extends	TokenNameextends
XSComplexTypeDecl	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
XSAnyType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
fName	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATTVAL_ANYTYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
super	TokenNamesuper
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_SCHEMAFORSCHEMA	TokenNameIdentifier
;	TokenNameSEMICOLON
fBaseType	TokenNameIdentifier
=	TokenNameEQUAL
this	TokenNamethis
;	TokenNameSEMICOLON
fDerivedBy	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
DERIVATION_RESTRICTION	TokenNameIdentifier
;	TokenNameSEMICOLON
fContentType	TokenNameIdentifier
=	TokenNameEQUAL
XSComplexTypeDecl	TokenNameIdentifier
.	TokenNameDOT
CONTENTTYPE_MIXED	TokenNameIdentifier
;	TokenNameSEMICOLON
fParticle	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
fAttrGrp	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setValues	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
targetNamespace	TokenNameIdentifier
,	TokenNameCOMMA
XSTypeDefinition	TokenNameIdentifier
baseType	TokenNameIdentifier
,	TokenNameCOMMA
short	TokenNameshort
derivedBy	TokenNameIdentifier
,	TokenNameCOMMA
short	TokenNameshort
schemaFinal	TokenNameIdentifier
,	TokenNameCOMMA
short	TokenNameshort
block	TokenNameIdentifier
,	TokenNameCOMMA
short	TokenNameshort
contentType	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
isAbstract	TokenNameIdentifier
,	TokenNameCOMMA
XSAttributeGroupDecl	TokenNameIdentifier
attrGrp	TokenNameIdentifier
,	TokenNameCOMMA
XSSimpleType	TokenNameIdentifier
simpleType	TokenNameIdentifier
,	TokenNameCOMMA
XSParticleDecl	TokenNameIdentifier
particle	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setName	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setIsAbstractType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setContainsTypeID	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setIsAnonymous	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
reset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
XSObjectList	TokenNameIdentifier
getAttributeUses	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
XSObjectListImpl	TokenNameIdentifier
.	TokenNameDOT
EMPTY_LIST	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSAttributeGroupDecl	TokenNameIdentifier
getAttrGrp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
XSWildcardDecl	TokenNameIdentifier
wildcard	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSWildcardDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
wildcard	TokenNameIdentifier
.	TokenNameDOT
fProcessContents	TokenNameIdentifier
=	TokenNameEQUAL
XSWildcardDecl	TokenNameIdentifier
.	TokenNameDOT
PC_LAX	TokenNameIdentifier
;	TokenNameSEMICOLON
XSAttributeGroupDecl	TokenNameIdentifier
attrGrp	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAttributeGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attrGrp	TokenNameIdentifier
.	TokenNameDOT
fAttributeWC	TokenNameIdentifier
=	TokenNameEQUAL
wildcard	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
attrGrp	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSWildcard	TokenNameIdentifier
getAttributeWildcard	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
XSWildcardDecl	TokenNameIdentifier
wildcard	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSWildcardDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
wildcard	TokenNameIdentifier
.	TokenNameDOT
fProcessContents	TokenNameIdentifier
=	TokenNameEQUAL
XSWildcardDecl	TokenNameIdentifier
.	TokenNameDOT
PC_LAX	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
wildcard	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSParticle	TokenNameIdentifier
getParticle	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
XSWildcardDecl	TokenNameIdentifier
wildcard	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSWildcardDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
wildcard	TokenNameIdentifier
.	TokenNameDOT
fProcessContents	TokenNameIdentifier
=	TokenNameEQUAL
XSWildcardDecl	TokenNameIdentifier
.	TokenNameDOT
PC_LAX	TokenNameIdentifier
;	TokenNameSEMICOLON
XSParticleDecl	TokenNameIdentifier
particleW	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSParticleDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
particleW	TokenNameIdentifier
.	TokenNameDOT
fMinOccurs	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
particleW	TokenNameIdentifier
.	TokenNameDOT
fMaxOccurs	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
OCCURRENCE_UNBOUNDED	TokenNameIdentifier
;	TokenNameSEMICOLON
particleW	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
=	TokenNameEQUAL
XSParticleDecl	TokenNameIdentifier
.	TokenNameDOT
PARTICLE_WILDCARD	TokenNameIdentifier
;	TokenNameSEMICOLON
particleW	TokenNameIdentifier
.	TokenNameDOT
fValue	TokenNameIdentifier
=	TokenNameEQUAL
wildcard	TokenNameIdentifier
;	TokenNameSEMICOLON
XSModelGroupImpl	TokenNameIdentifier
group	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSModelGroupImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
group	TokenNameIdentifier
.	TokenNameDOT
fCompositor	TokenNameIdentifier
=	TokenNameEQUAL
XSModelGroupImpl	TokenNameIdentifier
.	TokenNameDOT
MODELGROUP_SEQUENCE	TokenNameIdentifier
;	TokenNameSEMICOLON
group	TokenNameIdentifier
.	TokenNameDOT
fParticleCount	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
group	TokenNameIdentifier
.	TokenNameDOT
fParticles	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSParticleDecl	TokenNameIdentifier
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
group	TokenNameIdentifier
.	TokenNameDOT
fParticles	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
particleW	TokenNameIdentifier
;	TokenNameSEMICOLON
XSParticleDecl	TokenNameIdentifier
particleG	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSParticleDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
particleG	TokenNameIdentifier
.	TokenNameDOT
fType	TokenNameIdentifier
=	TokenNameEQUAL
XSParticleDecl	TokenNameIdentifier
.	TokenNameDOT
PARTICLE_MODELGROUP	TokenNameIdentifier
;	TokenNameSEMICOLON
particleG	TokenNameIdentifier
.	TokenNameDOT
fValue	TokenNameIdentifier
=	TokenNameEQUAL
group	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
particleG	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSObjectList	TokenNameIdentifier
getAnnotations	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
XSObjectListImpl	TokenNameIdentifier
.	TokenNameDOT
EMPTY_LIST	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSNamespaceItem	TokenNameIdentifier
getNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
SG_SchemaNS	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
class	TokenNameclass
BuiltinAttrDecl	TokenNameIdentifier
extends	TokenNameextends
XSAttributeDecl	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
BuiltinAttrDecl	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
tns	TokenNameIdentifier
,	TokenNameCOMMA
XSSimpleType	TokenNameIdentifier
type	TokenNameIdentifier
,	TokenNameCOMMA
short	TokenNameshort
scope	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fName	TokenNameIdentifier
=	TokenNameEQUAL
name	TokenNameIdentifier
;	TokenNameSEMICOLON
super	TokenNamesuper
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
=	TokenNameEQUAL
tns	TokenNameIdentifier
;	TokenNameSEMICOLON
fType	TokenNameIdentifier
=	TokenNameEQUAL
type	TokenNameIdentifier
;	TokenNameSEMICOLON
fScope	TokenNameIdentifier
=	TokenNameEQUAL
scope	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setValues	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
targetNamespace	TokenNameIdentifier
,	TokenNameCOMMA
XSSimpleType	TokenNameIdentifier
simpleType	TokenNameIdentifier
,	TokenNameCOMMA
short	TokenNameshort
constraintType	TokenNameIdentifier
,	TokenNameCOMMA
short	TokenNameshort
scope	TokenNameIdentifier
,	TokenNameCOMMA
ValidatedInfo	TokenNameIdentifier
valInfo	TokenNameIdentifier
,	TokenNameCOMMA
XSComplexTypeDecl	TokenNameIdentifier
enclosingCT	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
reset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
XSAnnotation	TokenNameIdentifier
getAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSNamespaceItem	TokenNameIdentifier
getNamespaceItem	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
SG_XSI	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
final	TokenNamefinal
static	TokenNamestatic
BuiltinSchemaGrammar	TokenNameIdentifier
SG_SchemaNS	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BuiltinSchemaGrammar	TokenNameIdentifier
(	TokenNameLPAREN
GRAMMAR_XS	TokenNameIdentifier
,	TokenNameCOMMA
Constants	TokenNameIdentifier
.	TokenNameDOT
SCHEMA_VERSION_1_0	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
final	TokenNamefinal
static	TokenNamestatic
BuiltinSchemaGrammar	TokenNameIdentifier
SG_SchemaNSExtended	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BuiltinSchemaGrammar	TokenNameIdentifier
(	TokenNameLPAREN
GRAMMAR_XS	TokenNameIdentifier
,	TokenNameCOMMA
Constants	TokenNameIdentifier
.	TokenNameDOT
SCHEMA_VERSION_1_0_EXTENDED	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
static	TokenNamestatic
XSSimpleType	TokenNameIdentifier
fAnySimpleType	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
)	TokenNameRPAREN
SG_SchemaNS	TokenNameIdentifier
.	TokenNameDOT
getGlobalTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATTVAL_ANYSIMPLETYPE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
static	TokenNamestatic
BuiltinSchemaGrammar	TokenNameIdentifier
SG_XSI	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BuiltinSchemaGrammar	TokenNameIdentifier
(	TokenNameLPAREN
GRAMMAR_XSI	TokenNameIdentifier
,	TokenNameCOMMA
Constants	TokenNameIdentifier
.	TokenNameDOT
SCHEMA_VERSION_1_0	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
SchemaGrammar	TokenNameIdentifier
getS4SGrammar	TokenNameIdentifier
(	TokenNameLPAREN
short	TokenNameshort
schemaVersion	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
schemaVersion	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
Constants	TokenNameIdentifier
.	TokenNameDOT
SCHEMA_VERSION_1_0	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
SG_SchemaNS	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
SG_SchemaNSExtended	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
final	TokenNamefinal
XSComplexTypeDecl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
resize	TokenNameIdentifier
(	TokenNameLPAREN
XSComplexTypeDecl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
oldArray	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newSize	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
XSComplexTypeDecl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newArray	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSComplexTypeDecl	TokenNameIdentifier
[	TokenNameLBRACKET
newSize	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
oldArray	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
newArray	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
Math	TokenNameIdentifier
.	TokenNameDOT
min	TokenNameIdentifier
(	TokenNameLPAREN
oldArray	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
,	TokenNameCOMMA
newSize	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
newArray	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
final	TokenNamefinal
XSGroupDecl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
resize	TokenNameIdentifier
(	TokenNameLPAREN
XSGroupDecl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
oldArray	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newSize	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
XSGroupDecl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newArray	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSGroupDecl	TokenNameIdentifier
[	TokenNameLBRACKET
newSize	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
oldArray	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
newArray	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
Math	TokenNameIdentifier
.	TokenNameDOT
min	TokenNameIdentifier
(	TokenNameLPAREN
oldArray	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
,	TokenNameCOMMA
newSize	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
newArray	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
final	TokenNamefinal
XSElementDecl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
resize	TokenNameIdentifier
(	TokenNameLPAREN
XSElementDecl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
oldArray	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newSize	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
XSElementDecl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newArray	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSElementDecl	TokenNameIdentifier
[	TokenNameLBRACKET
newSize	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
oldArray	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
newArray	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
Math	TokenNameIdentifier
.	TokenNameDOT
min	TokenNameIdentifier
(	TokenNameLPAREN
oldArray	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
,	TokenNameCOMMA
newSize	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
newArray	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
final	TokenNamefinal
SimpleLocator	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
resize	TokenNameIdentifier
(	TokenNameLPAREN
SimpleLocator	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
oldArray	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
newSize	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
SimpleLocator	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newArray	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleLocator	TokenNameIdentifier
[	TokenNameLBRACKET
newSize	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
oldArray	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
newArray	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
Math	TokenNameIdentifier
.	TokenNameDOT
min	TokenNameIdentifier
(	TokenNameLPAREN
oldArray	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
,	TokenNameCOMMA
newSize	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
newArray	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
short	TokenNameshort
MAX_COMP_IDX	TokenNameIdentifier
=	TokenNameEQUAL
XSTypeDefinition	TokenNameIdentifier
.	TokenNameDOT
SIMPLE_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
boolean	TokenNameboolean
[	TokenNameLBRACKET
]	TokenNameRBRACKET
GLOBAL_COMP	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
false	TokenNamefalse
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
true	TokenNametrue
}	TokenNameRBRACE
;	TokenNameSEMICOLON
private	TokenNameprivate
XSNamedMap	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
fComponents	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
ObjectList	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
fComponentsExt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
Vector	TokenNameIdentifier
fDocuments	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
Vector	TokenNameIdentifier
fLocations	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
public	TokenNamepublic
synchronized	TokenNamesynchronized
void	TokenNamevoid
addDocument	TokenNameIdentifier
(	TokenNameLPAREN
Object	TokenNameIdentifier
document	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
location	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fDocuments	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
fDocuments	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Vector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fLocations	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Vector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fDocuments	TokenNameIdentifier
.	TokenNameDOT
addElement	TokenNameIdentifier
(	TokenNameLPAREN
document	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fLocations	TokenNameIdentifier
.	TokenNameDOT
addElement	TokenNameIdentifier
(	TokenNameLPAREN
location	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
synchronized	TokenNamesynchronized
void	TokenNamevoid
removeDocument	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
index	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fDocuments	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
index	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
0	TokenNameIntegerLiteral
&&	TokenNameAND_AND
index	TokenNameIdentifier
<	TokenNameLESS
fDocuments	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
fDocuments	TokenNameIdentifier
.	TokenNameDOT
removeElementAt	TokenNameIdentifier
(	TokenNameLPAREN
index	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fLocations	TokenNameIdentifier
.	TokenNameDOT
removeElementAt	TokenNameIdentifier
(	TokenNameLPAREN
index	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getSchemaNamespace	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
fTargetNamespace	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
synchronized	TokenNamesynchronized
DOMParser	TokenNameIdentifier
getDOMParser	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fDOMParser	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
DOMParser	TokenNameIdentifier
parser	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
DOMParser	TokenNameIdentifier
)	TokenNameRPAREN
fDOMParser	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
parser	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
parser	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
XML11Configuration	TokenNameIdentifier
config	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XML11Configuration	TokenNameIdentifier
(	TokenNameLPAREN
fSymbolTable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
config	TokenNameIdentifier
.	TokenNameDOT
setFeature	TokenNameIdentifier
(	TokenNameLPAREN
Constants	TokenNameIdentifier
.	TokenNameDOT
SAX_FEATURE_PREFIX	TokenNameIdentifier
+	TokenNamePLUS
Constants	TokenNameIdentifier
.	TokenNameDOT
NAMESPACES_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
config	TokenNameIdentifier
.	TokenNameDOT
setFeature	TokenNameIdentifier
(	TokenNameLPAREN
Constants	TokenNameIdentifier
.	TokenNameDOT
SAX_FEATURE_PREFIX	TokenNameIdentifier
+	TokenNamePLUS
Constants	TokenNameIdentifier
.	TokenNameDOT
VALIDATION_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOMParser	TokenNameIdentifier
parser	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DOMParser	TokenNameIdentifier
(	TokenNameLPAREN
config	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
parser	TokenNameIdentifier
.	TokenNameDOT
setFeature	TokenNameIdentifier
(	TokenNameLPAREN
Constants	TokenNameIdentifier
.	TokenNameDOT
XERCES_FEATURE_PREFIX	TokenNameIdentifier
+	TokenNamePLUS
Constants	TokenNameIdentifier
.	TokenNameDOT
DEFER_NODE_EXPANSION_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
SAXException	TokenNameIdentifier
exc	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
fDOMParser	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SoftReference	TokenNameIdentifier
(	TokenNameLPAREN
parser	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
parser	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
synchronized	TokenNamesynchronized
SAXParser	TokenNameIdentifier
getSAXParser	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fSAXParser	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
SAXParser	TokenNameIdentifier
parser	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
SAXParser	TokenNameIdentifier
)	TokenNameRPAREN
fSAXParser	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
parser	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
parser	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
XML11Configuration	TokenNameIdentifier
config	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XML11Configuration	TokenNameIdentifier
(	TokenNameLPAREN
fSymbolTable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
config	TokenNameIdentifier
.	TokenNameDOT
setFeature	TokenNameIdentifier
(	TokenNameLPAREN
Constants	TokenNameIdentifier
.	TokenNameDOT
SAX_FEATURE_PREFIX	TokenNameIdentifier
+	TokenNamePLUS
Constants	TokenNameIdentifier
.	TokenNameDOT
NAMESPACES_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
config	TokenNameIdentifier
.	TokenNameDOT
setFeature	TokenNameIdentifier
(	TokenNameLPAREN
Constants	TokenNameIdentifier
.	TokenNameDOT
SAX_FEATURE_PREFIX	TokenNameIdentifier
+	TokenNamePLUS
Constants	TokenNameIdentifier
.	TokenNameDOT
VALIDATION_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SAXParser	TokenNameIdentifier
parser	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SAXParser	TokenNameIdentifier
(	TokenNameLPAREN
config	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fSAXParser	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SoftReference	TokenNameIdentifier
(	TokenNameLPAREN
parser	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
parser	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
synchronized	TokenNamesynchronized
XSNamedMap	TokenNameIdentifier
getComponents	TokenNameIdentifier
(	TokenNameLPAREN
short	TokenNameshort
objectType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
objectType	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
0	TokenNameIntegerLiteral
||	TokenNameOR_OR
objectType	TokenNameIdentifier
>	TokenNameGREATER
MAX_COMP_IDX	TokenNameIdentifier
||	TokenNameOR_OR
!	TokenNameNOT
GLOBAL_COMP	TokenNameIdentifier
[	TokenNameLBRACKET
objectType	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
XSNamedMapImpl	TokenNameIdentifier
.	TokenNameDOT
EMPTY_MAP	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
fComponents	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
fComponents	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSNamedMap	TokenNameIdentifier
[	TokenNameLBRACKET
MAX_COMP_IDX	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
fComponents	TokenNameIdentifier
[	TokenNameLBRACKET
objectType	TokenNameIdentifier
]	TokenNameRBRACKET
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
SymbolHash	TokenNameIdentifier
table	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
objectType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
XSConstants	TokenNameIdentifier
.	TokenNameDOT
TYPE_DEFINITION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
XSTypeDefinition	TokenNameIdentifier
.	TokenNameDOT
COMPLEX_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
XSTypeDefinition	TokenNameIdentifier
.	TokenNameDOT
SIMPLE_TYPE	TokenNameIdentifier
:	TokenNameCOLON
table	TokenNameIdentifier
=	TokenNameEQUAL
fGlobalTypeDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
XSConstants	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_DECLARATION	TokenNameIdentifier
:	TokenNameCOLON
table	TokenNameIdentifier
=	TokenNameEQUAL
fGlobalAttrDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
XSConstants	TokenNameIdentifier
.	TokenNameDOT
ELEMENT_DECLARATION	TokenNameIdentifier
:	TokenNameCOLON
table	TokenNameIdentifier
=	TokenNameEQUAL
fGlobalElemDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
XSConstants	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_GROUP	TokenNameIdentifier
:	TokenNameCOLON
table	TokenNameIdentifier
=	TokenNameEQUAL
fGlobalAttrGrpDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
XSConstants	TokenNameIdentifier
.	TokenNameDOT
MODEL_GROUP_DEFINITION	TokenNameIdentifier
:	TokenNameCOLON
table	TokenNameIdentifier
=	TokenNameEQUAL
fGlobalGroupDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
XSConstants	TokenNameIdentifier
.	TokenNameDOT
NOTATION_DECLARATION	TokenNameIdentifier
:	TokenNameCOLON
table	TokenNameIdentifier
=	TokenNameEQUAL
fGlobalNotationDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
XSConstants	TokenNameIdentifier
.	TokenNameDOT
IDENTITY_CONSTRAINT	TokenNameIdentifier
:	TokenNameCOLON
table	TokenNameIdentifier
=	TokenNameEQUAL
this	TokenNamethis
.	TokenNameDOT
fGlobalIDConstraintDecls	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
objectType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
XSTypeDefinition	TokenNameIdentifier
.	TokenNameDOT
COMPLEX_TYPE	TokenNameIdentifier
||	TokenNameOR_OR
objectType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
XSTypeDefinition	TokenNameIdentifier
.	TokenNameDOT
SIMPLE_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fComponents	TokenNameIdentifier
[	TokenNameLBRACKET
objectType	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
XSNamedMap4Types	TokenNameIdentifier
(	TokenNameLPAREN
fTargetNamespace	TokenNameIdentifier
,	TokenNameCOMMA
table	TokenNameIdentifier
,	TokenNameCOMMA
objectType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
fComponents	TokenNameIdentifier
[	TokenNameLBRACKET
objectType	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
XSNamedMapImpl	TokenNameIdentifier
(	TokenNameLPAREN
fTargetNamespace	TokenNameIdentifier
,	TokenNameCOMMA
table	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
fComponents	TokenNameIdentifier
[	TokenNameLBRACKET
objectType	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
synchronized	TokenNamesynchronized
ObjectList	TokenNameIdentifier
getComponentsExt	TokenNameIdentifier
(	TokenNameLPAREN
short	TokenNameshort
objectType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
objectType	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
0	TokenNameIntegerLiteral
||	TokenNameOR_OR
objectType	TokenNameIdentifier
>	TokenNameGREATER
MAX_COMP_IDX	TokenNameIdentifier
||	TokenNameOR_OR
!	TokenNameNOT
GLOBAL_COMP	TokenNameIdentifier
[	TokenNameLBRACKET
objectType	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
ObjectListImpl	TokenNameIdentifier
.	TokenNameDOT
EMPTY_LIST	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
fComponentsExt	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
fComponentsExt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ObjectList	TokenNameIdentifier
[	TokenNameLBRACKET
MAX_COMP_IDX	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
fComponentsExt	TokenNameIdentifier
[	TokenNameLBRACKET
objectType	TokenNameIdentifier
]	TokenNameRBRACKET
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
SymbolHash	TokenNameIdentifier
table	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
objectType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
XSConstants	TokenNameIdentifier
.	TokenNameDOT
TYPE_DEFINITION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
XSTypeDefinition	TokenNameIdentifier
.	TokenNameDOT
COMPLEX_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
XSTypeDefinition	TokenNameIdentifier
.	TokenNameDOT
SIMPLE_TYPE	TokenNameIdentifier
:	TokenNameCOLON
table	TokenNameIdentifier
=	TokenNameEQUAL
fGlobalTypeDeclsExt	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
XSConstants	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_DECLARATION	TokenNameIdentifier
:	TokenNameCOLON
table	TokenNameIdentifier
=	TokenNameEQUAL
fGlobalAttrDeclsExt	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
XSConstants	TokenNameIdentifier
.	TokenNameDOT
ELEMENT_DECLARATION	TokenNameIdentifier
:	TokenNameCOLON
table	TokenNameIdentifier
=	TokenNameEQUAL
fGlobalElemDeclsExt	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
XSConstants	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_GROUP	TokenNameIdentifier
:	TokenNameCOLON
table	TokenNameIdentifier
=	TokenNameEQUAL
fGlobalAttrGrpDeclsExt	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
XSConstants	TokenNameIdentifier
.	TokenNameDOT
MODEL_GROUP_DEFINITION	TokenNameIdentifier
:	TokenNameCOLON
table	TokenNameIdentifier
=	TokenNameEQUAL
fGlobalGroupDeclsExt	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
XSConstants	TokenNameIdentifier
.	TokenNameDOT
NOTATION_DECLARATION	TokenNameIdentifier
:	TokenNameCOLON
table	TokenNameIdentifier
=	TokenNameEQUAL
fGlobalNotationDeclsExt	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
XSConstants	TokenNameIdentifier
.	TokenNameDOT
IDENTITY_CONSTRAINT	TokenNameIdentifier
:	TokenNameCOLON
table	TokenNameIdentifier
=	TokenNameEQUAL
this	TokenNamethis
.	TokenNameDOT
fGlobalIDConstraintDeclsExt	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
entries	TokenNameIdentifier
=	TokenNameEQUAL
table	TokenNameIdentifier
.	TokenNameDOT
getEntries	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fComponentsExt	TokenNameIdentifier
[	TokenNameLBRACKET
objectType	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
ObjectListImpl	TokenNameIdentifier
(	TokenNameLPAREN
entries	TokenNameIdentifier
,	TokenNameCOMMA
entries	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
fComponentsExt	TokenNameIdentifier
[	TokenNameLBRACKET
objectType	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
synchronized	TokenNamesynchronized
void	TokenNamevoid
resetComponents	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
fComponents	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
fComponentsExt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSTypeDefinition	TokenNameIdentifier
getTypeDefinition	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getGlobalTypeDecl	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSAttributeDeclaration	TokenNameIdentifier
getAttributeDeclaration	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getGlobalAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSElementDeclaration	TokenNameIdentifier
getElementDeclaration	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getGlobalElementDecl	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSAttributeGroupDefinition	TokenNameIdentifier
getAttributeGroup	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getGlobalAttributeGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSModelGroupDefinition	TokenNameIdentifier
getModelGroupDefinition	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getGlobalGroupDecl	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSNotationDeclaration	TokenNameIdentifier
getNotationDeclaration	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getGlobalNotationDecl	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSIDCDefinition	TokenNameIdentifier
getIDCDefinition	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
getIDConstraintDecl	TokenNameIdentifier
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
StringList	TokenNameIdentifier
getDocumentLocations	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
StringListImpl	TokenNameIdentifier
(	TokenNameLPAREN
fLocations	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSModel	TokenNameIdentifier
toXSModel	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
XSModelImpl	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SchemaGrammar	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
this	TokenNamethis
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSModel	TokenNameIdentifier
toXSModel	TokenNameIdentifier
(	TokenNameLPAREN
XSGrammar	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
grammars	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
grammars	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
grammars	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
toXSModel	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
len	TokenNameIdentifier
=	TokenNameEQUAL
grammars	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
boolean	TokenNameboolean
hasSelf	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
len	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
grammars	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
==	TokenNameEQUAL_EQUAL
this	TokenNamethis
)	TokenNameRPAREN
{	TokenNameLBRACE
hasSelf	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
SchemaGrammar	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
gs	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SchemaGrammar	TokenNameIdentifier
[	TokenNameLBRACKET
hasSelf	TokenNameIdentifier
?	TokenNameQUESTION
len	TokenNameIdentifier
:	TokenNameCOLON
len	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
len	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
gs	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
SchemaGrammar	TokenNameIdentifier
)	TokenNameRPAREN
grammars	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
hasSelf	TokenNameIdentifier
)	TokenNameRPAREN
gs	TokenNameIdentifier
[	TokenNameLBRACKET
len	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
this	TokenNamethis
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
XSModelImpl	TokenNameIdentifier
(	TokenNameLPAREN
gs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XSObjectList	TokenNameIdentifier
getAnnotations	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fNumAnnotations	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
XSObjectListImpl	TokenNameIdentifier
.	TokenNameDOT
EMPTY_LIST	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
new	TokenNamenew
XSObjectListImpl	TokenNameIdentifier
(	TokenNameLPAREN
fAnnotations	TokenNameIdentifier
,	TokenNameCOMMA
fNumAnnotations	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
addAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
XSAnnotationImpl	TokenNameIdentifier
annotation	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
annotation	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
fAnnotations	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
fAnnotations	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAnnotationImpl	TokenNameIdentifier
[	TokenNameLBRACKET
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
fNumAnnotations	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
fAnnotations	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
XSAnnotationImpl	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newArray	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAnnotationImpl	TokenNameIdentifier
[	TokenNameLBRACKET
fNumAnnotations	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
fAnnotations	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
newArray	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fNumAnnotations	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fAnnotations	TokenNameIdentifier
=	TokenNameEQUAL
newArray	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fAnnotations	TokenNameIdentifier
[	TokenNameLBRACKET
fNumAnnotations	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
annotation	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setImmutable	TokenNameIdentifier
(	TokenNameLPAREN
boolean	TokenNameboolean
isImmutable	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fIsImmutable	TokenNameIdentifier
=	TokenNameEQUAL
isImmutable	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
isImmutable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
fIsImmutable	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
