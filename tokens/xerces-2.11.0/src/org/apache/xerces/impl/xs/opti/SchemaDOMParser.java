package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
opti	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
Constants	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
XMLErrorReporter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
SchemaSymbols	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSMessageFormatter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
XMLAttributesImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
XMLChar	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
Augmentations	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
NamespaceContext	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
QName	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
XMLAttributes	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
XMLLocator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
XMLString	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
XNIException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
parser	TokenNameIdentifier
.	TokenNameDOT
XMLEntityResolver	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
parser	TokenNameIdentifier
.	TokenNameDOT
XMLInputSource	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
parser	TokenNameIdentifier
.	TokenNameDOT
XMLParserConfiguration	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Document	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
SchemaDOMParser	TokenNameIdentifier
extends	TokenNameextends
DefaultXMLDocumentHandler	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_REPORTER	TokenNameIdentifier
=	TokenNameEQUAL
Constants	TokenNameIdentifier
.	TokenNameDOT
XERCES_PROPERTY_PREFIX	TokenNameIdentifier
+	TokenNamePLUS
Constants	TokenNameIdentifier
.	TokenNameDOT
ERROR_REPORTER_PROPERTY	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
GENERATE_SYNTHETIC_ANNOTATION	TokenNameIdentifier
=	TokenNameEQUAL
Constants	TokenNameIdentifier
.	TokenNameDOT
XERCES_FEATURE_PREFIX	TokenNameIdentifier
+	TokenNamePLUS
Constants	TokenNameIdentifier
.	TokenNameDOT
GENERATE_SYNTHETIC_ANNOTATIONS_FEATURE	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
XMLLocator	TokenNameIdentifier
fLocator	TokenNameIdentifier
;	TokenNameSEMICOLON
protected	TokenNameprotected
NamespaceContext	TokenNameIdentifier
fNamespaceContext	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
SchemaDOM	TokenNameIdentifier
schemaDOM	TokenNameIdentifier
;	TokenNameSEMICOLON
XMLParserConfiguration	TokenNameIdentifier
config	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
SchemaDOMParser	TokenNameIdentifier
(	TokenNameLPAREN
XMLParserConfiguration	TokenNameIdentifier
config	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
config	TokenNameIdentifier
=	TokenNameEQUAL
config	TokenNameIdentifier
;	TokenNameSEMICOLON
config	TokenNameIdentifier
.	TokenNameDOT
setDocumentHandler	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
config	TokenNameIdentifier
.	TokenNameDOT
setDTDHandler	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
config	TokenNameIdentifier
.	TokenNameDOT
setDTDContentModelHandler	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
ElementImpl	TokenNameIdentifier
fCurrentAnnotationElement	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
fAnnotationDepth	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
fInnerAnnotationDepth	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
fDepth	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
XMLErrorReporter	TokenNameIdentifier
fErrorReporter	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
boolean	TokenNameboolean
fGenerateSyntheticAnnotation	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
private	TokenNameprivate
BooleanStack	TokenNameIdentifier
fHasNonSchemaAttributes	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BooleanStack	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
BooleanStack	TokenNameIdentifier
fSawAnnotation	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
BooleanStack	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
XMLAttributes	TokenNameIdentifier
fEmptyAttr	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XMLAttributesImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
void	TokenNamevoid
startDocument	TokenNameIdentifier
(	TokenNameLPAREN
XMLLocator	TokenNameIdentifier
locator	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
encoding	TokenNameIdentifier
,	TokenNameCOMMA
NamespaceContext	TokenNameIdentifier
namespaceContext	TokenNameIdentifier
,	TokenNameCOMMA
Augmentations	TokenNameIdentifier
augs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
XNIException	TokenNameIdentifier
{	TokenNameLBRACE
fErrorReporter	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XMLErrorReporter	TokenNameIdentifier
)	TokenNameRPAREN
config	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
ERROR_REPORTER	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fGenerateSyntheticAnnotation	TokenNameIdentifier
=	TokenNameEQUAL
config	TokenNameIdentifier
.	TokenNameDOT
getFeature	TokenNameIdentifier
(	TokenNameLPAREN
GENERATE_SYNTHETIC_ANNOTATION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fHasNonSchemaAttributes	TokenNameIdentifier
.	TokenNameDOT
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fSawAnnotation	TokenNameIdentifier
.	TokenNameDOT
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SchemaDOM	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fCurrentAnnotationElement	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
fAnnotationDepth	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
fInnerAnnotationDepth	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
fDepth	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
fLocator	TokenNameIdentifier
=	TokenNameEQUAL
locator	TokenNameIdentifier
;	TokenNameSEMICOLON
fNamespaceContext	TokenNameIdentifier
=	TokenNameEQUAL
namespaceContext	TokenNameIdentifier
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
setDocumentURI	TokenNameIdentifier
(	TokenNameLPAREN
locator	TokenNameIdentifier
.	TokenNameDOT
getExpandedSystemId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
endDocument	TokenNameIdentifier
(	TokenNameLPAREN
Augmentations	TokenNameIdentifier
augs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
XNIException	TokenNameIdentifier
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
comment	TokenNameIdentifier
(	TokenNameLPAREN
XMLString	TokenNameIdentifier
text	TokenNameIdentifier
,	TokenNameCOMMA
Augmentations	TokenNameIdentifier
augs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
XNIException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fAnnotationDepth	TokenNameIdentifier
>	TokenNameGREATER
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
comment	TokenNameIdentifier
(	TokenNameLPAREN
text	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
processingInstruction	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
target	TokenNameIdentifier
,	TokenNameCOMMA
XMLString	TokenNameIdentifier
data	TokenNameIdentifier
,	TokenNameCOMMA
Augmentations	TokenNameIdentifier
augs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
XNIException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fAnnotationDepth	TokenNameIdentifier
>	TokenNameGREATER
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
processingInstruction	TokenNameIdentifier
(	TokenNameLPAREN
target	TokenNameIdentifier
,	TokenNameCOMMA
data	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
characters	TokenNameIdentifier
(	TokenNameLPAREN
XMLString	TokenNameIdentifier
text	TokenNameIdentifier
,	TokenNameCOMMA
Augmentations	TokenNameIdentifier
augs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
XNIException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fInnerAnnotationDepth	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
text	TokenNameIdentifier
.	TokenNameDOT
offset	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
text	TokenNameIdentifier
.	TokenNameDOT
offset	TokenNameIdentifier
+	TokenNamePLUS
text	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
XMLChar	TokenNameIdentifier
.	TokenNameDOT
isSpace	TokenNameIdentifier
(	TokenNameLPAREN
text	TokenNameIdentifier
.	TokenNameDOT
ch	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
txt	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
String	TokenNameIdentifier
(	TokenNameLPAREN
text	TokenNameIdentifier
.	TokenNameDOT
ch	TokenNameIdentifier
,	TokenNameCOMMA
i	TokenNameIdentifier
,	TokenNameCOMMA
text	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
+	TokenNamePLUS
text	TokenNameIdentifier
.	TokenNameDOT
offset	TokenNameIdentifier
-	TokenNameMINUS
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fErrorReporter	TokenNameIdentifier
.	TokenNameDOT
reportError	TokenNameIdentifier
(	TokenNameLPAREN
fLocator	TokenNameIdentifier
,	TokenNameCOMMA
XSMessageFormatter	TokenNameIdentifier
.	TokenNameDOT
SCHEMA_DOMAIN	TokenNameIdentifier
,	TokenNameCOMMA
"s4s-elt-character"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
txt	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
XMLErrorReporter	TokenNameIdentifier
.	TokenNameDOT
SEVERITY_ERROR	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
characters	TokenNameIdentifier
(	TokenNameLPAREN
text	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
startElement	TokenNameIdentifier
(	TokenNameLPAREN
QName	TokenNameIdentifier
element	TokenNameIdentifier
,	TokenNameCOMMA
XMLAttributes	TokenNameIdentifier
attributes	TokenNameIdentifier
,	TokenNameCOMMA
Augmentations	TokenNameIdentifier
augs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
XNIException	TokenNameIdentifier
{	TokenNameLBRACE
fDepth	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
fAnnotationDepth	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
element	TokenNameIdentifier
.	TokenNameDOT
uri	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_SCHEMAFORSCHEMA	TokenNameIdentifier
&&	TokenNameAND_AND
element	TokenNameIdentifier
.	TokenNameDOT
localpart	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fGenerateSyntheticAnnotation	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fSawAnnotation	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
fSawAnnotation	TokenNameIdentifier
.	TokenNameDOT
pop	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fSawAnnotation	TokenNameIdentifier
.	TokenNameDOT
push	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fAnnotationDepth	TokenNameIdentifier
=	TokenNameEQUAL
fDepth	TokenNameIdentifier
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
startAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
,	TokenNameCOMMA
attributes	TokenNameIdentifier
,	TokenNameCOMMA
fNamespaceContext	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fCurrentAnnotationElement	TokenNameIdentifier
=	TokenNameEQUAL
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
startElement	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
,	TokenNameCOMMA
attributes	TokenNameIdentifier
,	TokenNameCOMMA
fLocator	TokenNameIdentifier
.	TokenNameDOT
getLineNumber	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
fLocator	TokenNameIdentifier
.	TokenNameDOT
getColumnNumber	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
fLocator	TokenNameIdentifier
.	TokenNameDOT
getCharacterOffset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
element	TokenNameIdentifier
.	TokenNameDOT
uri	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_SCHEMAFORSCHEMA	TokenNameIdentifier
&&	TokenNameAND_AND
fGenerateSyntheticAnnotation	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fSawAnnotation	TokenNameIdentifier
.	TokenNameDOT
push	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fHasNonSchemaAttributes	TokenNameIdentifier
.	TokenNameDOT
push	TokenNameIdentifier
(	TokenNameLPAREN
hasNonSchemaAttributes	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
,	TokenNameCOMMA
attributes	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
fDepth	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
fAnnotationDepth	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
fInnerAnnotationDepth	TokenNameIdentifier
=	TokenNameEQUAL
fDepth	TokenNameIdentifier
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
startAnnotationElement	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
,	TokenNameCOMMA
attributes	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
startAnnotationElement	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
,	TokenNameCOMMA
attributes	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
startElement	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
,	TokenNameCOMMA
attributes	TokenNameIdentifier
,	TokenNameCOMMA
fLocator	TokenNameIdentifier
.	TokenNameDOT
getLineNumber	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
fLocator	TokenNameIdentifier
.	TokenNameDOT
getColumnNumber	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
fLocator	TokenNameIdentifier
.	TokenNameDOT
getCharacterOffset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
emptyElement	TokenNameIdentifier
(	TokenNameLPAREN
QName	TokenNameIdentifier
element	TokenNameIdentifier
,	TokenNameCOMMA
XMLAttributes	TokenNameIdentifier
attributes	TokenNameIdentifier
,	TokenNameCOMMA
Augmentations	TokenNameIdentifier
augs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
XNIException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fGenerateSyntheticAnnotation	TokenNameIdentifier
&&	TokenNameAND_AND
fAnnotationDepth	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
&&	TokenNameAND_AND
element	TokenNameIdentifier
.	TokenNameDOT
uri	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_SCHEMAFORSCHEMA	TokenNameIdentifier
&&	TokenNameAND_AND
element	TokenNameIdentifier
.	TokenNameDOT
localpart	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
&&	TokenNameAND_AND
hasNonSchemaAttributes	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
,	TokenNameCOMMA
attributes	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
startElement	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
,	TokenNameCOMMA
attributes	TokenNameIdentifier
,	TokenNameCOMMA
fLocator	TokenNameIdentifier
.	TokenNameDOT
getLineNumber	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
fLocator	TokenNameIdentifier
.	TokenNameDOT
getColumnNumber	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
fLocator	TokenNameIdentifier
.	TokenNameDOT
getCharacterOffset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attributes	TokenNameIdentifier
.	TokenNameDOT
removeAllAttributes	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
schemaPrefix	TokenNameIdentifier
=	TokenNameEQUAL
fNamespaceContext	TokenNameIdentifier
.	TokenNameDOT
getPrefix	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_SCHEMAFORSCHEMA	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
annRawName	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
schemaPrefix	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
:	TokenNameCOLON
(	TokenNameLPAREN
schemaPrefix	TokenNameIdentifier
+	TokenNamePLUS
':'	TokenNameCharacterLiteral
+	TokenNamePLUS
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
startAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
annRawName	TokenNameIdentifier
,	TokenNameCOMMA
attributes	TokenNameIdentifier
,	TokenNameCOMMA
fNamespaceContext	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
elemRawName	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
schemaPrefix	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_DOCUMENTATION	TokenNameIdentifier
:	TokenNameCOLON
(	TokenNameLPAREN
schemaPrefix	TokenNameIdentifier
+	TokenNamePLUS
':'	TokenNameCharacterLiteral
+	TokenNamePLUS
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_DOCUMENTATION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
startAnnotationElement	TokenNameIdentifier
(	TokenNameLPAREN
elemRawName	TokenNameIdentifier
,	TokenNameCOMMA
attributes	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
charactersRaw	TokenNameIdentifier
(	TokenNameLPAREN
"SYNTHETIC_ANNOTATION"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
endSyntheticAnnotationElement	TokenNameIdentifier
(	TokenNameLPAREN
elemRawName	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
endSyntheticAnnotationElement	TokenNameIdentifier
(	TokenNameLPAREN
annRawName	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
endElement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
fAnnotationDepth	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
element	TokenNameIdentifier
.	TokenNameDOT
uri	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_SCHEMAFORSCHEMA	TokenNameIdentifier
&&	TokenNameAND_AND
element	TokenNameIdentifier
.	TokenNameDOT
localpart	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
startAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
,	TokenNameCOMMA
attributes	TokenNameIdentifier
,	TokenNameCOMMA
fNamespaceContext	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
startAnnotationElement	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
,	TokenNameCOMMA
attributes	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
ElementImpl	TokenNameIdentifier
newElem	TokenNameIdentifier
=	TokenNameEQUAL
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
emptyElement	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
,	TokenNameCOMMA
attributes	TokenNameIdentifier
,	TokenNameCOMMA
fLocator	TokenNameIdentifier
.	TokenNameDOT
getLineNumber	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
fLocator	TokenNameIdentifier
.	TokenNameDOT
getColumnNumber	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
fLocator	TokenNameIdentifier
.	TokenNameDOT
getCharacterOffset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
fAnnotationDepth	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
element	TokenNameIdentifier
.	TokenNameDOT
uri	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_SCHEMAFORSCHEMA	TokenNameIdentifier
&&	TokenNameAND_AND
element	TokenNameIdentifier
.	TokenNameDOT
localpart	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
endAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
,	TokenNameCOMMA
newElem	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
endAnnotationElement	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
endElement	TokenNameIdentifier
(	TokenNameLPAREN
QName	TokenNameIdentifier
element	TokenNameIdentifier
,	TokenNameCOMMA
Augmentations	TokenNameIdentifier
augs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
XNIException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fAnnotationDepth	TokenNameIdentifier
>	TokenNameGREATER
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fInnerAnnotationDepth	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
fDepth	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fInnerAnnotationDepth	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
endAnnotationElement	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
endElement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
fAnnotationDepth	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
fDepth	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
fAnnotationDepth	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
endAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
,	TokenNameCOMMA
fCurrentAnnotationElement	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
endElement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
endAnnotationElement	TokenNameIdentifier
(	TokenNameLPAREN
element	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
element	TokenNameIdentifier
.	TokenNameDOT
uri	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_SCHEMAFORSCHEMA	TokenNameIdentifier
&&	TokenNameAND_AND
fGenerateSyntheticAnnotation	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
boolean	TokenNameboolean
value	TokenNameIdentifier
=	TokenNameEQUAL
fHasNonSchemaAttributes	TokenNameIdentifier
.	TokenNameDOT
pop	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
sawann	TokenNameIdentifier
=	TokenNameEQUAL
fSawAnnotation	TokenNameIdentifier
.	TokenNameDOT
pop	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
value	TokenNameIdentifier
&&	TokenNameAND_AND
!	TokenNameNOT
sawann	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
schemaPrefix	TokenNameIdentifier
=	TokenNameEQUAL
fNamespaceContext	TokenNameIdentifier
.	TokenNameDOT
getPrefix	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_SCHEMAFORSCHEMA	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
annRawName	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
schemaPrefix	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
:	TokenNameCOLON
(	TokenNameLPAREN
schemaPrefix	TokenNameIdentifier
+	TokenNamePLUS
':'	TokenNameCharacterLiteral
+	TokenNamePLUS
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
startAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
annRawName	TokenNameIdentifier
,	TokenNameCOMMA
fEmptyAttr	TokenNameIdentifier
,	TokenNameCOMMA
fNamespaceContext	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
elemRawName	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
schemaPrefix	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_DOCUMENTATION	TokenNameIdentifier
:	TokenNameCOLON
(	TokenNameLPAREN
schemaPrefix	TokenNameIdentifier
+	TokenNamePLUS
':'	TokenNameCharacterLiteral
+	TokenNamePLUS
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_DOCUMENTATION	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
startAnnotationElement	TokenNameIdentifier
(	TokenNameLPAREN
elemRawName	TokenNameIdentifier
,	TokenNameCOMMA
fEmptyAttr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
charactersRaw	TokenNameIdentifier
(	TokenNameLPAREN
"SYNTHETIC_ANNOTATION"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
endSyntheticAnnotationElement	TokenNameIdentifier
(	TokenNameLPAREN
elemRawName	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
endSyntheticAnnotationElement	TokenNameIdentifier
(	TokenNameLPAREN
annRawName	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
endElement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fDepth	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
boolean	TokenNameboolean
hasNonSchemaAttributes	TokenNameIdentifier
(	TokenNameLPAREN
QName	TokenNameIdentifier
element	TokenNameIdentifier
,	TokenNameCOMMA
XMLAttributes	TokenNameIdentifier
attributes	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
int	TokenNameint
length	TokenNameIdentifier
=	TokenNameEQUAL
attributes	TokenNameIdentifier
.	TokenNameDOT
getLength	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
uri	TokenNameIdentifier
=	TokenNameEQUAL
attributes	TokenNameIdentifier
.	TokenNameDOT
getURI	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
uri	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
uri	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_SCHEMAFORSCHEMA	TokenNameIdentifier
&&	TokenNameAND_AND
uri	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
NamespaceContext	TokenNameIdentifier
.	TokenNameDOT
XMLNS_URI	TokenNameIdentifier
&&	TokenNameAND_AND
!	TokenNameNOT
(	TokenNameLPAREN
uri	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
NamespaceContext	TokenNameIdentifier
.	TokenNameDOT
XML_URI	TokenNameIdentifier
&&	TokenNameAND_AND
attributes	TokenNameIdentifier
.	TokenNameDOT
getQName	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATT_XML_LANG	TokenNameIdentifier
&&	TokenNameAND_AND
element	TokenNameIdentifier
.	TokenNameDOT
localpart	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_SCHEMA	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
ignorableWhitespace	TokenNameIdentifier
(	TokenNameLPAREN
XMLString	TokenNameIdentifier
text	TokenNameIdentifier
,	TokenNameCOMMA
Augmentations	TokenNameIdentifier
augs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
XNIException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fAnnotationDepth	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
characters	TokenNameIdentifier
(	TokenNameLPAREN
text	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
startCDATA	TokenNameIdentifier
(	TokenNameLPAREN
Augmentations	TokenNameIdentifier
augs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
XNIException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fAnnotationDepth	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
startAnnotationCDATA	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
endCDATA	TokenNameIdentifier
(	TokenNameLPAREN
Augmentations	TokenNameIdentifier
augs	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
XNIException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fAnnotationDepth	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
schemaDOM	TokenNameIdentifier
.	TokenNameDOT
endAnnotationCDATA	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
Document	TokenNameIdentifier
getDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
schemaDOM	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setFeature	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
featureId	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
state	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
config	TokenNameIdentifier
.	TokenNameDOT
setFeature	TokenNameIdentifier
(	TokenNameLPAREN
featureId	TokenNameIdentifier
,	TokenNameCOMMA
state	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
getFeature	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
featureId	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
config	TokenNameIdentifier
.	TokenNameDOT
getFeature	TokenNameIdentifier
(	TokenNameLPAREN
featureId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
propertyId	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
config	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
propertyId	TokenNameIdentifier
,	TokenNameCOMMA
value	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Object	TokenNameIdentifier
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
propertyId	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
config	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
propertyId	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setEntityResolver	TokenNameIdentifier
(	TokenNameLPAREN
XMLEntityResolver	TokenNameIdentifier
er	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
config	TokenNameIdentifier
.	TokenNameDOT
setEntityResolver	TokenNameIdentifier
(	TokenNameLPAREN
er	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
parse	TokenNameIdentifier
(	TokenNameLPAREN
XMLInputSource	TokenNameIdentifier
inputSource	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
config	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
inputSource	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
reset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
SchemaParsingConfig	TokenNameIdentifier
)	TokenNameRPAREN
config	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
reset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
resetNodePool	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
SchemaParsingConfig	TokenNameIdentifier
)	TokenNameRPAREN
config	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
resetNodePool	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
class	TokenNameclass
BooleanStack	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
int	TokenNameint
fDepth	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
boolean	TokenNameboolean
[	TokenNameLBRACKET
]	TokenNameRBRACKET
fData	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
BooleanStack	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
fDepth	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
push	TokenNameIdentifier
(	TokenNameLPAREN
boolean	TokenNameboolean
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ensureCapacity	TokenNameIdentifier
(	TokenNameLPAREN
fDepth	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fData	TokenNameIdentifier
[	TokenNameLBRACKET
fDepth	TokenNameIdentifier
++	TokenNamePLUS_PLUS
]	TokenNameRBRACKET
=	TokenNameEQUAL
value	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
pop	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
fData	TokenNameIdentifier
[	TokenNameLBRACKET
--	TokenNameMINUS_MINUS
fDepth	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
clear	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
fDepth	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
ensureCapacity	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
size	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fData	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
fData	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
boolean	TokenNameboolean
[	TokenNameLBRACKET
32	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
fData	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
size	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
boolean	TokenNameboolean
[	TokenNameLBRACKET
]	TokenNameRBRACKET
newdata	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
boolean	TokenNameboolean
[	TokenNameLBRACKET
fData	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
*	TokenNameMULTIPLY
2	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
arraycopy	TokenNameIdentifier
(	TokenNameLPAREN
fData	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
newdata	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
fData	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fData	TokenNameIdentifier
=	TokenNameEQUAL
newdata	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
