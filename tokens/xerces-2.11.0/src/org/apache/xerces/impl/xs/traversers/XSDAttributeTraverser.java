package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
traversers	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
dv	TokenNameIdentifier
.	TokenNameDOT
InvalidDatatypeValueException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
dv	TokenNameIdentifier
.	TokenNameDOT
ValidatedInfo	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
dv	TokenNameIdentifier
.	TokenNameDOT
XSSimpleType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
SchemaGrammar	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
SchemaSymbols	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSAnnotationImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSAttributeDecl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSAttributeUseImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSComplexTypeDecl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
XInt	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
impl	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
XSObjectListImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
DOMUtil	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
XMLSymbols	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xni	TokenNameIdentifier
.	TokenNameDOT
QName	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSConstants	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSObjectList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xerces	TokenNameIdentifier
.	TokenNameDOT
xs	TokenNameIdentifier
.	TokenNameDOT
XSTypeDefinition	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Element	TokenNameIdentifier
;	TokenNameSEMICOLON
class	TokenNameclass
XSDAttributeTraverser	TokenNameIdentifier
extends	TokenNameextends
XSDAbstractTraverser	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
XSDAttributeTraverser	TokenNameIdentifier
(	TokenNameLPAREN
XSDHandler	TokenNameIdentifier
handler	TokenNameIdentifier
,	TokenNameCOMMA
XSAttributeChecker	TokenNameIdentifier
gAttrCheck	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
handler	TokenNameIdentifier
,	TokenNameCOMMA
gAttrCheck	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
XSAttributeUseImpl	TokenNameIdentifier
traverseLocal	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
attrDecl	TokenNameIdentifier
,	TokenNameCOMMA
XSDocumentInfo	TokenNameIdentifier
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
SchemaGrammar	TokenNameIdentifier
grammar	TokenNameIdentifier
,	TokenNameCOMMA
XSComplexTypeDecl	TokenNameIdentifier
enclosingCT	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
attrValues	TokenNameIdentifier
=	TokenNameEQUAL
fAttrChecker	TokenNameIdentifier
.	TokenNameDOT
checkAttributes	TokenNameIdentifier
(	TokenNameLPAREN
attrDecl	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
defaultAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_DEFAULT	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
String	TokenNameIdentifier
fixedAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_FIXED	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
String	TokenNameIdentifier
nameAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_NAME	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
QName	TokenNameIdentifier
refAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
QName	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_REF	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
XInt	TokenNameIdentifier
useAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XInt	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_USE	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
XSAttributeDecl	TokenNameIdentifier
attribute	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
XSAnnotationImpl	TokenNameIdentifier
annotation	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
attrDecl	TokenNameIdentifier
.	TokenNameDOT
getAttributeNode	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATT_REF	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
refAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
attribute	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XSAttributeDecl	TokenNameIdentifier
)	TokenNameRPAREN
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
getGlobalDecl	TokenNameIdentifier
(	TokenNameLPAREN
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
XSDHandler	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
refAtt	TokenNameIdentifier
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
child	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getFirstChildElement	TokenNameIdentifier
(	TokenNameLPAREN
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
child	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
annotation	TokenNameIdentifier
=	TokenNameEQUAL
traverseAnnotationDecl	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
child	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getNextSiblingElement	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
String	TokenNameIdentifier
text	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getSyntheticAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
text	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
annotation	TokenNameIdentifier
=	TokenNameEQUAL
traverseSyntheticAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
attrDecl	TokenNameIdentifier
,	TokenNameCOMMA
text	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
child	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"src-attribute.3.2"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
refAtt	TokenNameIdentifier
.	TokenNameDOT
rawname	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
nameAtt	TokenNameIdentifier
=	TokenNameEQUAL
refAtt	TokenNameIdentifier
.	TokenNameDOT
localpart	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
attribute	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
attribute	TokenNameIdentifier
=	TokenNameEQUAL
traverseNamedAttr	TokenNameIdentifier
(	TokenNameLPAREN
attrDecl	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
grammar	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
enclosingCT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
short	TokenNameshort
consType	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
defaultAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
consType	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_DEFAULT	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
fixedAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
consType	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_FIXED	TokenNameIdentifier
;	TokenNameSEMICOLON
defaultAtt	TokenNameIdentifier
=	TokenNameEQUAL
fixedAtt	TokenNameIdentifier
;	TokenNameSEMICOLON
fixedAtt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
XSAttributeUseImpl	TokenNameIdentifier
attrUse	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
attribute	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fDeclPool	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
attrUse	TokenNameIdentifier
=	TokenNameEQUAL
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fDeclPool	TokenNameIdentifier
.	TokenNameDOT
getAttributeUse	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
attrUse	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAttributeUseImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
attrUse	TokenNameIdentifier
.	TokenNameDOT
fAttrDecl	TokenNameIdentifier
=	TokenNameEQUAL
attribute	TokenNameIdentifier
;	TokenNameSEMICOLON
attrUse	TokenNameIdentifier
.	TokenNameDOT
fUse	TokenNameIdentifier
=	TokenNameEQUAL
useAtt	TokenNameIdentifier
.	TokenNameDOT
shortValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attrUse	TokenNameIdentifier
.	TokenNameDOT
fConstraintType	TokenNameIdentifier
=	TokenNameEQUAL
consType	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
defaultAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
attrUse	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ValidatedInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attrUse	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
.	TokenNameDOT
normalizedValue	TokenNameIdentifier
=	TokenNameEQUAL
defaultAtt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
attrDecl	TokenNameIdentifier
.	TokenNameDOT
getAttributeNode	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATT_REF	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
attrUse	TokenNameIdentifier
.	TokenNameDOT
fAnnotations	TokenNameIdentifier
=	TokenNameEQUAL
attribute	TokenNameIdentifier
.	TokenNameDOT
getAnnotations	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
XSObjectList	TokenNameIdentifier
annotations	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
annotation	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
annotations	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSObjectListImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
(	TokenNameLPAREN
(	TokenNameLPAREN
XSObjectListImpl	TokenNameIdentifier
)	TokenNameRPAREN
annotations	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
addXSObject	TokenNameIdentifier
(	TokenNameLPAREN
annotation	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
annotations	TokenNameIdentifier
=	TokenNameEQUAL
XSObjectListImpl	TokenNameIdentifier
.	TokenNameDOT
EMPTY_LIST	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
attrUse	TokenNameIdentifier
.	TokenNameDOT
fAnnotations	TokenNameIdentifier
=	TokenNameEQUAL
annotations	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
defaultAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
fixedAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"src-attribute.1"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
nameAtt	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
consType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_DEFAULT	TokenNameIdentifier
&&	TokenNameAND_AND
useAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
useAtt	TokenNameIdentifier
.	TokenNameDOT
intValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
USE_OPTIONAL	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"src-attribute.2"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
nameAtt	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attrUse	TokenNameIdentifier
.	TokenNameDOT
fUse	TokenNameIdentifier
=	TokenNameEQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
USE_OPTIONAL	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
defaultAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
attrUse	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
fValidationState	TokenNameIdentifier
.	TokenNameDOT
setNamespaceSupport	TokenNameIdentifier
(	TokenNameLPAREN
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fNamespaceSupport	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
checkDefaultValid	TokenNameIdentifier
(	TokenNameLPAREN
attrUse	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
InvalidDatatypeValueException	TokenNameIdentifier
ide	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
ide	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
ide	TokenNameIdentifier
.	TokenNameDOT
getArgs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"a-props-correct.2"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
nameAtt	TokenNameIdentifier
,	TokenNameCOMMA
defaultAtt	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attrUse	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
attrUse	TokenNameIdentifier
.	TokenNameDOT
fConstraintType	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
)	TokenNameRPAREN
attribute	TokenNameIdentifier
.	TokenNameDOT
getTypeDefinition	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
isIDType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"a-props-correct.3"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
nameAtt	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attrUse	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
attrUse	TokenNameIdentifier
.	TokenNameDOT
fConstraintType	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
attrUse	TokenNameIdentifier
.	TokenNameDOT
fAttrDecl	TokenNameIdentifier
.	TokenNameDOT
getConstraintType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_FIXED	TokenNameIdentifier
&&	TokenNameAND_AND
attrUse	TokenNameIdentifier
.	TokenNameDOT
fConstraintType	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
attrUse	TokenNameIdentifier
.	TokenNameDOT
fConstraintType	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_FIXED	TokenNameIdentifier
||	TokenNameOR_OR
!	TokenNameNOT
attrUse	TokenNameIdentifier
.	TokenNameDOT
fAttrDecl	TokenNameIdentifier
.	TokenNameDOT
getValInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
actualValue	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
attrUse	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
.	TokenNameDOT
actualValue	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"au-props-correct.2"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
nameAtt	TokenNameIdentifier
,	TokenNameCOMMA
attrUse	TokenNameIdentifier
.	TokenNameDOT
fAttrDecl	TokenNameIdentifier
.	TokenNameDOT
getValInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
stringValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attrUse	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
=	TokenNameEQUAL
attrUse	TokenNameIdentifier
.	TokenNameDOT
fAttrDecl	TokenNameIdentifier
.	TokenNameDOT
getValInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attrUse	TokenNameIdentifier
.	TokenNameDOT
fConstraintType	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_FIXED	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
fAttrChecker	TokenNameIdentifier
.	TokenNameDOT
returnAttrArray	TokenNameIdentifier
(	TokenNameLPAREN
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
attrUse	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
XSAttributeDecl	TokenNameIdentifier
traverseGlobal	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
attrDecl	TokenNameIdentifier
,	TokenNameCOMMA
XSDocumentInfo	TokenNameIdentifier
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
SchemaGrammar	TokenNameIdentifier
grammar	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
attrValues	TokenNameIdentifier
=	TokenNameEQUAL
fAttrChecker	TokenNameIdentifier
.	TokenNameDOT
checkAttributes	TokenNameIdentifier
(	TokenNameLPAREN
attrDecl	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSAttributeDecl	TokenNameIdentifier
attribute	TokenNameIdentifier
=	TokenNameEQUAL
traverseNamedAttr	TokenNameIdentifier
(	TokenNameLPAREN
attrDecl	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
grammar	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fAttrChecker	TokenNameIdentifier
.	TokenNameDOT
returnAttrArray	TokenNameIdentifier
(	TokenNameLPAREN
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
attribute	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
XSAttributeDecl	TokenNameIdentifier
traverseNamedAttr	TokenNameIdentifier
(	TokenNameLPAREN
Element	TokenNameIdentifier
attrDecl	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
XSDocumentInfo	TokenNameIdentifier
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
SchemaGrammar	TokenNameIdentifier
grammar	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
isGlobal	TokenNameIdentifier
,	TokenNameCOMMA
XSComplexTypeDecl	TokenNameIdentifier
enclosingCT	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
defaultAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_DEFAULT	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
String	TokenNameIdentifier
fixedAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_FIXED	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
XInt	TokenNameIdentifier
formAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XInt	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_FORM	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
String	TokenNameIdentifier
nameAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_NAME	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
QName	TokenNameIdentifier
typeAtt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
QName	TokenNameIdentifier
)	TokenNameRPAREN
attrValues	TokenNameIdentifier
[	TokenNameLBRACKET
XSAttributeChecker	TokenNameIdentifier
.	TokenNameDOT
ATTIDX_TYPE	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
XSAttributeDecl	TokenNameIdentifier
attribute	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fDeclPool	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
attribute	TokenNameIdentifier
=	TokenNameEQUAL
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fDeclPool	TokenNameIdentifier
.	TokenNameDOT
getAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
attribute	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
nameAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
nameAtt	TokenNameIdentifier
=	TokenNameEQUAL
fSymbolTable	TokenNameIdentifier
.	TokenNameDOT
addSymbol	TokenNameIdentifier
(	TokenNameLPAREN
nameAtt	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
tnsAtt	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
XSComplexTypeDecl	TokenNameIdentifier
enclCT	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
short	TokenNameshort
scope	TokenNameIdentifier
=	TokenNameEQUAL
XSAttributeDecl	TokenNameIdentifier
.	TokenNameDOT
SCOPE_ABSENT	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isGlobal	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
tnsAtt	TokenNameIdentifier
=	TokenNameEQUAL
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
;	TokenNameSEMICOLON
scope	TokenNameIdentifier
=	TokenNameEQUAL
XSAttributeDecl	TokenNameIdentifier
.	TokenNameDOT
SCOPE_GLOBAL	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
enclosingCT	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
enclCT	TokenNameIdentifier
=	TokenNameEQUAL
enclosingCT	TokenNameIdentifier
;	TokenNameSEMICOLON
scope	TokenNameIdentifier
=	TokenNameEQUAL
XSAttributeDecl	TokenNameIdentifier
.	TokenNameDOT
SCOPE_LOCAL	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
formAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
formAtt	TokenNameIdentifier
.	TokenNameDOT
intValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
FORM_QUALIFIED	TokenNameIdentifier
)	TokenNameRPAREN
tnsAtt	TokenNameIdentifier
=	TokenNameEQUAL
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fAreLocalAttributesQualified	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
tnsAtt	TokenNameIdentifier
=	TokenNameEQUAL
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fTargetNamespace	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
ValidatedInfo	TokenNameIdentifier
attDefault	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
short	TokenNameshort
constraintType	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isGlobal	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
fixedAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
attDefault	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ValidatedInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attDefault	TokenNameIdentifier
.	TokenNameDOT
normalizedValue	TokenNameIdentifier
=	TokenNameEQUAL
fixedAtt	TokenNameIdentifier
;	TokenNameSEMICOLON
constraintType	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_FIXED	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
defaultAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
attDefault	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ValidatedInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attDefault	TokenNameIdentifier
.	TokenNameDOT
normalizedValue	TokenNameIdentifier
=	TokenNameEQUAL
defaultAtt	TokenNameIdentifier
;	TokenNameSEMICOLON
constraintType	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_DEFAULT	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
Element	TokenNameIdentifier
child	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getFirstChildElement	TokenNameIdentifier
(	TokenNameLPAREN
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XSAnnotationImpl	TokenNameIdentifier
annotation	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
child	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ANNOTATION	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
annotation	TokenNameIdentifier
=	TokenNameEQUAL
traverseAnnotationDecl	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
child	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getNextSiblingElement	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
String	TokenNameIdentifier
text	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getSyntheticAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
text	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
annotation	TokenNameIdentifier
=	TokenNameEQUAL
traverseSyntheticAnnotation	TokenNameIdentifier
(	TokenNameLPAREN
attrDecl	TokenNameIdentifier
,	TokenNameCOMMA
text	TokenNameIdentifier
,	TokenNameCOMMA
attrValues	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
XSSimpleType	TokenNameIdentifier
attrType	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
boolean	TokenNameboolean
haveAnonType	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
child	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
childName	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
childName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_SIMPLETYPE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
attrType	TokenNameIdentifier
=	TokenNameEQUAL
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fSimpleTypeTraverser	TokenNameIdentifier
.	TokenNameDOT
traverseLocal	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
,	TokenNameCOMMA
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
grammar	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
haveAnonType	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
child	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getNextSiblingElement	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
attrType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
typeAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
XSTypeDefinition	TokenNameIdentifier
type	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XSTypeDefinition	TokenNameIdentifier
)	TokenNameRPAREN
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
getGlobalDecl	TokenNameIdentifier
(	TokenNameLPAREN
schemaDoc	TokenNameIdentifier
,	TokenNameCOMMA
XSDHandler	TokenNameIdentifier
.	TokenNameDOT
TYPEDECL_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
typeAtt	TokenNameIdentifier
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
type	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
type	TokenNameIdentifier
.	TokenNameDOT
getTypeCategory	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
XSTypeDefinition	TokenNameIdentifier
.	TokenNameDOT
SIMPLE_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
attrType	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
)	TokenNameRPAREN
type	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"src-resolve"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
typeAtt	TokenNameIdentifier
.	TokenNameDOT
rawname	TokenNameIdentifier
,	TokenNameCOMMA
"simpleType definition"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
type	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
attribute	TokenNameIdentifier
.	TokenNameDOT
fUnresolvedTypeName	TokenNameIdentifier
=	TokenNameEQUAL
typeAtt	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
attrType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
attrType	TokenNameIdentifier
=	TokenNameEQUAL
SchemaGrammar	TokenNameIdentifier
.	TokenNameDOT
fAnySimpleType	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
XSObjectList	TokenNameIdentifier
annotations	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
annotation	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
annotations	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XSObjectListImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
(	TokenNameLPAREN
(	TokenNameLPAREN
XSObjectListImpl	TokenNameIdentifier
)	TokenNameRPAREN
annotations	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
addXSObject	TokenNameIdentifier
(	TokenNameLPAREN
annotation	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
annotations	TokenNameIdentifier
=	TokenNameEQUAL
XSObjectListImpl	TokenNameIdentifier
.	TokenNameDOT
EMPTY_LIST	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
attribute	TokenNameIdentifier
.	TokenNameDOT
setValues	TokenNameIdentifier
(	TokenNameLPAREN
nameAtt	TokenNameIdentifier
,	TokenNameCOMMA
tnsAtt	TokenNameIdentifier
,	TokenNameCOMMA
attrType	TokenNameIdentifier
,	TokenNameCOMMA
constraintType	TokenNameIdentifier
,	TokenNameCOMMA
scope	TokenNameIdentifier
,	TokenNameCOMMA
attDefault	TokenNameIdentifier
,	TokenNameCOMMA
enclCT	TokenNameIdentifier
,	TokenNameCOMMA
annotations	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
nameAtt	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
isGlobal	TokenNameIdentifier
)	TokenNameRPAREN
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"s4s-att-must-appear"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ELT_ATTRIBUTE	TokenNameIdentifier
,	TokenNameCOMMA
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
ATT_NAME	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"src-attribute.3.1"	TokenNameStringLiteral
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
nameAtt	TokenNameIdentifier
=	TokenNameEQUAL
NO_NAME	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
child	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"s4s-elt-must-match.1"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
nameAtt	TokenNameIdentifier
,	TokenNameCOMMA
"(annotation?, (simpleType?))"	TokenNameStringLiteral
,	TokenNameCOMMA
DOMUtil	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
,	TokenNameCOMMA
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
defaultAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
fixedAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"src-attribute.1"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
nameAtt	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
haveAnonType	TokenNameIdentifier
&&	TokenNameAND_AND
(	TokenNameLPAREN
typeAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"src-attribute.4"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
nameAtt	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
checkNotationType	TokenNameIdentifier
(	TokenNameLPAREN
nameAtt	TokenNameIdentifier
,	TokenNameCOMMA
attrType	TokenNameIdentifier
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
attDefault	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
fValidationState	TokenNameIdentifier
.	TokenNameDOT
setNamespaceSupport	TokenNameIdentifier
(	TokenNameLPAREN
schemaDoc	TokenNameIdentifier
.	TokenNameDOT
fNamespaceSupport	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
checkDefaultValid	TokenNameIdentifier
(	TokenNameLPAREN
attribute	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
InvalidDatatypeValueException	TokenNameIdentifier
ide	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
ide	TokenNameIdentifier
.	TokenNameDOT
getKey	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
ide	TokenNameIdentifier
.	TokenNameDOT
getArgs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"a-props-correct.2"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
nameAtt	TokenNameIdentifier
,	TokenNameCOMMA
attDefault	TokenNameIdentifier
.	TokenNameDOT
normalizedValue	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attDefault	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
constraintType	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
;	TokenNameSEMICOLON
attribute	TokenNameIdentifier
.	TokenNameDOT
setValues	TokenNameIdentifier
(	TokenNameLPAREN
nameAtt	TokenNameIdentifier
,	TokenNameCOMMA
tnsAtt	TokenNameIdentifier
,	TokenNameCOMMA
attrType	TokenNameIdentifier
,	TokenNameCOMMA
constraintType	TokenNameIdentifier
,	TokenNameCOMMA
scope	TokenNameIdentifier
,	TokenNameCOMMA
attDefault	TokenNameIdentifier
,	TokenNameCOMMA
enclCT	TokenNameIdentifier
,	TokenNameCOMMA
annotations	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
attDefault	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
attrType	TokenNameIdentifier
.	TokenNameDOT
isIDType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"a-props-correct.3"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
nameAtt	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attDefault	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
constraintType	TokenNameIdentifier
=	TokenNameEQUAL
XSConstants	TokenNameIdentifier
.	TokenNameDOT
VC_NONE	TokenNameIdentifier
;	TokenNameSEMICOLON
attribute	TokenNameIdentifier
.	TokenNameDOT
setValues	TokenNameIdentifier
(	TokenNameLPAREN
nameAtt	TokenNameIdentifier
,	TokenNameCOMMA
tnsAtt	TokenNameIdentifier
,	TokenNameCOMMA
attrType	TokenNameIdentifier
,	TokenNameCOMMA
constraintType	TokenNameIdentifier
,	TokenNameCOMMA
scope	TokenNameIdentifier
,	TokenNameCOMMA
attDefault	TokenNameIdentifier
,	TokenNameCOMMA
enclCT	TokenNameIdentifier
,	TokenNameCOMMA
annotations	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
nameAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
nameAtt	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
XMLSymbols	TokenNameIdentifier
.	TokenNameDOT
PREFIX_XMLNS	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"no-xmlns"	TokenNameStringLiteral
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
tnsAtt	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
tnsAtt	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_XSI	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
reportSchemaError	TokenNameIdentifier
(	TokenNameLPAREN
"no-xsi"	TokenNameStringLiteral
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
SchemaSymbols	TokenNameIdentifier
.	TokenNameDOT
URI_XSI	TokenNameIdentifier
}	TokenNameRBRACE
,	TokenNameCOMMA
attrDecl	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
nameAtt	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
NO_NAME	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isGlobal	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
grammar	TokenNameIdentifier
.	TokenNameDOT
getGlobalAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
nameAtt	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
grammar	TokenNameIdentifier
.	TokenNameDOT
addGlobalAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
attribute	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
String	TokenNameIdentifier
loc	TokenNameIdentifier
=	TokenNameEQUAL
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
schemaDocument2SystemId	TokenNameIdentifier
(	TokenNameLPAREN
schemaDoc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
XSAttributeDecl	TokenNameIdentifier
attribute2	TokenNameIdentifier
=	TokenNameEQUAL
grammar	TokenNameIdentifier
.	TokenNameDOT
getGlobalAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
nameAtt	TokenNameIdentifier
,	TokenNameCOMMA
loc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
attribute2	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
grammar	TokenNameIdentifier
.	TokenNameDOT
addGlobalAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
attribute	TokenNameIdentifier
,	TokenNameCOMMA
loc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
fTolerateDuplicates	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
attribute2	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
attribute	TokenNameIdentifier
=	TokenNameEQUAL
attribute2	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
fSchemaHandler	TokenNameIdentifier
.	TokenNameDOT
addGlobalAttributeDecl	TokenNameIdentifier
(	TokenNameLPAREN
attribute	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
attribute	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
void	TokenNamevoid
checkDefaultValid	TokenNameIdentifier
(	TokenNameLPAREN
XSAttributeDecl	TokenNameIdentifier
attribute	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
InvalidDatatypeValueException	TokenNameIdentifier
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
)	TokenNameRPAREN
attribute	TokenNameIdentifier
.	TokenNameDOT
getTypeDefinition	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
validate	TokenNameIdentifier
(	TokenNameLPAREN
attribute	TokenNameIdentifier
.	TokenNameDOT
getValInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
normalizedValue	TokenNameIdentifier
,	TokenNameCOMMA
fValidationState	TokenNameIdentifier
,	TokenNameCOMMA
attribute	TokenNameIdentifier
.	TokenNameDOT
getValInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
(	TokenNameLPAREN
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
)	TokenNameRPAREN
attribute	TokenNameIdentifier
.	TokenNameDOT
getTypeDefinition	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
validate	TokenNameIdentifier
(	TokenNameLPAREN
attribute	TokenNameIdentifier
.	TokenNameDOT
getValInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
stringValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
fValidationState	TokenNameIdentifier
,	TokenNameCOMMA
attribute	TokenNameIdentifier
.	TokenNameDOT
getValInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
void	TokenNamevoid
checkDefaultValid	TokenNameIdentifier
(	TokenNameLPAREN
XSAttributeUseImpl	TokenNameIdentifier
attrUse	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
InvalidDatatypeValueException	TokenNameIdentifier
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
)	TokenNameRPAREN
attrUse	TokenNameIdentifier
.	TokenNameDOT
fAttrDecl	TokenNameIdentifier
.	TokenNameDOT
getTypeDefinition	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
validate	TokenNameIdentifier
(	TokenNameLPAREN
attrUse	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
.	TokenNameDOT
normalizedValue	TokenNameIdentifier
,	TokenNameCOMMA
fValidationState	TokenNameIdentifier
,	TokenNameCOMMA
attrUse	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
(	TokenNameLPAREN
(	TokenNameLPAREN
XSSimpleType	TokenNameIdentifier
)	TokenNameRPAREN
attrUse	TokenNameIdentifier
.	TokenNameDOT
fAttrDecl	TokenNameIdentifier
.	TokenNameDOT
getTypeDefinition	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
validate	TokenNameIdentifier
(	TokenNameLPAREN
attrUse	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
.	TokenNameDOT
stringValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
fValidationState	TokenNameIdentifier
,	TokenNameCOMMA
attrUse	TokenNameIdentifier
.	TokenNameDOT
fDefault	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
