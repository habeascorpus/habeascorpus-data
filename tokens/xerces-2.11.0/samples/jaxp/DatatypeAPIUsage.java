package	TokenNamepackage
jaxp	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
datatype	TokenNameIdentifier
.	TokenNameDOT
DatatypeConfigurationException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
datatype	TokenNameIdentifier
.	TokenNameDOT
DatatypeConstants	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
datatype	TokenNameIdentifier
.	TokenNameDOT
DatatypeFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
datatype	TokenNameIdentifier
.	TokenNameDOT
Duration	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
datatype	TokenNameIdentifier
.	TokenNameDOT
XMLGregorianCalendar	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
DatatypeAPIUsage	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
main	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
DatatypeFactory	TokenNameIdentifier
df	TokenNameIdentifier
=	TokenNameEQUAL
DatatypeFactory	TokenNameIdentifier
.	TokenNameDOT
newInstance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Duration	TokenNameIdentifier
myPhone	TokenNameIdentifier
=	TokenNameEQUAL
df	TokenNameIdentifier
.	TokenNameDOT
newDuration	TokenNameIdentifier
(	TokenNameLPAREN
9054133519l	TokenNameLongLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Duration	TokenNameIdentifier
myLife	TokenNameIdentifier
=	TokenNameEQUAL
df	TokenNameIdentifier
.	TokenNameDOT
newDuration	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
,	TokenNameCOMMA
29	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
15	TokenNameIntegerLiteral
,	TokenNameCOMMA
13	TokenNameIntegerLiteral
,	TokenNameCOMMA
45	TokenNameIntegerLiteral
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
compareVal	TokenNameIdentifier
=	TokenNameEQUAL
myPhone	TokenNameIdentifier
.	TokenNameDOT
compare	TokenNameIdentifier
(	TokenNameLPAREN
myLife	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
compareVal	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
DatatypeConstants	TokenNameIdentifier
.	TokenNameDOT
LESSER	TokenNameIdentifier
:	TokenNameCOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"There are fewer milliseconds in my phone number than my lifespan."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
DatatypeConstants	TokenNameIdentifier
.	TokenNameDOT
EQUAL	TokenNameIdentifier
:	TokenNameCOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"The same number of milliseconds are in my phone number and my lifespan."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
DatatypeConstants	TokenNameIdentifier
.	TokenNameDOT
GREATER	TokenNameIdentifier
:	TokenNameCOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"There are more milliseconds in my phone number than my lifespan."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
DatatypeConstants	TokenNameIdentifier
.	TokenNameDOT
INDETERMINATE	TokenNameIdentifier
:	TokenNameCOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"The comparison could not be carried out."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Duration	TokenNameIdentifier
ymDuration	TokenNameIdentifier
=	TokenNameEQUAL
df	TokenNameIdentifier
.	TokenNameDOT
newDurationYearMonth	TokenNameIdentifier
(	TokenNameLPAREN
"P12Y10M"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"P12Y10M is of type: "	TokenNameStringLiteral
+	TokenNamePLUS
ymDuration	TokenNameIdentifier
.	TokenNameDOT
getXMLSchemaType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Duration	TokenNameIdentifier
dtDuration	TokenNameIdentifier
=	TokenNameEQUAL
df	TokenNameIdentifier
.	TokenNameDOT
newDurationDayTime	TokenNameIdentifier
(	TokenNameLPAREN
"P10DT10H12M0S"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"P10DT10H12M0S is of type: "	TokenNameStringLiteral
+	TokenNamePLUS
dtDuration	TokenNameIdentifier
.	TokenNameDOT
getXMLSchemaType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
ymDuration	TokenNameIdentifier
=	TokenNameEQUAL
df	TokenNameIdentifier
.	TokenNameDOT
newDurationYearMonth	TokenNameIdentifier
(	TokenNameLPAREN
"P12Y10M1D"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
IllegalArgumentException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"'duration': P12Y10M1D is not 'yearMonthDuration'!!!"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
XMLGregorianCalendar	TokenNameIdentifier
xgc	TokenNameIdentifier
=	TokenNameEQUAL
df	TokenNameIdentifier
.	TokenNameDOT
newXMLGregorianCalendar	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
xgc	TokenNameIdentifier
.	TokenNameDOT
setYear	TokenNameIdentifier
(	TokenNameLPAREN
1975	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
xgc	TokenNameIdentifier
.	TokenNameDOT
setMonth	TokenNameIdentifier
(	TokenNameLPAREN
DatatypeConstants	TokenNameIdentifier
.	TokenNameDOT
AUGUST	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
xgc	TokenNameIdentifier
.	TokenNameDOT
setDay	TokenNameIdentifier
(	TokenNameLPAREN
11	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
xgc	TokenNameIdentifier
.	TokenNameDOT
setHour	TokenNameIdentifier
(	TokenNameLPAREN
6	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
xgc	TokenNameIdentifier
.	TokenNameDOT
setMinute	TokenNameIdentifier
(	TokenNameLPAREN
44	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
xgc	TokenNameIdentifier
.	TokenNameDOT
setSecond	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
xgc	TokenNameIdentifier
.	TokenNameDOT
setMillisecond	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
xgc	TokenNameIdentifier
.	TokenNameDOT
setTimezone	TokenNameIdentifier
(	TokenNameLPAREN
5	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
xgc	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
myPhone	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"The approximate end of the number of milliseconds in my phone number was "	TokenNameStringLiteral
+	TokenNamePLUS
xgc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
xgc	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
myLife	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Adding the duration myLife to the above calendar:"	TokenNameStringLiteral
+	TokenNamePLUS
xgc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XMLGregorianCalendar	TokenNameIdentifier
xgcCopy	TokenNameIdentifier
=	TokenNameEQUAL
df	TokenNameIdentifier
.	TokenNameDOT
newXMLGregorianCalendar	TokenNameIdentifier
(	TokenNameLPAREN
xgc	TokenNameIdentifier
.	TokenNameDOT
toXMLFormat	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
xgcCopy	TokenNameIdentifier
.	TokenNameDOT
compare	TokenNameIdentifier
(	TokenNameLPAREN
xgc	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
DatatypeConstants	TokenNameIdentifier
.	TokenNameDOT
EQUAL	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"oooops!"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Very good: "	TokenNameStringLiteral
+	TokenNamePLUS
xgc	TokenNameIdentifier
+	TokenNamePLUS
" is equal to "	TokenNameStringLiteral
+	TokenNamePLUS
xgcCopy	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
DatatypeConfigurationException	TokenNameIdentifier
dce	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
err	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"error: Datatype error occurred - "	TokenNameStringLiteral
+	TokenNamePLUS
dce	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
dce	TokenNameIdentifier
.	TokenNameDOT
printStackTrace	TokenNameIdentifier
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
err	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
