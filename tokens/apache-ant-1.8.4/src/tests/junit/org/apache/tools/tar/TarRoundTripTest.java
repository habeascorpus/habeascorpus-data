package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
tools	TokenNameIdentifier
.	TokenNameDOT
tar	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
ByteArrayInputStream	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
ByteArrayOutputStream	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
junit	TokenNameIdentifier
.	TokenNameDOT
framework	TokenNameIdentifier
.	TokenNameDOT
TestCase	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
TarRoundTripTest	TokenNameIdentifier
extends	TokenNameextends
TestCase	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
LONG_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"this/path/name/contains/more/than/one/hundred/characters/in/order/"	TokenNameStringLiteral
+	TokenNamePLUS
"to/test/the/GNU/long/file/name/capability/round/tripped"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
TarRoundTripTest	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testLongRoundTripping	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
TarEntry	TokenNameIdentifier
original	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TarEntry	TokenNameIdentifier
(	TokenNameLPAREN
LONG_NAME	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"over 100 chars"	TokenNameStringLiteral
,	TokenNameCOMMA
LONG_NAME	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>	TokenNameGREATER
100	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"original name"	TokenNameStringLiteral
,	TokenNameCOMMA
LONG_NAME	TokenNameIdentifier
,	TokenNameCOMMA
original	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ByteArrayOutputStream	TokenNameIdentifier
buff	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ByteArrayOutputStream	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TarOutputStream	TokenNameIdentifier
tos	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TarOutputStream	TokenNameIdentifier
(	TokenNameLPAREN
buff	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tos	TokenNameIdentifier
.	TokenNameDOT
setLongFileMode	TokenNameIdentifier
(	TokenNameLPAREN
TarOutputStream	TokenNameIdentifier
.	TokenNameDOT
LONGFILE_GNU	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tos	TokenNameIdentifier
.	TokenNameDOT
putNextEntry	TokenNameIdentifier
(	TokenNameLPAREN
original	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tos	TokenNameIdentifier
.	TokenNameDOT
closeEntry	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tos	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TarInputStream	TokenNameIdentifier
tis	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TarInputStream	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
ByteArrayInputStream	TokenNameIdentifier
(	TokenNameLPAREN
buff	TokenNameIdentifier
.	TokenNameDOT
toByteArray	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TarEntry	TokenNameIdentifier
tripped	TokenNameIdentifier
=	TokenNameEQUAL
tis	TokenNameIdentifier
.	TokenNameDOT
getNextEntry	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"round-tripped name"	TokenNameStringLiteral
,	TokenNameCOMMA
LONG_NAME	TokenNameIdentifier
,	TokenNameCOMMA
tripped	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertNull	TokenNameIdentifier
(	TokenNameLPAREN
"no more entries"	TokenNameStringLiteral
,	TokenNameCOMMA
tis	TokenNameIdentifier
.	TokenNameDOT
getNextEntry	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tis	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
