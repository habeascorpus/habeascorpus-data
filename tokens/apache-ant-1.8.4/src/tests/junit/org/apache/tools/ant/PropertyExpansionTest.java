package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
tools	TokenNameIdentifier
.	TokenNameDOT
ant	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
PropertyExpansionTest	TokenNameIdentifier
extends	TokenNameextends
BuildFileTest	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
PropertyExpansionTest	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setUp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
configureProject	TokenNameIdentifier
(	TokenNameLPAREN
"src/etc/testcases/core/immutable.xml"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testPropertyExpansion	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"$"	TokenNameStringLiteral
,	TokenNameCOMMA
"$"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"$$-"	TokenNameStringLiteral
,	TokenNameCOMMA
"$-"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"$$"	TokenNameStringLiteral
,	TokenNameCOMMA
"$"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
project	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"expanded"	TokenNameStringLiteral
,	TokenNameCOMMA
"EXPANDED"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"a${expanded}b"	TokenNameStringLiteral
,	TokenNameCOMMA
"aEXPANDEDb"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"${expanded}${expanded}"	TokenNameStringLiteral
,	TokenNameCOMMA
"EXPANDEDEXPANDED"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"$$$"	TokenNameStringLiteral
,	TokenNameCOMMA
"$$"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"$$$$-"	TokenNameStringLiteral
,	TokenNameCOMMA
"$$-"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"Class$$subclass"	TokenNameStringLiteral
,	TokenNameCOMMA
"Class$subclass"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testDollarPassthru	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"$-"	TokenNameStringLiteral
,	TokenNameCOMMA
"$-"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"Class$subclass"	TokenNameStringLiteral
,	TokenNameCOMMA
"Class$subclass"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"$$$-"	TokenNameStringLiteral
,	TokenNameCOMMA
"$$-"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"$$$$$"	TokenNameStringLiteral
,	TokenNameCOMMA
"$$$"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"${unassigned.property}"	TokenNameStringLiteral
,	TokenNameCOMMA
"${unassigned.property}"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"a$b"	TokenNameStringLiteral
,	TokenNameCOMMA
"a$b"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"$}}"	TokenNameStringLiteral
,	TokenNameCOMMA
"$}}"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
oldtestQuirkyLegacyBehavior	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"Class$subclass"	TokenNameStringLiteral
,	TokenNameCOMMA
"Classsubclass"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"$$$-"	TokenNameStringLiteral
,	TokenNameCOMMA
"$-"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"a$b"	TokenNameStringLiteral
,	TokenNameCOMMA
"ab"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
"$}}"	TokenNameStringLiteral
,	TokenNameCOMMA
"}}"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
assertExpandsTo	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
source	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
expected	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
actual	TokenNameIdentifier
=	TokenNameEQUAL
project	TokenNameIdentifier
.	TokenNameDOT
replaceProperties	TokenNameIdentifier
(	TokenNameLPAREN
source	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
source	TokenNameIdentifier
,	TokenNameCOMMA
expected	TokenNameIdentifier
,	TokenNameCOMMA
actual	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
