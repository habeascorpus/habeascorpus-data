package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
tools	TokenNameIdentifier
.	TokenNameDOT
ant	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
StringWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
junit	TokenNameIdentifier
.	TokenNameDOT
framework	TokenNameIdentifier
.	TokenNameDOT
TestCase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Document	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Element	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
DOMElementWriterTest	TokenNameIdentifier
extends	TokenNameextends
TestCase	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
DOMElementWriter	TokenNameIdentifier
w	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DOMElementWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
DOMElementWriterTest	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testIsReference	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"&#20;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
isReference	TokenNameIdentifier
(	TokenNameLPAREN
"&#20;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"&#x20;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
isReference	TokenNameIdentifier
(	TokenNameLPAREN
"&#x20;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"&#xA0;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
isReference	TokenNameIdentifier
(	TokenNameLPAREN
"&#xA0;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"&#A0;"	TokenNameStringLiteral
,	TokenNameCOMMA
!	TokenNameNOT
w	TokenNameIdentifier
.	TokenNameDOT
isReference	TokenNameIdentifier
(	TokenNameLPAREN
"&#A0;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"20;"	TokenNameStringLiteral
,	TokenNameCOMMA
!	TokenNameNOT
w	TokenNameIdentifier
.	TokenNameDOT
isReference	TokenNameIdentifier
(	TokenNameLPAREN
"20;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"&#20"	TokenNameStringLiteral
,	TokenNameCOMMA
!	TokenNameNOT
w	TokenNameIdentifier
.	TokenNameDOT
isReference	TokenNameIdentifier
(	TokenNameLPAREN
"&#20"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"&quot;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
isReference	TokenNameIdentifier
(	TokenNameLPAREN
"&quot;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"&apos;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
isReference	TokenNameIdentifier
(	TokenNameLPAREN
"&apos;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"&gt;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
isReference	TokenNameIdentifier
(	TokenNameLPAREN
"&gt;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"&lt;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
isReference	TokenNameIdentifier
(	TokenNameLPAREN
"&lt;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
isReference	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testEncode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;#20;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
"&#20;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;#x20;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
"&#x20;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;#xA0;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
"&#xA0;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;#A0;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
"&#A0;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"20;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
"20;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;#20"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
"&#20"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;quot;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
"&quot;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;apos;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
"&apos;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;gt;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
"&gt;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;lt;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
"&lt;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;amp;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&quot;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
"""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&lt;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
"<"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
"&"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"  "	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encode	TokenNameIdentifier
(	TokenNameLPAREN
"  "	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testEncodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;#20;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
"&#20;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;#x20;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
"&#x20;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;#xA0;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
"&#xA0;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;#A0;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
"&#A0;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"20;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
"20;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;#20"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
"&#20"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;quot;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
"&quot;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;apos;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
"&apos;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;gt;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
"&gt;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;lt;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
"&lt;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;amp;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&quot;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
"""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&lt;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
"<"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&amp;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
"&"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&#xd;&#xa;&#x9;"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodeAttributeValue	TokenNameIdentifier
(	TokenNameLPAREN
"  "	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testAttributeWithWhitespace	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Document	TokenNameIdentifier
d	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtils	TokenNameIdentifier
.	TokenNameDOT
newDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
root	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
createElement	TokenNameIdentifier
(	TokenNameLPAREN
"root"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
root	TokenNameIdentifier
.	TokenNameDOT
setAttribute	TokenNameIdentifier
(	TokenNameLPAREN
"foo"	TokenNameStringLiteral
,	TokenNameCOMMA
"bar baz"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringWriter	TokenNameIdentifier
sw	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOMElementWriter	TokenNameIdentifier
w	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DOMElementWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
w	TokenNameIdentifier
.	TokenNameDOT
write	TokenNameIdentifier
(	TokenNameLPAREN
root	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
"  "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"<root foo="bar&#xa;baz" />"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testEncodeData	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"&#20;"20;&"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodedata	TokenNameIdentifier
(	TokenNameLPAREN
"&#20;"20;&"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodedata	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testIsLegalCharacter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"0x00"	TokenNameStringLiteral
,	TokenNameCOMMA
!	TokenNameNOT
w	TokenNameIdentifier
.	TokenNameDOT
isLegalCharacter	TokenNameIdentifier
(	TokenNameLPAREN
' '	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"0x09"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
isLegalCharacter	TokenNameIdentifier
(	TokenNameLPAREN
'\t'	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"0x0A"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
isLegalCharacter	TokenNameIdentifier
(	TokenNameLPAREN
'\n'	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"0x0C"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
isLegalCharacter	TokenNameIdentifier
(	TokenNameLPAREN
'\r'	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"0x1F"	TokenNameStringLiteral
,	TokenNameCOMMA
!	TokenNameNOT
w	TokenNameIdentifier
.	TokenNameDOT
isLegalCharacter	TokenNameIdentifier
(	TokenNameLPAREN
''	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"0x20"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
isLegalCharacter	TokenNameIdentifier
(	TokenNameLPAREN
' '	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"0xD7FF"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
isLegalCharacter	TokenNameIdentifier
(	TokenNameLPAREN
'퟿'	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"0xD800"	TokenNameStringLiteral
,	TokenNameCOMMA
!	TokenNameNOT
w	TokenNameIdentifier
.	TokenNameDOT
isLegalCharacter	TokenNameIdentifier
(	TokenNameLPAREN
'?'	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"0xDFFF"	TokenNameStringLiteral
,	TokenNameCOMMA
!	TokenNameNOT
w	TokenNameIdentifier
.	TokenNameDOT
isLegalCharacter	TokenNameIdentifier
(	TokenNameLPAREN
'?'	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"0xE000"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
isLegalCharacter	TokenNameIdentifier
(	TokenNameLPAREN
''	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"0xFFFD"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
isLegalCharacter	TokenNameIdentifier
(	TokenNameLPAREN
'�'	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
"0xFFFE"	TokenNameStringLiteral
,	TokenNameCOMMA
!	TokenNameNOT
w	TokenNameIdentifier
.	TokenNameDOT
isLegalCharacter	TokenNameIdentifier
(	TokenNameLPAREN
'￾'	TokenNameCharacterLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testCDATAEndEncoding	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"]>"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodedata	TokenNameIdentifier
(	TokenNameLPAREN
"]>"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"]]"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodedata	TokenNameIdentifier
(	TokenNameLPAREN
"]]"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"]]]]><![CDATA[>"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodedata	TokenNameIdentifier
(	TokenNameLPAREN
"]]>"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"]]]]><![CDATA[>A"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodedata	TokenNameIdentifier
(	TokenNameLPAREN
"]]>A"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"A]]]]><![CDATA[>"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodedata	TokenNameIdentifier
(	TokenNameLPAREN
"A]]>"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"A]]]]><![CDATA[>A"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodedata	TokenNameIdentifier
(	TokenNameLPAREN
"A]]>A"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"A]]]]><![CDATA[>B]]]]><![CDATA[>C"	TokenNameStringLiteral
,	TokenNameCOMMA
w	TokenNameIdentifier
.	TokenNameDOT
encodedata	TokenNameIdentifier
(	TokenNameLPAREN
"A]]>B]]>C"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testNoAdditionalWhiteSpaceForText	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Document	TokenNameIdentifier
d	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtils	TokenNameIdentifier
.	TokenNameDOT
newDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
root	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
createElement	TokenNameIdentifier
(	TokenNameLPAREN
"root"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOMUtils	TokenNameIdentifier
.	TokenNameDOT
appendTextElement	TokenNameIdentifier
(	TokenNameLPAREN
root	TokenNameIdentifier
,	TokenNameCOMMA
"textElement"	TokenNameStringLiteral
,	TokenNameCOMMA
"content"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringWriter	TokenNameIdentifier
sw	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOMElementWriter	TokenNameIdentifier
w	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DOMElementWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
w	TokenNameIdentifier
.	TokenNameDOT
write	TokenNameIdentifier
(	TokenNameLPAREN
root	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
"  "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"<root>"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
+	TokenNamePLUS
"  <textElement>content</textElement>"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
+	TokenNamePLUS
"</root>"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testNoAdditionalWhiteSpaceForCDATA	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Document	TokenNameIdentifier
d	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtils	TokenNameIdentifier
.	TokenNameDOT
newDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
root	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
createElement	TokenNameIdentifier
(	TokenNameLPAREN
"root"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOMUtils	TokenNameIdentifier
.	TokenNameDOT
appendCDATAElement	TokenNameIdentifier
(	TokenNameLPAREN
root	TokenNameIdentifier
,	TokenNameCOMMA
"cdataElement"	TokenNameStringLiteral
,	TokenNameCOMMA
"content"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringWriter	TokenNameIdentifier
sw	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOMElementWriter	TokenNameIdentifier
w	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DOMElementWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
w	TokenNameIdentifier
.	TokenNameDOT
write	TokenNameIdentifier
(	TokenNameLPAREN
root	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
"  "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"<root>"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
+	TokenNamePLUS
"  <cdataElement><![CDATA[content]]></cdataElement>"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
+	TokenNamePLUS
"</root>"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testNoAdditionalWhiteSpaceForEmptyElement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Document	TokenNameIdentifier
d	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtils	TokenNameIdentifier
.	TokenNameDOT
newDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
root	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
createElement	TokenNameIdentifier
(	TokenNameLPAREN
"root"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOMUtils	TokenNameIdentifier
.	TokenNameDOT
createChildElement	TokenNameIdentifier
(	TokenNameLPAREN
root	TokenNameIdentifier
,	TokenNameCOMMA
"emptyElement"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringWriter	TokenNameIdentifier
sw	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOMElementWriter	TokenNameIdentifier
w	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DOMElementWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
w	TokenNameIdentifier
.	TokenNameDOT
write	TokenNameIdentifier
(	TokenNameLPAREN
root	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
"  "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"<root>"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
+	TokenNamePLUS
"  <emptyElement />"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
+	TokenNamePLUS
"</root>"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testNoNSPrefixByDefault	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Document	TokenNameIdentifier
d	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtils	TokenNameIdentifier
.	TokenNameDOT
newDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
root	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
createElementNS	TokenNameIdentifier
(	TokenNameLPAREN
"urn:foo"	TokenNameStringLiteral
,	TokenNameCOMMA
"root"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
root	TokenNameIdentifier
.	TokenNameDOT
setAttributeNS	TokenNameIdentifier
(	TokenNameLPAREN
"urn:foo2"	TokenNameStringLiteral
,	TokenNameCOMMA
"bar"	TokenNameStringLiteral
,	TokenNameCOMMA
"baz"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringWriter	TokenNameIdentifier
sw	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOMElementWriter	TokenNameIdentifier
w	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DOMElementWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
w	TokenNameIdentifier
.	TokenNameDOT
write	TokenNameIdentifier
(	TokenNameLPAREN
root	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
"  "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"<root bar="baz" />"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testNSOnElement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Document	TokenNameIdentifier
d	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtils	TokenNameIdentifier
.	TokenNameDOT
newDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
root	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
createElementNS	TokenNameIdentifier
(	TokenNameLPAREN
"urn:foo"	TokenNameStringLiteral
,	TokenNameCOMMA
"root"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
root	TokenNameIdentifier
.	TokenNameDOT
setAttributeNS	TokenNameIdentifier
(	TokenNameLPAREN
"urn:foo2"	TokenNameStringLiteral
,	TokenNameCOMMA
"bar"	TokenNameStringLiteral
,	TokenNameCOMMA
"baz"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringWriter	TokenNameIdentifier
sw	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOMElementWriter	TokenNameIdentifier
w	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DOMElementWriter	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
,	TokenNameCOMMA
DOMElementWriter	TokenNameIdentifier
.	TokenNameDOT
XmlNamespacePolicy	TokenNameIdentifier
.	TokenNameDOT
ONLY_QUALIFY_ELEMENTS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
w	TokenNameIdentifier
.	TokenNameDOT
write	TokenNameIdentifier
(	TokenNameLPAREN
root	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
"  "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"<root bar="baz" xmlns="urn:foo" />"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testNSPrefixOnAttribute	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Document	TokenNameIdentifier
d	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtils	TokenNameIdentifier
.	TokenNameDOT
newDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
root	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
createElementNS	TokenNameIdentifier
(	TokenNameLPAREN
"urn:foo"	TokenNameStringLiteral
,	TokenNameCOMMA
"root"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
root	TokenNameIdentifier
.	TokenNameDOT
setAttributeNS	TokenNameIdentifier
(	TokenNameLPAREN
"urn:foo2"	TokenNameStringLiteral
,	TokenNameCOMMA
"bar"	TokenNameStringLiteral
,	TokenNameCOMMA
"baz"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringWriter	TokenNameIdentifier
sw	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOMElementWriter	TokenNameIdentifier
w	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DOMElementWriter	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
,	TokenNameCOMMA
DOMElementWriter	TokenNameIdentifier
.	TokenNameDOT
XmlNamespacePolicy	TokenNameIdentifier
.	TokenNameDOT
QUALIFY_ALL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
w	TokenNameIdentifier
.	TokenNameDOT
write	TokenNameIdentifier
(	TokenNameLPAREN
root	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
"  "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"<root ns0:bar="baz" xmlns="urn:foo""	TokenNameStringLiteral
+	TokenNamePLUS
" xmlns:ns0="urn:foo2" />"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testNSPrefixOnAttributeEvenWithoutElement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Document	TokenNameIdentifier
d	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtils	TokenNameIdentifier
.	TokenNameDOT
newDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
root	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
createElementNS	TokenNameIdentifier
(	TokenNameLPAREN
"urn:foo"	TokenNameStringLiteral
,	TokenNameCOMMA
"root"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
root	TokenNameIdentifier
.	TokenNameDOT
setAttributeNS	TokenNameIdentifier
(	TokenNameLPAREN
"urn:foo2"	TokenNameStringLiteral
,	TokenNameCOMMA
"bar"	TokenNameStringLiteral
,	TokenNameCOMMA
"baz"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringWriter	TokenNameIdentifier
sw	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOMElementWriter	TokenNameIdentifier
w	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DOMElementWriter	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
,	TokenNameCOMMA
new	TokenNamenew
DOMElementWriter	TokenNameIdentifier
.	TokenNameDOT
XmlNamespacePolicy	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
w	TokenNameIdentifier
.	TokenNameDOT
write	TokenNameIdentifier
(	TokenNameLPAREN
root	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
"  "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"<root ns0:bar="baz" xmlns:ns0="urn:foo2" />"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testNSGetsReused	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Document	TokenNameIdentifier
d	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtils	TokenNameIdentifier
.	TokenNameDOT
newDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
root	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
createElementNS	TokenNameIdentifier
(	TokenNameLPAREN
"urn:foo"	TokenNameStringLiteral
,	TokenNameCOMMA
"root"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
child	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
createElementNS	TokenNameIdentifier
(	TokenNameLPAREN
"urn:foo"	TokenNameStringLiteral
,	TokenNameCOMMA
"child"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
root	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringWriter	TokenNameIdentifier
sw	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOMElementWriter	TokenNameIdentifier
w	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DOMElementWriter	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
,	TokenNameCOMMA
DOMElementWriter	TokenNameIdentifier
.	TokenNameDOT
XmlNamespacePolicy	TokenNameIdentifier
.	TokenNameDOT
ONLY_QUALIFY_ELEMENTS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
w	TokenNameIdentifier
.	TokenNameDOT
write	TokenNameIdentifier
(	TokenNameLPAREN
root	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
"  "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"<root xmlns="urn:foo">"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
+	TokenNamePLUS
"  <child />"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
+	TokenNamePLUS
"</root>"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testNSGoesOutOfScope	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
Document	TokenNameIdentifier
d	TokenNameIdentifier
=	TokenNameEQUAL
DOMUtils	TokenNameIdentifier
.	TokenNameDOT
newDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
root	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
createElementNS	TokenNameIdentifier
(	TokenNameLPAREN
"urn:foo"	TokenNameStringLiteral
,	TokenNameCOMMA
"root"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
child	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
createElementNS	TokenNameIdentifier
(	TokenNameLPAREN
"urn:foo2"	TokenNameStringLiteral
,	TokenNameCOMMA
"child"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
root	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
child	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
child2	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
createElementNS	TokenNameIdentifier
(	TokenNameLPAREN
"urn:foo2"	TokenNameStringLiteral
,	TokenNameCOMMA
"child"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
root	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
child2	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
grandChild	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
createElementNS	TokenNameIdentifier
(	TokenNameLPAREN
"urn:foo2"	TokenNameStringLiteral
,	TokenNameCOMMA
"grandchild"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
child2	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
grandChild	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
child3	TokenNameIdentifier
=	TokenNameEQUAL
d	TokenNameIdentifier
.	TokenNameDOT
createElementNS	TokenNameIdentifier
(	TokenNameLPAREN
"urn:foo2"	TokenNameStringLiteral
,	TokenNameCOMMA
"child"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
root	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
child3	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringWriter	TokenNameIdentifier
sw	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringWriter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOMElementWriter	TokenNameIdentifier
w	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DOMElementWriter	TokenNameIdentifier
(	TokenNameLPAREN
false	TokenNamefalse
,	TokenNameCOMMA
DOMElementWriter	TokenNameIdentifier
.	TokenNameDOT
XmlNamespacePolicy	TokenNameIdentifier
.	TokenNameDOT
ONLY_QUALIFY_ELEMENTS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
w	TokenNameIdentifier
.	TokenNameDOT
write	TokenNameIdentifier
(	TokenNameLPAREN
root	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
"  "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertEquals	TokenNameIdentifier
(	TokenNameLPAREN
"<root xmlns="urn:foo">"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
+	TokenNamePLUS
"  <ns0:child xmlns:ns0="urn:foo2" />"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
+	TokenNamePLUS
"  <ns1:child xmlns:ns1="urn:foo2">"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
+	TokenNamePLUS
"    <ns1:grandchild />"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
+	TokenNamePLUS
"  </ns1:child>"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
+	TokenNamePLUS
"  <ns2:child xmlns:ns2="urn:foo2" />"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
+	TokenNamePLUS
"</root>"	TokenNameStringLiteral
+	TokenNamePLUS
StringUtils	TokenNameIdentifier
.	TokenNameDOT
LINE_SEP	TokenNameIdentifier
,	TokenNameCOMMA
sw	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
