package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
tools	TokenNameIdentifier
.	TokenNameDOT
ant	TokenNameIdentifier
.	TokenNameDOT
types	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
junit	TokenNameIdentifier
.	TokenNameDOT
framework	TokenNameIdentifier
.	TokenNameDOT
TestCase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
tools	TokenNameIdentifier
.	TokenNameDOT
ant	TokenNameIdentifier
.	TokenNameDOT
ExitException	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
PermissionsTest	TokenNameIdentifier
extends	TokenNameextends
TestCase	TokenNameIdentifier
{	TokenNameLBRACE
Permissions	TokenNameIdentifier
perms	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
PermissionsTest	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setUp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
perms	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Permissions	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Permissions	TokenNameIdentifier
.	TokenNameDOT
Permission	TokenNameIdentifier
perm	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Permissions	TokenNameIdentifier
.	TokenNameDOT
Permission	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
.	TokenNameDOT
setActions	TokenNameIdentifier
(	TokenNameLPAREN
"read, write"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
.	TokenNameDOT
setName	TokenNameIdentifier
(	TokenNameLPAREN
"user.*"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
.	TokenNameDOT
setClass	TokenNameIdentifier
(	TokenNameLPAREN
"java.util.PropertyPermission"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perms	TokenNameIdentifier
.	TokenNameDOT
addConfiguredGrant	TokenNameIdentifier
(	TokenNameLPAREN
perm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Permissions	TokenNameIdentifier
.	TokenNameDOT
Permission	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
.	TokenNameDOT
setActions	TokenNameIdentifier
(	TokenNameLPAREN
"read"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
.	TokenNameDOT
setName	TokenNameIdentifier
(	TokenNameLPAREN
"java.home"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
.	TokenNameDOT
setClass	TokenNameIdentifier
(	TokenNameLPAREN
"java.util.PropertyPermission"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perms	TokenNameIdentifier
.	TokenNameDOT
addConfiguredGrant	TokenNameIdentifier
(	TokenNameLPAREN
perm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Permissions	TokenNameIdentifier
.	TokenNameDOT
Permission	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
.	TokenNameDOT
setActions	TokenNameIdentifier
(	TokenNameLPAREN
"read"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
.	TokenNameDOT
setName	TokenNameIdentifier
(	TokenNameLPAREN
"file.encoding"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
.	TokenNameDOT
setClass	TokenNameIdentifier
(	TokenNameLPAREN
"java.util.PropertyPermission"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perms	TokenNameIdentifier
.	TokenNameDOT
addConfiguredGrant	TokenNameIdentifier
(	TokenNameLPAREN
perm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Permissions	TokenNameIdentifier
.	TokenNameDOT
Permission	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
.	TokenNameDOT
setActions	TokenNameIdentifier
(	TokenNameLPAREN
"write"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
.	TokenNameDOT
setName	TokenNameIdentifier
(	TokenNameLPAREN
"user.home"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
.	TokenNameDOT
setClass	TokenNameIdentifier
(	TokenNameLPAREN
"java.util.PropertyPermission"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perms	TokenNameIdentifier
.	TokenNameDOT
addConfiguredRevoke	TokenNameIdentifier
(	TokenNameLPAREN
perm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Permissions	TokenNameIdentifier
.	TokenNameDOT
Permission	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
.	TokenNameDOT
setActions	TokenNameIdentifier
(	TokenNameLPAREN
"read"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
.	TokenNameDOT
setName	TokenNameIdentifier
(	TokenNameLPAREN
"os.*"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perm	TokenNameIdentifier
.	TokenNameDOT
setClass	TokenNameIdentifier
(	TokenNameLPAREN
"java.util.PropertyPermission"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perms	TokenNameIdentifier
.	TokenNameDOT
addConfiguredRevoke	TokenNameIdentifier
(	TokenNameLPAREN
perm	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testDefaultGranted	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
perms	TokenNameIdentifier
.	TokenNameDOT
setSecurityManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
String	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"line.separator"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
perms	TokenNameIdentifier
.	TokenNameDOT
restoreSecurityManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testGranted	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
perms	TokenNameIdentifier
.	TokenNameDOT
setSecurityManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
String	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"user.name"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"user.name"	TokenNameStringLiteral
,	TokenNameCOMMA
s	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
perms	TokenNameIdentifier
.	TokenNameDOT
restoreSecurityManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testGrantedAndRevoked	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
perms	TokenNameIdentifier
.	TokenNameDOT
setSecurityManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
String	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"user.home"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"user.home"	TokenNameStringLiteral
,	TokenNameCOMMA
s	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fail	TokenNameIdentifier
(	TokenNameLPAREN
"Could perform an action that should have been forbidden."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
SecurityException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
perms	TokenNameIdentifier
.	TokenNameDOT
restoreSecurityManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testDefaultRevoked	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
perms	TokenNameIdentifier
.	TokenNameDOT
setSecurityManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"os.name"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fail	TokenNameIdentifier
(	TokenNameLPAREN
"Could perform an action that should have been forbidden."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
SecurityException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
perms	TokenNameIdentifier
.	TokenNameDOT
restoreSecurityManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testOther	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
ls	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"line.separator"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
perms	TokenNameIdentifier
.	TokenNameDOT
setSecurityManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
String	TokenNameIdentifier
s	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
setProperty	TokenNameIdentifier
(	TokenNameLPAREN
"line.separator"	TokenNameStringLiteral
,	TokenNameCOMMA
ls	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fail	TokenNameIdentifier
(	TokenNameLPAREN
"Could perform an action that should have been forbidden."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
SecurityException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
perms	TokenNameIdentifier
.	TokenNameDOT
restoreSecurityManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
testExit	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
perms	TokenNameIdentifier
.	TokenNameDOT
setSecurityManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"If this is the last line on standard out the testExit f.a.i.l.e.d"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
exit	TokenNameIdentifier
(	TokenNameLPAREN
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
fail	TokenNameIdentifier
(	TokenNameLPAREN
"Totaly impossible that this fail is ever executed. Please let me know if it is!"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ExitException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
e	TokenNameIdentifier
.	TokenNameDOT
getStatus	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
fail	TokenNameIdentifier
(	TokenNameLPAREN
"Received wrong exit status in Exit Exception."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"testExit successful."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
perms	TokenNameIdentifier
.	TokenNameDOT
restoreSecurityManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
tearDown	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
