package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
tools	TokenNameIdentifier
.	TokenNameDOT
ant	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
ChoiceFormat	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
DateFormat	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
MessageFormat	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
ParseException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
text	TokenNameIdentifier
.	TokenNameDOT
SimpleDateFormat	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Calendar	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Date	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Locale	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
TimeZone	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
class	TokenNameclass
DateUtils	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
ONE_SECOND	TokenNameIdentifier
=	TokenNameEQUAL
1000	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
ONE_MINUTE	TokenNameIdentifier
=	TokenNameEQUAL
60	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
ONE_HOUR	TokenNameIdentifier
=	TokenNameEQUAL
60	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
TEN	TokenNameIdentifier
=	TokenNameEQUAL
10	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ISO8601_DATETIME_PATTERN	TokenNameIdentifier
=	TokenNameEQUAL
"yyyy-MM-dd'T'HH:mm:ss"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ISO8601_DATE_PATTERN	TokenNameIdentifier
=	TokenNameEQUAL
"yyyy-MM-dd"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ISO8601_TIME_PATTERN	TokenNameIdentifier
=	TokenNameEQUAL
"HH:mm:ss"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
DateFormat	TokenNameIdentifier
DATE_HEADER_FORMAT	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleDateFormat	TokenNameIdentifier
(	TokenNameLPAREN
"EEE, dd MMM yyyy HH:mm:ss "	TokenNameStringLiteral
,	TokenNameCOMMA
Locale	TokenNameIdentifier
.	TokenNameDOT
US	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
DateFormat	TokenNameIdentifier
DATE_HEADER_FORMAT_INT	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleDateFormat	TokenNameIdentifier
(	TokenNameLPAREN
"EEE, dd MMM yyyy HH:mm:ss "	TokenNameStringLiteral
,	TokenNameCOMMA
Locale	TokenNameIdentifier
.	TokenNameDOT
US	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
MessageFormat	TokenNameIdentifier
MINUTE_SECONDS	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
MessageFormat	TokenNameIdentifier
(	TokenNameLPAREN
"{0}{1}"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
double	TokenNamedouble
[	TokenNameLBRACKET
]	TokenNameRBRACKET
LIMITS	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
MINUTES_PART	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
""	TokenNameStringLiteral
,	TokenNameCOMMA
"1 minute "	TokenNameStringLiteral
,	TokenNameCOMMA
"{0,number,###############} minutes "	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
SECONDS_PART	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"0 seconds"	TokenNameStringLiteral
,	TokenNameCOMMA
"1 second"	TokenNameStringLiteral
,	TokenNameCOMMA
"{1,number} seconds"	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
ChoiceFormat	TokenNameIdentifier
MINUTES_FORMAT	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ChoiceFormat	TokenNameIdentifier
(	TokenNameLPAREN
LIMITS	TokenNameIdentifier
,	TokenNameCOMMA
MINUTES_PART	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
ChoiceFormat	TokenNameIdentifier
SECONDS_FORMAT	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ChoiceFormat	TokenNameIdentifier
(	TokenNameLPAREN
LIMITS	TokenNameIdentifier
,	TokenNameCOMMA
SECONDS_PART	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
MINUTE_SECONDS	TokenNameIdentifier
.	TokenNameDOT
setFormat	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
MINUTES_FORMAT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MINUTE_SECONDS	TokenNameIdentifier
.	TokenNameDOT
setFormat	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
SECONDS_FORMAT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
DateUtils	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
format	TokenNameIdentifier
(	TokenNameLPAREN
long	TokenNamelong
date	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
pattern	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
format	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Date	TokenNameIdentifier
(	TokenNameLPAREN
date	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
pattern	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
format	TokenNameIdentifier
(	TokenNameLPAREN
Date	TokenNameIdentifier
date	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
pattern	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
DateFormat	TokenNameIdentifier
df	TokenNameIdentifier
=	TokenNameEQUAL
createDateFormat	TokenNameIdentifier
(	TokenNameLPAREN
pattern	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
df	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
date	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
formatElapsedTime	TokenNameIdentifier
(	TokenNameLPAREN
long	TokenNamelong
millis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
long	TokenNamelong
seconds	TokenNameIdentifier
=	TokenNameEQUAL
millis	TokenNameIdentifier
/	TokenNameDIVIDE
ONE_SECOND	TokenNameIdentifier
;	TokenNameSEMICOLON
long	TokenNamelong
minutes	TokenNameIdentifier
=	TokenNameEQUAL
seconds	TokenNameIdentifier
/	TokenNameDIVIDE
ONE_MINUTE	TokenNameIdentifier
;	TokenNameSEMICOLON
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
minutes	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
seconds	TokenNameIdentifier
%	TokenNameREMAINDER
ONE_MINUTE	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
;	TokenNameSEMICOLON
return	TokenNamereturn
MINUTE_SECONDS	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
DateFormat	TokenNameIdentifier
createDateFormat	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
pattern	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
SimpleDateFormat	TokenNameIdentifier
sdf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SimpleDateFormat	TokenNameIdentifier
(	TokenNameLPAREN
pattern	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TimeZone	TokenNameIdentifier
gmt	TokenNameIdentifier
=	TokenNameEQUAL
TimeZone	TokenNameIdentifier
.	TokenNameDOT
getTimeZone	TokenNameIdentifier
(	TokenNameLPAREN
"GMT"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sdf	TokenNameIdentifier
.	TokenNameDOT
setTimeZone	TokenNameIdentifier
(	TokenNameLPAREN
gmt	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sdf	TokenNameIdentifier
.	TokenNameDOT
setLenient	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
sdf	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
getPhaseOfMoon	TokenNameIdentifier
(	TokenNameLPAREN
Calendar	TokenNameIdentifier
cal	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
dayOfTheYear	TokenNameIdentifier
=	TokenNameEQUAL
cal	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
Calendar	TokenNameIdentifier
.	TokenNameDOT
DAY_OF_YEAR	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
yearInMetonicCycle	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
cal	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
Calendar	TokenNameIdentifier
.	TokenNameDOT
YEAR	TokenNameIdentifier
)	TokenNameRPAREN
-	TokenNameMINUS
1900	TokenNameIntegerLiteral
)	TokenNameRPAREN
%	TokenNameREMAINDER
19	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
epact	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
11	TokenNameIntegerLiteral
*	TokenNameMULTIPLY
yearInMetonicCycle	TokenNameIdentifier
+	TokenNamePLUS
18	TokenNameIntegerLiteral
)	TokenNameRPAREN
%	TokenNameREMAINDER
30	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
epact	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
25	TokenNameIntegerLiteral
&&	TokenNameAND_AND
yearInMetonicCycle	TokenNameIdentifier
>	TokenNameGREATER
11	TokenNameIntegerLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
epact	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
24	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
epact	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
dayOfTheYear	TokenNameIdentifier
+	TokenNamePLUS
epact	TokenNameIdentifier
)	TokenNameRPAREN
*	TokenNameMULTIPLY
6	TokenNameIntegerLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
11	TokenNameIntegerLiteral
)	TokenNameRPAREN
%	TokenNameREMAINDER
177	TokenNameIntegerLiteral
)	TokenNameRPAREN
/	TokenNameDIVIDE
22	TokenNameIntegerLiteral
)	TokenNameRPAREN
&	TokenNameAND
7	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getDateForHeader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Calendar	TokenNameIdentifier
cal	TokenNameIdentifier
=	TokenNameEQUAL
Calendar	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
TimeZone	TokenNameIdentifier
tz	TokenNameIdentifier
=	TokenNameEQUAL
cal	TokenNameIdentifier
.	TokenNameDOT
getTimeZone	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
offset	TokenNameIdentifier
=	TokenNameEQUAL
tz	TokenNameIdentifier
.	TokenNameDOT
getOffset	TokenNameIdentifier
(	TokenNameLPAREN
cal	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
Calendar	TokenNameIdentifier
.	TokenNameDOT
ERA	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
cal	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
Calendar	TokenNameIdentifier
.	TokenNameDOT
YEAR	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
cal	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
Calendar	TokenNameIdentifier
.	TokenNameDOT
MONTH	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
cal	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
Calendar	TokenNameIdentifier
.	TokenNameDOT
DAY_OF_MONTH	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
cal	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
Calendar	TokenNameIdentifier
.	TokenNameDOT
DAY_OF_WEEK	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
cal	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
Calendar	TokenNameIdentifier
.	TokenNameDOT
MILLISECOND	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringBuffer	TokenNameIdentifier
tzMarker	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringBuffer	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
<	TokenNameLESS
0	TokenNameIntegerLiteral
?	TokenNameQUESTION
"-"	TokenNameStringLiteral
:	TokenNameCOLON
"+"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
offset	TokenNameIdentifier
=	TokenNameEQUAL
Math	TokenNameIdentifier
.	TokenNameDOT
abs	TokenNameIdentifier
(	TokenNameLPAREN
offset	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
hours	TokenNameIdentifier
=	TokenNameEQUAL
offset	TokenNameIdentifier
/	TokenNameDIVIDE
(	TokenNameLPAREN
ONE_HOUR	TokenNameIdentifier
*	TokenNameMULTIPLY
ONE_MINUTE	TokenNameIdentifier
*	TokenNameMULTIPLY
ONE_SECOND	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
minutes	TokenNameIdentifier
=	TokenNameEQUAL
offset	TokenNameIdentifier
/	TokenNameDIVIDE
(	TokenNameLPAREN
ONE_MINUTE	TokenNameIdentifier
*	TokenNameMULTIPLY
ONE_SECOND	TokenNameIdentifier
)	TokenNameRPAREN
-	TokenNameMINUS
ONE_HOUR	TokenNameIdentifier
*	TokenNameMULTIPLY
hours	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
hours	TokenNameIdentifier
<	TokenNameLESS
TEN	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
tzMarker	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
tzMarker	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
hours	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
minutes	TokenNameIdentifier
<	TokenNameLESS
TEN	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
tzMarker	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
tzMarker	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
minutes	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
synchronized	TokenNamesynchronized
(	TokenNameLPAREN
DATE_HEADER_FORMAT_INT	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
DATE_HEADER_FORMAT_INT	TokenNameIdentifier
.	TokenNameDOT
format	TokenNameIdentifier
(	TokenNameLPAREN
cal	TokenNameIdentifier
.	TokenNameDOT
getTime	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
tzMarker	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Date	TokenNameIdentifier
parseDateFromHeader	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
datestr	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
synchronized	TokenNamesynchronized
(	TokenNameLPAREN
DATE_HEADER_FORMAT_INT	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
DATE_HEADER_FORMAT_INT	TokenNameIdentifier
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
datestr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Date	TokenNameIdentifier
parseIso8601DateTime	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
datestr	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
SimpleDateFormat	TokenNameIdentifier
(	TokenNameLPAREN
ISO8601_DATETIME_PATTERN	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
datestr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Date	TokenNameIdentifier
parseIso8601Date	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
datestr	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
SimpleDateFormat	TokenNameIdentifier
(	TokenNameLPAREN
ISO8601_DATE_PATTERN	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
parse	TokenNameIdentifier
(	TokenNameLPAREN
datestr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Date	TokenNameIdentifier
parseIso8601DateTimeOrDate	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
datestr	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
ParseException	TokenNameIdentifier
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
parseIso8601DateTime	TokenNameIdentifier
(	TokenNameLPAREN
datestr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
ParseException	TokenNameIdentifier
px	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
parseIso8601Date	TokenNameIdentifier
(	TokenNameLPAREN
datestr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
