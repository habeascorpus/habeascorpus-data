package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
tools	TokenNameIdentifier
.	TokenNameDOT
ant	TokenNameIdentifier
.	TokenNameDOT
taskdefs	TokenNameIdentifier
.	TokenNameDOT
optional	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
Authenticator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
.	TokenNameDOT
PasswordAuthentication	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Properties	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
tools	TokenNameIdentifier
.	TokenNameDOT
ant	TokenNameIdentifier
.	TokenNameDOT
BuildException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
tools	TokenNameIdentifier
.	TokenNameDOT
ant	TokenNameIdentifier
.	TokenNameDOT
Project	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
tools	TokenNameIdentifier
.	TokenNameDOT
ant	TokenNameIdentifier
.	TokenNameDOT
Task	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
tools	TokenNameIdentifier
.	TokenNameDOT
ant	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ProxySetup	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
SetProxy	TokenNameIdentifier
extends	TokenNameextends
Task	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
HTTP_PORT	TokenNameIdentifier
=	TokenNameEQUAL
80	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
SOCKS_PORT	TokenNameIdentifier
=	TokenNameEQUAL
1080	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
protected	TokenNameprotected
String	TokenNameIdentifier
proxyHost	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
protected	TokenNameprotected
int	TokenNameint
proxyPort	TokenNameIdentifier
=	TokenNameEQUAL
HTTP_PORT	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
socksProxyHost	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
socksProxyPort	TokenNameIdentifier
=	TokenNameEQUAL
SOCKS_PORT	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
nonProxyHosts	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
proxyUser	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
proxyPassword	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
public	TokenNamepublic
void	TokenNamevoid
setProxyHost	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
hostname	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
proxyHost	TokenNameIdentifier
=	TokenNameEQUAL
hostname	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setProxyPort	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
port	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
proxyPort	TokenNameIdentifier
=	TokenNameEQUAL
port	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setSocksProxyHost	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
host	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
socksProxyHost	TokenNameIdentifier
=	TokenNameEQUAL
host	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setSocksProxyPort	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
port	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
socksProxyPort	TokenNameIdentifier
=	TokenNameEQUAL
port	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setNonProxyHosts	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
nonProxyHosts	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
nonProxyHosts	TokenNameIdentifier
=	TokenNameEQUAL
nonProxyHosts	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setProxyUser	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
proxyUser	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
proxyUser	TokenNameIdentifier
=	TokenNameEQUAL
proxyUser	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setProxyPassword	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
proxyPassword	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
proxyPassword	TokenNameIdentifier
=	TokenNameEQUAL
proxyPassword	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
applyWebProxySettings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
boolean	TokenNameboolean
settingsChanged	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
boolean	TokenNameboolean
enablingProxy	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
Properties	TokenNameIdentifier
sysprops	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
getProperties	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
proxyHost	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
settingsChanged	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
proxyHost	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
traceSettingInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
enablingProxy	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
HTTP_PROXY_HOST	TokenNameIdentifier
,	TokenNameCOMMA
proxyHost	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
portString	TokenNameIdentifier
=	TokenNameEQUAL
Integer	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
proxyPort	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
HTTP_PROXY_PORT	TokenNameIdentifier
,	TokenNameCOMMA
portString	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
HTTPS_PROXY_HOST	TokenNameIdentifier
,	TokenNameCOMMA
proxyHost	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
HTTPS_PROXY_PORT	TokenNameIdentifier
,	TokenNameCOMMA
portString	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
FTP_PROXY_HOST	TokenNameIdentifier
,	TokenNameCOMMA
proxyHost	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
FTP_PROXY_PORT	TokenNameIdentifier
,	TokenNameCOMMA
portString	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
nonProxyHosts	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
sysprops	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
HTTP_NON_PROXY_HOSTS	TokenNameIdentifier
,	TokenNameCOMMA
nonProxyHosts	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
HTTPS_NON_PROXY_HOSTS	TokenNameIdentifier
,	TokenNameCOMMA
nonProxyHosts	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
FTP_NON_PROXY_HOSTS	TokenNameIdentifier
,	TokenNameCOMMA
nonProxyHosts	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
proxyUser	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
sysprops	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
HTTP_PROXY_USERNAME	TokenNameIdentifier
,	TokenNameCOMMA
proxyUser	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
HTTP_PROXY_PASSWORD	TokenNameIdentifier
,	TokenNameCOMMA
proxyPassword	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
log	TokenNameIdentifier
(	TokenNameLPAREN
"resetting http proxy"	TokenNameStringLiteral
,	TokenNameCOMMA
Project	TokenNameIdentifier
.	TokenNameDOT
MSG_VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
HTTP_PROXY_HOST	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
HTTP_PROXY_PORT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
HTTP_PROXY_USERNAME	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
HTTP_PROXY_PASSWORD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
HTTPS_PROXY_HOST	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
HTTPS_PROXY_PORT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
FTP_PROXY_HOST	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
FTP_PROXY_PORT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
socksProxyHost	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
settingsChanged	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
socksProxyHost	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
enablingProxy	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
SOCKS_PROXY_HOST	TokenNameIdentifier
,	TokenNameCOMMA
socksProxyHost	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
SOCKS_PROXY_PORT	TokenNameIdentifier
,	TokenNameCOMMA
Integer	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
socksProxyPort	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
proxyUser	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
sysprops	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
SOCKS_PROXY_USERNAME	TokenNameIdentifier
,	TokenNameCOMMA
proxyUser	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
SOCKS_PROXY_PASSWORD	TokenNameIdentifier
,	TokenNameCOMMA
proxyPassword	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
log	TokenNameIdentifier
(	TokenNameLPAREN
"resetting socks proxy"	TokenNameStringLiteral
,	TokenNameCOMMA
Project	TokenNameIdentifier
.	TokenNameDOT
MSG_VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
SOCKS_PROXY_HOST	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
SOCKS_PROXY_PORT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
SOCKS_PROXY_USERNAME	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
sysprops	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
ProxySetup	TokenNameIdentifier
.	TokenNameDOT
SOCKS_PROXY_PASSWORD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
proxyUser	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
enablingProxy	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Authenticator	TokenNameIdentifier
.	TokenNameDOT
setDefault	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
ProxyAuth	TokenNameIdentifier
(	TokenNameLPAREN
proxyUser	TokenNameIdentifier
,	TokenNameCOMMA
proxyPassword	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
settingsChanged	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Authenticator	TokenNameIdentifier
.	TokenNameDOT
setDefault	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
ProxyAuth	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
traceSettingInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
log	TokenNameIdentifier
(	TokenNameLPAREN
"Setting proxy to "	TokenNameStringLiteral
+	TokenNamePLUS
(	TokenNameLPAREN
proxyHost	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
?	TokenNameQUESTION
proxyHost	TokenNameIdentifier
:	TokenNameCOLON
"''"	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
":"	TokenNameStringLiteral
+	TokenNamePLUS
proxyPort	TokenNameIdentifier
,	TokenNameCOMMA
Project	TokenNameIdentifier
.	TokenNameDOT
MSG_VERBOSE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
execute	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
BuildException	TokenNameIdentifier
{	TokenNameLBRACE
applyWebProxySettings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
class	TokenNameclass
ProxyAuth	TokenNameIdentifier
extends	TokenNameextends
Authenticator	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
PasswordAuthentication	TokenNameIdentifier
auth	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
ProxyAuth	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
user	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
pass	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
auth	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
PasswordAuthentication	TokenNameIdentifier
(	TokenNameLPAREN
user	TokenNameIdentifier
,	TokenNameCOMMA
pass	TokenNameIdentifier
.	TokenNameDOT
toCharArray	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
PasswordAuthentication	TokenNameIdentifier
getPasswordAuthentication	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
auth	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
