package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
tools	TokenNameIdentifier
.	TokenNameDOT
ant	TokenNameIdentifier
.	TokenNameDOT
taskdefs	TokenNameIdentifier
.	TokenNameDOT
optional	TokenNameIdentifier
.	TokenNameDOT
depend	TokenNameIdentifier
.	TokenNameDOT
constantpool	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
DataInputStream	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
IOException	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
MethodRefCPInfo	TokenNameIdentifier
extends	TokenNameextends
ConstantPoolEntry	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
String	TokenNameIdentifier
methodClassName	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
methodName	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
String	TokenNameIdentifier
methodType	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
classIndex	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
nameAndTypeIndex	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
MethodRefCPInfo	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
CONSTANT_METHODREF	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
read	TokenNameIdentifier
(	TokenNameLPAREN
DataInputStream	TokenNameIdentifier
cpStream	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IOException	TokenNameIdentifier
{	TokenNameLBRACE
classIndex	TokenNameIdentifier
=	TokenNameEQUAL
cpStream	TokenNameIdentifier
.	TokenNameDOT
readUnsignedShort	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
nameAndTypeIndex	TokenNameIdentifier
=	TokenNameEQUAL
cpStream	TokenNameIdentifier
.	TokenNameDOT
readUnsignedShort	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
value	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isResolved	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
value	TokenNameIdentifier
=	TokenNameEQUAL
"Method : Class = "	TokenNameStringLiteral
+	TokenNamePLUS
methodClassName	TokenNameIdentifier
+	TokenNamePLUS
", name = "	TokenNameStringLiteral
+	TokenNamePLUS
methodName	TokenNameIdentifier
+	TokenNamePLUS
", type = "	TokenNameStringLiteral
+	TokenNamePLUS
methodType	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
value	TokenNameIdentifier
=	TokenNameEQUAL
"Method : Class index = "	TokenNameStringLiteral
+	TokenNamePLUS
classIndex	TokenNameIdentifier
+	TokenNamePLUS
", name and type index = "	TokenNameStringLiteral
+	TokenNamePLUS
nameAndTypeIndex	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
value	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
resolve	TokenNameIdentifier
(	TokenNameLPAREN
ConstantPool	TokenNameIdentifier
constantPool	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ClassCPInfo	TokenNameIdentifier
methodClass	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
ClassCPInfo	TokenNameIdentifier
)	TokenNameRPAREN
constantPool	TokenNameIdentifier
.	TokenNameDOT
getEntry	TokenNameIdentifier
(	TokenNameLPAREN
classIndex	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
methodClass	TokenNameIdentifier
.	TokenNameDOT
resolve	TokenNameIdentifier
(	TokenNameLPAREN
constantPool	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
methodClassName	TokenNameIdentifier
=	TokenNameEQUAL
methodClass	TokenNameIdentifier
.	TokenNameDOT
getClassName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
NameAndTypeCPInfo	TokenNameIdentifier
nt	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
NameAndTypeCPInfo	TokenNameIdentifier
)	TokenNameRPAREN
constantPool	TokenNameIdentifier
.	TokenNameDOT
getEntry	TokenNameIdentifier
(	TokenNameLPAREN
nameAndTypeIndex	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
nt	TokenNameIdentifier
.	TokenNameDOT
resolve	TokenNameIdentifier
(	TokenNameLPAREN
constantPool	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
methodName	TokenNameIdentifier
=	TokenNameEQUAL
nt	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
methodType	TokenNameIdentifier
=	TokenNameEQUAL
nt	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
super	TokenNamesuper
.	TokenNameDOT
resolve	TokenNameIdentifier
(	TokenNameLPAREN
constantPool	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getMethodClassName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
methodClassName	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getMethodName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
methodName	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getMethodType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
methodType	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
