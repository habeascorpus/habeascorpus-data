package	TokenNamepackage
examples	TokenNameIdentifier
.	TokenNameDOT
customLevel	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
log4j	TokenNameIdentifier
.	TokenNameDOT
Level	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
XLevel	TokenNameIdentifier
extends	TokenNameextends
Level	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
long	TokenNamelong
serialVersionUID	TokenNameIdentifier
=	TokenNameEQUAL
2626753561969426769L	TokenNameLongLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
public	TokenNamepublic
final	TokenNamefinal
int	TokenNameint
TRACE_INT	TokenNameIdentifier
=	TokenNameEQUAL
Level	TokenNameIdentifier
.	TokenNameDOT
DEBUG_INT	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
public	TokenNamepublic
final	TokenNamefinal
int	TokenNameint
LETHAL_INT	TokenNameIdentifier
=	TokenNameEQUAL
Level	TokenNameIdentifier
.	TokenNameDOT
FATAL_INT	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
String	TokenNameIdentifier
TRACE_STR	TokenNameIdentifier
=	TokenNameEQUAL
"TRACE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
String	TokenNameIdentifier
LETHAL_STR	TokenNameIdentifier
=	TokenNameEQUAL
"LETHAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
XLevel	TokenNameIdentifier
TRACE	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XLevel	TokenNameIdentifier
(	TokenNameLPAREN
TRACE_INT	TokenNameIdentifier
,	TokenNameCOMMA
TRACE_STR	TokenNameIdentifier
,	TokenNameCOMMA
7	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
XLevel	TokenNameIdentifier
LETHAL	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
XLevel	TokenNameIdentifier
(	TokenNameLPAREN
LETHAL_INT	TokenNameIdentifier
,	TokenNameCOMMA
LETHAL_STR	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
protected	TokenNameprotected
XLevel	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
level	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
strLevel	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
syslogEquiv	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
level	TokenNameIdentifier
,	TokenNameCOMMA
strLevel	TokenNameIdentifier
,	TokenNameCOMMA
syslogEquiv	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Level	TokenNameIdentifier
toLevel	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
sArg	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
Level	TokenNameIdentifier
)	TokenNameRPAREN
toLevel	TokenNameIdentifier
(	TokenNameLPAREN
sArg	TokenNameIdentifier
,	TokenNameCOMMA
XLevel	TokenNameIdentifier
.	TokenNameDOT
TRACE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Level	TokenNameIdentifier
toLevel	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
sArg	TokenNameIdentifier
,	TokenNameCOMMA
Level	TokenNameIdentifier
defaultValue	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
sArg	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
defaultValue	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
String	TokenNameIdentifier
stringVal	TokenNameIdentifier
=	TokenNameEQUAL
sArg	TokenNameIdentifier
.	TokenNameDOT
toUpperCase	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
stringVal	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
TRACE_STR	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
XLevel	TokenNameIdentifier
.	TokenNameDOT
TRACE	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
stringVal	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
LETHAL_STR	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
XLevel	TokenNameIdentifier
.	TokenNameDOT
LETHAL	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
Level	TokenNameIdentifier
.	TokenNameDOT
toLevel	TokenNameIdentifier
(	TokenNameLPAREN
sArg	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
Level	TokenNameIdentifier
)	TokenNameRPAREN
defaultValue	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Level	TokenNameIdentifier
toLevel	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
IllegalArgumentException	TokenNameIdentifier
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
TRACE_INT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
XLevel	TokenNameIdentifier
.	TokenNameDOT
TRACE	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
LETHAL_INT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
XLevel	TokenNameIdentifier
.	TokenNameDOT
LETHAL	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
Level	TokenNameIdentifier
.	TokenNameDOT
toLevel	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
