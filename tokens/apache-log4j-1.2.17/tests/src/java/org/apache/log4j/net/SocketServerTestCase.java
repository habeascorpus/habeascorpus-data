package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
log4j	TokenNameIdentifier
.	TokenNameDOT
net	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
junit	TokenNameIdentifier
.	TokenNameDOT
framework	TokenNameIdentifier
.	TokenNameDOT
TestCase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
junit	TokenNameIdentifier
.	TokenNameDOT
framework	TokenNameIdentifier
.	TokenNameDOT
TestSuite	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
junit	TokenNameIdentifier
.	TokenNameDOT
framework	TokenNameIdentifier
.	TokenNameDOT
Test	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
log4j	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
log4j	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
log4j	TokenNameIdentifier
.	TokenNameDOT
Logger	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
log4j	TokenNameIdentifier
.	TokenNameDOT
NDC	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
log4j	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
XLevel	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
SocketServerTestCase	TokenNameIdentifier
extends	TokenNameextends
TestCase	TokenNameIdentifier
{	TokenNameLBRACE
static	TokenNamestatic
String	TokenNameIdentifier
TEMP	TokenNameIdentifier
=	TokenNameEQUAL
"output/temp"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
String	TokenNameIdentifier
FILTERED	TokenNameIdentifier
=	TokenNameEQUAL
"output/filtered"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
String	TokenNameIdentifier
PAT1	TokenNameIdentifier
=	TokenNameEQUAL
"^(TRACE|DEBUG| INFO| WARN|ERROR|FATAL|LETHAL) T1 \[main]\ "	TokenNameStringLiteral
+	TokenNamePLUS
".* Message \d{1,2}"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
String	TokenNameIdentifier
PAT2	TokenNameIdentifier
=	TokenNameEQUAL
"^(TRACE|DEBUG| INFO| WARN|ERROR|FATAL|LETHAL) T2 \[main]\ "	TokenNameStringLiteral
+	TokenNamePLUS
"\? \(\?:\?\) Message \d{1,2}"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
String	TokenNameIdentifier
PAT3	TokenNameIdentifier
=	TokenNameEQUAL
"^(TRACE|DEBUG| INFO| WARN|ERROR|FATAL|LETHAL) T3 \[main]\ "	TokenNameStringLiteral
+	TokenNamePLUS
"org.apache.log4j.net.SocketServerTestCase "	TokenNameStringLiteral
+	TokenNamePLUS
"\(SocketServerTestCase.java:\d{3}\) Message \d{1,2}"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
String	TokenNameIdentifier
PAT4	TokenNameIdentifier
=	TokenNameEQUAL
"^(TRACE|DEBUG| INFO| WARN|ERROR|FATAL|LETHAL) some T4 MDC-TEST4 \[main]\"	TokenNameStringLiteral
+	TokenNamePLUS
" (root|SocketServerTestCase) - Message \d{1,2}"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
String	TokenNameIdentifier
PAT5	TokenNameIdentifier
=	TokenNameEQUAL
"^(TRACE|DEBUG| INFO| WARN|ERROR|FATAL|LETHAL) some5 T5 MDC-TEST5 \[main]\"	TokenNameStringLiteral
+	TokenNamePLUS
" (root|SocketServerTestCase) - Message \d{1,2}"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
String	TokenNameIdentifier
PAT6	TokenNameIdentifier
=	TokenNameEQUAL
"^(TRACE|DEBUG| INFO| WARN|ERROR|FATAL|LETHAL) some6 T6 client-test6 MDC-TEST6"	TokenNameStringLiteral
+	TokenNamePLUS
" \[main]\ (root|SocketServerTestCase) - Message \d{1,2}"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
String	TokenNameIdentifier
PAT7	TokenNameIdentifier
=	TokenNameEQUAL
"^(TRACE|DEBUG| INFO| WARN|ERROR|FATAL|LETHAL) some7 T7 client-test7 MDC-TEST7"	TokenNameStringLiteral
+	TokenNamePLUS
" \[main]\ (root|SocketServerTestCase) - Message \d{1,2}"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
String	TokenNameIdentifier
PAT8	TokenNameIdentifier
=	TokenNameEQUAL
"^(TRACE|DEBUG| INFO| WARN|ERROR|FATAL|LETHAL) some8 T8 shortSocketServer"	TokenNameStringLiteral
+	TokenNamePLUS
" MDC-TEST8 \[main]\ (root|SocketServerTestCase) - Message \d{1,2}"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
String	TokenNameIdentifier
EXCEPTION1	TokenNameIdentifier
=	TokenNameEQUAL
"java.lang.Exception: Just testing"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
String	TokenNameIdentifier
EXCEPTION2	TokenNameIdentifier
=	TokenNameEQUAL
"\s*at .*\(.*\)"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
String	TokenNameIdentifier
EXCEPTION3	TokenNameIdentifier
=	TokenNameEQUAL
"\s*at .*\(Native Method\)"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
String	TokenNameIdentifier
EXCEPTION4	TokenNameIdentifier
=	TokenNameEQUAL
"\s*at .*\(.*Compiled Code\)"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
String	TokenNameIdentifier
EXCEPTION5	TokenNameIdentifier
=	TokenNameEQUAL
"\s*at .*\(.*libgcj.*\)"	TokenNameStringLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
Logger	TokenNameIdentifier
logger	TokenNameIdentifier
=	TokenNameEQUAL
Logger	TokenNameIdentifier
.	TokenNameDOT
getLogger	TokenNameIdentifier
(	TokenNameLPAREN
SocketServerTestCase	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
public	TokenNamepublic
final	TokenNamefinal
int	TokenNameint
PORT	TokenNameIdentifier
=	TokenNameEQUAL
12345	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
static	TokenNamestatic
Logger	TokenNameIdentifier
rootLogger	TokenNameIdentifier
=	TokenNameEQUAL
Logger	TokenNameIdentifier
.	TokenNameDOT
getRootLogger	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SocketAppender	TokenNameIdentifier
socketAppender	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
SocketServerTestCase	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
name	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setUp	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Setting up test case."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
tearDown	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Tearing down test case."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
socketAppender	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
rootLogger	TokenNameIdentifier
.	TokenNameDOT
removeAllAppenders	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
test1	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
socketAppender	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SocketAppender	TokenNameIdentifier
(	TokenNameLPAREN
"localhost"	TokenNameStringLiteral
,	TokenNameCOMMA
PORT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rootLogger	TokenNameIdentifier
.	TokenNameDOT
addAppender	TokenNameIdentifier
(	TokenNameLPAREN
socketAppender	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
common	TokenNameIdentifier
(	TokenNameLPAREN
"T1"	TokenNameStringLiteral
,	TokenNameCOMMA
"key1"	TokenNameStringLiteral
,	TokenNameCOMMA
"MDC-TEST1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
delay	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ControlFilter	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ControlFilter	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
PAT1	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION1	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION2	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION3	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION4	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION5	TokenNameIdentifier
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Transformer	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
(	TokenNameLPAREN
TEMP	TokenNameIdentifier
,	TokenNameCOMMA
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Filter	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
cf	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
LineNumberFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
JunitTestRunnerFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
SunReflectFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
Compare	TokenNameIdentifier
.	TokenNameDOT
compare	TokenNameIdentifier
(	TokenNameLPAREN
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
"witness/socketServer.1"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
test2	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
socketAppender	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SocketAppender	TokenNameIdentifier
(	TokenNameLPAREN
"localhost"	TokenNameStringLiteral
,	TokenNameCOMMA
PORT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rootLogger	TokenNameIdentifier
.	TokenNameDOT
addAppender	TokenNameIdentifier
(	TokenNameLPAREN
socketAppender	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
common	TokenNameIdentifier
(	TokenNameLPAREN
"T2"	TokenNameStringLiteral
,	TokenNameCOMMA
"key2"	TokenNameStringLiteral
,	TokenNameCOMMA
"MDC-TEST2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
delay	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ControlFilter	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ControlFilter	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
PAT2	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION1	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION2	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION3	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION4	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION5	TokenNameIdentifier
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Transformer	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
(	TokenNameLPAREN
TEMP	TokenNameIdentifier
,	TokenNameCOMMA
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Filter	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
cf	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
LineNumberFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
JunitTestRunnerFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
SunReflectFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
Compare	TokenNameIdentifier
.	TokenNameDOT
compare	TokenNameIdentifier
(	TokenNameLPAREN
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
"witness/socketServer.2"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
test3	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
socketAppender	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SocketAppender	TokenNameIdentifier
(	TokenNameLPAREN
"localhost"	TokenNameStringLiteral
,	TokenNameCOMMA
PORT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
socketAppender	TokenNameIdentifier
.	TokenNameDOT
setLocationInfo	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rootLogger	TokenNameIdentifier
.	TokenNameDOT
addAppender	TokenNameIdentifier
(	TokenNameLPAREN
socketAppender	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
common	TokenNameIdentifier
(	TokenNameLPAREN
"T3"	TokenNameStringLiteral
,	TokenNameCOMMA
"key3"	TokenNameStringLiteral
,	TokenNameCOMMA
"MDC-TEST3"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
delay	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ControlFilter	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ControlFilter	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
PAT3	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION1	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION2	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION3	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION4	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION5	TokenNameIdentifier
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Transformer	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
(	TokenNameLPAREN
TEMP	TokenNameIdentifier
,	TokenNameCOMMA
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Filter	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
cf	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
LineNumberFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
JunitTestRunnerFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
SunReflectFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
Compare	TokenNameIdentifier
.	TokenNameDOT
compare	TokenNameIdentifier
(	TokenNameLPAREN
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
"witness/socketServer.3"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
test4	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
socketAppender	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SocketAppender	TokenNameIdentifier
(	TokenNameLPAREN
"localhost"	TokenNameStringLiteral
,	TokenNameCOMMA
PORT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
socketAppender	TokenNameIdentifier
.	TokenNameDOT
setLocationInfo	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rootLogger	TokenNameIdentifier
.	TokenNameDOT
addAppender	TokenNameIdentifier
(	TokenNameLPAREN
socketAppender	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
NDC	TokenNameIdentifier
.	TokenNameDOT
push	TokenNameIdentifier
(	TokenNameLPAREN
"some"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
common	TokenNameIdentifier
(	TokenNameLPAREN
"T4"	TokenNameStringLiteral
,	TokenNameCOMMA
"key4"	TokenNameStringLiteral
,	TokenNameCOMMA
"MDC-TEST4"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
NDC	TokenNameIdentifier
.	TokenNameDOT
pop	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
delay	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"java.version"	TokenNameStringLiteral
)	TokenNameRPAREN
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
"1.1."	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ControlFilter	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ControlFilter	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
PAT4	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION1	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION2	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION3	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION4	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION5	TokenNameIdentifier
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Transformer	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
(	TokenNameLPAREN
TEMP	TokenNameIdentifier
,	TokenNameCOMMA
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Filter	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
cf	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
LineNumberFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
JunitTestRunnerFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
SunReflectFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
Compare	TokenNameIdentifier
.	TokenNameDOT
compare	TokenNameIdentifier
(	TokenNameLPAREN
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
"witness/socketServer.4"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
test5	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
socketAppender	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SocketAppender	TokenNameIdentifier
(	TokenNameLPAREN
"localhost"	TokenNameStringLiteral
,	TokenNameCOMMA
PORT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
socketAppender	TokenNameIdentifier
.	TokenNameDOT
setLocationInfo	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
AsyncAppender	TokenNameIdentifier
asyncAppender	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AsyncAppender	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
asyncAppender	TokenNameIdentifier
.	TokenNameDOT
setLocationInfo	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
asyncAppender	TokenNameIdentifier
.	TokenNameDOT
addAppender	TokenNameIdentifier
(	TokenNameLPAREN
socketAppender	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rootLogger	TokenNameIdentifier
.	TokenNameDOT
addAppender	TokenNameIdentifier
(	TokenNameLPAREN
asyncAppender	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
NDC	TokenNameIdentifier
.	TokenNameDOT
push	TokenNameIdentifier
(	TokenNameLPAREN
"some5"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
common	TokenNameIdentifier
(	TokenNameLPAREN
"T5"	TokenNameStringLiteral
,	TokenNameCOMMA
"key5"	TokenNameStringLiteral
,	TokenNameCOMMA
"MDC-TEST5"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
NDC	TokenNameIdentifier
.	TokenNameDOT
pop	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
delay	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"java.version"	TokenNameStringLiteral
)	TokenNameRPAREN
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
"1.1."	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ControlFilter	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ControlFilter	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
PAT5	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION1	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION2	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION3	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION4	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION5	TokenNameIdentifier
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Transformer	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
(	TokenNameLPAREN
TEMP	TokenNameIdentifier
,	TokenNameCOMMA
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Filter	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
cf	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
LineNumberFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
JunitTestRunnerFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
SunReflectFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
Compare	TokenNameIdentifier
.	TokenNameDOT
compare	TokenNameIdentifier
(	TokenNameLPAREN
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
"witness/socketServer.5"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
test6	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
socketAppender	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SocketAppender	TokenNameIdentifier
(	TokenNameLPAREN
"localhost"	TokenNameStringLiteral
,	TokenNameCOMMA
PORT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
socketAppender	TokenNameIdentifier
.	TokenNameDOT
setLocationInfo	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
AsyncAppender	TokenNameIdentifier
asyncAppender	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AsyncAppender	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
asyncAppender	TokenNameIdentifier
.	TokenNameDOT
setLocationInfo	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
asyncAppender	TokenNameIdentifier
.	TokenNameDOT
addAppender	TokenNameIdentifier
(	TokenNameLPAREN
socketAppender	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rootLogger	TokenNameIdentifier
.	TokenNameDOT
addAppender	TokenNameIdentifier
(	TokenNameLPAREN
asyncAppender	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
NDC	TokenNameIdentifier
.	TokenNameDOT
push	TokenNameIdentifier
(	TokenNameLPAREN
"some6"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MDC	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"hostID"	TokenNameStringLiteral
,	TokenNameCOMMA
"client-test6"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
common	TokenNameIdentifier
(	TokenNameLPAREN
"T6"	TokenNameStringLiteral
,	TokenNameCOMMA
"key6"	TokenNameStringLiteral
,	TokenNameCOMMA
"MDC-TEST6"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
NDC	TokenNameIdentifier
.	TokenNameDOT
pop	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MDC	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
"hostID"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
delay	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"java.version"	TokenNameStringLiteral
)	TokenNameRPAREN
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
"1.1."	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ControlFilter	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ControlFilter	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
PAT6	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION1	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION2	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION3	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION4	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION5	TokenNameIdentifier
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Transformer	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
(	TokenNameLPAREN
TEMP	TokenNameIdentifier
,	TokenNameCOMMA
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Filter	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
cf	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
LineNumberFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
JunitTestRunnerFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
SunReflectFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
Compare	TokenNameIdentifier
.	TokenNameDOT
compare	TokenNameIdentifier
(	TokenNameLPAREN
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
"witness/socketServer.6"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
test7	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
socketAppender	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SocketAppender	TokenNameIdentifier
(	TokenNameLPAREN
"localhost"	TokenNameStringLiteral
,	TokenNameCOMMA
PORT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
socketAppender	TokenNameIdentifier
.	TokenNameDOT
setLocationInfo	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rootLogger	TokenNameIdentifier
.	TokenNameDOT
addAppender	TokenNameIdentifier
(	TokenNameLPAREN
socketAppender	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
NDC	TokenNameIdentifier
.	TokenNameDOT
push	TokenNameIdentifier
(	TokenNameLPAREN
"some7"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MDC	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"hostID"	TokenNameStringLiteral
,	TokenNameCOMMA
"client-test7"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
common	TokenNameIdentifier
(	TokenNameLPAREN
"T7"	TokenNameStringLiteral
,	TokenNameCOMMA
"key7"	TokenNameStringLiteral
,	TokenNameCOMMA
"MDC-TEST7"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
NDC	TokenNameIdentifier
.	TokenNameDOT
pop	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MDC	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
"hostID"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
delay	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"java.version"	TokenNameStringLiteral
)	TokenNameRPAREN
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
"1.1."	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ControlFilter	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ControlFilter	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
PAT7	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION1	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION2	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION3	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION4	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION5	TokenNameIdentifier
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Transformer	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
(	TokenNameLPAREN
TEMP	TokenNameIdentifier
,	TokenNameCOMMA
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Filter	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
cf	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
LineNumberFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
JunitTestRunnerFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
SunReflectFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
Compare	TokenNameIdentifier
.	TokenNameDOT
compare	TokenNameIdentifier
(	TokenNameLPAREN
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
"witness/socketServer.7"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
test8	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
socketAppender	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SocketAppender	TokenNameIdentifier
(	TokenNameLPAREN
"localhost"	TokenNameStringLiteral
,	TokenNameCOMMA
PORT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
socketAppender	TokenNameIdentifier
.	TokenNameDOT
setLocationInfo	TokenNameIdentifier
(	TokenNameLPAREN
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rootLogger	TokenNameIdentifier
.	TokenNameDOT
addAppender	TokenNameIdentifier
(	TokenNameLPAREN
socketAppender	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
NDC	TokenNameIdentifier
.	TokenNameDOT
push	TokenNameIdentifier
(	TokenNameLPAREN
"some8"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"java.vendor"	TokenNameStringLiteral
)	TokenNameRPAREN
.	TokenNameDOT
indexOf	TokenNameIdentifier
(	TokenNameLPAREN
"Apache"	TokenNameStringLiteral
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
MDC	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"hostID"	TokenNameStringLiteral
,	TokenNameCOMMA
"shortSocketServer"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
common	TokenNameIdentifier
(	TokenNameLPAREN
"T8"	TokenNameStringLiteral
,	TokenNameCOMMA
"key8"	TokenNameStringLiteral
,	TokenNameCOMMA
"MDC-TEST8"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
NDC	TokenNameIdentifier
.	TokenNameDOT
pop	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
delay	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"java.version"	TokenNameStringLiteral
)	TokenNameRPAREN
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
"1.1."	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
ControlFilter	TokenNameIdentifier
cf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ControlFilter	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
PAT8	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION1	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION2	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION3	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION4	TokenNameIdentifier
,	TokenNameCOMMA
EXCEPTION5	TokenNameIdentifier
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Transformer	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
(	TokenNameLPAREN
TEMP	TokenNameIdentifier
,	TokenNameCOMMA
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Filter	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
cf	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
LineNumberFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
JunitTestRunnerFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
SunReflectFilter	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
assertTrue	TokenNameIdentifier
(	TokenNameLPAREN
Compare	TokenNameIdentifier
.	TokenNameDOT
compare	TokenNameIdentifier
(	TokenNameLPAREN
FILTERED	TokenNameIdentifier
,	TokenNameCOMMA
"witness/socketServer.8"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
void	TokenNamevoid
common	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
dc	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
key	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
o	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
oldThreadName	TokenNameIdentifier
=	TokenNameEQUAL
Thread	TokenNameIdentifier
.	TokenNameDOT
currentThread	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Thread	TokenNameIdentifier
.	TokenNameDOT
currentThread	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
setName	TokenNameIdentifier
(	TokenNameLPAREN
"main"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
NDC	TokenNameIdentifier
.	TokenNameDOT
push	TokenNameIdentifier
(	TokenNameLPAREN
dc	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MDC	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
,	TokenNameCOMMA
o	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Logger	TokenNameIdentifier
root	TokenNameIdentifier
=	TokenNameEQUAL
Logger	TokenNameIdentifier
.	TokenNameDOT
getRootLogger	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
setLevel	TokenNameIdentifier
(	TokenNameLPAREN
Level	TokenNameIdentifier
.	TokenNameDOT
DEBUG	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rootLogger	TokenNameIdentifier
.	TokenNameDOT
setLevel	TokenNameIdentifier
(	TokenNameLPAREN
Level	TokenNameIdentifier
.	TokenNameDOT
DEBUG	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
log	TokenNameIdentifier
(	TokenNameLPAREN
XLevel	TokenNameIdentifier
.	TokenNameDOT
TRACE	TokenNameIdentifier
,	TokenNameCOMMA
"Message "	TokenNameStringLiteral
+	TokenNamePLUS
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
setLevel	TokenNameIdentifier
(	TokenNameLPAREN
Level	TokenNameIdentifier
.	TokenNameDOT
TRACE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
rootLogger	TokenNameIdentifier
.	TokenNameDOT
setLevel	TokenNameIdentifier
(	TokenNameLPAREN
Level	TokenNameIdentifier
.	TokenNameDOT
TRACE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
trace	TokenNameIdentifier
(	TokenNameLPAREN
"Message "	TokenNameStringLiteral
+	TokenNamePLUS
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
root	TokenNameIdentifier
.	TokenNameDOT
trace	TokenNameIdentifier
(	TokenNameLPAREN
"Message "	TokenNameStringLiteral
+	TokenNamePLUS
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"Message "	TokenNameStringLiteral
+	TokenNamePLUS
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
root	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"Message "	TokenNameStringLiteral
+	TokenNamePLUS
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
info	TokenNameIdentifier
(	TokenNameLPAREN
"Message "	TokenNameStringLiteral
+	TokenNamePLUS
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
warn	TokenNameIdentifier
(	TokenNameLPAREN
"Message "	TokenNameStringLiteral
+	TokenNamePLUS
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
log	TokenNameIdentifier
(	TokenNameLPAREN
XLevel	TokenNameIdentifier
.	TokenNameDOT
LETHAL	TokenNameIdentifier
,	TokenNameCOMMA
"Message "	TokenNameStringLiteral
+	TokenNamePLUS
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Exception	TokenNameIdentifier
e	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Exception	TokenNameIdentifier
(	TokenNameLPAREN
"Just testing"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logger	TokenNameIdentifier
.	TokenNameDOT
debug	TokenNameIdentifier
(	TokenNameLPAREN
"Message "	TokenNameStringLiteral
+	TokenNamePLUS
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
root	TokenNameIdentifier
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
"Message "	TokenNameStringLiteral
+	TokenNamePLUS
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
,	TokenNameCOMMA
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
NDC	TokenNameIdentifier
.	TokenNameDOT
pop	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
MDC	TokenNameIdentifier
.	TokenNameDOT
remove	TokenNameIdentifier
(	TokenNameLPAREN
key	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Thread	TokenNameIdentifier
.	TokenNameDOT
currentThread	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
setName	TokenNameIdentifier
(	TokenNameLPAREN
oldThreadName	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
delay	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
secs	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
Thread	TokenNameIdentifier
.	TokenNameDOT
sleep	TokenNameIdentifier
(	TokenNameLPAREN
secs	TokenNameIdentifier
*	TokenNameMULTIPLY
1000	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
Test	TokenNameIdentifier
suite	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
TestSuite	TokenNameIdentifier
suite	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
TestSuite	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
suite	TokenNameIdentifier
.	TokenNameDOT
addTest	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SocketServerTestCase	TokenNameIdentifier
(	TokenNameLPAREN
"test1"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
suite	TokenNameIdentifier
.	TokenNameDOT
addTest	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SocketServerTestCase	TokenNameIdentifier
(	TokenNameLPAREN
"test2"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
suite	TokenNameIdentifier
.	TokenNameDOT
addTest	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SocketServerTestCase	TokenNameIdentifier
(	TokenNameLPAREN
"test3"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
suite	TokenNameIdentifier
.	TokenNameDOT
addTest	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SocketServerTestCase	TokenNameIdentifier
(	TokenNameLPAREN
"test4"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
suite	TokenNameIdentifier
.	TokenNameDOT
addTest	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SocketServerTestCase	TokenNameIdentifier
(	TokenNameLPAREN
"test5"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
suite	TokenNameIdentifier
.	TokenNameDOT
addTest	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SocketServerTestCase	TokenNameIdentifier
(	TokenNameLPAREN
"test6"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
suite	TokenNameIdentifier
.	TokenNameDOT
addTest	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SocketServerTestCase	TokenNameIdentifier
(	TokenNameLPAREN
"test7"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
suite	TokenNameIdentifier
.	TokenNameDOT
addTest	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
SocketServerTestCase	TokenNameIdentifier
(	TokenNameLPAREN
"test8"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
suite	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
