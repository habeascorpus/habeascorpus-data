package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
bcel	TokenNameIdentifier
.	TokenNameDOT
generic	TokenNameIdentifier
.	TokenNameDOT
BranchInstruction	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
bcel	TokenNameIdentifier
.	TokenNameDOT
generic	TokenNameIdentifier
.	TokenNameDOT
ConstantPoolGen	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
bcel	TokenNameIdentifier
.	TokenNameDOT
generic	TokenNameIdentifier
.	TokenNameDOT
INVOKESTATIC	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
bcel	TokenNameIdentifier
.	TokenNameDOT
generic	TokenNameIdentifier
.	TokenNameDOT
InstructionList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
bcel	TokenNameIdentifier
.	TokenNameDOT
generic	TokenNameIdentifier
.	TokenNameDOT
PUSH	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
BooleanType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ClassGenerator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ErrorMsg	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
IntType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
MethodGenerator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
MethodType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
NodeSetType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
NodeType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
RealType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ReferenceType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ResultTreeType	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Type	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
TypeCheckError	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
runtime	TokenNameIdentifier
.	TokenNameDOT
Operators	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
class	TokenNameclass
RelationalExpr	TokenNameIdentifier
extends	TokenNameextends
Expression	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
int	TokenNameint
_op	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
Expression	TokenNameIdentifier
_left	TokenNameIdentifier
,	TokenNameCOMMA
_right	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
RelationalExpr	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
op	TokenNameIdentifier
,	TokenNameCOMMA
Expression	TokenNameIdentifier
left	TokenNameIdentifier
,	TokenNameCOMMA
Expression	TokenNameIdentifier
right	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
_op	TokenNameIdentifier
=	TokenNameEQUAL
op	TokenNameIdentifier
;	TokenNameSEMICOLON
(	TokenNameLPAREN
_left	TokenNameIdentifier
=	TokenNameEQUAL
left	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setParent	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
(	TokenNameLPAREN
_right	TokenNameIdentifier
=	TokenNameEQUAL
right	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setParent	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setParser	TokenNameIdentifier
(	TokenNameLPAREN
Parser	TokenNameIdentifier
parser	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
.	TokenNameDOT
setParser	TokenNameIdentifier
(	TokenNameLPAREN
parser	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
_left	TokenNameIdentifier
.	TokenNameDOT
setParser	TokenNameIdentifier
(	TokenNameLPAREN
parser	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
_right	TokenNameIdentifier
.	TokenNameDOT
setParser	TokenNameIdentifier
(	TokenNameLPAREN
parser	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
hasPositionCall	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
_left	TokenNameIdentifier
.	TokenNameDOT
hasPositionCall	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
_right	TokenNameIdentifier
.	TokenNameDOT
hasPositionCall	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
hasLastCall	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
_left	TokenNameIdentifier
.	TokenNameDOT
hasLastCall	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
_right	TokenNameIdentifier
.	TokenNameDOT
hasLastCall	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
hasReferenceArgs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
_left	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
instanceof	TokenNameinstanceof
ReferenceType	TokenNameIdentifier
||	TokenNameOR_OR
_right	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
instanceof	TokenNameinstanceof
ReferenceType	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
hasNodeArgs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
_left	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
instanceof	TokenNameinstanceof
NodeType	TokenNameIdentifier
||	TokenNameOR_OR
_right	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
instanceof	TokenNameinstanceof
NodeType	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
hasNodeSetArgs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
_left	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
instanceof	TokenNameinstanceof
NodeSetType	TokenNameIdentifier
||	TokenNameOR_OR
_right	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
instanceof	TokenNameinstanceof
NodeSetType	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Type	TokenNameIdentifier
typeCheck	TokenNameIdentifier
(	TokenNameLPAREN
SymbolTable	TokenNameIdentifier
stable	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TypeCheckError	TokenNameIdentifier
{	TokenNameLBRACE
Type	TokenNameIdentifier
tleft	TokenNameIdentifier
=	TokenNameEQUAL
_left	TokenNameIdentifier
.	TokenNameDOT
typeCheck	TokenNameIdentifier
(	TokenNameLPAREN
stable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Type	TokenNameIdentifier
tright	TokenNameIdentifier
=	TokenNameEQUAL
_right	TokenNameIdentifier
.	TokenNameDOT
typeCheck	TokenNameIdentifier
(	TokenNameLPAREN
stable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
tleft	TokenNameIdentifier
instanceof	TokenNameinstanceof
ResultTreeType	TokenNameIdentifier
&&	TokenNameAND_AND
tright	TokenNameIdentifier
instanceof	TokenNameinstanceof
ResultTreeType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
_right	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CastExpr	TokenNameIdentifier
(	TokenNameLPAREN
_right	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
.	TokenNameDOT
Real	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
_left	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CastExpr	TokenNameIdentifier
(	TokenNameLPAREN
_left	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
.	TokenNameDOT
Real	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
_type	TokenNameIdentifier
=	TokenNameEQUAL
Type	TokenNameIdentifier
.	TokenNameDOT
Boolean	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
hasReferenceArgs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Type	TokenNameIdentifier
type	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Type	TokenNameIdentifier
typeL	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
Type	TokenNameIdentifier
typeR	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
tleft	TokenNameIdentifier
instanceof	TokenNameinstanceof
ReferenceType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
_left	TokenNameIdentifier
instanceof	TokenNameinstanceof
VariableRefBase	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
VariableRefBase	TokenNameIdentifier
ref	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
VariableRefBase	TokenNameIdentifier
)	TokenNameRPAREN
_left	TokenNameIdentifier
;	TokenNameSEMICOLON
VariableBase	TokenNameIdentifier
var	TokenNameIdentifier
=	TokenNameEQUAL
ref	TokenNameIdentifier
.	TokenNameDOT
getVariable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
typeL	TokenNameIdentifier
=	TokenNameEQUAL
var	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
tright	TokenNameIdentifier
instanceof	TokenNameinstanceof
ReferenceType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
_right	TokenNameIdentifier
instanceof	TokenNameinstanceof
VariableRefBase	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
VariableRefBase	TokenNameIdentifier
ref	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
VariableRefBase	TokenNameIdentifier
)	TokenNameRPAREN
_right	TokenNameIdentifier
;	TokenNameSEMICOLON
VariableBase	TokenNameIdentifier
var	TokenNameIdentifier
=	TokenNameEQUAL
ref	TokenNameIdentifier
.	TokenNameDOT
getVariable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
typeR	TokenNameIdentifier
=	TokenNameEQUAL
var	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
typeL	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
type	TokenNameIdentifier
=	TokenNameEQUAL
typeR	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
typeR	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
type	TokenNameIdentifier
=	TokenNameEQUAL
typeL	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
{	TokenNameLBRACE
type	TokenNameIdentifier
=	TokenNameEQUAL
Type	TokenNameIdentifier
.	TokenNameDOT
Real	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
type	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
type	TokenNameIdentifier
=	TokenNameEQUAL
Type	TokenNameIdentifier
.	TokenNameDOT
Real	TokenNameIdentifier
;	TokenNameSEMICOLON
_right	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CastExpr	TokenNameIdentifier
(	TokenNameLPAREN
_right	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
_left	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CastExpr	TokenNameIdentifier
(	TokenNameLPAREN
_left	TokenNameIdentifier
,	TokenNameCOMMA
type	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
_type	TokenNameIdentifier
=	TokenNameEQUAL
Type	TokenNameIdentifier
.	TokenNameDOT
Boolean	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
hasNodeSetArgs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
tright	TokenNameIdentifier
instanceof	TokenNameinstanceof
NodeSetType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
Expression	TokenNameIdentifier
temp	TokenNameIdentifier
=	TokenNameEQUAL
_right	TokenNameIdentifier
;	TokenNameSEMICOLON
_right	TokenNameIdentifier
=	TokenNameEQUAL
_left	TokenNameIdentifier
;	TokenNameSEMICOLON
_left	TokenNameIdentifier
=	TokenNameEQUAL
temp	TokenNameIdentifier
;	TokenNameSEMICOLON
_op	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
_op	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
Operators	TokenNameIdentifier
.	TokenNameDOT
GT	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
Operators	TokenNameIdentifier
.	TokenNameDOT
LT	TokenNameIdentifier
:	TokenNameCOLON
(	TokenNameLPAREN
_op	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
Operators	TokenNameIdentifier
.	TokenNameDOT
LT	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
Operators	TokenNameIdentifier
.	TokenNameDOT
GT	TokenNameIdentifier
:	TokenNameCOLON
(	TokenNameLPAREN
_op	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
Operators	TokenNameIdentifier
.	TokenNameDOT
GE	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
Operators	TokenNameIdentifier
.	TokenNameDOT
LE	TokenNameIdentifier
:	TokenNameCOLON
Operators	TokenNameIdentifier
.	TokenNameDOT
GE	TokenNameIdentifier
;	TokenNameSEMICOLON
tright	TokenNameIdentifier
=	TokenNameEQUAL
_right	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
tright	TokenNameIdentifier
instanceof	TokenNameinstanceof
NodeType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
_right	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CastExpr	TokenNameIdentifier
(	TokenNameLPAREN
_right	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
.	TokenNameDOT
NodeSet	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
tright	TokenNameIdentifier
instanceof	TokenNameinstanceof
IntType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
_right	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CastExpr	TokenNameIdentifier
(	TokenNameLPAREN
_right	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
.	TokenNameDOT
Real	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
tright	TokenNameIdentifier
instanceof	TokenNameinstanceof
ResultTreeType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
_right	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CastExpr	TokenNameIdentifier
(	TokenNameLPAREN
_right	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
_type	TokenNameIdentifier
=	TokenNameEQUAL
Type	TokenNameIdentifier
.	TokenNameDOT
Boolean	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
hasNodeArgs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
tleft	TokenNameIdentifier
instanceof	TokenNameinstanceof
BooleanType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
_right	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CastExpr	TokenNameIdentifier
(	TokenNameLPAREN
_right	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
.	TokenNameDOT
Boolean	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tright	TokenNameIdentifier
=	TokenNameEQUAL
Type	TokenNameIdentifier
.	TokenNameDOT
Boolean	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
tright	TokenNameIdentifier
instanceof	TokenNameinstanceof
BooleanType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
_left	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CastExpr	TokenNameIdentifier
(	TokenNameLPAREN
_left	TokenNameIdentifier
,	TokenNameCOMMA
Type	TokenNameIdentifier
.	TokenNameDOT
Boolean	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tleft	TokenNameIdentifier
=	TokenNameEQUAL
Type	TokenNameIdentifier
.	TokenNameDOT
Boolean	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
MethodType	TokenNameIdentifier
ptype	TokenNameIdentifier
=	TokenNameEQUAL
lookupPrimop	TokenNameIdentifier
(	TokenNameLPAREN
stable	TokenNameIdentifier
,	TokenNameCOMMA
Operators	TokenNameIdentifier
.	TokenNameDOT
getOpNames	TokenNameIdentifier
(	TokenNameLPAREN
_op	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
new	TokenNamenew
MethodType	TokenNameIdentifier
(	TokenNameLPAREN
Type	TokenNameIdentifier
.	TokenNameDOT
Void	TokenNameIdentifier
,	TokenNameCOMMA
tleft	TokenNameIdentifier
,	TokenNameCOMMA
tright	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
ptype	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
Type	TokenNameIdentifier
arg1	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Type	TokenNameIdentifier
)	TokenNameRPAREN
ptype	TokenNameIdentifier
.	TokenNameDOT
argsType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
arg1	TokenNameIdentifier
.	TokenNameDOT
identicalTo	TokenNameIdentifier
(	TokenNameLPAREN
tleft	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
_left	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CastExpr	TokenNameIdentifier
(	TokenNameLPAREN
_left	TokenNameIdentifier
,	TokenNameCOMMA
arg1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Type	TokenNameIdentifier
arg2	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Type	TokenNameIdentifier
)	TokenNameRPAREN
ptype	TokenNameIdentifier
.	TokenNameDOT
argsType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
arg2	TokenNameIdentifier
.	TokenNameDOT
identicalTo	TokenNameIdentifier
(	TokenNameLPAREN
tright	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
_right	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
CastExpr	TokenNameIdentifier
(	TokenNameLPAREN
_right	TokenNameIdentifier
,	TokenNameCOMMA
arg1	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
_type	TokenNameIdentifier
=	TokenNameEQUAL
ptype	TokenNameIdentifier
.	TokenNameDOT
resultType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
throw	TokenNamethrow
new	TokenNamenew
TypeCheckError	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
translate	TokenNameIdentifier
(	TokenNameLPAREN
ClassGenerator	TokenNameIdentifier
classGen	TokenNameIdentifier
,	TokenNameCOMMA
MethodGenerator	TokenNameIdentifier
methodGen	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
hasNodeSetArgs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
hasReferenceArgs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
ConstantPoolGen	TokenNameIdentifier
cpg	TokenNameIdentifier
=	TokenNameEQUAL
classGen	TokenNameIdentifier
.	TokenNameDOT
getConstantPool	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
InstructionList	TokenNameIdentifier
il	TokenNameIdentifier
=	TokenNameEQUAL
methodGen	TokenNameIdentifier
.	TokenNameDOT
getInstructionList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
_left	TokenNameIdentifier
.	TokenNameDOT
translate	TokenNameIdentifier
(	TokenNameLPAREN
classGen	TokenNameIdentifier
,	TokenNameCOMMA
methodGen	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
_left	TokenNameIdentifier
.	TokenNameDOT
startIterator	TokenNameIdentifier
(	TokenNameLPAREN
classGen	TokenNameIdentifier
,	TokenNameCOMMA
methodGen	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
_right	TokenNameIdentifier
.	TokenNameDOT
translate	TokenNameIdentifier
(	TokenNameLPAREN
classGen	TokenNameIdentifier
,	TokenNameCOMMA
methodGen	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
_right	TokenNameIdentifier
.	TokenNameDOT
startIterator	TokenNameIdentifier
(	TokenNameLPAREN
classGen	TokenNameIdentifier
,	TokenNameCOMMA
methodGen	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
il	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
PUSH	TokenNameIdentifier
(	TokenNameLPAREN
cpg	TokenNameIdentifier
,	TokenNameCOMMA
_op	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
il	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
methodGen	TokenNameIdentifier
.	TokenNameDOT
loadDOM	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
index	TokenNameIdentifier
=	TokenNameEQUAL
cpg	TokenNameIdentifier
.	TokenNameDOT
addMethodref	TokenNameIdentifier
(	TokenNameLPAREN
BASIS_LIBRARY_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
"compare"	TokenNameStringLiteral
,	TokenNameCOMMA
"("	TokenNameStringLiteral
+	TokenNamePLUS
_left	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
toSignature	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
_right	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
toSignature	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
"I"	TokenNameStringLiteral
+	TokenNamePLUS
DOM_INTF_SIG	TokenNameIdentifier
+	TokenNamePLUS
")Z"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
il	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
INVOKESTATIC	TokenNameIdentifier
(	TokenNameLPAREN
index	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
translateDesynthesized	TokenNameIdentifier
(	TokenNameLPAREN
classGen	TokenNameIdentifier
,	TokenNameCOMMA
methodGen	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
synthesize	TokenNameIdentifier
(	TokenNameLPAREN
classGen	TokenNameIdentifier
,	TokenNameCOMMA
methodGen	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
translateDesynthesized	TokenNameIdentifier
(	TokenNameLPAREN
ClassGenerator	TokenNameIdentifier
classGen	TokenNameIdentifier
,	TokenNameCOMMA
MethodGenerator	TokenNameIdentifier
methodGen	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
hasNodeSetArgs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
hasReferenceArgs	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
translate	TokenNameIdentifier
(	TokenNameLPAREN
classGen	TokenNameIdentifier
,	TokenNameCOMMA
methodGen	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
desynthesize	TokenNameIdentifier
(	TokenNameLPAREN
classGen	TokenNameIdentifier
,	TokenNameCOMMA
methodGen	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
BranchInstruction	TokenNameIdentifier
bi	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
final	TokenNamefinal
InstructionList	TokenNameIdentifier
il	TokenNameIdentifier
=	TokenNameEQUAL
methodGen	TokenNameIdentifier
.	TokenNameDOT
getInstructionList	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
_left	TokenNameIdentifier
.	TokenNameDOT
translate	TokenNameIdentifier
(	TokenNameLPAREN
classGen	TokenNameIdentifier
,	TokenNameCOMMA
methodGen	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
_right	TokenNameIdentifier
.	TokenNameDOT
translate	TokenNameIdentifier
(	TokenNameLPAREN
classGen	TokenNameIdentifier
,	TokenNameCOMMA
methodGen	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
tozero	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
Type	TokenNameIdentifier
tleft	TokenNameIdentifier
=	TokenNameEQUAL
_left	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
tleft	TokenNameIdentifier
instanceof	TokenNameinstanceof
RealType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
il	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
tleft	TokenNameIdentifier
.	TokenNameDOT
CMP	TokenNameIdentifier
(	TokenNameLPAREN
_op	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
Operators	TokenNameIdentifier
.	TokenNameDOT
LT	TokenNameIdentifier
||	TokenNameOR_OR
_op	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
Operators	TokenNameIdentifier
.	TokenNameDOT
LE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tleft	TokenNameIdentifier
=	TokenNameEQUAL
Type	TokenNameIdentifier
.	TokenNameDOT
Int	TokenNameIdentifier
;	TokenNameSEMICOLON
tozero	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
_op	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
Operators	TokenNameIdentifier
.	TokenNameDOT
LT	TokenNameIdentifier
:	TokenNameCOLON
bi	TokenNameIdentifier
=	TokenNameEQUAL
tleft	TokenNameIdentifier
.	TokenNameDOT
GE	TokenNameIdentifier
(	TokenNameLPAREN
tozero	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
Operators	TokenNameIdentifier
.	TokenNameDOT
GT	TokenNameIdentifier
:	TokenNameCOLON
bi	TokenNameIdentifier
=	TokenNameEQUAL
tleft	TokenNameIdentifier
.	TokenNameDOT
LE	TokenNameIdentifier
(	TokenNameLPAREN
tozero	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
Operators	TokenNameIdentifier
.	TokenNameDOT
LE	TokenNameIdentifier
:	TokenNameCOLON
bi	TokenNameIdentifier
=	TokenNameEQUAL
tleft	TokenNameIdentifier
.	TokenNameDOT
GT	TokenNameIdentifier
(	TokenNameLPAREN
tozero	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
Operators	TokenNameIdentifier
.	TokenNameDOT
GE	TokenNameIdentifier
:	TokenNameCOLON
bi	TokenNameIdentifier
=	TokenNameEQUAL
tleft	TokenNameIdentifier
.	TokenNameDOT
LT	TokenNameIdentifier
(	TokenNameLPAREN
tozero	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
ErrorMsg	TokenNameIdentifier
msg	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ErrorMsg	TokenNameIdentifier
(	TokenNameLPAREN
ErrorMsg	TokenNameIdentifier
.	TokenNameDOT
ILLEGAL_RELAT_OP_ERR	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
getParser	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
reportError	TokenNameIdentifier
(	TokenNameLPAREN
Constants	TokenNameIdentifier
.	TokenNameDOT
FATAL	TokenNameIdentifier
,	TokenNameCOMMA
msg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
_falseList	TokenNameIdentifier
.	TokenNameDOT
add	TokenNameIdentifier
(	TokenNameLPAREN
il	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
bi	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
Operators	TokenNameIdentifier
.	TokenNameDOT
getOpNames	TokenNameIdentifier
(	TokenNameLPAREN
_op	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
'('	TokenNameCharacterLiteral
+	TokenNamePLUS
_left	TokenNameIdentifier
+	TokenNamePLUS
", "	TokenNameStringLiteral
+	TokenNamePLUS
_right	TokenNameIdentifier
+	TokenNamePLUS
')'	TokenNameCharacterLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
