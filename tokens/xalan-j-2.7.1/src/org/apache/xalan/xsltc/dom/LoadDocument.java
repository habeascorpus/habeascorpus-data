package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
FileNotFoundException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
stream	TokenNameIdentifier
.	TokenNameDOT
StreamSource	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
DOM	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
DOMCache	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
DOMEnhancedForDTM	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
TransletException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
runtime	TokenNameIdentifier
.	TokenNameDOT
AbstractTranslet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xsltc	TokenNameIdentifier
.	TokenNameDOT
trax	TokenNameIdentifier
.	TokenNameDOT
TemplatesImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
dtm	TokenNameIdentifier
.	TokenNameDOT
DTM	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
dtm	TokenNameIdentifier
.	TokenNameDOT
DTMAxisIterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
dtm	TokenNameIdentifier
.	TokenNameDOT
DTMManager	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
dtm	TokenNameIdentifier
.	TokenNameDOT
ref	TokenNameIdentifier
.	TokenNameDOT
DTMDefaultBase	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
dtm	TokenNameIdentifier
.	TokenNameDOT
ref	TokenNameIdentifier
.	TokenNameDOT
EmptyIterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
SystemIDResolver	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
sax	TokenNameIdentifier
.	TokenNameDOT
InputSource	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
sax	TokenNameIdentifier
.	TokenNameDOT
XMLReader	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
final	TokenNamefinal
class	TokenNameclass
LoadDocument	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
NAMESPACE_FEATURE	TokenNameIdentifier
=	TokenNameEQUAL
"http://xml.org/sax/features/namespaces"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
DTMAxisIterator	TokenNameIdentifier
documentF	TokenNameIdentifier
(	TokenNameLPAREN
Object	TokenNameIdentifier
arg1	TokenNameIdentifier
,	TokenNameCOMMA
DTMAxisIterator	TokenNameIdentifier
arg2	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
xslURI	TokenNameIdentifier
,	TokenNameCOMMA
AbstractTranslet	TokenNameIdentifier
translet	TokenNameIdentifier
,	TokenNameCOMMA
DOM	TokenNameIdentifier
dom	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransletException	TokenNameIdentifier
{	TokenNameLBRACE
String	TokenNameIdentifier
baseURI	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
final	TokenNamefinal
int	TokenNameint
arg2FirstNode	TokenNameIdentifier
=	TokenNameEQUAL
arg2	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
arg2FirstNode	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
DTMAxisIterator	TokenNameIdentifier
.	TokenNameDOT
END	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
EmptyIterator	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
baseURI	TokenNameIdentifier
=	TokenNameEQUAL
dom	TokenNameIdentifier
.	TokenNameDOT
getDocumentURI	TokenNameIdentifier
(	TokenNameLPAREN
arg2FirstNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
SystemIDResolver	TokenNameIdentifier
.	TokenNameDOT
isAbsoluteURI	TokenNameIdentifier
(	TokenNameLPAREN
baseURI	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
baseURI	TokenNameIdentifier
=	TokenNameEQUAL
SystemIDResolver	TokenNameIdentifier
.	TokenNameDOT
getAbsoluteURIFromRelative	TokenNameIdentifier
(	TokenNameLPAREN
baseURI	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
arg1	TokenNameIdentifier
instanceof	TokenNameinstanceof
String	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
arg1	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
document	TokenNameIdentifier
(	TokenNameLPAREN
xslURI	TokenNameIdentifier
,	TokenNameCOMMA
""	TokenNameStringLiteral
,	TokenNameCOMMA
translet	TokenNameIdentifier
,	TokenNameCOMMA
dom	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
document	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
arg1	TokenNameIdentifier
,	TokenNameCOMMA
baseURI	TokenNameIdentifier
,	TokenNameCOMMA
translet	TokenNameIdentifier
,	TokenNameCOMMA
dom	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
arg1	TokenNameIdentifier
instanceof	TokenNameinstanceof
DTMAxisIterator	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
document	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
DTMAxisIterator	TokenNameIdentifier
)	TokenNameRPAREN
arg1	TokenNameIdentifier
,	TokenNameCOMMA
baseURI	TokenNameIdentifier
,	TokenNameCOMMA
translet	TokenNameIdentifier
,	TokenNameCOMMA
dom	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
final	TokenNamefinal
String	TokenNameIdentifier
err	TokenNameIdentifier
=	TokenNameEQUAL
"document("	TokenNameStringLiteral
+	TokenNamePLUS
arg1	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
")"	TokenNameStringLiteral
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
err	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
TransletException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
DTMAxisIterator	TokenNameIdentifier
documentF	TokenNameIdentifier
(	TokenNameLPAREN
Object	TokenNameIdentifier
arg	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
xslURI	TokenNameIdentifier
,	TokenNameCOMMA
AbstractTranslet	TokenNameIdentifier
translet	TokenNameIdentifier
,	TokenNameCOMMA
DOM	TokenNameIdentifier
dom	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransletException	TokenNameIdentifier
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
arg	TokenNameIdentifier
instanceof	TokenNameinstanceof
String	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
xslURI	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
xslURI	TokenNameIdentifier
=	TokenNameEQUAL
""	TokenNameStringLiteral
;	TokenNameSEMICOLON
String	TokenNameIdentifier
baseURI	TokenNameIdentifier
=	TokenNameEQUAL
xslURI	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
SystemIDResolver	TokenNameIdentifier
.	TokenNameDOT
isAbsoluteURI	TokenNameIdentifier
(	TokenNameLPAREN
xslURI	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
baseURI	TokenNameIdentifier
=	TokenNameEQUAL
SystemIDResolver	TokenNameIdentifier
.	TokenNameDOT
getAbsoluteURIFromRelative	TokenNameIdentifier
(	TokenNameLPAREN
xslURI	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
href	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
arg	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
href	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
href	TokenNameIdentifier
=	TokenNameEQUAL
""	TokenNameStringLiteral
;	TokenNameSEMICOLON
TemplatesImpl	TokenNameIdentifier
templates	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TemplatesImpl	TokenNameIdentifier
)	TokenNameRPAREN
translet	TokenNameIdentifier
.	TokenNameDOT
getTemplates	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOM	TokenNameIdentifier
sdom	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
templates	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
sdom	TokenNameIdentifier
=	TokenNameEQUAL
templates	TokenNameIdentifier
.	TokenNameDOT
getStylesheetDOM	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
sdom	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
document	TokenNameIdentifier
(	TokenNameLPAREN
sdom	TokenNameIdentifier
,	TokenNameCOMMA
translet	TokenNameIdentifier
,	TokenNameCOMMA
dom	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
document	TokenNameIdentifier
(	TokenNameLPAREN
href	TokenNameIdentifier
,	TokenNameCOMMA
baseURI	TokenNameIdentifier
,	TokenNameCOMMA
translet	TokenNameIdentifier
,	TokenNameCOMMA
dom	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
document	TokenNameIdentifier
(	TokenNameLPAREN
href	TokenNameIdentifier
,	TokenNameCOMMA
baseURI	TokenNameIdentifier
,	TokenNameCOMMA
translet	TokenNameIdentifier
,	TokenNameCOMMA
dom	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
arg	TokenNameIdentifier
instanceof	TokenNameinstanceof
DTMAxisIterator	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
document	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
DTMAxisIterator	TokenNameIdentifier
)	TokenNameRPAREN
arg	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
translet	TokenNameIdentifier
,	TokenNameCOMMA
dom	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
final	TokenNamefinal
String	TokenNameIdentifier
err	TokenNameIdentifier
=	TokenNameEQUAL
"document("	TokenNameStringLiteral
+	TokenNamePLUS
arg	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
")"	TokenNameStringLiteral
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
IllegalArgumentException	TokenNameIdentifier
(	TokenNameLPAREN
err	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
TransletException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
DTMAxisIterator	TokenNameIdentifier
document	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
uri	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
base	TokenNameIdentifier
,	TokenNameCOMMA
AbstractTranslet	TokenNameIdentifier
translet	TokenNameIdentifier
,	TokenNameCOMMA
DOM	TokenNameIdentifier
dom	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
document	TokenNameIdentifier
(	TokenNameLPAREN
uri	TokenNameIdentifier
,	TokenNameCOMMA
base	TokenNameIdentifier
,	TokenNameCOMMA
translet	TokenNameIdentifier
,	TokenNameCOMMA
dom	TokenNameIdentifier
,	TokenNameCOMMA
false	TokenNamefalse
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
DTMAxisIterator	TokenNameIdentifier
document	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
uri	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
base	TokenNameIdentifier
,	TokenNameCOMMA
AbstractTranslet	TokenNameIdentifier
translet	TokenNameIdentifier
,	TokenNameCOMMA
DOM	TokenNameIdentifier
dom	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
cacheDOM	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
final	TokenNamefinal
String	TokenNameIdentifier
originalUri	TokenNameIdentifier
=	TokenNameEQUAL
uri	TokenNameIdentifier
;	TokenNameSEMICOLON
MultiDOM	TokenNameIdentifier
multiplexer	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
MultiDOM	TokenNameIdentifier
)	TokenNameRPAREN
dom	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
base	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
!	TokenNameNOT
base	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
uri	TokenNameIdentifier
=	TokenNameEQUAL
SystemIDResolver	TokenNameIdentifier
.	TokenNameDOT
getAbsoluteURI	TokenNameIdentifier
(	TokenNameLPAREN
uri	TokenNameIdentifier
,	TokenNameCOMMA
base	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
uri	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
||	TokenNameOR_OR
uri	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
EmptyIterator	TokenNameIdentifier
.	TokenNameDOT
getInstance	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
mask	TokenNameIdentifier
=	TokenNameEQUAL
multiplexer	TokenNameIdentifier
.	TokenNameDOT
getDocumentMask	TokenNameIdentifier
(	TokenNameLPAREN
uri	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
mask	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
DOM	TokenNameIdentifier
newDom	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
DOMAdapter	TokenNameIdentifier
)	TokenNameRPAREN
multiplexer	TokenNameIdentifier
.	TokenNameDOT
getDOMAdapter	TokenNameIdentifier
(	TokenNameLPAREN
uri	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getDOMImpl	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
newDom	TokenNameIdentifier
instanceof	TokenNameinstanceof
DOMEnhancedForDTM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
SingletonIterator	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
DOMEnhancedForDTM	TokenNameIdentifier
)	TokenNameRPAREN
newDom	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
DOMCache	TokenNameIdentifier
cache	TokenNameIdentifier
=	TokenNameEQUAL
translet	TokenNameIdentifier
.	TokenNameDOT
getDOMCache	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOM	TokenNameIdentifier
newdom	TokenNameIdentifier
;	TokenNameSEMICOLON
mask	TokenNameIdentifier
=	TokenNameEQUAL
multiplexer	TokenNameIdentifier
.	TokenNameDOT
nextMask	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cache	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
newdom	TokenNameIdentifier
=	TokenNameEQUAL
cache	TokenNameIdentifier
.	TokenNameDOT
retrieveDocument	TokenNameIdentifier
(	TokenNameLPAREN
base	TokenNameIdentifier
,	TokenNameCOMMA
originalUri	TokenNameIdentifier
,	TokenNameCOMMA
translet	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
newdom	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
final	TokenNamefinal
Exception	TokenNameIdentifier
e	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FileNotFoundException	TokenNameIdentifier
(	TokenNameLPAREN
originalUri	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
TransletException	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
XSLTCDTMManager	TokenNameIdentifier
dtmManager	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
XSLTCDTMManager	TokenNameIdentifier
)	TokenNameRPAREN
multiplexer	TokenNameIdentifier
.	TokenNameDOT
getDTMManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DOMEnhancedForDTM	TokenNameIdentifier
enhancedDOM	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
DOMEnhancedForDTM	TokenNameIdentifier
)	TokenNameRPAREN
dtmManager	TokenNameIdentifier
.	TokenNameDOT
getDTM	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
StreamSource	TokenNameIdentifier
(	TokenNameLPAREN
uri	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
true	TokenNametrue
,	TokenNameCOMMA
false	TokenNamefalse
,	TokenNameCOMMA
translet	TokenNameIdentifier
.	TokenNameDOT
hasIdCall	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
cacheDOM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
newdom	TokenNameIdentifier
=	TokenNameEQUAL
enhancedDOM	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
cacheDOM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
TemplatesImpl	TokenNameIdentifier
templates	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
TemplatesImpl	TokenNameIdentifier
)	TokenNameRPAREN
translet	TokenNameIdentifier
.	TokenNameDOT
getTemplates	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
templates	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
templates	TokenNameIdentifier
.	TokenNameDOT
setStylesheetDOM	TokenNameIdentifier
(	TokenNameLPAREN
enhancedDOM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
translet	TokenNameIdentifier
.	TokenNameDOT
prepassDocument	TokenNameIdentifier
(	TokenNameLPAREN
enhancedDOM	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
enhancedDOM	TokenNameIdentifier
.	TokenNameDOT
setDocumentURI	TokenNameIdentifier
(	TokenNameLPAREN
uri	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
final	TokenNamefinal
DOMAdapter	TokenNameIdentifier
domAdapter	TokenNameIdentifier
=	TokenNameEQUAL
translet	TokenNameIdentifier
.	TokenNameDOT
makeDOMAdapter	TokenNameIdentifier
(	TokenNameLPAREN
newdom	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
multiplexer	TokenNameIdentifier
.	TokenNameDOT
addDOMAdapter	TokenNameIdentifier
(	TokenNameLPAREN
domAdapter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
translet	TokenNameIdentifier
.	TokenNameDOT
buildKeys	TokenNameIdentifier
(	TokenNameLPAREN
domAdapter	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
newdom	TokenNameIdentifier
.	TokenNameDOT
getDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
SingletonIterator	TokenNameIdentifier
(	TokenNameLPAREN
newdom	TokenNameIdentifier
.	TokenNameDOT
getDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
e	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
DTMAxisIterator	TokenNameIdentifier
document	TokenNameIdentifier
(	TokenNameLPAREN
DTMAxisIterator	TokenNameIdentifier
arg1	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
baseURI	TokenNameIdentifier
,	TokenNameCOMMA
AbstractTranslet	TokenNameIdentifier
translet	TokenNameIdentifier
,	TokenNameCOMMA
DOM	TokenNameIdentifier
dom	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
UnionIterator	TokenNameIdentifier
union	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
UnionIterator	TokenNameIdentifier
(	TokenNameLPAREN
dom	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
node	TokenNameIdentifier
=	TokenNameEQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
(	TokenNameLPAREN
node	TokenNameIdentifier
=	TokenNameEQUAL
arg1	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
uri	TokenNameIdentifier
=	TokenNameEQUAL
dom	TokenNameIdentifier
.	TokenNameDOT
getStringValueX	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
baseURI	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
baseURI	TokenNameIdentifier
=	TokenNameEQUAL
dom	TokenNameIdentifier
.	TokenNameDOT
getDocumentURI	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
SystemIDResolver	TokenNameIdentifier
.	TokenNameDOT
isAbsoluteURI	TokenNameIdentifier
(	TokenNameLPAREN
baseURI	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
baseURI	TokenNameIdentifier
=	TokenNameEQUAL
SystemIDResolver	TokenNameIdentifier
.	TokenNameDOT
getAbsoluteURIFromRelative	TokenNameIdentifier
(	TokenNameLPAREN
baseURI	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
union	TokenNameIdentifier
.	TokenNameDOT
addIterator	TokenNameIdentifier
(	TokenNameLPAREN
document	TokenNameIdentifier
(	TokenNameLPAREN
uri	TokenNameIdentifier
,	TokenNameCOMMA
baseURI	TokenNameIdentifier
,	TokenNameCOMMA
translet	TokenNameIdentifier
,	TokenNameCOMMA
dom	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
(	TokenNameLPAREN
union	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
DTMAxisIterator	TokenNameIdentifier
document	TokenNameIdentifier
(	TokenNameLPAREN
DOM	TokenNameIdentifier
newdom	TokenNameIdentifier
,	TokenNameCOMMA
AbstractTranslet	TokenNameIdentifier
translet	TokenNameIdentifier
,	TokenNameCOMMA
DOM	TokenNameIdentifier
dom	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
Exception	TokenNameIdentifier
{	TokenNameLBRACE
DTMManager	TokenNameIdentifier
dtmManager	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
MultiDOM	TokenNameIdentifier
)	TokenNameRPAREN
dom	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getDTMManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dtmManager	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
&&	TokenNameAND_AND
newdom	TokenNameIdentifier
instanceof	TokenNameinstanceof
DTM	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
DTM	TokenNameIdentifier
)	TokenNameRPAREN
newdom	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
migrateTo	TokenNameIdentifier
(	TokenNameLPAREN
dtmManager	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
translet	TokenNameIdentifier
.	TokenNameDOT
prepassDocument	TokenNameIdentifier
(	TokenNameLPAREN
newdom	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
DOMAdapter	TokenNameIdentifier
domAdapter	TokenNameIdentifier
=	TokenNameEQUAL
translet	TokenNameIdentifier
.	TokenNameDOT
makeDOMAdapter	TokenNameIdentifier
(	TokenNameLPAREN
newdom	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
(	TokenNameLPAREN
(	TokenNameLPAREN
MultiDOM	TokenNameIdentifier
)	TokenNameRPAREN
dom	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
addDOMAdapter	TokenNameIdentifier
(	TokenNameLPAREN
domAdapter	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
translet	TokenNameIdentifier
.	TokenNameDOT
buildKeys	TokenNameIdentifier
(	TokenNameLPAREN
domAdapter	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
newdom	TokenNameIdentifier
.	TokenNameDOT
getDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
new	TokenNamenew
SingletonIterator	TokenNameIdentifier
(	TokenNameLPAREN
newdom	TokenNameIdentifier
.	TokenNameDOT
getDocument	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
