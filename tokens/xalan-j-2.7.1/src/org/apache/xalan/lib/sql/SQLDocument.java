package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
lib	TokenNameIdentifier
.	TokenNameDOT
sql	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Vector	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
extensions	TokenNameIdentifier
.	TokenNameDOT
ExpressionContext	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
XPathContext	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
dtm	TokenNameIdentifier
.	TokenNameDOT
DTMManager	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
dtm	TokenNameIdentifier
.	TokenNameDOT
DTM	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
sql	TokenNameIdentifier
.	TokenNameDOT
Connection	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
sql	TokenNameIdentifier
.	TokenNameDOT
Statement	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
sql	TokenNameIdentifier
.	TokenNameDOT
ResultSet	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
sql	TokenNameIdentifier
.	TokenNameDOT
ResultSetMetaData	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
sql	TokenNameIdentifier
.	TokenNameDOT
SQLException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
sql	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
dtm	TokenNameIdentifier
.	TokenNameDOT
ref	TokenNameIdentifier
.	TokenNameDOT
*	TokenNameMULTIPLY
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
SQLDocument	TokenNameIdentifier
extends	TokenNameextends
DTMDocument	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
boolean	TokenNameboolean
DEBUG	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_NAMESPACE	TokenNameIdentifier
=	TokenNameEQUAL
"http://xml.apache.org/xalan/SQLExtension"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_SQL	TokenNameIdentifier
=	TokenNameEQUAL
"sql"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_ROW_SET	TokenNameIdentifier
=	TokenNameEQUAL
"row-set"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_METADATA	TokenNameIdentifier
=	TokenNameEQUAL
"metadata"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_COLUMN_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"column-header"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_ROW	TokenNameIdentifier
=	TokenNameEQUAL
"row"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_COL	TokenNameIdentifier
=	TokenNameEQUAL
"col"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_OUT_PARAMETERS	TokenNameIdentifier
=	TokenNameEQUAL
"out-parameters"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_CATALOGUE_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"catalogue-name"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_DISPLAY_SIZE	TokenNameIdentifier
=	TokenNameEQUAL
"column-display-size"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_COLUMN_LABEL	TokenNameIdentifier
=	TokenNameEQUAL
"column-label"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_COLUMN_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"column-name"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_COLUMN_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"column-type"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_COLUMN_TYPENAME	TokenNameIdentifier
=	TokenNameEQUAL
"column-typename"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_PRECISION	TokenNameIdentifier
=	TokenNameEQUAL
"precision"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_SCALE	TokenNameIdentifier
=	TokenNameEQUAL
"scale"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_SCHEMA_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"schema-name"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_TABLE_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"table-name"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_CASESENSITIVE	TokenNameIdentifier
=	TokenNameEQUAL
"case-sensitive"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_DEFINITELYWRITABLE	TokenNameIdentifier
=	TokenNameEQUAL
"definitely-writable"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_ISNULLABLE	TokenNameIdentifier
=	TokenNameEQUAL
"nullable"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_ISSIGNED	TokenNameIdentifier
=	TokenNameEQUAL
"signed"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_ISWRITEABLE	TokenNameIdentifier
=	TokenNameEQUAL
"writable"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
S_ISSEARCHABLE	TokenNameIdentifier
=	TokenNameEQUAL
"searchable"	TokenNameStringLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_SQL_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_MetaData_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColumnHeader_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_RowSet_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_Row_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_Col_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_OutParameter_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_CATALOGUE_NAME_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_DISPLAY_SIZE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_COLUMN_LABEL_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_COLUMN_NAME_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_COLUMN_TYPE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_COLUMN_TYPENAME_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_PRECISION_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_SCALE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_SCHEMA_NAME_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_TABLE_NAME_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_CASESENSITIVE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_DEFINITELYWRITEABLE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_ISNULLABLE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_ISSIGNED_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_ISWRITEABLE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColAttrib_ISSEARCHABLE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
private	TokenNameprivate
Statement	TokenNameIdentifier
m_Statement	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
ExpressionContext	TokenNameIdentifier
m_ExpressionContext	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
ConnectionPool	TokenNameIdentifier
m_ConnectionPool	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
ResultSet	TokenNameIdentifier
m_ResultSet	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
SQLQueryParser	TokenNameIdentifier
m_QueryParser	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
[	TokenNameLBRACKET
]	TokenNameRBRACKET
m_ColHeadersIdx	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_ColCount	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_MetaDataIdx	TokenNameIdentifier
=	TokenNameEQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_RowSetIdx	TokenNameIdentifier
=	TokenNameEQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_SQLIdx	TokenNameIdentifier
=	TokenNameEQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_FirstRowIdx	TokenNameIdentifier
=	TokenNameEQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
int	TokenNameint
m_LastRowIdx	TokenNameIdentifier
=	TokenNameEQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
boolean	TokenNameboolean
m_StreamingMode	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
private	TokenNameprivate
boolean	TokenNameboolean
m_MultipleResults	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
private	TokenNameprivate
boolean	TokenNameboolean
m_HasErrors	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
private	TokenNameprivate
boolean	TokenNameboolean
m_IsStatementCachingEnabled	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
private	TokenNameprivate
XConnection	TokenNameIdentifier
m_XConnection	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
public	TokenNamepublic
SQLDocument	TokenNameIdentifier
(	TokenNameLPAREN
DTMManager	TokenNameIdentifier
mgr	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
ident	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
mgr	TokenNameIdentifier
,	TokenNameCOMMA
ident	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
SQLDocument	TokenNameIdentifier
getNewDocument	TokenNameIdentifier
(	TokenNameLPAREN
ExpressionContext	TokenNameIdentifier
exprContext	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
DTMManager	TokenNameIdentifier
mgr	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
XPathContext	TokenNameIdentifier
.	TokenNameDOT
XPathExpressionContext	TokenNameIdentifier
)	TokenNameRPAREN
exprContext	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getDTMManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DTMManagerDefault	TokenNameIdentifier
mgrDefault	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
DTMManagerDefault	TokenNameIdentifier
)	TokenNameRPAREN
mgr	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
dtmIdent	TokenNameIdentifier
=	TokenNameEQUAL
mgrDefault	TokenNameIdentifier
.	TokenNameDOT
getFirstFreeDTMID	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
SQLDocument	TokenNameIdentifier
doc	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SQLDocument	TokenNameIdentifier
(	TokenNameLPAREN
mgr	TokenNameIdentifier
,	TokenNameCOMMA
dtmIdent	TokenNameIdentifier
<<	TokenNameLEFT_SHIFT
DTMManager	TokenNameIdentifier
.	TokenNameDOT
IDENT_DTM_NODE_BITS	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
mgrDefault	TokenNameIdentifier
.	TokenNameDOT
addDTM	TokenNameIdentifier
(	TokenNameLPAREN
doc	TokenNameIdentifier
,	TokenNameCOMMA
dtmIdent	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
doc	TokenNameIdentifier
.	TokenNameDOT
setExpressionContext	TokenNameIdentifier
(	TokenNameLPAREN
exprContext	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
doc	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
setExpressionContext	TokenNameIdentifier
(	TokenNameLPAREN
ExpressionContext	TokenNameIdentifier
expr	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_ExpressionContext	TokenNameIdentifier
=	TokenNameEQUAL
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
ExpressionContext	TokenNameIdentifier
getExpressionContext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
m_ExpressionContext	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
execute	TokenNameIdentifier
(	TokenNameLPAREN
XConnection	TokenNameIdentifier
xconn	TokenNameIdentifier
,	TokenNameCOMMA
SQLQueryParser	TokenNameIdentifier
query	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
SQLException	TokenNameIdentifier
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
m_StreamingMode	TokenNameIdentifier
=	TokenNameEQUAL
"true"	TokenNameStringLiteral
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
xconn	TokenNameIdentifier
.	TokenNameDOT
getFeature	TokenNameIdentifier
(	TokenNameLPAREN
"streaming"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_MultipleResults	TokenNameIdentifier
=	TokenNameEQUAL
"true"	TokenNameStringLiteral
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
xconn	TokenNameIdentifier
.	TokenNameDOT
getFeature	TokenNameIdentifier
(	TokenNameLPAREN
"multiple-results"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_IsStatementCachingEnabled	TokenNameIdentifier
=	TokenNameEQUAL
"true"	TokenNameStringLiteral
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
xconn	TokenNameIdentifier
.	TokenNameDOT
getFeature	TokenNameIdentifier
(	TokenNameLPAREN
"cache-statements"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_XConnection	TokenNameIdentifier
=	TokenNameEQUAL
xconn	TokenNameIdentifier
;	TokenNameSEMICOLON
m_QueryParser	TokenNameIdentifier
=	TokenNameEQUAL
query	TokenNameIdentifier
;	TokenNameSEMICOLON
executeSQLStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
createExpandedNameTable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_DocumentIdx	TokenNameIdentifier
=	TokenNameEQUAL
addElement	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
m_Document_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_SQLIdx	TokenNameIdentifier
=	TokenNameEQUAL
addElement	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
m_SQL_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
m_DocumentIdx	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
m_MultipleResults	TokenNameIdentifier
)	TokenNameRPAREN
extractSQLMetaData	TokenNameIdentifier
(	TokenNameLPAREN
m_ResultSet	TokenNameIdentifier
.	TokenNameDOT
getMetaData	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
SQLException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_HasErrors	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
throw	TokenNamethrow
e	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
executeSQLStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
SQLException	TokenNameIdentifier
{	TokenNameLBRACE
m_ConnectionPool	TokenNameIdentifier
=	TokenNameEQUAL
m_XConnection	TokenNameIdentifier
.	TokenNameDOT
getConnectionPool	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Connection	TokenNameIdentifier
conn	TokenNameIdentifier
=	TokenNameEQUAL
m_ConnectionPool	TokenNameIdentifier
.	TokenNameDOT
getConnection	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
m_QueryParser	TokenNameIdentifier
.	TokenNameDOT
hasParameters	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
m_Statement	TokenNameIdentifier
=	TokenNameEQUAL
conn	TokenNameIdentifier
.	TokenNameDOT
createStatement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ResultSet	TokenNameIdentifier
=	TokenNameEQUAL
m_Statement	TokenNameIdentifier
.	TokenNameDOT
executeQuery	TokenNameIdentifier
(	TokenNameLPAREN
m_QueryParser	TokenNameIdentifier
.	TokenNameDOT
getSQLQuery	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
m_QueryParser	TokenNameIdentifier
.	TokenNameDOT
isCallable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
CallableStatement	TokenNameIdentifier
cstmt	TokenNameIdentifier
=	TokenNameEQUAL
conn	TokenNameIdentifier
.	TokenNameDOT
prepareCall	TokenNameIdentifier
(	TokenNameLPAREN
m_QueryParser	TokenNameIdentifier
.	TokenNameDOT
getSQLQuery	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_QueryParser	TokenNameIdentifier
.	TokenNameDOT
registerOutputParameters	TokenNameIdentifier
(	TokenNameLPAREN
cstmt	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_QueryParser	TokenNameIdentifier
.	TokenNameDOT
populateStatement	TokenNameIdentifier
(	TokenNameLPAREN
cstmt	TokenNameIdentifier
,	TokenNameCOMMA
m_ExpressionContext	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_Statement	TokenNameIdentifier
=	TokenNameEQUAL
cstmt	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
cstmt	TokenNameIdentifier
.	TokenNameDOT
execute	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
throw	TokenNamethrow
new	TokenNamenew
SQLException	TokenNameIdentifier
(	TokenNameLPAREN
"Error in Callable Statement"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ResultSet	TokenNameIdentifier
=	TokenNameEQUAL
m_Statement	TokenNameIdentifier
.	TokenNameDOT
getResultSet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
PreparedStatement	TokenNameIdentifier
stmt	TokenNameIdentifier
=	TokenNameEQUAL
conn	TokenNameIdentifier
.	TokenNameDOT
prepareStatement	TokenNameIdentifier
(	TokenNameLPAREN
m_QueryParser	TokenNameIdentifier
.	TokenNameDOT
getSQLQuery	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_QueryParser	TokenNameIdentifier
.	TokenNameDOT
populateStatement	TokenNameIdentifier
(	TokenNameLPAREN
stmt	TokenNameIdentifier
,	TokenNameCOMMA
m_ExpressionContext	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_Statement	TokenNameIdentifier
=	TokenNameEQUAL
stmt	TokenNameIdentifier
;	TokenNameSEMICOLON
m_ResultSet	TokenNameIdentifier
=	TokenNameEQUAL
stmt	TokenNameIdentifier
.	TokenNameDOT
executeQuery	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
skip	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
value	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
m_ResultSet	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
m_ResultSet	TokenNameIdentifier
.	TokenNameDOT
relative	TokenNameIdentifier
(	TokenNameLPAREN
value	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
origEx	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
x	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
x	TokenNameIdentifier
<	TokenNameLESS
value	TokenNameIdentifier
;	TokenNameSEMICOLON
x	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
m_ResultSet	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_XConnection	TokenNameIdentifier
.	TokenNameDOT
setError	TokenNameIdentifier
(	TokenNameLPAREN
origEx	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
,	TokenNameCOMMA
checkWarnings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_XConnection	TokenNameIdentifier
.	TokenNameDOT
setError	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
,	TokenNameCOMMA
checkWarnings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
extractSQLMetaData	TokenNameIdentifier
(	TokenNameLPAREN
ResultSetMetaData	TokenNameIdentifier
meta	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_MetaDataIdx	TokenNameIdentifier
=	TokenNameEQUAL
addElement	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
m_MetaData_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
m_MultipleResults	TokenNameIdentifier
?	TokenNameQUESTION
m_RowSetIdx	TokenNameIdentifier
:	TokenNameCOLON
m_SQLIdx	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
m_ColCount	TokenNameIdentifier
=	TokenNameEQUAL
meta	TokenNameIdentifier
.	TokenNameDOT
getColumnCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColHeadersIdx	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
int	TokenNameint
[	TokenNameLBRACKET
m_ColCount	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_XConnection	TokenNameIdentifier
.	TokenNameDOT
setError	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
,	TokenNameCOMMA
checkWarnings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
lastColHeaderIdx	TokenNameIdentifier
=	TokenNameEQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
i	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
m_ColCount	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
m_ColHeadersIdx	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
addElement	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
m_ColumnHeader_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
m_MetaDataIdx	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
lastColHeaderIdx	TokenNameIdentifier
=	TokenNameEQUAL
m_ColHeadersIdx	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
getColumnName	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
m_ColAttrib_COLUMN_NAME_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_COLUMN_NAME_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
getColumnLabel	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
m_ColAttrib_COLUMN_LABEL_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_COLUMN_LABEL_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
getCatalogName	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
m_ColAttrib_CATALOGUE_NAME_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_CATALOGUE_NAME_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Integer	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
getColumnDisplaySize	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
m_ColAttrib_DISPLAY_SIZE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_DISPLAY_SIZE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Integer	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
getColumnType	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
m_ColAttrib_COLUMN_TYPE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_COLUMN_TYPE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
getColumnTypeName	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
m_ColAttrib_COLUMN_TYPENAME_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_COLUMN_TYPENAME_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Integer	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
getPrecision	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
m_ColAttrib_PRECISION_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_PRECISION_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Integer	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
getScale	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
m_ColAttrib_SCALE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_SCALE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
getSchemaName	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
m_ColAttrib_SCHEMA_NAME_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_SCHEMA_NAME_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
getTableName	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
m_ColAttrib_TABLE_NAME_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_TABLE_NAME_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
isCaseSensitive	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
S_ISTRUE	TokenNameIdentifier
:	TokenNameCOLON
S_ISFALSE	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_CASESENSITIVE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_CASESENSITIVE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
isDefinitelyWritable	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
S_ISTRUE	TokenNameIdentifier
:	TokenNameCOLON
S_ISFALSE	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_DEFINITELYWRITEABLE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_DEFINITELYWRITEABLE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
isNullable	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
?	TokenNameQUESTION
S_ISTRUE	TokenNameIdentifier
:	TokenNameCOLON
S_ISFALSE	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_ISNULLABLE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_ISNULLABLE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
isSigned	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
S_ISTRUE	TokenNameIdentifier
:	TokenNameCOLON
S_ISFALSE	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_ISSIGNED_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_ISSIGNED_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
isWritable	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
true	TokenNametrue
?	TokenNameQUESTION
S_ISTRUE	TokenNameIdentifier
:	TokenNameCOLON
S_ISFALSE	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_ISWRITEABLE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_ISWRITEABLE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
meta	TokenNameIdentifier
.	TokenNameDOT
isSearchable	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
true	TokenNametrue
?	TokenNameQUESTION
S_ISTRUE	TokenNameIdentifier
:	TokenNameCOLON
S_ISFALSE	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_ISSEARCHABLE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
S_ATTRIB_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
m_ColAttrib_ISSEARCHABLE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColHeaderIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
createExpandedNameTable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
.	TokenNameDOT
createExpandedNameTable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_SQL_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_SQL	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ELEMENT_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_MetaData_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_METADATA	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ELEMENT_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColumnHeader_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_COLUMN_HEADER	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ELEMENT_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_RowSet_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_ROW_SET	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ELEMENT_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_Row_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_ROW	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ELEMENT_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_Col_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_COL	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ELEMENT_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_OutParameter_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_OUT_PARAMETERS	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ELEMENT_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_CATALOGUE_NAME_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_CATALOGUE_NAME	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_DISPLAY_SIZE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_DISPLAY_SIZE	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_COLUMN_LABEL_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_COLUMN_LABEL	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_COLUMN_NAME_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_COLUMN_NAME	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_COLUMN_TYPE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_COLUMN_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_COLUMN_TYPENAME_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_COLUMN_TYPENAME	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_PRECISION_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_PRECISION	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_SCALE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_SCALE	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_SCHEMA_NAME_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_SCHEMA_NAME	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_TABLE_NAME_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_TABLE_NAME	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_CASESENSITIVE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_CASESENSITIVE	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_DEFINITELYWRITEABLE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_DEFINITELYWRITABLE	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_ISNULLABLE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_ISNULLABLE	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_ISSIGNED_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_ISSIGNED	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_ISWRITEABLE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_ISWRITEABLE	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ColAttrib_ISSEARCHABLE_TypeID	TokenNameIdentifier
=	TokenNameEQUAL
m_expandedNameTable	TokenNameIdentifier
.	TokenNameDOT
getExpandedTypeID	TokenNameIdentifier
(	TokenNameLPAREN
S_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
S_ISSEARCHABLE	TokenNameIdentifier
,	TokenNameCOMMA
DTM	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
boolean	TokenNameboolean
addRowToDTMFromResultSet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
m_FirstRowIdx	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_RowSetIdx	TokenNameIdentifier
=	TokenNameEQUAL
addElement	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
m_RowSet_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
m_SQLIdx	TokenNameIdentifier
,	TokenNameCOMMA
m_MultipleResults	TokenNameIdentifier
?	TokenNameQUESTION
m_RowSetIdx	TokenNameIdentifier
:	TokenNameCOLON
m_MetaDataIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
m_MultipleResults	TokenNameIdentifier
)	TokenNameRPAREN
extractSQLMetaData	TokenNameIdentifier
(	TokenNameLPAREN
m_ResultSet	TokenNameIdentifier
.	TokenNameDOT
getMetaData	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
m_ResultSet	TokenNameIdentifier
.	TokenNameDOT
next	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
m_StreamingMode	TokenNameIdentifier
&&	TokenNameAND_AND
(	TokenNameLPAREN
m_LastRowIdx	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
m_nextsib	TokenNameIdentifier
.	TokenNameDOT
setElementAt	TokenNameIdentifier
(	TokenNameLPAREN
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
,	TokenNameCOMMA
m_LastRowIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
m_ResultSet	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
m_MultipleResults	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
while	TokenNamewhile
(	TokenNameLPAREN
!	TokenNameNOT
m_Statement	TokenNameIdentifier
.	TokenNameDOT
getMoreResults	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
m_Statement	TokenNameIdentifier
.	TokenNameDOT
getUpdateCount	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
>=	TokenNameGREATER_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ResultSet	TokenNameIdentifier
=	TokenNameEQUAL
m_Statement	TokenNameIdentifier
.	TokenNameDOT
getResultSet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
m_ResultSet	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
m_ResultSet	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
m_FirstRowIdx	TokenNameIdentifier
=	TokenNameEQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
;	TokenNameSEMICOLON
addRowToDTMFromResultSet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Vector	TokenNameIdentifier
parameters	TokenNameIdentifier
=	TokenNameEQUAL
m_QueryParser	TokenNameIdentifier
.	TokenNameDOT
getParameters	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
parameters	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
outParamIdx	TokenNameIdentifier
=	TokenNameEQUAL
addElement	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
m_OutParameter_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
m_SQLIdx	TokenNameIdentifier
,	TokenNameCOMMA
m_RowSetIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
lastColID	TokenNameIdentifier
=	TokenNameEQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
indx	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
indx	TokenNameIdentifier
<	TokenNameLESS
parameters	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
indx	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
QueryParameter	TokenNameIdentifier
parm	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
QueryParameter	TokenNameIdentifier
)	TokenNameRPAREN
parameters	TokenNameIdentifier
.	TokenNameDOT
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
indx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
parm	TokenNameIdentifier
.	TokenNameDOT
isOutput	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
rawobj	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
(	TokenNameLPAREN
CallableStatement	TokenNameIdentifier
)	TokenNameRPAREN
m_Statement	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
getObject	TokenNameIdentifier
(	TokenNameLPAREN
indx	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
lastColID	TokenNameIdentifier
=	TokenNameEQUAL
addElementWithData	TokenNameIdentifier
(	TokenNameLPAREN
rawobj	TokenNameIdentifier
,	TokenNameCOMMA
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
m_Col_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
outParamIdx	TokenNameIdentifier
,	TokenNameCOMMA
lastColID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
parm	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
m_ColAttrib_COLUMN_NAME_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
parm	TokenNameIdentifier
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
m_ColAttrib_COLUMN_LABEL_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Integer	TokenNameIdentifier
(	TokenNameLPAREN
parm	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
m_ColAttrib_COLUMN_TYPE_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addAttributeToNode	TokenNameIdentifier
(	TokenNameLPAREN
parm	TokenNameIdentifier
.	TokenNameDOT
getTypeName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
m_ColAttrib_COLUMN_TYPENAME_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
lastColID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
SQLWarning	TokenNameIdentifier
warn	TokenNameIdentifier
=	TokenNameEQUAL
checkWarnings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
warn	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
m_XConnection	TokenNameIdentifier
.	TokenNameDOT
setError	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
warn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
m_FirstRowIdx	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_FirstRowIdx	TokenNameIdentifier
=	TokenNameEQUAL
addElement	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
m_Row_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
m_RowSetIdx	TokenNameIdentifier
,	TokenNameCOMMA
m_MultipleResults	TokenNameIdentifier
?	TokenNameQUESTION
m_MetaDataIdx	TokenNameIdentifier
:	TokenNameCOLON
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_LastRowIdx	TokenNameIdentifier
=	TokenNameEQUAL
m_FirstRowIdx	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
m_StreamingMode	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_nextsib	TokenNameIdentifier
.	TokenNameDOT
setElementAt	TokenNameIdentifier
(	TokenNameLPAREN
m_LastRowIdx	TokenNameIdentifier
,	TokenNameCOMMA
m_LastRowIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
m_StreamingMode	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_LastRowIdx	TokenNameIdentifier
=	TokenNameEQUAL
addElement	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
,	TokenNameCOMMA
m_Row_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
m_RowSetIdx	TokenNameIdentifier
,	TokenNameCOMMA
m_LastRowIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
int	TokenNameint
colID	TokenNameIdentifier
=	TokenNameEQUAL
_firstch	TokenNameIdentifier
(	TokenNameLPAREN
m_LastRowIdx	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
pcolID	TokenNameIdentifier
=	TokenNameEQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
m_ColCount	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
o	TokenNameIdentifier
=	TokenNameEQUAL
m_ResultSet	TokenNameIdentifier
.	TokenNameDOT
getObject	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
colID	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
pcolID	TokenNameIdentifier
=	TokenNameEQUAL
addElementWithData	TokenNameIdentifier
(	TokenNameLPAREN
o	TokenNameIdentifier
,	TokenNameCOMMA
3	TokenNameIntegerLiteral
,	TokenNameCOMMA
m_Col_TypeID	TokenNameIdentifier
,	TokenNameCOMMA
m_LastRowIdx	TokenNameIdentifier
,	TokenNameCOMMA
pcolID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
cloneAttributeFromNode	TokenNameIdentifier
(	TokenNameLPAREN
pcolID	TokenNameIdentifier
,	TokenNameCOMMA
m_ColHeadersIdx	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
-	TokenNameMINUS
1	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
int	TokenNameint
dataIdent	TokenNameIdentifier
=	TokenNameEQUAL
_firstch	TokenNameIdentifier
(	TokenNameLPAREN
colID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
dataIdent	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
error	TokenNameIdentifier
(	TokenNameLPAREN
"Streaming Mode, Data Error"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
m_ObjectArray	TokenNameIdentifier
.	TokenNameDOT
setAt	TokenNameIdentifier
(	TokenNameLPAREN
dataIdent	TokenNameIdentifier
,	TokenNameCOMMA
o	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
colID	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
colID	TokenNameIdentifier
=	TokenNameEQUAL
_nextsib	TokenNameIdentifier
(	TokenNameLPAREN
colID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
DEBUG	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"SQL Error Fetching next row ["	TokenNameStringLiteral
+	TokenNamePLUS
e	TokenNameIdentifier
.	TokenNameDOT
getLocalizedMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
"]"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
m_XConnection	TokenNameIdentifier
.	TokenNameDOT
setError	TokenNameIdentifier
(	TokenNameLPAREN
e	TokenNameIdentifier
,	TokenNameCOMMA
this	TokenNamethis
,	TokenNameCOMMA
checkWarnings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_HasErrors	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
hasErrors	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
m_HasErrors	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
close	TokenNameIdentifier
(	TokenNameLPAREN
boolean	TokenNameboolean
flushConnPool	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
SQLWarning	TokenNameIdentifier
warn	TokenNameIdentifier
=	TokenNameEQUAL
checkWarnings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
warn	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
m_XConnection	TokenNameIdentifier
.	TokenNameDOT
setError	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
null	TokenNamenull
,	TokenNameCOMMA
warn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
m_ResultSet	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_ResultSet	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_ResultSet	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
Connection	TokenNameIdentifier
conn	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
m_Statement	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
conn	TokenNameIdentifier
=	TokenNameEQUAL
m_Statement	TokenNameIdentifier
.	TokenNameDOT
getConnection	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_Statement	TokenNameIdentifier
.	TokenNameDOT
close	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_Statement	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
conn	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
m_HasErrors	TokenNameIdentifier
)	TokenNameRPAREN
m_ConnectionPool	TokenNameIdentifier
.	TokenNameDOT
releaseConnectionOnError	TokenNameIdentifier
(	TokenNameLPAREN
conn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
m_ConnectionPool	TokenNameIdentifier
.	TokenNameDOT
releaseConnection	TokenNameIdentifier
(	TokenNameLPAREN
conn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
getManager	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
release	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
boolean	TokenNameboolean
nextNode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
DEBUG	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"nextNode()"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
int	TokenNameint
_nextsib	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
identity	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
m_ResultSet	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
id	TokenNameIdentifier
=	TokenNameEQUAL
_exptype	TokenNameIdentifier
(	TokenNameLPAREN
identity	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
m_FirstRowIdx	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
DTM	TokenNameIdentifier
.	TokenNameDOT
NULL	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
addRowToDTMFromResultSet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
id	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
m_Row_TypeID	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
identity	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
m_LastRowIdx	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
DEBUG	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"reading from the ResultSet"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addRowToDTMFromResultSet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
m_MultipleResults	TokenNameIdentifier
&&	TokenNameAND_AND
identity	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
m_RowSetIdx	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
DEBUG	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"reading for next ResultSet"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
startIdx	TokenNameIdentifier
=	TokenNameEQUAL
m_RowSetIdx	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
startIdx	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
m_RowSetIdx	TokenNameIdentifier
&&	TokenNameAND_AND
m_ResultSet	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
addRowToDTMFromResultSet	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
super	TokenNamesuper
.	TokenNameDOT
_nextsib	TokenNameIdentifier
(	TokenNameLPAREN
identity	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
documentRegistration	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
DEBUG	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Document Registration"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
documentRelease	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
DEBUG	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Document Release"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
SQLWarning	TokenNameIdentifier
checkWarnings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
SQLWarning	TokenNameIdentifier
warn	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
m_Statement	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
null	TokenNamenull
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
warn	TokenNameIdentifier
=	TokenNameEQUAL
m_Statement	TokenNameIdentifier
.	TokenNameDOT
getWarnings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_Statement	TokenNameIdentifier
.	TokenNameDOT
clearWarnings	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
SQLException	TokenNameIdentifier
se	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
(	TokenNameLPAREN
warn	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
