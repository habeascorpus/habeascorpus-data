package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
templates	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
res	TokenNameIdentifier
.	TokenNameDOT
XSLTErrorResources	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
transformer	TokenNameIdentifier
.	TokenNameDOT
TransformerImpl	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
VariableStack	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
XPathContext	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
objects	TokenNameIdentifier
.	TokenNameDOT
XObject	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
XUnresolvedVariable	TokenNameIdentifier
extends	TokenNameextends
XObject	TokenNameIdentifier
{	TokenNameLBRACE
static	TokenNamestatic
final	TokenNamefinal
long	TokenNamelong
serialVersionUID	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
256779804767950188L	TokenNameLongLiteral
;	TokenNameSEMICOLON
transient	TokenNametransient
private	TokenNameprivate
int	TokenNameint
m_context	TokenNameIdentifier
;	TokenNameSEMICOLON
transient	TokenNametransient
private	TokenNameprivate
TransformerImpl	TokenNameIdentifier
m_transformer	TokenNameIdentifier
;	TokenNameSEMICOLON
transient	TokenNametransient
private	TokenNameprivate
int	TokenNameint
m_varStackPos	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
transient	TokenNametransient
private	TokenNameprivate
int	TokenNameint
m_varStackContext	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
boolean	TokenNameboolean
m_isGlobal	TokenNameIdentifier
;	TokenNameSEMICOLON
transient	TokenNametransient
private	TokenNameprivate
boolean	TokenNameboolean
m_doneEval	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
public	TokenNamepublic
XUnresolvedVariable	TokenNameIdentifier
(	TokenNameLPAREN
ElemVariable	TokenNameIdentifier
obj	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
sourceNode	TokenNameIdentifier
,	TokenNameCOMMA
TransformerImpl	TokenNameIdentifier
transformer	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
varStackPos	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
varStackContext	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
isGlobal	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
(	TokenNameLPAREN
obj	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_context	TokenNameIdentifier
=	TokenNameEQUAL
sourceNode	TokenNameIdentifier
;	TokenNameSEMICOLON
m_transformer	TokenNameIdentifier
=	TokenNameEQUAL
transformer	TokenNameIdentifier
;	TokenNameSEMICOLON
m_varStackPos	TokenNameIdentifier
=	TokenNameEQUAL
varStackPos	TokenNameIdentifier
;	TokenNameSEMICOLON
m_varStackContext	TokenNameIdentifier
=	TokenNameEQUAL
varStackContext	TokenNameIdentifier
;	TokenNameSEMICOLON
m_isGlobal	TokenNameIdentifier
=	TokenNameEQUAL
isGlobal	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
XObject	TokenNameIdentifier
execute	TokenNameIdentifier
(	TokenNameLPAREN
XPathContext	TokenNameIdentifier
xctxt	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
m_doneEval	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
m_transformer	TokenNameIdentifier
.	TokenNameDOT
getMsgMgr	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
error	TokenNameIdentifier
(	TokenNameLPAREN
xctxt	TokenNameIdentifier
.	TokenNameDOT
getSAXLocator	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
XSLTErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_REFERENCING_ITSELF	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
(	TokenNameLPAREN
(	TokenNameLPAREN
ElemVariable	TokenNameIdentifier
)	TokenNameRPAREN
this	TokenNamethis
.	TokenNameDOT
object	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
VariableStack	TokenNameIdentifier
vars	TokenNameIdentifier
=	TokenNameEQUAL
xctxt	TokenNameIdentifier
.	TokenNameDOT
getVarStack	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
currentFrame	TokenNameIdentifier
=	TokenNameEQUAL
vars	TokenNameIdentifier
.	TokenNameDOT
getStackFrame	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ElemVariable	TokenNameIdentifier
velem	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
ElemVariable	TokenNameIdentifier
)	TokenNameRPAREN
m_obj	TokenNameIdentifier
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
m_doneEval	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
!=	TokenNameNOT_EQUAL
velem	TokenNameIdentifier
.	TokenNameDOT
m_frameSize	TokenNameIdentifier
)	TokenNameRPAREN
vars	TokenNameIdentifier
.	TokenNameDOT
link	TokenNameIdentifier
(	TokenNameLPAREN
velem	TokenNameIdentifier
.	TokenNameDOT
m_frameSize	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XObject	TokenNameIdentifier
var	TokenNameIdentifier
=	TokenNameEQUAL
velem	TokenNameIdentifier
.	TokenNameDOT
getValue	TokenNameIdentifier
(	TokenNameLPAREN
m_transformer	TokenNameIdentifier
,	TokenNameCOMMA
m_context	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_doneEval	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
return	TokenNamereturn
var	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
!=	TokenNameNOT_EQUAL
velem	TokenNameIdentifier
.	TokenNameDOT
m_frameSize	TokenNameIdentifier
)	TokenNameRPAREN
vars	TokenNameIdentifier
.	TokenNameDOT
unlink	TokenNameIdentifier
(	TokenNameLPAREN
currentFrame	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setVarStackPos	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
top	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_varStackPos	TokenNameIdentifier
=	TokenNameEQUAL
top	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setVarStackContext	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
bottom	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_varStackContext	TokenNameIdentifier
=	TokenNameEQUAL
bottom	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
CLASS_UNRESOLVEDVARIABLE	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getTypeString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
"XUnresolvedVariable ("	TokenNameStringLiteral
+	TokenNamePLUS
object	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getClass	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
getName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
")"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
