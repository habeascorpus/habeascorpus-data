package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
res	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ListResourceBundle	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Locale	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
MissingResourceException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ResourceBundle	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
XSLTErrorResources_zh	TokenNameIdentifier
extends	TokenNameextends
ListResourceBundle	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MAX_CODE	TokenNameIdentifier
=	TokenNameEQUAL
201	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MAX_WARNING	TokenNameIdentifier
=	TokenNameEQUAL
29	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MAX_OTHERS	TokenNameIdentifier
=	TokenNameEQUAL
55	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MAX_MESSAGES	TokenNameIdentifier
=	TokenNameEQUAL
MAX_CODE	TokenNameIdentifier
+	TokenNamePLUS
MAX_WARNING	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_SET_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_CURLYBRACE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_CURLYBRACE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FUNCTION_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FUNCTION_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_ATTRIBUTE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_ATTRIBUTE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_SOURCENODE_APPLYIMPORTS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_SOURCENODE_APPLYIMPORTS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_ADD	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_ADD"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_NAME_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_NAME_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TEMPLATE_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TEMPLATE_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_RESOLVE_NAME_AVT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_RESOLVE_NAME_AVT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_REQUIRES_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_REQUIRES_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MUST_HAVE_TEST_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MUST_HAVE_TEST_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BAD_VAL_ON_LEVEL_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BAD_VAL_ON_LEVEL_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NEED_MATCH_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NEED_MATCH_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NEED_NAME_OR_MATCH_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NEED_NAME_OR_MATCH_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_RESOLVE_NSPREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_RESOLVE_NSPREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_OWNERDOC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_OWNERDOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ELEMTEMPLATEELEM_ERR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ELEMTEMPLATEELEM_ERR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_CHILD	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_CHILD"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NEED_SELECT_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NEED_SELECT_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NEED_TEST_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NEED_TEST_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NEED_NAME_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NEED_NAME_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_CONTEXT_OWNERDOC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_CONTEXT_OWNERDOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_CREATE_XML_PROC_LIAISON	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_CREATE_XML_PROC_LIAISON"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESS_NOT_SUCCESSFUL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESS_NOT_SUCCESSFUL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_SUCCESSFUL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_SUCCESSFUL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ENCODING_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ENCODING_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_CREATE_TRACELISTENER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_CREATE_TRACELISTENER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_KEY_REQUIRES_NAME_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_KEY_REQUIRES_NAME_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_KEY_REQUIRES_MATCH_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_KEY_REQUIRES_MATCH_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_KEY_REQUIRES_USE_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_KEY_REQUIRES_USE_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_REQUIRES_ELEMENTS_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_REQUIRES_ELEMENTS_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISSING_PREFIX_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISSING_PREFIX_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BAD_STYLESHEET_URL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BAD_STYLESHEET_URL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FILE_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FILE_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_IOEXCEPTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_IOEXCEPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_HREF_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_HREF_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STYLESHEET_INCLUDES_ITSELF	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STYLESHEET_INCLUDES_ITSELF"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSINCLUDE_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSINCLUDE_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISSING_LANG_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISSING_LANG_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISSING_CONTAINER_ELEMENT_COMPONENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISSING_CONTAINER_ELEMENT_COMPONENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CAN_ONLY_OUTPUT_TO_ELEMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CAN_ONLY_OUTPUT_TO_ELEMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESS_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESS_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNIMPLNODE_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNIMPLNODE_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_SELECT_EXPRESSION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_SELECT_EXPRESSION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_SERIALIZE_XSLPROCESSOR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_SERIALIZE_XSLPROCESSOR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_INPUT_STYLESHEET	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_INPUT_STYLESHEET"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FAILED_PROCESS_STYLESHEET	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FAILED_PROCESS_STYLESHEET"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNT_PARSE_DOC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNT_PARSE_DOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNT_FIND_FRAGMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNT_FIND_FRAGMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODE_NOT_ELEMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODE_NOT_ELEMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_CLONE_OF_DOCUMENT_FRAG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_CLONE_OF_DOCUMENT_FRAG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CREATE_ITEM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CREATE_ITEM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XMLSPACE_ILLEGAL_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XMLSPACE_ILLEGAL_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_XSLKEY_DECLARATION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_XSLKEY_DECLARATION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CREATE_URL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CREATE_URL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSLFUNCTIONS_UNSUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSLFUNCTIONS_UNSUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSOR_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSOR_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_ALLOWED_INSIDE_STYLESHEET	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_ALLOWED_INSIDE_STYLESHEET"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESULTNS_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESULTNS_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DEFAULTSPACE_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DEFAULTSPACE_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INDENTRESULT_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INDENTRESULT_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_XSL_ELEM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_XSL_ELEM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BAD_XSLSORT_USE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BAD_XSLSORT_USE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISPLACED_XSLWHEN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISPLACED_XSLWHEN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISPLACED_XSLOTHERWISE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISPLACED_XSLOTHERWISE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_ALLOWED_INSIDE_TEMPLATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_ALLOWED_INSIDE_TEMPLATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_EXT_NS_PREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_EXT_NS_PREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_IMPORTS_AS_FIRST_ELEM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_IMPORTS_AS_FIRST_ELEM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_IMPORTING_ITSELF	TokenNameIdentifier
=	TokenNameEQUAL
"ER_IMPORTING_ITSELF"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XMLSPACE_ILLEGAL_VAL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XMLSPACE_ILLEGAL_VAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SAX_EXCEPTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SAX_EXCEPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSLT_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSLT_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CURRENCY_SIGN_ILLEGAL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CURRENCY_SIGN_ILLEGAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_REDIRECT_COULDNT_GET_FILENAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_REDIRECT_COULDNT_GET_FILENAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISSING_NS_URI	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISSING_NS_URI"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISSING_ARG_FOR_OPTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISSING_ARG_FOR_OPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_OPTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_OPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MALFORMED_FORMAT_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MALFORMED_FORMAT_STRING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STYLESHEET_REQUIRES_VERSION_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STYLESHEET_REQUIRES_VERSION_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_ATTRIBUTE_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_ATTRIBUTE_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CHOOSE_REQUIRES_WHEN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CHOOSE_REQUIRES_WHEN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_APPLY_IMPORT_IN_FOR_EACH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_APPLY_IMPORT_IN_FOR_EACH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_USE_DTM_FOR_OUTPUT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_USE_DTM_FOR_OUTPUT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_USE_DTM_FOR_INPUT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_USE_DTM_FOR_INPUT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CALL_TO_EXT_FAILED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CALL_TO_EXT_FAILED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PREFIX_MUST_RESOLVE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PREFIX_MUST_RESOLVE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_UTF16_SURROGATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_UTF16_SURROGATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSLATTRSET_USED_ITSELF	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSLATTRSET_USED_ITSELF"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_MIX_XERCESDOM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_MIX_XERCESDOM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TOO_MANY_LISTENERS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TOO_MANY_LISTENERS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_IN_ELEMTEMPLATEELEM_READOBJECT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_IN_ELEMTEMPLATEELEM_READOBJECT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DUPLICATE_NAMED_TEMPLATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DUPLICATE_NAMED_TEMPLATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_KEY_CALL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_KEY_CALL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_REFERENCING_ITSELF	TokenNameIdentifier
=	TokenNameEQUAL
"ER_REFERENCING_ITSELF"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_DOMSOURCE_INPUT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_DOMSOURCE_INPUT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CLASS_NOT_FOUND_FOR_OPTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CLASS_NOT_FOUND_FOR_OPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_REQUIRED_ELEM_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_REQUIRED_ELEM_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INPUT_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INPUT_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_URI_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_URI_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FILE_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FILE_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SOURCE_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SOURCE_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_INIT_BSFMGR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_INIT_BSFMGR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CMPL_EXTENSN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CMPL_EXTENSN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CREATE_EXTENSN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CREATE_EXTENSN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INSTANCE_MTHD_CALL_REQUIRES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INSTANCE_MTHD_CALL_REQUIRES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_ELEMENT_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_ELEMENT_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ELEMENT_NAME_METHOD_STATIC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ELEMENT_NAME_METHOD_STATIC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXTENSION_FUNC_UNKNOWN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXTENSION_FUNC_UNKNOWN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MORE_MATCH_CONSTRUCTOR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MORE_MATCH_CONSTRUCTOR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MORE_MATCH_METHOD	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MORE_MATCH_METHOD"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MORE_MATCH_ELEMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MORE_MATCH_ELEMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_CONTEXT_PASSED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_CONTEXT_PASSED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_POOL_EXISTS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_POOL_EXISTS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_DRIVER_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_DRIVER_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_URL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_URL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_POOL_SIZE_LESSTHAN_ONE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_POOL_SIZE_LESSTHAN_ONE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_DRIVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_DRIVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_STYLESHEETROOT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_STYLESHEETROOT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_XMLSPACE_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_XMLSPACE_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSFROMNODE_FAILED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSFROMNODE_FAILED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESOURCE_COULD_NOT_LOAD	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESOURCE_COULD_NOT_LOAD"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BUFFER_SIZE_LESSTHAN_ZERO	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BUFFER_SIZE_LESSTHAN_ZERO"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_ERROR_CALLING_EXTENSION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_ERROR_CALLING_EXTENSION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_NAMESPACE_DECL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_NAMESPACE_DECL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ELEM_CONTENT_NOT_ALLOWED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ELEM_CONTENT_NOT_ALLOWED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STYLESHEET_DIRECTED_TERMINATION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STYLESHEET_DIRECTED_TERMINATION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ONE_OR_TWO	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ONE_OR_TWO"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TWO_OR_THREE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TWO_OR_THREE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_LOAD_RESOURCE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_LOAD_RESOURCE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_INIT_DEFAULT_TEMPLATES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_INIT_DEFAULT_TEMPLATES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESULT_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESULT_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESULT_COULD_NOT_BE_SET	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESULT_COULD_NOT_BE_SET"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_OUTPUT_SPECIFIED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_OUTPUT_SPECIFIED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_TRANSFORM_TO_RESULT_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_TRANSFORM_TO_RESULT_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_TRANSFORM_SOURCE_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_TRANSFORM_SOURCE_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_CONTENT_HANDLER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_CONTENT_HANDLER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_ERROR_HANDLER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CALL_PARSE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CALL_PARSE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_PARENT_FOR_FILTER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_PARENT_FOR_FILTER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_STYLESHEET_IN_MEDIA	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_STYLESHEET_IN_MEDIA"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_STYLESHEET_PI	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_STYLESHEET_PI"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROPERTY_VALUE_BOOLEAN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROPERTY_VALUE_BOOLEAN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_FIND_EXTERN_SCRIPT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_FIND_EXTERN_SCRIPT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESOURCE_COULD_NOT_FIND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESOURCE_COULD_NOT_FIND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_OUTPUT_PROPERTY_NOT_RECOGNIZED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_OUTPUT_PROPERTY_NOT_RECOGNIZED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FAILED_CREATING_ELEMLITRSLT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FAILED_CREATING_ELEMLITRSLT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_VALUE_SHOULD_BE_NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_VALUE_SHOULD_BE_NUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_VALUE_SHOULD_EQUAL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_VALUE_SHOULD_EQUAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FAILED_CALLING_METHOD	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FAILED_CALLING_METHOD"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FAILED_CREATING_ELEMTMPL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FAILED_CREATING_ELEMTMPL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CHARS_NOT_ALLOWED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CHARS_NOT_ALLOWED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ATTR_NOT_ALLOWED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ATTR_NOT_ALLOWED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BAD_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BAD_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ATTRIB_VALUE_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ATTRIB_VALUE_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ATTRIB_VALUE_NOT_RECOGNIZED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ATTRIB_VALUE_NOT_RECOGNIZED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_URI_NAMESPACE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_URI_NAMESPACE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NUMBER_TOO_BIG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NUMBER_TOO_BIG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_FIND_SAX1_DRIVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_FIND_SAX1_DRIVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SAX1_DRIVER_NOT_LOADED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SAX1_DRIVER_NOT_LOADED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SAX1_DRIVER_NOT_INSTANTIATED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SAX1_DRIVER_NOT_INSTANTIATED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PARSER_PROPERTY_NOT_SPECIFIED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PARSER_PROPERTY_NOT_SPECIFIED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PARSER_ARG_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PARSER_ARG_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FEATURE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FEATURE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROPERTY	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROPERTY"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_ENTITY_RESOLVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_ENTITY_RESOLVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_DTD_HANDLER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_DTD_HANDLER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_DRIVER_NAME_SPECIFIED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_DRIVER_NAME_SPECIFIED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_URL_SPECIFIED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_URL_SPECIFIED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_POOLSIZE_LESS_THAN_ONE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_POOLSIZE_LESS_THAN_ONE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_DRIVER_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_DRIVER_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ERRORLISTENER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ERRORLISTENER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ASSERT_NO_TEMPLATE_PARENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ASSERT_NO_TEMPLATE_PARENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_ALLOWED_IN_POSITION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_ALLOWED_IN_POSITION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAMESPACE_CONTEXT_NULL_NAMESPACE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAMESPACE_CONTEXT_NULL_NAMESPACE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAMESPACE_CONTEXT_NULL_PREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAMESPACE_CONTEXT_NULL_PREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XPATH_RESOLVER_NULL_QNAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XPATH_RESOLVER_NULL_QNAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XPATH_RESOLVER_NEGATIVE_ARITY	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XPATH_RESOLVER_NEGATIVE_ARITY"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_TCHAR	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_TCHAR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_QNAME	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_QNAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_ENUM	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_ENUM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_NMTOKEN	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_NMTOKEN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_NCNAME	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_NCNAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_BOOLEAN	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_BOOLEAN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_NUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ARG_LITERAL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ARG_LITERAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DUPLICATE_GLOBAL_VAR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DUPLICATE_GLOBAL_VAR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DUPLICATE_VAR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DUPLICATE_VAR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TEMPLATE_NAME_MATCH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TEMPLATE_NAME_MATCH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_PREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_PREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_ATTRIB_SET	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_ATTRIB_SET"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FUNCTION_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FUNCTION_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_HAVE_CONTENT_AND_SELECT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_HAVE_CONTENT_AND_SELECT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_SET_PARAM_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_SET_PARAM_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SET_FEATURE_NULL_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SET_FEATURE_NULL_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_GET_FEATURE_NULL_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_GET_FEATURE_NULL_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNSUPPORTED_FEATURE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNSUPPORTED_FEATURE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_FOUND_CURLYBRACE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_FOUND_CURLYBRACE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR	TokenNameIdentifier
=	TokenNameEQUAL
"WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_EXPR_ATTRIB_CHANGED_TO_SELECT	TokenNameIdentifier
=	TokenNameEQUAL
"WG_EXPR_ATTRIB_CHANGED_TO_SELECT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_NO_LOCALE_IN_FORMATNUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"WG_NO_LOCALE_IN_FORMATNUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_LOCALE_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"WG_LOCALE_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_CANNOT_MAKE_URL_FROM	TokenNameIdentifier
=	TokenNameEQUAL
"WG_CANNOT_MAKE_URL_FROM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_CANNOT_LOAD_REQUESTED_DOC	TokenNameIdentifier
=	TokenNameEQUAL
"WG_CANNOT_LOAD_REQUESTED_DOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_CANNOT_FIND_COLLATOR	TokenNameIdentifier
=	TokenNameEQUAL
"WG_CANNOT_FIND_COLLATOR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_FUNCTIONS_SHOULD_USE_URL	TokenNameIdentifier
=	TokenNameEQUAL
"WG_FUNCTIONS_SHOULD_USE_URL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ENCODING_NOT_SUPPORTED_USING_UTF8	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ENCODING_NOT_SUPPORTED_USING_UTF8"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ENCODING_NOT_SUPPORTED_USING_JAVA	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ENCODING_NOT_SUPPORTED_USING_JAVA"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_SPECIFICITY_CONFLICTS	TokenNameIdentifier
=	TokenNameEQUAL
"WG_SPECIFICITY_CONFLICTS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_PARSING_AND_PREPARING	TokenNameIdentifier
=	TokenNameEQUAL
"WG_PARSING_AND_PREPARING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ATTR_TEMPLATE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ATTR_TEMPLATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESP"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ATTRIB_NOT_HANDLED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ATTRIB_NOT_HANDLED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_NO_DECIMALFORMAT_DECLARATION	TokenNameIdentifier
=	TokenNameEQUAL
"WG_NO_DECIMALFORMAT_DECLARATION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_OLD_XSLT_NS	TokenNameIdentifier
=	TokenNameEQUAL
"WG_OLD_XSLT_NS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ILLEGAL_ATTRIBUTE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ILLEGAL_ATTRIBUTE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_COULD_NOT_RESOLVE_PREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"WG_COULD_NOT_RESOLVE_PREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_STYLESHEET_REQUIRES_VERSION_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"WG_STYLESHEET_REQUIRES_VERSION_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ILLEGAL_ATTRIBUTE_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ILLEGAL_ATTRIBUTE_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ILLEGAL_ATTRIBUTE_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ILLEGAL_ATTRIBUTE_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_EMPTY_SECOND_ARG	TokenNameIdentifier
=	TokenNameEQUAL
"WG_EMPTY_SECOND_ARG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML	TokenNameIdentifier
=	TokenNameEQUAL
"WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME	TokenNameIdentifier
=	TokenNameEQUAL
"WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ILLEGAL_ATTRIBUTE_POSITION	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ILLEGAL_ATTRIBUTE_POSITION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
NO_MODIFICATION_ALLOWED_ERR	TokenNameIdentifier
=	TokenNameEQUAL
"NO_MODIFICATION_ALLOWED_ERR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getContents	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
{	TokenNameLBRACE
"ER0000"	TokenNameStringLiteral
,	TokenNameCOMMA
"{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_CURLYBRACE	TokenNameIdentifier
,	TokenNameCOMMA
"错误：表达式中不能有“{”"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_ATTRIBUTE	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 有一个非法属性：{1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_SOURCENODE_APPLYIMPORTS	TokenNameIdentifier
,	TokenNameCOMMA
"sourceNode 在 xsl:apply-imports 中为空！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_ADD	TokenNameIdentifier
,	TokenNameCOMMA
"无法将“{0}”添加到“{1}”"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES	TokenNameIdentifier
,	TokenNameCOMMA
"sourceNode 在 handleApplyTemplatesInstruction 中为空！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_NAME_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"“{0}”必须有 name 属性。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TEMPLATE_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"找不到以下名称的模板：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_RESOLVE_NAME_AVT	TokenNameIdentifier
,	TokenNameCOMMA
"无法解析 xsl:call-template 中的名称 AVT。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_REQUIRES_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"“{0}”需要属性：{1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MUST_HAVE_TEST_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"“{0}”必须有“test”属性。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BAD_VAL_ON_LEVEL_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"级别属性上出现错误值：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML	TokenNameIdentifier
,	TokenNameCOMMA
"processing-instruction 名称不能是“xml”"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME	TokenNameIdentifier
,	TokenNameCOMMA
"processing-instruction 名称必须是有效的 NCName：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NEED_MATCH_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"“{0}”如果有某种方式，就必须有 match 属性。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NEED_NAME_OR_MATCH_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"“{0}”需要 name 属性或 match 属性。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_RESOLVE_NSPREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"无法解析名称空间前缀：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"xml:space 有非法的值：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_OWNERDOC	TokenNameIdentifier
,	TokenNameCOMMA
"子节点没有所有者文档！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ELEMTEMPLATEELEM_ERR	TokenNameIdentifier
,	TokenNameCOMMA
"ElemTemplateElement 错误：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_CHILD	TokenNameIdentifier
,	TokenNameCOMMA
"正在尝试添加空的子代！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NEED_SELECT_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 需要 select 属性。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NEED_TEST_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:when 必须有“test”属性。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NEED_NAME_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:with-param 必须有“name”属性。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_CONTEXT_OWNERDOC	TokenNameIdentifier
,	TokenNameCOMMA
"上下文没有所有者文档！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_CREATE_XML_PROC_LIAISON	TokenNameIdentifier
,	TokenNameCOMMA
"无法创建 XML TransformerFactory 联系：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESS_NOT_SUCCESSFUL	TokenNameIdentifier
,	TokenNameCOMMA
"Xalan: Process 不成功。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_SUCCESSFUL	TokenNameIdentifier
,	TokenNameCOMMA
"Xalan: 不成功。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ENCODING_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"不支持编码：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_CREATE_TRACELISTENER	TokenNameIdentifier
,	TokenNameCOMMA
"无法创建 TraceListener：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_KEY_REQUIRES_NAME_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:key 需要“name”属性！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_KEY_REQUIRES_MATCH_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:key 需要“match”属性！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_KEY_REQUIRES_USE_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:key 需要“use”属性！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_REQUIRES_ELEMENTS_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0} 需要“elements”属性！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISSING_PREFIX_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0} 属性“prefix”丢失"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BAD_STYLESHEET_URL	TokenNameIdentifier
,	TokenNameCOMMA
"样式表 URL 错误：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FILE_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"找不到样式表文件：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_IOEXCEPTION	TokenNameIdentifier
,	TokenNameCOMMA
"样式表文件发生 IO 异常：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_HREF_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"（StylesheetHandler）无法为 {0} 找到 href 属性"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STYLESHEET_INCLUDES_ITSELF	TokenNameIdentifier
,	TokenNameCOMMA
"（StylesheetHandler）{0} 正在直接或间接地包含它自身！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSINCLUDE_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"StylesheetHandler.processInclude 错误，{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISSING_LANG_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0} 属性“lang”丢失"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISSING_CONTAINER_ELEMENT_COMPONENT	TokenNameIdentifier
,	TokenNameCOMMA
"（StylesheetHandler）是否错放了 {0} 元素？？缺少容器元素“component”"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CAN_ONLY_OUTPUT_TO_ELEMENT	TokenNameIdentifier
,	TokenNameCOMMA
"只能输出到 Element、DocumentFragment、Document 或 PrintWriter。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESS_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"StylesheetRoot.process 错误"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNIMPLNODE_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"UnImplNode 错误：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_SELECT_EXPRESSION	TokenNameIdentifier
,	TokenNameCOMMA
"错误！找不到 xpath 选择表达式（-select）。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_SERIALIZE_XSLPROCESSOR	TokenNameIdentifier
,	TokenNameCOMMA
"无法序列化 XSLProcessor！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_INPUT_STYLESHEET	TokenNameIdentifier
,	TokenNameCOMMA
"没有指定样式表输入！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FAILED_PROCESS_STYLESHEET	TokenNameIdentifier
,	TokenNameCOMMA
"无法处理样式表！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNT_PARSE_DOC	TokenNameIdentifier
,	TokenNameCOMMA
"无法解析 {0} 文档！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNT_FIND_FRAGMENT	TokenNameIdentifier
,	TokenNameCOMMA
"找不到片段：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODE_NOT_ELEMENT	TokenNameIdentifier
,	TokenNameCOMMA
"片段标识指向的节点不是元素：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"for-each 必须有 match 或 name 属性"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"templates 必须有 match 或 name 属性"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_CLONE_OF_DOCUMENT_FRAG	TokenNameIdentifier
,	TokenNameCOMMA
"无文档片段的克隆！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CREATE_ITEM	TokenNameIdentifier
,	TokenNameCOMMA
"无法在结果树中创建项：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XMLSPACE_ILLEGAL_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"源 XML 中的 xml:space 有非法值：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_XSLKEY_DECLARATION	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 没有 xsl:key 声明！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CREATE_URL	TokenNameIdentifier
,	TokenNameCOMMA
"错误！无法为 {0} 创建 URL"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSLFUNCTIONS_UNSUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"不支持 xsl:functions"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSOR_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"XSLT TransformerFactory 错误"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_ALLOWED_INSIDE_STYLESHEET	TokenNameIdentifier
,	TokenNameCOMMA
"（StylesheetHandler）样式表内不允许 {0}！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESULTNS_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"不再支持 result-ns！请改为使用 xsl:output。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DEFAULTSPACE_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"不再支持 default-space！请改为使用 xsl:strip-space 或 xsl:preserve-space。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INDENTRESULT_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"不再支持 indent-result！请改为使用 xsl:output。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"（StylesheetHandler）{0} 有非法属性：{1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_XSL_ELEM	TokenNameIdentifier
,	TokenNameCOMMA
"未知 XSL 元素：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BAD_XSLSORT_USE	TokenNameIdentifier
,	TokenNameCOMMA
"（StylesheetHandler）xsl:sort 只能与 xsl:apply-templates 或 xsl:for-each 一起使用。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISPLACED_XSLWHEN	TokenNameIdentifier
,	TokenNameCOMMA
"（StylesheetHandler）错放了 xsl:when！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE	TokenNameIdentifier
,	TokenNameCOMMA
"（StylesheetHandler）xsl:choose 不是 xsl:when 的父代！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISPLACED_XSLOTHERWISE	TokenNameIdentifier
,	TokenNameCOMMA
"（StylesheetHandler）错放了 xsl:otherwise！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE	TokenNameIdentifier
,	TokenNameCOMMA
"（StylesheetHandler）xsl:choose 不是 xsl:otherwise 的父代！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_ALLOWED_INSIDE_TEMPLATE	TokenNameIdentifier
,	TokenNameCOMMA
"（StylesheetHandler）模板内不允许出现 {0}！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_EXT_NS_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"（StylesheetHandler）{0} 扩展名称空间前缀 {1} 未知"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_IMPORTS_AS_FIRST_ELEM	TokenNameIdentifier
,	TokenNameCOMMA
"（StylesheetHandler）导入只能作为样式表中最前面的元素发生！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_IMPORTING_ITSELF	TokenNameIdentifier
,	TokenNameCOMMA
"（StylesheetHandler）{0} 正在直接或间接地导入它自身！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XMLSPACE_ILLEGAL_VAL	TokenNameIdentifier
,	TokenNameCOMMA
"（StylesheetHandler）xml:space 有非法值：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL	TokenNameIdentifier
,	TokenNameCOMMA
"processStylesheet 不成功！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SAX_EXCEPTION	TokenNameIdentifier
,	TokenNameCOMMA
"SAX 异常"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FUNCTION_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"函数不受支持！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSLT_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"XSLT 错误"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CURRENCY_SIGN_ILLEGAL	TokenNameIdentifier
,	TokenNameCOMMA
"格式模式字符串中不允许存在货币符号"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM	TokenNameIdentifier
,	TokenNameCOMMA
"样式表 DOM 中不支持文档函数！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER	TokenNameIdentifier
,	TokenNameCOMMA
"无法解析非前缀解析器的前缀！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_REDIRECT_COULDNT_GET_FILENAME	TokenNameIdentifier
,	TokenNameCOMMA
"重定向扩展：无法获取文件名 － file 或 select 属性必须返回有效字符串。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT	TokenNameIdentifier
,	TokenNameCOMMA
"无法在重定向扩展中构建 FormatterListener！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"exclude-result-prefixes 中的前缀无效：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISSING_NS_URI	TokenNameIdentifier
,	TokenNameCOMMA
"指定的前缀缺少名称空间 URI"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISSING_ARG_FOR_OPTION	TokenNameIdentifier
,	TokenNameCOMMA
"选项 {0} 缺少自变量"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_OPTION	TokenNameIdentifier
,	TokenNameCOMMA
"选项 {0} 无效"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MALFORMED_FORMAT_STRING	TokenNameIdentifier
,	TokenNameCOMMA
"格式字符串 {0} 的格式错误"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STYLESHEET_REQUIRES_VERSION_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:stylesheet 需要“version”属性！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_ATTRIBUTE_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"属性：{0} 有非法的值：{1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CHOOSE_REQUIRES_WHEN	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:choose 需要 xsl:when"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_APPLY_IMPORT_IN_FOR_EACH	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:for-each 中不允许有 xsl:apply-imports"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_USE_DTM_FOR_OUTPUT	TokenNameIdentifier
,	TokenNameCOMMA
"无法将 DTMLiaison 用于输出 DOM 节点... 改为传递 org.apache.xpath.DOM2Helper！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_USE_DTM_FOR_INPUT	TokenNameIdentifier
,	TokenNameCOMMA
"无法将 DTMLiaison 用于输入 DOM 节点... 改为传递 org.apache.xpath.DOM2Helper！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CALL_TO_EXT_FAILED	TokenNameIdentifier
,	TokenNameCOMMA
"调用扩展元素失败：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PREFIX_MUST_RESOLVE	TokenNameIdentifier
,	TokenNameCOMMA
"前缀必须解析为名称空间：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_UTF16_SURROGATE	TokenNameIdentifier
,	TokenNameCOMMA
"检测到无效的 UTF-16 超大字符集：{0}？"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSLATTRSET_USED_ITSELF	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:attribute-set {0} 使用了自身，这将导致无限循环。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_MIX_XERCESDOM	TokenNameIdentifier
,	TokenNameCOMMA
"无法将非 Xerces-DOM 输入与 Xerces-DOM 输出混合！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TOO_MANY_LISTENERS	TokenNameIdentifier
,	TokenNameCOMMA
"addTraceListenersToStylesheet ― TooManyListenersException"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_IN_ELEMTEMPLATEELEM_READOBJECT	TokenNameIdentifier
,	TokenNameCOMMA
"在 ElemTemplateElement.readObject 中：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DUPLICATE_NAMED_TEMPLATE	TokenNameIdentifier
,	TokenNameCOMMA
"找到多个名为 {0} 的模板"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_KEY_CALL	TokenNameIdentifier
,	TokenNameCOMMA
"无效的函数调用：不允许递归 key() 调用"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_REFERENCING_ITSELF	TokenNameIdentifier
,	TokenNameCOMMA
"变量 {0} 正在直接或间接地引用它自身！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_DOMSOURCE_INPUT	TokenNameIdentifier
,	TokenNameCOMMA
"输入节点对于 newTemplates 的 DOMSource 不能为空！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CLASS_NOT_FOUND_FOR_OPTION	TokenNameIdentifier
,	TokenNameCOMMA
"找不到选项 {0} 的类文件"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_REQUIRED_ELEM_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"找不到必需的元素：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INPUT_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"InputStream 不能为空"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_URI_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"URI 不能为空"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FILE_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"File 不能为空"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SOURCE_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"InputSource 不能为空"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_INIT_BSFMGR	TokenNameIdentifier
,	TokenNameCOMMA
"无法初始化 BSF 管理器"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CMPL_EXTENSN	TokenNameIdentifier
,	TokenNameCOMMA
"无法编译扩展"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CREATE_EXTENSN	TokenNameIdentifier
,	TokenNameCOMMA
"由于 {1}，无法创建扩展 {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INSTANCE_MTHD_CALL_REQUIRES	TokenNameIdentifier
,	TokenNameCOMMA
"对方法 {0} 的实例方法调用要求以对象实例作为第一参数"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_ELEMENT_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"指定了无效的元素名称 {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ELEMENT_NAME_METHOD_STATIC	TokenNameIdentifier
,	TokenNameCOMMA
"元素名称方法必须是 static {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXTENSION_FUNC_UNKNOWN	TokenNameIdentifier
,	TokenNameCOMMA
"扩展函数 {0} : {1} 未知"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MORE_MATCH_CONSTRUCTOR	TokenNameIdentifier
,	TokenNameCOMMA
"对于 {0}，构造函数有多个最佳匹配"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MORE_MATCH_METHOD	TokenNameIdentifier
,	TokenNameCOMMA
"方法 {0} 有多个最佳匹配"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MORE_MATCH_ELEMENT	TokenNameIdentifier
,	TokenNameCOMMA
"element 方法 {0} 有多个最佳匹配"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_CONTEXT_PASSED	TokenNameIdentifier
,	TokenNameCOMMA
"评估 {0} 时传递了无效的上下文"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_POOL_EXISTS	TokenNameIdentifier
,	TokenNameCOMMA
"池已经存在"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_DRIVER_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"未指定驱动程序名称"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_URL	TokenNameIdentifier
,	TokenNameCOMMA
"未指定 URL"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_POOL_SIZE_LESSTHAN_ONE	TokenNameIdentifier
,	TokenNameCOMMA
"池大小小于 1！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_DRIVER	TokenNameIdentifier
,	TokenNameCOMMA
"指定了无效的驱动程序名称！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_STYLESHEETROOT	TokenNameIdentifier
,	TokenNameCOMMA
"找不到样式表根目录！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_XMLSPACE_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"xml:space 的值非法"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSFROMNODE_FAILED	TokenNameIdentifier
,	TokenNameCOMMA
"processFromNode 失败"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESOURCE_COULD_NOT_LOAD	TokenNameIdentifier
,	TokenNameCOMMA
"资源 [ {0} ] 无法装入：{1}   {2}   {3}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BUFFER_SIZE_LESSTHAN_ZERO	TokenNameIdentifier
,	TokenNameCOMMA
"缓冲区大小 <=0"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_ERROR_CALLING_EXTENSION	TokenNameIdentifier
,	TokenNameCOMMA
"调用扩展时发生未知错误"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_NAMESPACE_DECL	TokenNameIdentifier
,	TokenNameCOMMA
"前缀 {0} 没有相应的名称空间声明"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ELEM_CONTENT_NOT_ALLOWED	TokenNameIdentifier
,	TokenNameCOMMA
"lang=javaclass {0} 不允许出现元素内容"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STYLESHEET_DIRECTED_TERMINATION	TokenNameIdentifier
,	TokenNameCOMMA
"样式表定向的终止"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ONE_OR_TWO	TokenNameIdentifier
,	TokenNameCOMMA
"1 或 2"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TWO_OR_THREE	TokenNameIdentifier
,	TokenNameCOMMA
"2 或 3"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_LOAD_RESOURCE	TokenNameIdentifier
,	TokenNameCOMMA
"无法装入 {0}（检查 CLASSPATH），现在只使用缺省值"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_INIT_DEFAULT_TEMPLATES	TokenNameIdentifier
,	TokenNameCOMMA
"无法初始化缺省模板"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESULT_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"结果不应为空"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESULT_COULD_NOT_BE_SET	TokenNameIdentifier
,	TokenNameCOMMA
"无法设置结果"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_OUTPUT_SPECIFIED	TokenNameIdentifier
,	TokenNameCOMMA
"未指定输出"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_TRANSFORM_TO_RESULT_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"无法转换成类型为 {0} 的结果"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_TRANSFORM_SOURCE_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"无法转换类型为 {0} 的源"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_CONTENT_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
"内容处理程序为空"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
"错误处理程序为空"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CALL_PARSE	TokenNameIdentifier
,	TokenNameCOMMA
"如果没有设置 ContentHandler，则无法调用解析"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_PARENT_FOR_FILTER	TokenNameIdentifier
,	TokenNameCOMMA
"过滤器无父代"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_STYLESHEET_IN_MEDIA	TokenNameIdentifier
,	TokenNameCOMMA
"在 {0} 中找不到样式表，介质 = {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_STYLESHEET_PI	TokenNameIdentifier
,	TokenNameCOMMA
"在 {0} 中找不到 xml-stylesheet PI"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"不支持：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROPERTY_VALUE_BOOLEAN	TokenNameIdentifier
,	TokenNameCOMMA
"特性 {0} 的值应当是布尔实例"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_FIND_EXTERN_SCRIPT	TokenNameIdentifier
,	TokenNameCOMMA
"找不到 {0} 上的外部脚本"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESOURCE_COULD_NOT_FIND	TokenNameIdentifier
,	TokenNameCOMMA
"找不到资源 [ {0} ]。  {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_OUTPUT_PROPERTY_NOT_RECOGNIZED	TokenNameIdentifier
,	TokenNameCOMMA
"未识别出输出属性：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FAILED_CREATING_ELEMLITRSLT	TokenNameIdentifier
,	TokenNameCOMMA
"创建 ElemLiteralResult 实例失败"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_VALUE_SHOULD_BE_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 的值应当包含可进行解析的数字"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_VALUE_SHOULD_EQUAL	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 的值应当等于 yes 或 no"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FAILED_CALLING_METHOD	TokenNameIdentifier
,	TokenNameCOMMA
"调用 {0} 方法失败"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FAILED_CREATING_ELEMTMPL	TokenNameIdentifier
,	TokenNameCOMMA
"创建 ElemTemplateElement 实例失败"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CHARS_NOT_ALLOWED	TokenNameIdentifier
,	TokenNameCOMMA
"此时文档中不允许有字符"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ATTR_NOT_ALLOWED	TokenNameIdentifier
,	TokenNameCOMMA
"{1} 元素上不允许使用“{0}”属性！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BAD_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 错误值 {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ATTRIB_VALUE_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"找不到 {0} 属性值"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ATTRIB_VALUE_NOT_RECOGNIZED	TokenNameIdentifier
,	TokenNameCOMMA
"未识别出 {0} 属性值"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_URI_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
"正在试图以空的 URI 生成名称空间前缀"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NUMBER_TOO_BIG	TokenNameIdentifier
,	TokenNameCOMMA
"正在试图格式化大于最大长整数的数字"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_FIND_SAX1_DRIVER	TokenNameIdentifier
,	TokenNameCOMMA
"找不到 SAX1 驱动程序类 {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SAX1_DRIVER_NOT_LOADED	TokenNameIdentifier
,	TokenNameCOMMA
"找到了 SAX1 驱动程序类 {0}，但无法装入它"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SAX1_DRIVER_NOT_INSTANTIATED	TokenNameIdentifier
,	TokenNameCOMMA
"装入了 SAX1 驱动程序类 {0}，但无法将它实例化"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER	TokenNameIdentifier
,	TokenNameCOMMA
"SAX1 驱动程序类 {0} 不实现 org.xml.sax.Parser"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PARSER_PROPERTY_NOT_SPECIFIED	TokenNameIdentifier
,	TokenNameCOMMA
"没有指定系统属性 org.xml.sax.parser"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PARSER_ARG_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"解析器参数不得为空"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
"特征：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROPERTY	TokenNameIdentifier
,	TokenNameCOMMA
"属性：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_ENTITY_RESOLVER	TokenNameIdentifier
,	TokenNameCOMMA
"实体解析器为空"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_DTD_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
"DTD 处理程序为空"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_DRIVER_NAME_SPECIFIED	TokenNameIdentifier
,	TokenNameCOMMA
"未指定驱动程序名称！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_URL_SPECIFIED	TokenNameIdentifier
,	TokenNameCOMMA
"未指定 URL！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_POOLSIZE_LESS_THAN_ONE	TokenNameIdentifier
,	TokenNameCOMMA
"池大小小于 1！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_DRIVER_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"指定了无效的驱动程序名称！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ERRORLISTENER	TokenNameIdentifier
,	TokenNameCOMMA
"ErrorListener"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ASSERT_NO_TEMPLATE_PARENT	TokenNameIdentifier
,	TokenNameCOMMA
"程序员的错误！表达式没有 ElemTemplateElement 父代！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR	TokenNameIdentifier
,	TokenNameCOMMA
"程序员在 RedundentExprEliminator 中的断言：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_ALLOWED_IN_POSITION	TokenNameIdentifier
,	TokenNameCOMMA
"样式表的此位置中不允许有 {0}！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION	TokenNameIdentifier
,	TokenNameCOMMA
"样式表的此位置中不允许有非空格的文本！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_TCHAR	TokenNameIdentifier
,	TokenNameCOMMA
"用于 CHAR 属性 {0} 的值 {1} 非法。类型 CHAR 的属性必须只有 1 个字符！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_QNAME	TokenNameIdentifier
,	TokenNameCOMMA
"用于 QNAME 属性 {0} 的值 {1} 非法"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_ENUM	TokenNameIdentifier
,	TokenNameCOMMA
"用于 ENUM 属性 {0} 的值 {1} 非法。有效的值是：{2}。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_NMTOKEN	TokenNameIdentifier
,	TokenNameCOMMA
"用于 NMTOKEN 属性 {0} 的值 {1} 非法"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_NCNAME	TokenNameIdentifier
,	TokenNameCOMMA
"用于 NCNAME 属性 {0} 的值 {1} 非法"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_BOOLEAN	TokenNameIdentifier
,	TokenNameCOMMA
"用于 boolean 属性 {0} 的值 {1} 非法"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"用于 number 属性 {0} 的值 {1} 非法"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ARG_LITERAL	TokenNameIdentifier
,	TokenNameCOMMA
"匹配模式中 {0} 的自变量必须是文字。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DUPLICATE_GLOBAL_VAR	TokenNameIdentifier
,	TokenNameCOMMA
"全局变量的声明重复。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DUPLICATE_VAR	TokenNameIdentifier
,	TokenNameCOMMA
"变量声明重复。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TEMPLATE_NAME_MATCH	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:template 必须有一个 name 或 match 属性（或两者兼有）"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"exclude-result-prefixes 中的前缀无效：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_ATTRIB_SET	TokenNameIdentifier
,	TokenNameCOMMA
"名为 {0} 的属性集不存在"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FUNCTION_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"名为 {0} 的函数不存在"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_HAVE_CONTENT_AND_SELECT	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 元素不得同时具有内容和 select 属性。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_SET_PARAM_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"参数 {0} 的值必须为有效的 Java 对象"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:namespace-alias 元素的 result-prefix 属性含有“#default”值，但在该元素的作用域中没有缺省名称空间的声明。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:namespace-alias 元素的 result-prefix 属性含有“{0}”值，但是在该元素的作用域中没有前缀“{0}”的名称空间声明。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SET_FEATURE_NULL_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"在 TransformerFactory.setFeature(String name, boolean value) 中特征名不能为空。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_GET_FEATURE_NULL_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"在 TransformerFactory.getFeature(String name) 中特征名不能为空。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNSUPPORTED_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
"无法对此 TransformerFactory 设置特征“{0}”。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING	TokenNameIdentifier
,	TokenNameCOMMA
"当安全处理功能设置为 true 时，不允许使用扩展元素“{0}”。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAMESPACE_CONTEXT_NULL_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
"无法为空名称空间 uri 获取前缀。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAMESPACE_CONTEXT_NULL_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"无法为空前缀获取名称空间 uri。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XPATH_RESOLVER_NULL_QNAME	TokenNameIdentifier
,	TokenNameCOMMA
"函数名不能为空。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XPATH_RESOLVER_NEGATIVE_ARITY	TokenNameIdentifier
,	TokenNameCOMMA
"数量不能为负。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_FOUND_CURLYBRACE	TokenNameIdentifier
,	TokenNameCOMMA
"找到“}”，但没有打开属性模板！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR	TokenNameIdentifier
,	TokenNameCOMMA
"警告：count 属性与 xsl:number 中的上级不匹配！目标 = {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_EXPR_ATTRIB_CHANGED_TO_SELECT	TokenNameIdentifier
,	TokenNameCOMMA
"旧语法：“expr”属性的名称已经更改为“select”。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_NO_LOCALE_IN_FORMATNUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"Xalan 在 format-number 函数中尚未处理语言环境名。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_LOCALE_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"警告：找不到 xml:lang={0} 的语言环境"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_CANNOT_MAKE_URL_FROM	TokenNameIdentifier
,	TokenNameCOMMA
"无法从 {0} 生成 URL"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_CANNOT_LOAD_REQUESTED_DOC	TokenNameIdentifier
,	TokenNameCOMMA
"无法装入请求的文档：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_CANNOT_FIND_COLLATOR	TokenNameIdentifier
,	TokenNameCOMMA
"找不到 <sort xml:lang={0} 的整理器"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_FUNCTIONS_SHOULD_USE_URL	TokenNameIdentifier
,	TokenNameCOMMA
"旧语法：函数指令应当使用 {0} 的 URL"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ENCODING_NOT_SUPPORTED_USING_UTF8	TokenNameIdentifier
,	TokenNameCOMMA
"不支持编码：{0}，正在使用 UTF-8"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ENCODING_NOT_SUPPORTED_USING_JAVA	TokenNameIdentifier
,	TokenNameCOMMA
"不支持编码：{0}，正在使用 Java {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_SPECIFICITY_CONFLICTS	TokenNameIdentifier
,	TokenNameCOMMA
"发现特性冲突：将使用样式表中最后找到的 {0}。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_PARSING_AND_PREPARING	TokenNameIdentifier
,	TokenNameCOMMA
"========= 解析和准备 {0} =========="	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ATTR_TEMPLATE	TokenNameIdentifier
,	TokenNameCOMMA
"属性模板，{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:strip-space 和 xsl:preserve-space 之间的匹配冲突"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ATTRIB_NOT_HANDLED	TokenNameIdentifier
,	TokenNameCOMMA
"Xalan 尚未处理 {0} 属性！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_NO_DECIMALFORMAT_DECLARATION	TokenNameIdentifier
,	TokenNameCOMMA
"找不到十进制格式的声明：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_OLD_XSLT_NS	TokenNameIdentifier
,	TokenNameCOMMA
"XSLT 名称空间丢失或不正确。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED	TokenNameIdentifier
,	TokenNameCOMMA
"只允许一个缺省的 xsl:decimal-format 声明。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:decimal-format 名称必须是唯一的。名称“{0}”有重复。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ILLEGAL_ATTRIBUTE	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 有一个非法属性：{1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_COULD_NOT_RESOLVE_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"无法解析名称空间前缀：{0}。将忽略该节点。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_STYLESHEET_REQUIRES_VERSION_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:stylesheet 需要“version”属性！"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ILLEGAL_ATTRIBUTE_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"非法属性名称：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ILLEGAL_ATTRIBUTE_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"用于属性 {0} 的值非法：{1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_EMPTY_SECOND_ARG	TokenNameIdentifier
,	TokenNameCOMMA
"从文档函数的第二参数产生的节点集是空的。返回一个空节点集。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:processing-instruction 名称的“name”属性的值不得为“xml”"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:processing-instruction 的“name”属性的值必须是有效的 NCName：{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ILLEGAL_ATTRIBUTE_POSITION	TokenNameIdentifier
,	TokenNameCOMMA
"在生成子节点之后或在生成元素之前无法添加属性 {0}。将忽略属性。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
NO_MODIFICATION_ALLOWED_ERR	TokenNameIdentifier
,	TokenNameCOMMA
"试图修改不允许修改的对象。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"ui_language"	TokenNameStringLiteral
,	TokenNameCOMMA
"zh"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"help_language"	TokenNameStringLiteral
,	TokenNameCOMMA
"zh"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"language"	TokenNameStringLiteral
,	TokenNameCOMMA
"zh"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"BAD_CODE"	TokenNameStringLiteral
,	TokenNameCOMMA
"createMessage 的参数超出范围"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"FORMAT_FAILED"	TokenNameStringLiteral
,	TokenNameCOMMA
"在 messageFormat 调用过程中抛出了异常"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"version"	TokenNameStringLiteral
,	TokenNameCOMMA
">>>>>>> Xalan 版本"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"version2"	TokenNameStringLiteral
,	TokenNameCOMMA
"<<<<<<<"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"yes"	TokenNameStringLiteral
,	TokenNameCOMMA
"是"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"line"	TokenNameStringLiteral
,	TokenNameCOMMA
"行号"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"column"	TokenNameStringLiteral
,	TokenNameCOMMA
"列号"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xsldone"	TokenNameStringLiteral
,	TokenNameCOMMA
"XSLProcessor：完成"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_option"	TokenNameStringLiteral
,	TokenNameCOMMA
"Xalan-J 命令行 Process 类选项："	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_option"	TokenNameStringLiteral
,	TokenNameCOMMA
"Xalan-J 命令行 Process 类选项："	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_invalid_xsltc_option"	TokenNameStringLiteral
,	TokenNameCOMMA
"在 XSLTC 方式中，不支持选项 {0}。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_invalid_xalan_option"	TokenNameStringLiteral
,	TokenNameCOMMA
"选项 {0} 只能与 -XSLTC 一起使用。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_no_input"	TokenNameStringLiteral
,	TokenNameCOMMA
"错误：没有指定样式表或输入 xml。不带任何选项运行此命令，以了解使用说明。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_common_options"	TokenNameStringLiteral
,	TokenNameCOMMA
"－ 常用选项 －"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_xalan_options"	TokenNameStringLiteral
,	TokenNameCOMMA
"― Xalan 选项 ―"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_xsltc_options"	TokenNameStringLiteral
,	TokenNameCOMMA
"― XSLTC 选项 ―"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_return_to_continue"	TokenNameStringLiteral
,	TokenNameCOMMA
"（请按 <return> 键继续）"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXSLTC"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-XSLTC （使用 XSLTC 转换）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionIN"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-IN inputXMLURL]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXSL"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XSL XSLTransformationURL]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionOUT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-OUT outputFileName]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionLXCIN"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-LXCIN compiledStylesheetFileNameIn]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionLXCOUT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-LXCOUT compiledStylesheetFileNameOutOut]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionPARSER"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-PARSER fully qualified class name of parser liaison]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionE"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-E （不要展开实体引用）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionV"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-E （不要展开实体引用）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionQC"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-QC （静默模式冲突警告）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionQ"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-Q （静默方式）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionLF"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-LF （仅在输出时使用换行 {缺省值是 CR/LF}）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionCR"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-CR （仅在输出时使用回车符 {缺省值是 CR/LF}）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionESCAPE"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-ESCAPE （设置转义字符 {缺省值是 <>&"'\r\n}）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionINDENT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-INDENT （控制缩进多少空格 {缺省值是 0}）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TT （在模板被调用时跟踪模板。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTG"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TG （跟踪每一个生成事件。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTS"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TS （跟踪每一个选择事件。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTTC"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TTC （在子模板被处理时对其进行跟踪。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTCLASS"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TCLASS （跟踪扩展的 TraceListener 类。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionVALIDATE"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-VALIDATE （设置是否进行验证。缺省时验证是关闭的。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionEDUMP"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-EDUMP {可选文件名} （发生错误时堆栈转储。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXML"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XML （使用 XML 格式化程序并添加 XML 头。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTEXT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TEXT （使用简单文本格式化程序。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionHTML"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-HTML （使用 HTML 格式化程序）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionPARAM"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-PARAM name expression （设置样识表参数）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg1"	TokenNameStringLiteral
,	TokenNameCOMMA
"XSL 处理不成功。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg2"	TokenNameStringLiteral
,	TokenNameCOMMA
"** 找不到解析器 **"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg3"	TokenNameStringLiteral
,	TokenNameCOMMA
"请检查您的类路径。"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg4"	TokenNameStringLiteral
,	TokenNameCOMMA
"如果没有 IBM 的 XML Parser for Java，您可以从以下位置下载它："	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg5"	TokenNameStringLiteral
,	TokenNameCOMMA
"IBM 的 AlphaWorks：http://www.alphaworks.ibm.com/formula/xml"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionURIRESOLVER"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-URIRESOLVER full class name （使用 URIResolver 解析 URI）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionENTITYRESOLVER"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-ENTITYRESOLVER full class name （使用 EntityResolver 解析实体）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionCONTENTHANDLER"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-CONTENTHANDLER full class name （使用 ContentHandler 串行化输出）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionLINENUMBERS"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-L use line numbers for source document]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionSECUREPROCESSING"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-SECURE （将安全处理功能设置为 true。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionMEDIA"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-MEDIA mediaType （使用 media 属性查找与文档关联的样式表。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionFLAVOR"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-FLAVOR flavorName （显式使用 s2s=SAX 或 d2d=DOM 进行转换。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionDIAG"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-DIAG （打印全部毫秒转换标记。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionINCREMENTAL"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-INCREMENTAL （通过将 http://xml.apache.org/xalan/features/incremental 设置为 true 请求增量 DTM 构造。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionNOOPTIMIMIZE"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-NOOPTIMIMIZE （通过将 http://xml.apache.org/xalan/features/optimize 设置为 false 请求无样式表的优化处理。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionRL"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-RL recursionlimit （断言样式表递归深度的数字极限。）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXO"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XO [transletName] （断言生成的 translet 的名称）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXD"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XD destinationDirectory （指定 translet 的目标目录）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXJ"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XJ jarfile （将 translet 类打包成名称为 <jarfile> 的 jar 文件）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXP"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XP package （指出所有生成的 translet 类的软件包名称前缀）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXN"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XN （启用模板代码嵌入）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXX"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XX （打开附加调试消息输出）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XT （可能的话使用 translet 进行转换）]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"diagTiming"	TokenNameStringLiteral
,	TokenNameCOMMA
"--------- {0} 通过 {1} 的转换耗时 {2} 毫秒"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"recursionTooDeep"	TokenNameStringLiteral
,	TokenNameCOMMA
"模板嵌套太深。嵌套 = {0}，模板 {1} {2}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"nameIs"	TokenNameStringLiteral
,	TokenNameCOMMA
"名称为"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"matchPatternIs"	TokenNameStringLiteral
,	TokenNameCOMMA
"匹配模式为"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
BAD_CODE	TokenNameIdentifier
=	TokenNameEQUAL
"BAD_CODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
FORMAT_FAILED	TokenNameIdentifier
=	TokenNameEQUAL
"FORMAT_FAILED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"#错误"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"错误："	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WARNING_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"警告："	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
XSL_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"XSLT "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
XML_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"XML "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
QUERY_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"PATTERN "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
XSLTErrorResources	TokenNameIdentifier
loadResourceBundle	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
className	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
MissingResourceException	TokenNameIdentifier
{	TokenNameLBRACE
Locale	TokenNameIdentifier
locale	TokenNameIdentifier
=	TokenNameEQUAL
Locale	TokenNameIdentifier
.	TokenNameDOT
getDefault	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
suffix	TokenNameIdentifier
=	TokenNameEQUAL
getResourceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
locale	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSLTErrorResources	TokenNameIdentifier
)	TokenNameRPAREN
ResourceBundle	TokenNameIdentifier
.	TokenNameDOT
getBundle	TokenNameIdentifier
(	TokenNameLPAREN
className	TokenNameIdentifier
+	TokenNamePLUS
suffix	TokenNameIdentifier
,	TokenNameCOMMA
locale	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MissingResourceException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSLTErrorResources	TokenNameIdentifier
)	TokenNameRPAREN
ResourceBundle	TokenNameIdentifier
.	TokenNameDOT
getBundle	TokenNameIdentifier
(	TokenNameLPAREN
className	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Locale	TokenNameIdentifier
(	TokenNameLPAREN
"zh"	TokenNameStringLiteral
,	TokenNameCOMMA
"CN"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MissingResourceException	TokenNameIdentifier
e2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
MissingResourceException	TokenNameIdentifier
(	TokenNameLPAREN
"Could not load any resource bundles."	TokenNameStringLiteral
,	TokenNameCOMMA
className	TokenNameIdentifier
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
getResourceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
Locale	TokenNameIdentifier
locale	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
suffix	TokenNameIdentifier
=	TokenNameEQUAL
"_"	TokenNameStringLiteral
+	TokenNamePLUS
locale	TokenNameIdentifier
.	TokenNameDOT
getLanguage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
country	TokenNameIdentifier
=	TokenNameEQUAL
locale	TokenNameIdentifier
.	TokenNameDOT
getCountry	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
country	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
"TW"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
suffix	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
"_"	TokenNameStringLiteral
+	TokenNamePLUS
country	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
suffix	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
