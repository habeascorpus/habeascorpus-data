package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
res	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ListResourceBundle	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Locale	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
MissingResourceException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ResourceBundle	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
XSLTErrorResources_es	TokenNameIdentifier
extends	TokenNameextends
ListResourceBundle	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MAX_CODE	TokenNameIdentifier
=	TokenNameEQUAL
201	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MAX_WARNING	TokenNameIdentifier
=	TokenNameEQUAL
29	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MAX_OTHERS	TokenNameIdentifier
=	TokenNameEQUAL
55	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MAX_MESSAGES	TokenNameIdentifier
=	TokenNameEQUAL
MAX_CODE	TokenNameIdentifier
+	TokenNamePLUS
MAX_WARNING	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_SET_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_CURLYBRACE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_CURLYBRACE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FUNCTION_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FUNCTION_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_ATTRIBUTE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_ATTRIBUTE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_SOURCENODE_APPLYIMPORTS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_SOURCENODE_APPLYIMPORTS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_ADD	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_ADD"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_NAME_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_NAME_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TEMPLATE_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TEMPLATE_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_RESOLVE_NAME_AVT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_RESOLVE_NAME_AVT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_REQUIRES_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_REQUIRES_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MUST_HAVE_TEST_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MUST_HAVE_TEST_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BAD_VAL_ON_LEVEL_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BAD_VAL_ON_LEVEL_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NEED_MATCH_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NEED_MATCH_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NEED_NAME_OR_MATCH_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NEED_NAME_OR_MATCH_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_RESOLVE_NSPREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_RESOLVE_NSPREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_OWNERDOC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_OWNERDOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ELEMTEMPLATEELEM_ERR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ELEMTEMPLATEELEM_ERR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_CHILD	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_CHILD"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NEED_SELECT_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NEED_SELECT_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NEED_TEST_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NEED_TEST_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NEED_NAME_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NEED_NAME_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_CONTEXT_OWNERDOC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_CONTEXT_OWNERDOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_CREATE_XML_PROC_LIAISON	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_CREATE_XML_PROC_LIAISON"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESS_NOT_SUCCESSFUL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESS_NOT_SUCCESSFUL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_SUCCESSFUL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_SUCCESSFUL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ENCODING_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ENCODING_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_CREATE_TRACELISTENER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_CREATE_TRACELISTENER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_KEY_REQUIRES_NAME_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_KEY_REQUIRES_NAME_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_KEY_REQUIRES_MATCH_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_KEY_REQUIRES_MATCH_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_KEY_REQUIRES_USE_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_KEY_REQUIRES_USE_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_REQUIRES_ELEMENTS_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_REQUIRES_ELEMENTS_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISSING_PREFIX_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISSING_PREFIX_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BAD_STYLESHEET_URL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BAD_STYLESHEET_URL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FILE_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FILE_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_IOEXCEPTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_IOEXCEPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_HREF_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_HREF_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STYLESHEET_INCLUDES_ITSELF	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STYLESHEET_INCLUDES_ITSELF"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSINCLUDE_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSINCLUDE_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISSING_LANG_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISSING_LANG_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISSING_CONTAINER_ELEMENT_COMPONENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISSING_CONTAINER_ELEMENT_COMPONENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CAN_ONLY_OUTPUT_TO_ELEMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CAN_ONLY_OUTPUT_TO_ELEMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESS_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESS_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNIMPLNODE_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNIMPLNODE_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_SELECT_EXPRESSION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_SELECT_EXPRESSION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_SERIALIZE_XSLPROCESSOR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_SERIALIZE_XSLPROCESSOR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_INPUT_STYLESHEET	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_INPUT_STYLESHEET"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FAILED_PROCESS_STYLESHEET	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FAILED_PROCESS_STYLESHEET"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNT_PARSE_DOC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNT_PARSE_DOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNT_FIND_FRAGMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNT_FIND_FRAGMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODE_NOT_ELEMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODE_NOT_ELEMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_CLONE_OF_DOCUMENT_FRAG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_CLONE_OF_DOCUMENT_FRAG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CREATE_ITEM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CREATE_ITEM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XMLSPACE_ILLEGAL_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XMLSPACE_ILLEGAL_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_XSLKEY_DECLARATION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_XSLKEY_DECLARATION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CREATE_URL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CREATE_URL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSLFUNCTIONS_UNSUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSLFUNCTIONS_UNSUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSOR_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSOR_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_ALLOWED_INSIDE_STYLESHEET	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_ALLOWED_INSIDE_STYLESHEET"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESULTNS_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESULTNS_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DEFAULTSPACE_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DEFAULTSPACE_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INDENTRESULT_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INDENTRESULT_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_XSL_ELEM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_XSL_ELEM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BAD_XSLSORT_USE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BAD_XSLSORT_USE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISPLACED_XSLWHEN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISPLACED_XSLWHEN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISPLACED_XSLOTHERWISE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISPLACED_XSLOTHERWISE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_ALLOWED_INSIDE_TEMPLATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_ALLOWED_INSIDE_TEMPLATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_EXT_NS_PREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_EXT_NS_PREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_IMPORTS_AS_FIRST_ELEM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_IMPORTS_AS_FIRST_ELEM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_IMPORTING_ITSELF	TokenNameIdentifier
=	TokenNameEQUAL
"ER_IMPORTING_ITSELF"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XMLSPACE_ILLEGAL_VAL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XMLSPACE_ILLEGAL_VAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SAX_EXCEPTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SAX_EXCEPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSLT_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSLT_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CURRENCY_SIGN_ILLEGAL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CURRENCY_SIGN_ILLEGAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_REDIRECT_COULDNT_GET_FILENAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_REDIRECT_COULDNT_GET_FILENAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISSING_NS_URI	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISSING_NS_URI"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISSING_ARG_FOR_OPTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISSING_ARG_FOR_OPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_OPTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_OPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MALFORMED_FORMAT_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MALFORMED_FORMAT_STRING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STYLESHEET_REQUIRES_VERSION_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STYLESHEET_REQUIRES_VERSION_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_ATTRIBUTE_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_ATTRIBUTE_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CHOOSE_REQUIRES_WHEN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CHOOSE_REQUIRES_WHEN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_APPLY_IMPORT_IN_FOR_EACH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_APPLY_IMPORT_IN_FOR_EACH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_USE_DTM_FOR_OUTPUT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_USE_DTM_FOR_OUTPUT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_USE_DTM_FOR_INPUT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_USE_DTM_FOR_INPUT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CALL_TO_EXT_FAILED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CALL_TO_EXT_FAILED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PREFIX_MUST_RESOLVE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PREFIX_MUST_RESOLVE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_UTF16_SURROGATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_UTF16_SURROGATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSLATTRSET_USED_ITSELF	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSLATTRSET_USED_ITSELF"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_MIX_XERCESDOM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_MIX_XERCESDOM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TOO_MANY_LISTENERS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TOO_MANY_LISTENERS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_IN_ELEMTEMPLATEELEM_READOBJECT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_IN_ELEMTEMPLATEELEM_READOBJECT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DUPLICATE_NAMED_TEMPLATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DUPLICATE_NAMED_TEMPLATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_KEY_CALL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_KEY_CALL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_REFERENCING_ITSELF	TokenNameIdentifier
=	TokenNameEQUAL
"ER_REFERENCING_ITSELF"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_DOMSOURCE_INPUT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_DOMSOURCE_INPUT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CLASS_NOT_FOUND_FOR_OPTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CLASS_NOT_FOUND_FOR_OPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_REQUIRED_ELEM_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_REQUIRED_ELEM_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INPUT_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INPUT_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_URI_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_URI_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FILE_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FILE_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SOURCE_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SOURCE_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_INIT_BSFMGR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_INIT_BSFMGR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CMPL_EXTENSN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CMPL_EXTENSN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CREATE_EXTENSN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CREATE_EXTENSN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INSTANCE_MTHD_CALL_REQUIRES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INSTANCE_MTHD_CALL_REQUIRES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_ELEMENT_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_ELEMENT_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ELEMENT_NAME_METHOD_STATIC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ELEMENT_NAME_METHOD_STATIC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXTENSION_FUNC_UNKNOWN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXTENSION_FUNC_UNKNOWN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MORE_MATCH_CONSTRUCTOR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MORE_MATCH_CONSTRUCTOR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MORE_MATCH_METHOD	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MORE_MATCH_METHOD"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MORE_MATCH_ELEMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MORE_MATCH_ELEMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_CONTEXT_PASSED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_CONTEXT_PASSED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_POOL_EXISTS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_POOL_EXISTS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_DRIVER_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_DRIVER_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_URL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_URL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_POOL_SIZE_LESSTHAN_ONE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_POOL_SIZE_LESSTHAN_ONE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_DRIVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_DRIVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_STYLESHEETROOT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_STYLESHEETROOT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_XMLSPACE_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_XMLSPACE_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSFROMNODE_FAILED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSFROMNODE_FAILED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESOURCE_COULD_NOT_LOAD	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESOURCE_COULD_NOT_LOAD"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BUFFER_SIZE_LESSTHAN_ZERO	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BUFFER_SIZE_LESSTHAN_ZERO"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_ERROR_CALLING_EXTENSION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_ERROR_CALLING_EXTENSION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_NAMESPACE_DECL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_NAMESPACE_DECL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ELEM_CONTENT_NOT_ALLOWED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ELEM_CONTENT_NOT_ALLOWED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STYLESHEET_DIRECTED_TERMINATION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STYLESHEET_DIRECTED_TERMINATION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ONE_OR_TWO	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ONE_OR_TWO"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TWO_OR_THREE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TWO_OR_THREE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_LOAD_RESOURCE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_LOAD_RESOURCE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_INIT_DEFAULT_TEMPLATES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_INIT_DEFAULT_TEMPLATES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESULT_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESULT_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESULT_COULD_NOT_BE_SET	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESULT_COULD_NOT_BE_SET"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_OUTPUT_SPECIFIED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_OUTPUT_SPECIFIED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_TRANSFORM_TO_RESULT_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_TRANSFORM_TO_RESULT_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_TRANSFORM_SOURCE_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_TRANSFORM_SOURCE_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_CONTENT_HANDLER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_CONTENT_HANDLER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_ERROR_HANDLER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CALL_PARSE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CALL_PARSE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_PARENT_FOR_FILTER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_PARENT_FOR_FILTER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_STYLESHEET_IN_MEDIA	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_STYLESHEET_IN_MEDIA"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_STYLESHEET_PI	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_STYLESHEET_PI"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROPERTY_VALUE_BOOLEAN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROPERTY_VALUE_BOOLEAN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_FIND_EXTERN_SCRIPT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_FIND_EXTERN_SCRIPT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESOURCE_COULD_NOT_FIND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESOURCE_COULD_NOT_FIND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_OUTPUT_PROPERTY_NOT_RECOGNIZED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_OUTPUT_PROPERTY_NOT_RECOGNIZED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FAILED_CREATING_ELEMLITRSLT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FAILED_CREATING_ELEMLITRSLT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_VALUE_SHOULD_BE_NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_VALUE_SHOULD_BE_NUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_VALUE_SHOULD_EQUAL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_VALUE_SHOULD_EQUAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FAILED_CALLING_METHOD	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FAILED_CALLING_METHOD"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FAILED_CREATING_ELEMTMPL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FAILED_CREATING_ELEMTMPL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CHARS_NOT_ALLOWED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CHARS_NOT_ALLOWED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ATTR_NOT_ALLOWED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ATTR_NOT_ALLOWED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BAD_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BAD_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ATTRIB_VALUE_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ATTRIB_VALUE_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ATTRIB_VALUE_NOT_RECOGNIZED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ATTRIB_VALUE_NOT_RECOGNIZED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_URI_NAMESPACE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_URI_NAMESPACE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NUMBER_TOO_BIG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NUMBER_TOO_BIG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_FIND_SAX1_DRIVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_FIND_SAX1_DRIVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SAX1_DRIVER_NOT_LOADED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SAX1_DRIVER_NOT_LOADED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SAX1_DRIVER_NOT_INSTANTIATED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SAX1_DRIVER_NOT_INSTANTIATED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PARSER_PROPERTY_NOT_SPECIFIED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PARSER_PROPERTY_NOT_SPECIFIED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PARSER_ARG_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PARSER_ARG_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FEATURE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FEATURE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROPERTY	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROPERTY"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_ENTITY_RESOLVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_ENTITY_RESOLVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_DTD_HANDLER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_DTD_HANDLER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_DRIVER_NAME_SPECIFIED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_DRIVER_NAME_SPECIFIED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_URL_SPECIFIED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_URL_SPECIFIED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_POOLSIZE_LESS_THAN_ONE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_POOLSIZE_LESS_THAN_ONE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_DRIVER_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_DRIVER_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ERRORLISTENER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ERRORLISTENER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ASSERT_NO_TEMPLATE_PARENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ASSERT_NO_TEMPLATE_PARENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_ALLOWED_IN_POSITION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_ALLOWED_IN_POSITION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAMESPACE_CONTEXT_NULL_NAMESPACE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAMESPACE_CONTEXT_NULL_NAMESPACE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAMESPACE_CONTEXT_NULL_PREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAMESPACE_CONTEXT_NULL_PREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XPATH_RESOLVER_NULL_QNAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XPATH_RESOLVER_NULL_QNAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XPATH_RESOLVER_NEGATIVE_ARITY	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XPATH_RESOLVER_NEGATIVE_ARITY"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_TCHAR	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_TCHAR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_QNAME	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_QNAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_ENUM	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_ENUM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_NMTOKEN	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_NMTOKEN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_NCNAME	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_NCNAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_BOOLEAN	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_BOOLEAN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_NUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ARG_LITERAL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ARG_LITERAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DUPLICATE_GLOBAL_VAR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DUPLICATE_GLOBAL_VAR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DUPLICATE_VAR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DUPLICATE_VAR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TEMPLATE_NAME_MATCH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TEMPLATE_NAME_MATCH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_PREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_PREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_ATTRIB_SET	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_ATTRIB_SET"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FUNCTION_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FUNCTION_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_HAVE_CONTENT_AND_SELECT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_HAVE_CONTENT_AND_SELECT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_SET_PARAM_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_SET_PARAM_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SET_FEATURE_NULL_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SET_FEATURE_NULL_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_GET_FEATURE_NULL_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_GET_FEATURE_NULL_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNSUPPORTED_FEATURE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNSUPPORTED_FEATURE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_FOUND_CURLYBRACE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_FOUND_CURLYBRACE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR	TokenNameIdentifier
=	TokenNameEQUAL
"WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_EXPR_ATTRIB_CHANGED_TO_SELECT	TokenNameIdentifier
=	TokenNameEQUAL
"WG_EXPR_ATTRIB_CHANGED_TO_SELECT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_NO_LOCALE_IN_FORMATNUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"WG_NO_LOCALE_IN_FORMATNUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_LOCALE_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"WG_LOCALE_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_CANNOT_MAKE_URL_FROM	TokenNameIdentifier
=	TokenNameEQUAL
"WG_CANNOT_MAKE_URL_FROM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_CANNOT_LOAD_REQUESTED_DOC	TokenNameIdentifier
=	TokenNameEQUAL
"WG_CANNOT_LOAD_REQUESTED_DOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_CANNOT_FIND_COLLATOR	TokenNameIdentifier
=	TokenNameEQUAL
"WG_CANNOT_FIND_COLLATOR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_FUNCTIONS_SHOULD_USE_URL	TokenNameIdentifier
=	TokenNameEQUAL
"WG_FUNCTIONS_SHOULD_USE_URL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ENCODING_NOT_SUPPORTED_USING_UTF8	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ENCODING_NOT_SUPPORTED_USING_UTF8"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ENCODING_NOT_SUPPORTED_USING_JAVA	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ENCODING_NOT_SUPPORTED_USING_JAVA"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_SPECIFICITY_CONFLICTS	TokenNameIdentifier
=	TokenNameEQUAL
"WG_SPECIFICITY_CONFLICTS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_PARSING_AND_PREPARING	TokenNameIdentifier
=	TokenNameEQUAL
"WG_PARSING_AND_PREPARING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ATTR_TEMPLATE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ATTR_TEMPLATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESP"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ATTRIB_NOT_HANDLED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ATTRIB_NOT_HANDLED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_NO_DECIMALFORMAT_DECLARATION	TokenNameIdentifier
=	TokenNameEQUAL
"WG_NO_DECIMALFORMAT_DECLARATION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_OLD_XSLT_NS	TokenNameIdentifier
=	TokenNameEQUAL
"WG_OLD_XSLT_NS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ILLEGAL_ATTRIBUTE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ILLEGAL_ATTRIBUTE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_COULD_NOT_RESOLVE_PREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"WG_COULD_NOT_RESOLVE_PREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_STYLESHEET_REQUIRES_VERSION_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"WG_STYLESHEET_REQUIRES_VERSION_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ILLEGAL_ATTRIBUTE_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ILLEGAL_ATTRIBUTE_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ILLEGAL_ATTRIBUTE_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ILLEGAL_ATTRIBUTE_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_EMPTY_SECOND_ARG	TokenNameIdentifier
=	TokenNameEQUAL
"WG_EMPTY_SECOND_ARG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML	TokenNameIdentifier
=	TokenNameEQUAL
"WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME	TokenNameIdentifier
=	TokenNameEQUAL
"WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ILLEGAL_ATTRIBUTE_POSITION	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ILLEGAL_ATTRIBUTE_POSITION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
NO_MODIFICATION_ALLOWED_ERR	TokenNameIdentifier
=	TokenNameEQUAL
"NO_MODIFICATION_ALLOWED_ERR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getContents	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
{	TokenNameLBRACE
"ER0000"	TokenNameStringLiteral
,	TokenNameCOMMA
"{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_CURLYBRACE	TokenNameIdentifier
,	TokenNameCOMMA
"Error: No puede haber '{' dentro de la expresión"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_ATTRIBUTE	TokenNameIdentifier
,	TokenNameCOMMA
"{0} tiene un atributo no permitido: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_SOURCENODE_APPLYIMPORTS	TokenNameIdentifier
,	TokenNameCOMMA
"sourceNode es nulo en xsl:apply-imports."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_ADD	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede añadir {0} a {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES	TokenNameIdentifier
,	TokenNameCOMMA
"sourceNode es nulo en handleApplyTemplatesInstruction."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_NAME_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"{0} debe tener un atributo de nombre."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TEMPLATE_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido encontrar la plantilla: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_RESOLVE_NAME_AVT	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido resolver AVT de nombre en xsl:call-template."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_REQUIRES_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"{0} necesita un atributo: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MUST_HAVE_TEST_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"{0} debe tener un atributo ''test''."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BAD_VAL_ON_LEVEL_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"Valor incorrecto en atributo de nivel: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML	TokenNameIdentifier
,	TokenNameCOMMA
"Nombre de processing-instruction no puede ser 'xml'"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME	TokenNameIdentifier
,	TokenNameCOMMA
"Nombre de processing-instruction debe ser un NCName válido: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NEED_MATCH_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"{0} debe tener un atributo de coincidencia si tiene una modalidad."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NEED_NAME_OR_MATCH_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"{0} necesita un atributo de nombre o de coincidencia."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_RESOLVE_NSPREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede resolver el prefijo del espacio de nombres: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"xml:space tiene un valor no permitido: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_OWNERDOC	TokenNameIdentifier
,	TokenNameCOMMA
"El nodo hijo no tiene un documento propietario."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ELEMTEMPLATEELEM_ERR	TokenNameIdentifier
,	TokenNameCOMMA
"Error de ElemTemplateElement: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_CHILD	TokenNameIdentifier
,	TokenNameCOMMA
"Intentando añadir un hijo nulo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NEED_SELECT_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"{0} necesita un atributo de selección."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NEED_TEST_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:when debe tener un atributo 'test'."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NEED_NAME_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:with-param debe tener un atributo 'name'."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_CONTEXT_OWNERDOC	TokenNameIdentifier
,	TokenNameCOMMA
"El contexto no tiene un documento propietario."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_CREATE_XML_PROC_LIAISON	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido crear Liaison TransformerFactory XML: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESS_NOT_SUCCESSFUL	TokenNameIdentifier
,	TokenNameCOMMA
"El proceso Xalan no ha sido satisfactorio."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_SUCCESSFUL	TokenNameIdentifier
,	TokenNameCOMMA
"Xalan no ha sido satisfactorio."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ENCODING_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Codificación no soportada: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_CREATE_TRACELISTENER	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido crear TraceListener: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_KEY_REQUIRES_NAME_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:key necesita un atributo 'name'."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_KEY_REQUIRES_MATCH_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:key necesita un atributo 'match'."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_KEY_REQUIRES_USE_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:key necesita un atributo 'use'."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_REQUIRES_ELEMENTS_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0} necesita un atributo ''elements'' "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISSING_PREFIX_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) Falta el atributo ''prefix'' de {0} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BAD_STYLESHEET_URL	TokenNameIdentifier
,	TokenNameCOMMA
"El URL de la hoja de estilos es incorrecto: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FILE_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha encontrado el archivo de hoja de estilos: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_IOEXCEPTION	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha producido una excepción de ES con el archivo de hoja de estilos: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_HREF_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) No se ha podido encontrar el atributo href para {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STYLESHEET_INCLUDES_ITSELF	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) Inclusión propia de {0} directa o indirectamente."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSINCLUDE_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"Error de StylesheetHandler.processInclude, {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISSING_LANG_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) Falta el atributo ''lang'' de {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISSING_CONTAINER_ELEMENT_COMPONENT	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) Elemento {0} incorrecto. Falta el elemento de contenedor ''component''."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CAN_ONLY_OUTPUT_TO_ELEMENT	TokenNameIdentifier
,	TokenNameCOMMA
"Sólo se puede dar salida hacia Element, DocumentFragment, Document o PrintWriter."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESS_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"Error de StylesheetRoot.process"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNIMPLNODE_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"Error de UnImplNode: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_SELECT_EXPRESSION	TokenNameIdentifier
,	TokenNameCOMMA
"Error. No se ha encontrado la expresión de selección (-select) de xpath."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_SERIALIZE_XSLPROCESSOR	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede serializar un XSLProcessor."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_INPUT_STYLESHEET	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha especificado la entrada de hoja de estilos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FAILED_PROCESS_STYLESHEET	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido procesar la hoja de estilos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNT_PARSE_DOC	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido analizar el documento {0}."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNT_FIND_FRAGMENT	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido encontrar el fragmento: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODE_NOT_ELEMENT	TokenNameIdentifier
,	TokenNameCOMMA
"El nodo señalado por un identificador de fragmento no es un elemento: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"for-each debe tener un atributo de coincidencia o de nombre."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"templates debe tener un atributo de coincidencia o de nombre."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_CLONE_OF_DOCUMENT_FRAG	TokenNameIdentifier
,	TokenNameCOMMA
"No es réplica de un fragmento de documento."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CREATE_ITEM	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede crear el elemento en el árbol de resultados: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XMLSPACE_ILLEGAL_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"xml:space en el XML fuente tiene un valor no permitido: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_XSLKEY_DECLARATION	TokenNameIdentifier
,	TokenNameCOMMA
"No hay declaración xsl:key para {0}."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CREATE_URL	TokenNameIdentifier
,	TokenNameCOMMA
"Error. No se puede crear url para: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSLFUNCTIONS_UNSUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:functions no está soportado"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSOR_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"Error de XSLT TransformerFactory"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_ALLOWED_INSIDE_STYLESHEET	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0} no permitido dentro de una hoja de estilos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESULTNS_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Ya no se soporta result-ns.  Utilice xsl:output en su lugar."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DEFAULTSPACE_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Ya no se soporta default-space.  Utilice xsl:strip-space o xsl:preserve-space en su lugar."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INDENTRESULT_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Ya no se soporta indent-result.  Utilice xsl:output en su lugar."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0} tiene un atributo no permitido: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_XSL_ELEM	TokenNameIdentifier
,	TokenNameCOMMA
"Elemento XSL desconocido: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BAD_XSLSORT_USE	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) xsl:sort sólo puede utilizarse con xsl:apply-templates o xsl:for-each."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISPLACED_XSLWHEN	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) xsl:when equivocado."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) xsl:when no emparentado por xsl:choose."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISPLACED_XSLOTHERWISE	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) xsl:otherwise equivocado."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) xsl:otherwise no emparentado por xsl:choose."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_ALLOWED_INSIDE_TEMPLATE	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0} no permitido dentro de una plantilla."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_EXT_NS_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) Prefijo {1} de espacio de nombres de extensión {0} desconocido"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_IMPORTS_AS_FIRST_ELEM	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) Las importaciones sólo pueden aparecer como primeros elementos de la hoja de estilos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_IMPORTING_ITSELF	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) Importación propia de {0} directa o indirectamente."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XMLSPACE_ILLEGAL_VAL	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) xml:space tiene un valor no permitido: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL	TokenNameIdentifier
,	TokenNameCOMMA
"processStylesheet no satisfactorio."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SAX_EXCEPTION	TokenNameIdentifier
,	TokenNameCOMMA
"Excepción SAX"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FUNCTION_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Función no soportada."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSLT_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"Error de XSLT"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CURRENCY_SIGN_ILLEGAL	TokenNameIdentifier
,	TokenNameCOMMA
"El signo monetario no está permitido en la serie del patrón de formato"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM	TokenNameIdentifier
,	TokenNameCOMMA
"La función de documento no está soportada en DOM de hoja de estilos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede resolver el prefijo de un resolucionador sin prefijo."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_REDIRECT_COULDNT_GET_FILENAME	TokenNameIdentifier
,	TokenNameCOMMA
"Extensión Redirect: No se ha podido obtener el nombre de archivo - el atributo de archivo o de selección debe devolver una serie válida."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede crear FormatterListener en extensión Redirect."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"El prefijo en exclude-result-prefixes no es válido: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISSING_NS_URI	TokenNameIdentifier
,	TokenNameCOMMA
"Falta el URI del espacio de nombres para el prefijo especificado"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISSING_ARG_FOR_OPTION	TokenNameIdentifier
,	TokenNameCOMMA
"Falta un argumento para la opción: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_OPTION	TokenNameIdentifier
,	TokenNameCOMMA
"Opción no válida: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MALFORMED_FORMAT_STRING	TokenNameIdentifier
,	TokenNameCOMMA
"Serie de formato mal formada: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STYLESHEET_REQUIRES_VERSION_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:stylesheet necesita un atributo 'version'."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_ATTRIBUTE_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"Atributo: {0} tiene un valor no permitido: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CHOOSE_REQUIRES_WHEN	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:choose necesita un xsl:when"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_APPLY_IMPORT_IN_FOR_EACH	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:apply-imports no permitido en xsl:for-each"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_USE_DTM_FOR_OUTPUT	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede utilizar DTMLiaison para un nodo DOM de salida... Pase org.apache.xpath.DOM2Helper en su lugar."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_USE_DTM_FOR_INPUT	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede utilizar DTMLiaison para un nodo DOM de entrada... Pase org.apache.xpath.DOM2Helper en su lugar."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CALL_TO_EXT_FAILED	TokenNameIdentifier
,	TokenNameCOMMA
"Anomalía al llamar al elemento de extensión: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PREFIX_MUST_RESOLVE	TokenNameIdentifier
,	TokenNameCOMMA
"El prefijo debe resolverse como un espacio de nombres: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_UTF16_SURROGATE	TokenNameIdentifier
,	TokenNameCOMMA
"¿Se ha detectado un sustituto UTF-16 no válido: {0}?"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSLATTRSET_USED_ITSELF	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:attribute-set {0} se ha utilizado a sí mismo lo que puede provocar un bucle infinito."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_MIX_XERCESDOM	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede mezclar la entrada Xerces-DOM con la salida Xerces-DOM."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TOO_MANY_LISTENERS	TokenNameIdentifier
,	TokenNameCOMMA
"addTraceListenersToStylesheet - TooManyListenersException"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_IN_ELEMTEMPLATEELEM_READOBJECT	TokenNameIdentifier
,	TokenNameCOMMA
"En ElemTemplateElement.readObject: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DUPLICATE_NAMED_TEMPLATE	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha encontrado más de una plantilla con el nombre: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_KEY_CALL	TokenNameIdentifier
,	TokenNameCOMMA
"Llamada de función no válida: no están permitidas las llamadas key() recursivas"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_REFERENCING_ITSELF	TokenNameIdentifier
,	TokenNameCOMMA
"La variable {0} se está referenciando a sí misma directa o indirectamente."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_DOMSOURCE_INPUT	TokenNameIdentifier
,	TokenNameCOMMA
"El nodo de entrada no puede ser nulo para DOMSource de newTemplates."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CLASS_NOT_FOUND_FOR_OPTION	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha encontrado el archivo de clase para la opción {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_REQUIRED_ELEM_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha encontrado un elemento necesario: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INPUT_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"InputStream no puede ser nulo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_URI_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"URI no puede ser nulo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FILE_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"Archivo no puede ser nulo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SOURCE_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"InputSource no puede ser nulo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_INIT_BSFMGR	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido inicializar el Gestor BSF"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CMPL_EXTENSN	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido compilar la extensión"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CREATE_EXTENSN	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido crear la extensión: {0} como consecuencia de: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INSTANCE_MTHD_CALL_REQUIRES	TokenNameIdentifier
,	TokenNameCOMMA
"La llamada del método de instancia al método {0} necesita una instancia Object como primer argumento"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_ELEMENT_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha especificado un nombre de elemento no válido {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ELEMENT_NAME_METHOD_STATIC	TokenNameIdentifier
,	TokenNameCOMMA
"El método del nombre de elemento debe ser estático {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXTENSION_FUNC_UNKNOWN	TokenNameIdentifier
,	TokenNameCOMMA
"Función de extensión {0} : {1} desconocida"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MORE_MATCH_CONSTRUCTOR	TokenNameIdentifier
,	TokenNameCOMMA
"Hay más de una coincidencia máxima para el constructor de {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MORE_MATCH_METHOD	TokenNameIdentifier
,	TokenNameCOMMA
"Hay más de una coincidencia máxima para el método {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MORE_MATCH_ELEMENT	TokenNameIdentifier
,	TokenNameCOMMA
"Hay más de una coincidencia máxima para el método de elemento {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_CONTEXT_PASSED	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha pasado un contexto no válido para evaluar {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_POOL_EXISTS	TokenNameIdentifier
,	TokenNameCOMMA
"La agrupación ya existe"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_DRIVER_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha especificado un nombre de controlador"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_URL	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha especificado un URL"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_POOL_SIZE_LESSTHAN_ONE	TokenNameIdentifier
,	TokenNameCOMMA
"El tamaño de la agrupación es menor que uno."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_DRIVER	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha especificado un nombre de controlador no válido."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_STYLESHEETROOT	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha encontrado la raíz de la hoja de estilos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_XMLSPACE_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"Valor no permitido para xml:space"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSFROMNODE_FAILED	TokenNameIdentifier
,	TokenNameCOMMA
"Anomalía de processFromNode"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESOURCE_COULD_NOT_LOAD	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido cargar el recurso [ {0} ]: {1}   {2}   {3}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BUFFER_SIZE_LESSTHAN_ZERO	TokenNameIdentifier
,	TokenNameCOMMA
"Tamaño de almacenamiento intermedio <=0"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_ERROR_CALLING_EXTENSION	TokenNameIdentifier
,	TokenNameCOMMA
"Error desconocido al llamar a la extensión"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_NAMESPACE_DECL	TokenNameIdentifier
,	TokenNameCOMMA
"El prefijo {0} no tiene una declaración de espacio de nombres correspondiente"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ELEM_CONTENT_NOT_ALLOWED	TokenNameIdentifier
,	TokenNameCOMMA
"No se permite el contenido del elemento para lang=javaclass {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STYLESHEET_DIRECTED_TERMINATION	TokenNameIdentifier
,	TokenNameCOMMA
"Terminación de hoja de estilos dirigida"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ONE_OR_TWO	TokenNameIdentifier
,	TokenNameCOMMA
"1 ó 2"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TWO_OR_THREE	TokenNameIdentifier
,	TokenNameCOMMA
"2 ó 3"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_LOAD_RESOURCE	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido cargar {0} (compruebe la CLASSPATH), ahora sólo se están utilizando los valores predeterminados"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_INIT_DEFAULT_TEMPLATES	TokenNameIdentifier
,	TokenNameCOMMA
"No se han podido inicializar las plantillas predeterminadas"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESULT_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"El resultado no debería ser nulo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESULT_COULD_NOT_BE_SET	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido establecer el resultado"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_OUTPUT_SPECIFIED	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha especificado salida"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_TRANSFORM_TO_RESULT_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede transformar un resultado de tipo {0} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_TRANSFORM_SOURCE_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede transformar un fuente de tipo {0} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_CONTENT_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
"Manejador de contenido nulo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
"Manejador de error nulo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CALL_PARSE	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede llamar a parse si no se ha establecido ContentHandler"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_PARENT_FOR_FILTER	TokenNameIdentifier
,	TokenNameCOMMA
"No hay padre para el filtro"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_STYLESHEET_IN_MEDIA	TokenNameIdentifier
,	TokenNameCOMMA
"No se han encontrado hojas de estilos en: {0}, soporte= {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_STYLESHEET_PI	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha encontrado xml-stylesheet PI en: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"No soportado: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROPERTY_VALUE_BOOLEAN	TokenNameIdentifier
,	TokenNameCOMMA
"El valor de la propiedad {0} debería ser una instancia Boolean"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_FIND_EXTERN_SCRIPT	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido encontrar el script externo en {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESOURCE_COULD_NOT_FIND	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido encontrar el recurso [ {0} ].  {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_OUTPUT_PROPERTY_NOT_RECOGNIZED	TokenNameIdentifier
,	TokenNameCOMMA
"No se reconoce la propiedad de salida: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FAILED_CREATING_ELEMLITRSLT	TokenNameIdentifier
,	TokenNameCOMMA
"Anomalía al crear la instancia ElemLiteralResult"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_VALUE_SHOULD_BE_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"El valor para {0} debería contener un número analizable"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_VALUE_SHOULD_EQUAL	TokenNameIdentifier
,	TokenNameCOMMA
"El valor de {0} debería ser sí o no"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FAILED_CALLING_METHOD	TokenNameIdentifier
,	TokenNameCOMMA
"Anomalía al llamar al método {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FAILED_CREATING_ELEMTMPL	TokenNameIdentifier
,	TokenNameCOMMA
"Anomalía al crear la instancia ElemTemplateElement"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CHARS_NOT_ALLOWED	TokenNameIdentifier
,	TokenNameCOMMA
"No se permiten caracteres en este punto del documento"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ATTR_NOT_ALLOWED	TokenNameIdentifier
,	TokenNameCOMMA
"El atributo "{0}" no está permitido en el elemento {1}."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BAD_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"{0} valor incorrecto {1} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ATTRIB_VALUE_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha encontrado el valor del atributo {0} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ATTRIB_VALUE_NOT_RECOGNIZED	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha reconocido el valor del atributo {0} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_URI_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha intentado generar un prefijo de espacio de nombres con un URI nulo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NUMBER_TOO_BIG	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha intentado formatear un número mayor que el entero largo más grande"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_FIND_SAX1_DRIVER	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido encontrar la clase de controlador SAX1 {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SAX1_DRIVER_NOT_LOADED	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha encontrado la clase de controlador SAX1 {0} pero no se ha podido cargar"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SAX1_DRIVER_NOT_INSTANTIATED	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha cargado la clase de controlador SAX1 {0} pero no se ha podido crear una instancia"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER	TokenNameIdentifier
,	TokenNameCOMMA
"La clase de controlador SAX1 {0} no implementa org.xml.sax.Parser"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PARSER_PROPERTY_NOT_SPECIFIED	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha especificado la propiedad del sistema org.xml.sax.parser"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PARSER_ARG_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"El argumento del analizador no debe ser nulo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
"Característica: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROPERTY	TokenNameIdentifier
,	TokenNameCOMMA
"Propiedad: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_ENTITY_RESOLVER	TokenNameIdentifier
,	TokenNameCOMMA
"Resolucionador de entidad nulo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_DTD_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
"Manejador DTD nulo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_DRIVER_NAME_SPECIFIED	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha especificado un nombre de controlador."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_URL_SPECIFIED	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha especificado un URL."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_POOLSIZE_LESS_THAN_ONE	TokenNameIdentifier
,	TokenNameCOMMA
"El tamaño de la agrupación es menor que 1."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_DRIVER_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha especificado un nombre de controlador no válido."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ERRORLISTENER	TokenNameIdentifier
,	TokenNameCOMMA
"ErrorListener"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ASSERT_NO_TEMPLATE_PARENT	TokenNameIdentifier
,	TokenNameCOMMA
"Error del programador. La expresión no tiene un padre ElemTemplateElement."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR	TokenNameIdentifier
,	TokenNameCOMMA
"Aserción del programador en RedundentExprEliminator: {0} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_ALLOWED_IN_POSITION	TokenNameIdentifier
,	TokenNameCOMMA
"{0} no está permitido en esta posición de la hoja de estilos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION	TokenNameIdentifier
,	TokenNameCOMMA
"No está permitido texto sin espacios en blanco en esta posición de la hoja de estilos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_TCHAR	TokenNameIdentifier
,	TokenNameCOMMA
"Valor no permitido: se ha utilizado {1} para el atributo CHAR: {0}.  Un atributo de tipo CHAR debe ser de un solo carácter."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_QNAME	TokenNameIdentifier
,	TokenNameCOMMA
"Valor no permitido: se ha utilizado {1} para el atributo QNAME: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_ENUM	TokenNameIdentifier
,	TokenNameCOMMA
"Valor no permitido: se ha utilizado {1} para el atributo ENUM: {0}.  Los valores válidos son: {2}."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_NMTOKEN	TokenNameIdentifier
,	TokenNameCOMMA
"Valor no permitido: se ha utilizado {1} para el atributo NMTOKEN: {0} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_NCNAME	TokenNameIdentifier
,	TokenNameCOMMA
"Valor no permitido: se ha utilizado {1} para el atributo NCNAME: {0} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_BOOLEAN	TokenNameIdentifier
,	TokenNameCOMMA
"Valor no permitido: se ha utilizado {1} para el atributo boolean: {0} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"Valor no permitido: se ha utilizado {1} para el atributo number: {0} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ARG_LITERAL	TokenNameIdentifier
,	TokenNameCOMMA
"El argumento para {0} en el patrón de coincidencia debe ser un literal."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DUPLICATE_GLOBAL_VAR	TokenNameIdentifier
,	TokenNameCOMMA
"Declaración de variable global duplicada."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DUPLICATE_VAR	TokenNameIdentifier
,	TokenNameCOMMA
"Declaración de variable duplicada."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TEMPLATE_NAME_MATCH	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:template debe tener un atributo name o match (o ambos)."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"El prefijo en exclude-result-prefixes no es válido: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_ATTRIB_SET	TokenNameIdentifier
,	TokenNameCOMMA
"attribute-set de nombre {0} no existe"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FUNCTION_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"La función de nombre {0} no existe"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_HAVE_CONTENT_AND_SELECT	TokenNameIdentifier
,	TokenNameCOMMA
"El elemento {0} no debe tener contenido y un atributo select."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_SET_PARAM_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"El valor del parámetro {0} debe ser un objeto Java válido"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT	TokenNameIdentifier
,	TokenNameCOMMA
"El atributo result-prefix de un elemento xsl:namespace-alias tiene el valor '#default', pero no hay declaración de espacio de nombres predeterminado en el ámbito del elemento."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"El atributo result-prefix de un elemento xsl:namespace-alias tiene el valor ''{0}'', pero no hay declaración de espacio de nombres para el prefijo ''{0}'' en el ámbito del elemento."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SET_FEATURE_NULL_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"El nombre de característica no puede ser nulo en TransformerFactory.setFeature(nombre de tipo String, valor booleano)."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_GET_FEATURE_NULL_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"El nombre de característica no puede ser nulo en TransformerFactory.getFeature(nombre de tipo String)."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNSUPPORTED_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede establecer la característica ''{0}'' en esta TransformerFactory."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING	TokenNameIdentifier
,	TokenNameCOMMA
"No se permite el uso del elemento de extensión ''{0}'' cuando la característica de proceso seguro está establecida en true."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAMESPACE_CONTEXT_NULL_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede obtener el prefijo de un uri de espacio de nombres nulo."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAMESPACE_CONTEXT_NULL_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede obtener el uri de espacio de nombres para un prefijo nulo."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XPATH_RESOLVER_NULL_QNAME	TokenNameIdentifier
,	TokenNameCOMMA
"El nombre de función no puede ser nulo."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XPATH_RESOLVER_NEGATIVE_ARITY	TokenNameIdentifier
,	TokenNameCOMMA
"La aridad no puede ser negativa."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_FOUND_CURLYBRACE	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha encontrado '}' pero no se ha abierto una plantilla de atributos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR	TokenNameIdentifier
,	TokenNameCOMMA
"Aviso: El atributo count no coincide con un antecesor en xsl:number. Destino = {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_EXPR_ATTRIB_CHANGED_TO_SELECT	TokenNameIdentifier
,	TokenNameCOMMA
"Sintaxis antigua: El nombre del atributo 'expr' se ha cambiado por 'select'."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_NO_LOCALE_IN_FORMATNUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"Xalan no maneja aún el nombre de entorno local en la función format-number."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_LOCALE_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"Aviso: No se ha podido encontrar el entorno local para xml:lang={0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_CANNOT_MAKE_URL_FROM	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede crear URL desde: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_CANNOT_LOAD_REQUESTED_DOC	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede cargar el doc solicitado: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_CANNOT_FIND_COLLATOR	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido encontrar clasificador para <sort xml:lang={0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_FUNCTIONS_SHOULD_USE_URL	TokenNameIdentifier
,	TokenNameCOMMA
"Sintaxis antigua: La instrucción functions debería utilizar un url de {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ENCODING_NOT_SUPPORTED_USING_UTF8	TokenNameIdentifier
,	TokenNameCOMMA
"Codificación no soportada: {0}, se utiliza UTF-8"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ENCODING_NOT_SUPPORTED_USING_JAVA	TokenNameIdentifier
,	TokenNameCOMMA
"Codificación no soportada: {0}, se utiliza Java {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_SPECIFICITY_CONFLICTS	TokenNameIdentifier
,	TokenNameCOMMA
"Se han encontrado conflictos de especificación: {0} Se utilizará lo último encontrado en la hoja de estilos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_PARSING_AND_PREPARING	TokenNameIdentifier
,	TokenNameCOMMA
"========= Analizando y preparando {0} =========="	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ATTR_TEMPLATE	TokenNameIdentifier
,	TokenNameCOMMA
"Plantilla de atributos, {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE	TokenNameIdentifier
,	TokenNameCOMMA
"Conflicto de coincidencia entre xsl:strip-space y xsl:preserve-space"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ATTRIB_NOT_HANDLED	TokenNameIdentifier
,	TokenNameCOMMA
"Xalan no maneja aún el atributo {0}."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_NO_DECIMALFORMAT_DECLARATION	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha encontrado declaración para el formato decimal: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_OLD_XSLT_NS	TokenNameIdentifier
,	TokenNameCOMMA
"Falta el espacio de nombres XSLT o es incorrecto. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED	TokenNameIdentifier
,	TokenNameCOMMA
"Sólo se permite una declaración xsl:decimal-format predeterminada."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE	TokenNameIdentifier
,	TokenNameCOMMA
"Los nombres de xsl:decimal-format deben ser únicos. El nombre "{0}" se ha duplicado."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ILLEGAL_ATTRIBUTE	TokenNameIdentifier
,	TokenNameCOMMA
"{0} tiene un atributo no permitido: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_COULD_NOT_RESOLVE_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido resolver el prefijo del espacio de nombres: {0}. Se ignorará el nodo."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_STYLESHEET_REQUIRES_VERSION_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:stylesheet necesita un atributo 'version'."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ILLEGAL_ATTRIBUTE_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"Nombre de atributo no permitido: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ILLEGAL_ATTRIBUTE_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha utilizado un valor no permitido para el atributo {0}: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_EMPTY_SECOND_ARG	TokenNameIdentifier
,	TokenNameCOMMA
"El NodeSet resultante del segundo argumento de la función del documento está vacío. Devuelve un conjunto de nodos vacío."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML	TokenNameIdentifier
,	TokenNameCOMMA
"El valor del atributo 'name' de nombre xsl:processing-instruction no debe ser 'xml'"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME	TokenNameIdentifier
,	TokenNameCOMMA
"El valor del atributo ''name'' de xsl:processing-instruction debe ser un NCName válido: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ILLEGAL_ATTRIBUTE_POSITION	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede añadir el atributo {0} después de nodos hijo o antes de que se produzca un elemento.  Se ignorará el atributo."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
NO_MODIFICATION_ALLOWED_ERR	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha intentado modificar un objeto que no admite modificaciones. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"ui_language"	TokenNameStringLiteral
,	TokenNameCOMMA
"es"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"help_language"	TokenNameStringLiteral
,	TokenNameCOMMA
"es"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"language"	TokenNameStringLiteral
,	TokenNameCOMMA
"es"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"BAD_CODE"	TokenNameStringLiteral
,	TokenNameCOMMA
"El parámetro para createMessage estaba fuera de los límites"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"FORMAT_FAILED"	TokenNameStringLiteral
,	TokenNameCOMMA
"Se ha generado una excepción durante la llamada messageFormat"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"version"	TokenNameStringLiteral
,	TokenNameCOMMA
">>>>>>> Xalan versión "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"version2"	TokenNameStringLiteral
,	TokenNameCOMMA
"<<<<<<<"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"yes"	TokenNameStringLiteral
,	TokenNameCOMMA
"sí"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"line"	TokenNameStringLiteral
,	TokenNameCOMMA
"Línea núm."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"column"	TokenNameStringLiteral
,	TokenNameCOMMA
"Columna núm."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xsldone"	TokenNameStringLiteral
,	TokenNameCOMMA
"XSLProcessor: terminado"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_option"	TokenNameStringLiteral
,	TokenNameCOMMA
"Opciones de la clase Process de la línea de mandatos Xalan-J:"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_option"	TokenNameStringLiteral
,	TokenNameCOMMA
"Opciones de la clase Process de la línea de mandatos Xalan-J:"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_invalid_xsltc_option"	TokenNameStringLiteral
,	TokenNameCOMMA
"La opción {0} no está soportada en modalidad XSLTC."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_invalid_xalan_option"	TokenNameStringLiteral
,	TokenNameCOMMA
"La opción {0} sólo puede utilizarse con -XSLTC."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_no_input"	TokenNameStringLiteral
,	TokenNameCOMMA
"Error: No se ha especificado ninguna hoja de estilos ni xml de entrada. Ejecute este mandato sin opciones para ver las instrucciones de uso."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_common_options"	TokenNameStringLiteral
,	TokenNameCOMMA
"-Opciones comunes-"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_xalan_options"	TokenNameStringLiteral
,	TokenNameCOMMA
"-Opciones para Xalan-"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_xsltc_options"	TokenNameStringLiteral
,	TokenNameCOMMA
"-Opciones para XSLTC-"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_return_to_continue"	TokenNameStringLiteral
,	TokenNameCOMMA
"(pulse <Intro> para continuar)"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXSLTC"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XSLTC (Utilizar XSLTC para transformación)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionIN"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-IN URL_XML_entrada]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXSL"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XSL URL_transformación_XSL]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionOUT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-OUT nombre_archivo_salida]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionLXCIN"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-LXCIN entrada_nombre_archivo_hoja_estilos_compilada]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionLXCOUT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-LXCOUT salida_nombre_archivo_hoja_estilos_compilada]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionPARSER"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-PARSER nombre de clase completamente cualificado del enlace del analizador]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionE"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-E (No expandir referencias de entidades)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionV"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-E (No expandir referencias de entidades)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionQC"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-QC (Avisos silenciosos de conflictos de patrones)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionQ"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-Q  (Modalidad silenciosa)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionLF"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-LF (Utilizar sólo avances de línea en la salida {el valor predeterminado es CR/LF})]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionCR"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-CR (Utilizar sólo retornos de carro en la salida {el valor predeterminado es CR/LF})]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionESCAPE"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-ESCAPE (Caracteres con escape {el valor predeterminado es <>&"'\r\n}]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionINDENT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-INDENT (Controlar el número de espacios de sangrado {el valor predeterminado es 0})]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TT (Rastrear las plantillas a medida que se llaman.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTG"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TG (Rastrear cada suceso de generación.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTS"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TS (Rastrear cada suceso de selección.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTTC"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TTC (Rastrear los hijos de plantillas a medida que se procesan.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTCLASS"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TCLASS (Clase TraceListener para extensiones de rastreo.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionVALIDATE"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-VALIDATE (Establecer si se realiza la validación.  De forma predeterminada la validación está desactivada.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionEDUMP"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-EDUMP {nombre de archivo opcional} (Realizar vuelco de pila si se produce un error.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXML"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XML (Utilizar el formateador XML y añadir la cabecera XML.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTEXT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TEXT (Utilizar el formateador de texto sencillo.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionHTML"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-HTML (Utilizar el formateador HTML.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionPARAM"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-PARAM expresión de nombre (Establecer un parámetro de hoja de estilos)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg1"	TokenNameStringLiteral
,	TokenNameCOMMA
"El proceso XSL no ha sido satisfactorio."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg2"	TokenNameStringLiteral
,	TokenNameCOMMA
"** No se ha podido encontrar el analizador **"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg3"	TokenNameStringLiteral
,	TokenNameCOMMA
"Compruebe la classpath."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg4"	TokenNameStringLiteral
,	TokenNameCOMMA
"Si no dispone del analizador XML para Java de IBM, puede descargarlo de"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg5"	TokenNameStringLiteral
,	TokenNameCOMMA
"IBM AlphaWorks: http://www.alphaworks.ibm.com/formula/xml"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionURIRESOLVER"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-URIRESOLVER nombre de clase completo (URIResolver a utilizar para resolver URI)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionENTITYRESOLVER"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-ENTITYRESOLVER nombre de clase completo (EntityResolver a utilizar para resolver entidades)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionCONTENTHANDLER"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-CONTENTHANDLER nombre de clase completo (ContentHandler a utilizar para serializar la salida)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionLINENUMBERS"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-L utilizar números de línea para el documento fuente]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionSECUREPROCESSING"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-SECURE (establecer la característica de proceso seguro en true.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionMEDIA"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-MEDIA tipo_soporte (Utilizar el atributo de soporte para encontrar la hoja de estilos asociada con un documento.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionFLAVOR"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-FLAVOR nombre_estilo (Utilizar explícitamente s2s=SAX o d2d=DOM para realizar la transformación.)] "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionDIAG"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-DIAG (Imprimir el total de milisegundos que lleva la transformación.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionINCREMENTAL"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-INCREMENTAL (Solicitar construcción DTM incremental estableciendo http://xml.apache.org/xalan/features/incremental como verdadero.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionNOOPTIMIMIZE"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-NOOPTIMIMIZE (Solicitar proceso de optimización de hoja de estilos estableciendo http://xml.apache.org/xalan/features/optimize como falso.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionRL"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-RL límite_recursión (Límite numérico de aserción sobre profundidad de recursión de hoja de estilos.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXO"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XO [nombreTranslet] (Asignar el nombre al translet generado)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXD"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XD directorioDestino (Especificar un directorio de destino para translet)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXJ"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XJ archivoJar (Empaqueta las clases translet en un archivo jar de nombre <archivoJar>)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXP"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XP paquete (Especifica un prefijo para el nombre del paquete de todas las clases translet generadas)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXN"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XN (habilita la inclusión en línea de plantillas)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXX"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XX (activa la salida de mensajes de depuración adicionales)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XT (utilizar translet para transformar si es posible)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"diagTiming"	TokenNameStringLiteral
,	TokenNameCOMMA
"--------- La transformación de {0} mediante {1} ha durado {2} ms"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"recursionTooDeep"	TokenNameStringLiteral
,	TokenNameCOMMA
"Anidado de plantilla demasiado profundo. anidado = {0}, plantilla {1} {2}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"nameIs"	TokenNameStringLiteral
,	TokenNameCOMMA
"el nombre es"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"matchPatternIs"	TokenNameStringLiteral
,	TokenNameCOMMA
"el patrón de coincidencia es"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
BAD_CODE	TokenNameIdentifier
=	TokenNameEQUAL
"BAD_CODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
FORMAT_FAILED	TokenNameIdentifier
=	TokenNameEQUAL
"FORMAT_FAILED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"#error"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"Error: "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WARNING_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"Aviso: "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
XSL_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"XSLT "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
XML_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"XML "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
QUERY_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"PATTERN "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
XSLTErrorResources	TokenNameIdentifier
loadResourceBundle	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
className	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
MissingResourceException	TokenNameIdentifier
{	TokenNameLBRACE
Locale	TokenNameIdentifier
locale	TokenNameIdentifier
=	TokenNameEQUAL
Locale	TokenNameIdentifier
.	TokenNameDOT
getDefault	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
suffix	TokenNameIdentifier
=	TokenNameEQUAL
getResourceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
locale	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSLTErrorResources	TokenNameIdentifier
)	TokenNameRPAREN
ResourceBundle	TokenNameIdentifier
.	TokenNameDOT
getBundle	TokenNameIdentifier
(	TokenNameLPAREN
className	TokenNameIdentifier
+	TokenNamePLUS
suffix	TokenNameIdentifier
,	TokenNameCOMMA
locale	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MissingResourceException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSLTErrorResources	TokenNameIdentifier
)	TokenNameRPAREN
ResourceBundle	TokenNameIdentifier
.	TokenNameDOT
getBundle	TokenNameIdentifier
(	TokenNameLPAREN
className	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Locale	TokenNameIdentifier
(	TokenNameLPAREN
"es"	TokenNameStringLiteral
,	TokenNameCOMMA
"ES"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MissingResourceException	TokenNameIdentifier
e2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
MissingResourceException	TokenNameIdentifier
(	TokenNameLPAREN
"Could not load any resource bundles."	TokenNameStringLiteral
,	TokenNameCOMMA
className	TokenNameIdentifier
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
getResourceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
Locale	TokenNameIdentifier
locale	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
suffix	TokenNameIdentifier
=	TokenNameEQUAL
"_"	TokenNameStringLiteral
+	TokenNamePLUS
locale	TokenNameIdentifier
.	TokenNameDOT
getLanguage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
country	TokenNameIdentifier
=	TokenNameEQUAL
locale	TokenNameIdentifier
.	TokenNameDOT
getCountry	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
country	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
"TW"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
suffix	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
"_"	TokenNameStringLiteral
+	TokenNamePLUS
country	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
suffix	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
