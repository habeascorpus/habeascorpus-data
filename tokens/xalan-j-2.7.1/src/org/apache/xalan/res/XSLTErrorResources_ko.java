package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
res	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ListResourceBundle	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Locale	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
MissingResourceException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ResourceBundle	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
XSLTErrorResources_ko	TokenNameIdentifier
extends	TokenNameextends
ListResourceBundle	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MAX_CODE	TokenNameIdentifier
=	TokenNameEQUAL
201	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MAX_WARNING	TokenNameIdentifier
=	TokenNameEQUAL
29	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MAX_OTHERS	TokenNameIdentifier
=	TokenNameEQUAL
55	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MAX_MESSAGES	TokenNameIdentifier
=	TokenNameEQUAL
MAX_CODE	TokenNameIdentifier
+	TokenNamePLUS
MAX_WARNING	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_SET_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_CURLYBRACE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_CURLYBRACE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FUNCTION_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FUNCTION_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_ATTRIBUTE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_ATTRIBUTE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_SOURCENODE_APPLYIMPORTS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_SOURCENODE_APPLYIMPORTS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_ADD	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_ADD"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_NAME_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_NAME_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TEMPLATE_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TEMPLATE_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_RESOLVE_NAME_AVT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_RESOLVE_NAME_AVT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_REQUIRES_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_REQUIRES_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MUST_HAVE_TEST_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MUST_HAVE_TEST_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BAD_VAL_ON_LEVEL_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BAD_VAL_ON_LEVEL_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NEED_MATCH_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NEED_MATCH_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NEED_NAME_OR_MATCH_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NEED_NAME_OR_MATCH_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_RESOLVE_NSPREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_RESOLVE_NSPREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_OWNERDOC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_OWNERDOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ELEMTEMPLATEELEM_ERR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ELEMTEMPLATEELEM_ERR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_CHILD	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_CHILD"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NEED_SELECT_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NEED_SELECT_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NEED_TEST_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NEED_TEST_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NEED_NAME_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NEED_NAME_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_CONTEXT_OWNERDOC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_CONTEXT_OWNERDOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_CREATE_XML_PROC_LIAISON	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_CREATE_XML_PROC_LIAISON"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESS_NOT_SUCCESSFUL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESS_NOT_SUCCESSFUL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_SUCCESSFUL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_SUCCESSFUL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ENCODING_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ENCODING_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_CREATE_TRACELISTENER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_CREATE_TRACELISTENER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_KEY_REQUIRES_NAME_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_KEY_REQUIRES_NAME_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_KEY_REQUIRES_MATCH_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_KEY_REQUIRES_MATCH_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_KEY_REQUIRES_USE_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_KEY_REQUIRES_USE_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_REQUIRES_ELEMENTS_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_REQUIRES_ELEMENTS_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISSING_PREFIX_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISSING_PREFIX_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BAD_STYLESHEET_URL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BAD_STYLESHEET_URL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FILE_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FILE_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_IOEXCEPTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_IOEXCEPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_HREF_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_HREF_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STYLESHEET_INCLUDES_ITSELF	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STYLESHEET_INCLUDES_ITSELF"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSINCLUDE_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSINCLUDE_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISSING_LANG_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISSING_LANG_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISSING_CONTAINER_ELEMENT_COMPONENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISSING_CONTAINER_ELEMENT_COMPONENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CAN_ONLY_OUTPUT_TO_ELEMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CAN_ONLY_OUTPUT_TO_ELEMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESS_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESS_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNIMPLNODE_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNIMPLNODE_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_SELECT_EXPRESSION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_SELECT_EXPRESSION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_SERIALIZE_XSLPROCESSOR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_SERIALIZE_XSLPROCESSOR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_INPUT_STYLESHEET	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_INPUT_STYLESHEET"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FAILED_PROCESS_STYLESHEET	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FAILED_PROCESS_STYLESHEET"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNT_PARSE_DOC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNT_PARSE_DOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNT_FIND_FRAGMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNT_FIND_FRAGMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODE_NOT_ELEMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODE_NOT_ELEMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_CLONE_OF_DOCUMENT_FRAG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_CLONE_OF_DOCUMENT_FRAG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CREATE_ITEM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CREATE_ITEM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XMLSPACE_ILLEGAL_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XMLSPACE_ILLEGAL_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_XSLKEY_DECLARATION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_XSLKEY_DECLARATION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CREATE_URL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CREATE_URL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSLFUNCTIONS_UNSUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSLFUNCTIONS_UNSUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSOR_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSOR_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_ALLOWED_INSIDE_STYLESHEET	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_ALLOWED_INSIDE_STYLESHEET"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESULTNS_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESULTNS_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DEFAULTSPACE_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DEFAULTSPACE_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INDENTRESULT_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INDENTRESULT_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_XSL_ELEM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_XSL_ELEM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BAD_XSLSORT_USE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BAD_XSLSORT_USE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISPLACED_XSLWHEN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISPLACED_XSLWHEN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISPLACED_XSLOTHERWISE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISPLACED_XSLOTHERWISE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_ALLOWED_INSIDE_TEMPLATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_ALLOWED_INSIDE_TEMPLATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_EXT_NS_PREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_EXT_NS_PREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_IMPORTS_AS_FIRST_ELEM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_IMPORTS_AS_FIRST_ELEM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_IMPORTING_ITSELF	TokenNameIdentifier
=	TokenNameEQUAL
"ER_IMPORTING_ITSELF"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XMLSPACE_ILLEGAL_VAL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XMLSPACE_ILLEGAL_VAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SAX_EXCEPTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SAX_EXCEPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSLT_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSLT_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CURRENCY_SIGN_ILLEGAL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CURRENCY_SIGN_ILLEGAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_REDIRECT_COULDNT_GET_FILENAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_REDIRECT_COULDNT_GET_FILENAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISSING_NS_URI	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISSING_NS_URI"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MISSING_ARG_FOR_OPTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MISSING_ARG_FOR_OPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_OPTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_OPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MALFORMED_FORMAT_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MALFORMED_FORMAT_STRING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STYLESHEET_REQUIRES_VERSION_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STYLESHEET_REQUIRES_VERSION_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_ATTRIBUTE_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_ATTRIBUTE_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CHOOSE_REQUIRES_WHEN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CHOOSE_REQUIRES_WHEN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_APPLY_IMPORT_IN_FOR_EACH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_APPLY_IMPORT_IN_FOR_EACH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_USE_DTM_FOR_OUTPUT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_USE_DTM_FOR_OUTPUT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_USE_DTM_FOR_INPUT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_USE_DTM_FOR_INPUT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CALL_TO_EXT_FAILED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CALL_TO_EXT_FAILED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PREFIX_MUST_RESOLVE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PREFIX_MUST_RESOLVE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_UTF16_SURROGATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_UTF16_SURROGATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSLATTRSET_USED_ITSELF	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSLATTRSET_USED_ITSELF"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_MIX_XERCESDOM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_MIX_XERCESDOM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TOO_MANY_LISTENERS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TOO_MANY_LISTENERS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_IN_ELEMTEMPLATEELEM_READOBJECT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_IN_ELEMTEMPLATEELEM_READOBJECT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DUPLICATE_NAMED_TEMPLATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DUPLICATE_NAMED_TEMPLATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_KEY_CALL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_KEY_CALL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_REFERENCING_ITSELF	TokenNameIdentifier
=	TokenNameEQUAL
"ER_REFERENCING_ITSELF"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_DOMSOURCE_INPUT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_DOMSOURCE_INPUT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CLASS_NOT_FOUND_FOR_OPTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CLASS_NOT_FOUND_FOR_OPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_REQUIRED_ELEM_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_REQUIRED_ELEM_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INPUT_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INPUT_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_URI_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_URI_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FILE_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FILE_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SOURCE_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SOURCE_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_INIT_BSFMGR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_INIT_BSFMGR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CMPL_EXTENSN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CMPL_EXTENSN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CREATE_EXTENSN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CREATE_EXTENSN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INSTANCE_MTHD_CALL_REQUIRES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INSTANCE_MTHD_CALL_REQUIRES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_ELEMENT_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_ELEMENT_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ELEMENT_NAME_METHOD_STATIC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ELEMENT_NAME_METHOD_STATIC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXTENSION_FUNC_UNKNOWN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXTENSION_FUNC_UNKNOWN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MORE_MATCH_CONSTRUCTOR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MORE_MATCH_CONSTRUCTOR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MORE_MATCH_METHOD	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MORE_MATCH_METHOD"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_MORE_MATCH_ELEMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_MORE_MATCH_ELEMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_CONTEXT_PASSED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_CONTEXT_PASSED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_POOL_EXISTS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_POOL_EXISTS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_DRIVER_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_DRIVER_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_URL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_URL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_POOL_SIZE_LESSTHAN_ONE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_POOL_SIZE_LESSTHAN_ONE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_DRIVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_DRIVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_STYLESHEETROOT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_STYLESHEETROOT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_XMLSPACE_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_XMLSPACE_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROCESSFROMNODE_FAILED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROCESSFROMNODE_FAILED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESOURCE_COULD_NOT_LOAD	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESOURCE_COULD_NOT_LOAD"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BUFFER_SIZE_LESSTHAN_ZERO	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BUFFER_SIZE_LESSTHAN_ZERO"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_ERROR_CALLING_EXTENSION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_ERROR_CALLING_EXTENSION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_NAMESPACE_DECL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_NAMESPACE_DECL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ELEM_CONTENT_NOT_ALLOWED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ELEM_CONTENT_NOT_ALLOWED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STYLESHEET_DIRECTED_TERMINATION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STYLESHEET_DIRECTED_TERMINATION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ONE_OR_TWO	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ONE_OR_TWO"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TWO_OR_THREE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TWO_OR_THREE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_LOAD_RESOURCE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_LOAD_RESOURCE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_INIT_DEFAULT_TEMPLATES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_INIT_DEFAULT_TEMPLATES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESULT_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESULT_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESULT_COULD_NOT_BE_SET	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESULT_COULD_NOT_BE_SET"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_OUTPUT_SPECIFIED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_OUTPUT_SPECIFIED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_TRANSFORM_TO_RESULT_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_TRANSFORM_TO_RESULT_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_TRANSFORM_SOURCE_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_TRANSFORM_SOURCE_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_CONTENT_HANDLER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_CONTENT_HANDLER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_ERROR_HANDLER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CALL_PARSE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CALL_PARSE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_PARENT_FOR_FILTER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_PARENT_FOR_FILTER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_STYLESHEET_IN_MEDIA	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_STYLESHEET_IN_MEDIA"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_STYLESHEET_PI	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_STYLESHEET_PI"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROPERTY_VALUE_BOOLEAN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROPERTY_VALUE_BOOLEAN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_FIND_EXTERN_SCRIPT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_FIND_EXTERN_SCRIPT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESOURCE_COULD_NOT_FIND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESOURCE_COULD_NOT_FIND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_OUTPUT_PROPERTY_NOT_RECOGNIZED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_OUTPUT_PROPERTY_NOT_RECOGNIZED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FAILED_CREATING_ELEMLITRSLT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FAILED_CREATING_ELEMLITRSLT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_VALUE_SHOULD_BE_NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_VALUE_SHOULD_BE_NUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_VALUE_SHOULD_EQUAL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_VALUE_SHOULD_EQUAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FAILED_CALLING_METHOD	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FAILED_CALLING_METHOD"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FAILED_CREATING_ELEMTMPL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FAILED_CREATING_ELEMTMPL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CHARS_NOT_ALLOWED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CHARS_NOT_ALLOWED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ATTR_NOT_ALLOWED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ATTR_NOT_ALLOWED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BAD_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BAD_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ATTRIB_VALUE_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ATTRIB_VALUE_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ATTRIB_VALUE_NOT_RECOGNIZED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ATTRIB_VALUE_NOT_RECOGNIZED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_URI_NAMESPACE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_URI_NAMESPACE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NUMBER_TOO_BIG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NUMBER_TOO_BIG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_FIND_SAX1_DRIVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_FIND_SAX1_DRIVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SAX1_DRIVER_NOT_LOADED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SAX1_DRIVER_NOT_LOADED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SAX1_DRIVER_NOT_INSTANTIATED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SAX1_DRIVER_NOT_INSTANTIATED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PARSER_PROPERTY_NOT_SPECIFIED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PARSER_PROPERTY_NOT_SPECIFIED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PARSER_ARG_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PARSER_ARG_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FEATURE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FEATURE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROPERTY	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROPERTY"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_ENTITY_RESOLVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_ENTITY_RESOLVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_DTD_HANDLER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_DTD_HANDLER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_DRIVER_NAME_SPECIFIED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_DRIVER_NAME_SPECIFIED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_URL_SPECIFIED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_URL_SPECIFIED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_POOLSIZE_LESS_THAN_ONE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_POOLSIZE_LESS_THAN_ONE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_DRIVER_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_DRIVER_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ERRORLISTENER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ERRORLISTENER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ASSERT_NO_TEMPLATE_PARENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ASSERT_NO_TEMPLATE_PARENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_ALLOWED_IN_POSITION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_ALLOWED_IN_POSITION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAMESPACE_CONTEXT_NULL_NAMESPACE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAMESPACE_CONTEXT_NULL_NAMESPACE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAMESPACE_CONTEXT_NULL_PREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAMESPACE_CONTEXT_NULL_PREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XPATH_RESOLVER_NULL_QNAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XPATH_RESOLVER_NULL_QNAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XPATH_RESOLVER_NEGATIVE_ARITY	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XPATH_RESOLVER_NEGATIVE_ARITY"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_TCHAR	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_TCHAR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_QNAME	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_QNAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_ENUM	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_ENUM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_NMTOKEN	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_NMTOKEN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_NCNAME	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_NCNAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_BOOLEAN	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_BOOLEAN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
INVALID_NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"INVALID_NUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ARG_LITERAL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ARG_LITERAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DUPLICATE_GLOBAL_VAR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DUPLICATE_GLOBAL_VAR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DUPLICATE_VAR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DUPLICATE_VAR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TEMPLATE_NAME_MATCH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TEMPLATE_NAME_MATCH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_PREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_PREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_ATTRIB_SET	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_ATTRIB_SET"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FUNCTION_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FUNCTION_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_HAVE_CONTENT_AND_SELECT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_HAVE_CONTENT_AND_SELECT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_SET_PARAM_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_SET_PARAM_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SET_FEATURE_NULL_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SET_FEATURE_NULL_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_GET_FEATURE_NULL_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_GET_FEATURE_NULL_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNSUPPORTED_FEATURE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNSUPPORTED_FEATURE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_FOUND_CURLYBRACE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_FOUND_CURLYBRACE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR	TokenNameIdentifier
=	TokenNameEQUAL
"WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_EXPR_ATTRIB_CHANGED_TO_SELECT	TokenNameIdentifier
=	TokenNameEQUAL
"WG_EXPR_ATTRIB_CHANGED_TO_SELECT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_NO_LOCALE_IN_FORMATNUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"WG_NO_LOCALE_IN_FORMATNUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_LOCALE_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"WG_LOCALE_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_CANNOT_MAKE_URL_FROM	TokenNameIdentifier
=	TokenNameEQUAL
"WG_CANNOT_MAKE_URL_FROM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_CANNOT_LOAD_REQUESTED_DOC	TokenNameIdentifier
=	TokenNameEQUAL
"WG_CANNOT_LOAD_REQUESTED_DOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_CANNOT_FIND_COLLATOR	TokenNameIdentifier
=	TokenNameEQUAL
"WG_CANNOT_FIND_COLLATOR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_FUNCTIONS_SHOULD_USE_URL	TokenNameIdentifier
=	TokenNameEQUAL
"WG_FUNCTIONS_SHOULD_USE_URL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ENCODING_NOT_SUPPORTED_USING_UTF8	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ENCODING_NOT_SUPPORTED_USING_UTF8"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ENCODING_NOT_SUPPORTED_USING_JAVA	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ENCODING_NOT_SUPPORTED_USING_JAVA"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_SPECIFICITY_CONFLICTS	TokenNameIdentifier
=	TokenNameEQUAL
"WG_SPECIFICITY_CONFLICTS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_PARSING_AND_PREPARING	TokenNameIdentifier
=	TokenNameEQUAL
"WG_PARSING_AND_PREPARING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ATTR_TEMPLATE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ATTR_TEMPLATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESP"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ATTRIB_NOT_HANDLED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ATTRIB_NOT_HANDLED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_NO_DECIMALFORMAT_DECLARATION	TokenNameIdentifier
=	TokenNameEQUAL
"WG_NO_DECIMALFORMAT_DECLARATION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_OLD_XSLT_NS	TokenNameIdentifier
=	TokenNameEQUAL
"WG_OLD_XSLT_NS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ILLEGAL_ATTRIBUTE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ILLEGAL_ATTRIBUTE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_COULD_NOT_RESOLVE_PREFIX	TokenNameIdentifier
=	TokenNameEQUAL
"WG_COULD_NOT_RESOLVE_PREFIX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_STYLESHEET_REQUIRES_VERSION_ATTRIB	TokenNameIdentifier
=	TokenNameEQUAL
"WG_STYLESHEET_REQUIRES_VERSION_ATTRIB"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ILLEGAL_ATTRIBUTE_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ILLEGAL_ATTRIBUTE_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ILLEGAL_ATTRIBUTE_VALUE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ILLEGAL_ATTRIBUTE_VALUE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_EMPTY_SECOND_ARG	TokenNameIdentifier
=	TokenNameEQUAL
"WG_EMPTY_SECOND_ARG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML	TokenNameIdentifier
=	TokenNameEQUAL
"WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME	TokenNameIdentifier
=	TokenNameEQUAL
"WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ILLEGAL_ATTRIBUTE_POSITION	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ILLEGAL_ATTRIBUTE_POSITION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
NO_MODIFICATION_ALLOWED_ERR	TokenNameIdentifier
=	TokenNameEQUAL
"NO_MODIFICATION_ALLOWED_ERR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getContents	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
{	TokenNameLBRACE
"ER0000"	TokenNameStringLiteral
,	TokenNameCOMMA
"{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_CURLYBRACE	TokenNameIdentifier
,	TokenNameCOMMA
"오류: 표현식에 '{'가 올 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_ATTRIBUTE	TokenNameIdentifier
,	TokenNameCOMMA
"{0}에 유효하지 않은 속성 {1}이(가) 있습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_SOURCENODE_APPLYIMPORTS	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:apply-imports에서 sourceNode가 널(null)입니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_ADD	TokenNameIdentifier
,	TokenNameCOMMA
"{1}에 {0}을(를) 추가할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_SOURCENODE_HANDLEAPPLYTEMPLATES	TokenNameIdentifier
,	TokenNameCOMMA
"handleApplyTemplatesInstruction에서 sourceNode가 널(null)입니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_NAME_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"{0}에 이름 속성이 있어야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TEMPLATE_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 이름의 템플리트를 찾을 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_RESOLVE_NAME_AVT	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:call-template에 있는 이름 AVT를 분석할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_REQUIRES_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"{0}은(는) {1} 속성을 필요로 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MUST_HAVE_TEST_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"{0}에 ''test'' 속성이 있어야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BAD_VAL_ON_LEVEL_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 레벨 속성에 잘못된 값이 있습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML	TokenNameIdentifier
,	TokenNameCOMMA
"처리 명령어 이름은 'xml'이 될 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSINGINSTRUCTION_NOTVALID_NCNAME	TokenNameIdentifier
,	TokenNameCOMMA
"처리 명령어 이름은 유효한 NCName이어야 합니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NEED_MATCH_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"{0}에 모드가 있으면 일치 속성이 있어야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NEED_NAME_OR_MATCH_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"{0}에 이름 또는 일치 속성이 필요합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_RESOLVE_NSPREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"이름 공간 접두부를 분석할 수 없습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"xml:space에 잘못된 값이 있습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_OWNERDOC	TokenNameIdentifier
,	TokenNameCOMMA
"하위 노드에 소유자 문서가 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ELEMTEMPLATEELEM_ERR	TokenNameIdentifier
,	TokenNameCOMMA
"ElemTemplateElement 오류: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_CHILD	TokenNameIdentifier
,	TokenNameCOMMA
"널(null) 하위를 추가하려고 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NEED_SELECT_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"{0}에 선택적 속성이 필요합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NEED_TEST_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:when에 'test' 속성이 있어야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NEED_NAME_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:with-param에 'name' 속성이 있어야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_CONTEXT_OWNERDOC	TokenNameIdentifier
,	TokenNameCOMMA
"문맥에 소유자 문서가 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_CREATE_XML_PROC_LIAISON	TokenNameIdentifier
,	TokenNameCOMMA
"XML TransformerFactory Liaison을 작성할 수 없습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESS_NOT_SUCCESSFUL	TokenNameIdentifier
,	TokenNameCOMMA
"Xalan: 프로세스가 실패했습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_SUCCESSFUL	TokenNameIdentifier
,	TokenNameCOMMA
"Xalan:이 실패했습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ENCODING_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"인코딩이 지원되지 않습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_CREATE_TRACELISTENER	TokenNameIdentifier
,	TokenNameCOMMA
"TraceListener를 작성할 수 없습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_KEY_REQUIRES_NAME_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:key에 'name' 속성이 필요합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_KEY_REQUIRES_MATCH_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:key에 'match' 속성이 필요합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_KEY_REQUIRES_USE_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:key에 'use' 속성이 필요합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_REQUIRES_ELEMENTS_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0}에 ''elements'' 속성이 필요합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISSING_PREFIX_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0} 속성 ''prefix''가 누락되었습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BAD_STYLESHEET_URL	TokenNameIdentifier
,	TokenNameCOMMA
"스타일시트 URL이 잘못되었습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FILE_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"스타일시트 파일을 찾을 수 없습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_IOEXCEPTION	TokenNameIdentifier
,	TokenNameCOMMA
"스타일시트 파일에 입출력 예외가 있습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_HREF_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0}의 href 속성을 찾을 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STYLESHEET_INCLUDES_ITSELF	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0}이(가) 직접 또는 간접적으로 자신을 포함합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSINCLUDE_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"StylesheetHandler.processInclude 오류, {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISSING_LANG_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0} 속성 ''lang''이 누락되었습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISSING_CONTAINER_ELEMENT_COMPONENT	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0} 요소가 잘못된 위치에 있습니다. 컨테이너 요소 ''component''가 누락되었습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CAN_ONLY_OUTPUT_TO_ELEMENT	TokenNameIdentifier
,	TokenNameCOMMA
"Element, DocumentFragment, Document 또는 PrintWriter로만 출력할 수 있습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESS_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"StylesheetRoot.process 오류"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNIMPLNODE_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"UnImplNode 오류: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_SELECT_EXPRESSION	TokenNameIdentifier
,	TokenNameCOMMA
"오류. xpath 선택 표현식(-select)을 찾을 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_SERIALIZE_XSLPROCESSOR	TokenNameIdentifier
,	TokenNameCOMMA
"XSLProcessor를 직렬화할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_INPUT_STYLESHEET	TokenNameIdentifier
,	TokenNameCOMMA
"스타일시트 입력을 지정하지 않았습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FAILED_PROCESS_STYLESHEET	TokenNameIdentifier
,	TokenNameCOMMA
"스타일시트를 처리하는 데 실패했습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNT_PARSE_DOC	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 문서를 구문 분석할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNT_FIND_FRAGMENT	TokenNameIdentifier
,	TokenNameCOMMA
"단편을 찾을 수 없습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODE_NOT_ELEMENT	TokenNameIdentifier
,	TokenNameCOMMA
"단편 ID가 가리키는 노드가 요소가 아닙니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FOREACH_NEED_MATCH_OR_NAME_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"for-each에는 일치 또는 이름 속성이 있어야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TEMPLATES_NEED_MATCH_OR_NAME_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"템플리트에는 일치 또는 이름 속성이 있어야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_CLONE_OF_DOCUMENT_FRAG	TokenNameIdentifier
,	TokenNameCOMMA
"문서 단편의 복제본이 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CREATE_ITEM	TokenNameIdentifier
,	TokenNameCOMMA
"결과 트리에 항목을 작성할 수 없습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XMLSPACE_ILLEGAL_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"원본 XML의 xml:space에 유효하지 않은 값이 있습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_XSLKEY_DECLARATION	TokenNameIdentifier
,	TokenNameCOMMA
"{0}에 대한 xsl:key 선언이 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CREATE_URL	TokenNameIdentifier
,	TokenNameCOMMA
"오류. url을 작성할 수 없습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSLFUNCTIONS_UNSUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:functions가 지원되지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSOR_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"XSLT TransformerFactory 오류"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_ALLOWED_INSIDE_STYLESHEET	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) 스타일시트 내에 {0}이(가) 허용되지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESULTNS_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"result-ns가 더 이상 지원되지 않습니다. 대신 xsl:output을 사용하십시오."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DEFAULTSPACE_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"default-space가 더 이상 지원되지 않습니다. 대신 xsl:strip-space 또는 xsl:preserve-space를 사용하십시오."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INDENTRESULT_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"indent-result가 더 이상 지원되지 않습니다. 대신 xsl:output을 사용하십시오."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0}에 유효하지 않은 속성이 있습니다: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_XSL_ELEM	TokenNameIdentifier
,	TokenNameCOMMA
"알 수 없는 XSL 요소: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BAD_XSLSORT_USE	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) xsl:sort는 xsl:apply-templates 또는 xsl:for-each와 함께 사용되어야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISPLACED_XSLWHEN	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) xsl:when이 잘못된 위치에 놓여 있습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSLWHEN_NOT_PARENTED_BY_XSLCHOOSE	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) xsl:when이 xsl:choose의 상위에 있지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISPLACED_XSLOTHERWISE	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) xsl:otherwise가 잘못된 위치에 놓여 있습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSLOTHERWISE_NOT_PARENTED_BY_XSLCHOOSE	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) xsl:otherwise가 xsl:choose의 상위에 있지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_ALLOWED_INSIDE_TEMPLATE	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) 템플리트 내에 {0}이(가) 허용되지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_EXT_NS_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0} 확장 이름 공간 접두부 {1}을(를) 알 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_IMPORTS_AS_FIRST_ELEM	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) 가져오기는 스타일시트에서 첫 번째 요소로만 나타날 수 있습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_IMPORTING_ITSELF	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) {0}이(가) 직접 또는 간접적으로 자신을 가져옵니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XMLSPACE_ILLEGAL_VAL	TokenNameIdentifier
,	TokenNameCOMMA
"(StylesheetHandler) xml:공간에 유효하지 않은 값이 있습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSSTYLESHEET_NOT_SUCCESSFUL	TokenNameIdentifier
,	TokenNameCOMMA
"processStylesheet에 실패했습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SAX_EXCEPTION	TokenNameIdentifier
,	TokenNameCOMMA
"SAX 예외"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FUNCTION_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"함수가 지원되지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSLT_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"XSLT 오류"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CURRENCY_SIGN_ILLEGAL	TokenNameIdentifier
,	TokenNameCOMMA
"포맷 패턴 문자열에 통화 부호가 허용되지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DOCUMENT_FUNCTION_INVALID_IN_STYLESHEET_DOM	TokenNameIdentifier
,	TokenNameCOMMA
"스타일시트 DOM에서 Document 함수가 지원되지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_RESOLVE_PREFIX_OF_NON_PREFIX_RESOLVER	TokenNameIdentifier
,	TokenNameCOMMA
"비접두부 분석자의 접두부를 분석할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_REDIRECT_COULDNT_GET_FILENAME	TokenNameIdentifier
,	TokenNameCOMMA
"Redirect extension: 파일 이름을 가져올 수 없습니다. 파일 또는 선택적 속성은 올바른 문자열을 리턴해야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_BUILD_FORMATTERLISTENER_IN_REDIRECT	TokenNameIdentifier
,	TokenNameCOMMA
"경로 재지정 확장에 FormatterListener를 빌드할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_PREFIX_IN_EXCLUDERESULTPREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"exclude-result-prefixes에 있는 접두부가 유효하지 않습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISSING_NS_URI	TokenNameIdentifier
,	TokenNameCOMMA
"지정된 접두부의 이름 공간 URI가 누락되었습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MISSING_ARG_FOR_OPTION	TokenNameIdentifier
,	TokenNameCOMMA
"옵션의 인수가 누락되었습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_OPTION	TokenNameIdentifier
,	TokenNameCOMMA
"잘못된 옵션: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MALFORMED_FORMAT_STRING	TokenNameIdentifier
,	TokenNameCOMMA
"잘못 형식화된 포맷 문자열: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STYLESHEET_REQUIRES_VERSION_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:stylesheet에 'version' 속성이 필요합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_ATTRIBUTE_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"속성: {0}에 유효하지 않은 값이 있습니다: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CHOOSE_REQUIRES_WHEN	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:choose에 xsl:when이 필요합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_APPLY_IMPORT_IN_FOR_EACH	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:apply-imports는 xsl:for-each에 허용되지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_USE_DTM_FOR_OUTPUT	TokenNameIdentifier
,	TokenNameCOMMA
"출력 DOM 노드에 DTMLiaison을 사용할 수 없습니다. 대신 org.apache.xpath.DOM2Helper를 전달하십시오."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_USE_DTM_FOR_INPUT	TokenNameIdentifier
,	TokenNameCOMMA
"입력 DOM 노드에 DTMLiaison을 사용할 수 없습니다. 대신 org.apache.xpath.DOM2Helper를 전달하십시오."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CALL_TO_EXT_FAILED	TokenNameIdentifier
,	TokenNameCOMMA
"확장 요소 호출에 실패했습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PREFIX_MUST_RESOLVE	TokenNameIdentifier
,	TokenNameCOMMA
"접두부는 이름 공간으로 분석되어야 합니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_UTF16_SURROGATE	TokenNameIdentifier
,	TokenNameCOMMA
"잘못된 UTF-16 대리자(surrogate)가 발견되었습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSLATTRSET_USED_ITSELF	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:attribute-set {0}이(가) 자신을 사용했으므로 무한 루프를 초래합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_MIX_XERCESDOM	TokenNameIdentifier
,	TokenNameCOMMA
"비Xerces-DOM 입력과 Xerces-DOM 출력을 혼합할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TOO_MANY_LISTENERS	TokenNameIdentifier
,	TokenNameCOMMA
"addTraceListenersToStylesheet - TooManyListenersException"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_IN_ELEMTEMPLATEELEM_READOBJECT	TokenNameIdentifier
,	TokenNameCOMMA
"ElemTemplateElement.readObject: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DUPLICATE_NAMED_TEMPLATE	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 이름의 템플리트가 둘 이상입니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_KEY_CALL	TokenNameIdentifier
,	TokenNameCOMMA
"잘못된 함수 호출: recursive key() 호출이 허용되지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_REFERENCING_ITSELF	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 변수는 직접 또는 간접적으로 자신을 참조합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_DOMSOURCE_INPUT	TokenNameIdentifier
,	TokenNameCOMMA
"newTemplates의 DOMSource에 대한 입력 노드는 널(null)이 될 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CLASS_NOT_FOUND_FOR_OPTION	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 옵션에 대한 클래스 파일이 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_REQUIRED_ELEM_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"필수 요소를 찾을 수 없습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INPUT_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"InputStream은 널(null)이 될 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_URI_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"URI는 널(null)이 될 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FILE_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"파일은 널(null)이 될 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SOURCE_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"InputSource는 널(null)이 될 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_INIT_BSFMGR	TokenNameIdentifier
,	TokenNameCOMMA
"BSF 관리자를 초기화할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CMPL_EXTENSN	TokenNameIdentifier
,	TokenNameCOMMA
"확장자를 컴파일할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CREATE_EXTENSN	TokenNameIdentifier
,	TokenNameCOMMA
"확장자를 작성할 수 없습니다: {0}, 원인: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INSTANCE_MTHD_CALL_REQUIRES	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 메소드에 대한 인스턴스 메소드 호출은 첫 번째 인수로 오브젝트 인스턴스를 필요로 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_ELEMENT_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"잘못된 요소 이름이 지정되었습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ELEMENT_NAME_METHOD_STATIC	TokenNameIdentifier
,	TokenNameCOMMA
"요소 이름 메소드는 static이어야 합니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXTENSION_FUNC_UNKNOWN	TokenNameIdentifier
,	TokenNameCOMMA
"확장 함수 {0} : {1}을(를) 알 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MORE_MATCH_CONSTRUCTOR	TokenNameIdentifier
,	TokenNameCOMMA
"{0}에 대한 생성자에 가장 일치하는 것이 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MORE_MATCH_METHOD	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 메소드에 가장 일치하는 것이 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_MORE_MATCH_ELEMENT	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 요소 메소드에 가장 일치하는 것이 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_CONTEXT_PASSED	TokenNameIdentifier
,	TokenNameCOMMA
"{0}을(를) 평가하는 데 잘못된 문맥이 전달되었습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_POOL_EXISTS	TokenNameIdentifier
,	TokenNameCOMMA
"풀이 이미 있습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_DRIVER_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"드라이버 이름을 지정하지 않았습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_URL	TokenNameIdentifier
,	TokenNameCOMMA
"URL을 지정하지 않았습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_POOL_SIZE_LESSTHAN_ONE	TokenNameIdentifier
,	TokenNameCOMMA
"풀 크기가 1 미만입니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_DRIVER	TokenNameIdentifier
,	TokenNameCOMMA
"잘못된 드라이버 이름을 지정했습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_STYLESHEETROOT	TokenNameIdentifier
,	TokenNameCOMMA
"스타일시트 루트를 찾을 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_XMLSPACE_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"xml:space에 대해 유효하지 않은 값입니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROCESSFROMNODE_FAILED	TokenNameIdentifier
,	TokenNameCOMMA
"processFromNode가 실패했습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESOURCE_COULD_NOT_LOAD	TokenNameIdentifier
,	TokenNameCOMMA
"[ {0} ] 자원이 {1}   {2}   {3}을 로드할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BUFFER_SIZE_LESSTHAN_ZERO	TokenNameIdentifier
,	TokenNameCOMMA
"버퍼 크기 <=0"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_ERROR_CALLING_EXTENSION	TokenNameIdentifier
,	TokenNameCOMMA
"확장 호출 시 알 수 없는 오류가 발생했습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_NAMESPACE_DECL	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 접두부에 해당하는 이름 공간 선언이 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ELEM_CONTENT_NOT_ALLOWED	TokenNameIdentifier
,	TokenNameCOMMA
"lang=javaclass {0}에 대해 요소 컨텐츠가 허용되지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STYLESHEET_DIRECTED_TERMINATION	TokenNameIdentifier
,	TokenNameCOMMA
"스타일시트가 종료를 지시했습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ONE_OR_TWO	TokenNameIdentifier
,	TokenNameCOMMA
"1 또는 2"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TWO_OR_THREE	TokenNameIdentifier
,	TokenNameCOMMA
"2 또는 3"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_LOAD_RESOURCE	TokenNameIdentifier
,	TokenNameCOMMA
"{0}(CLASSPATH 확인)을(를) 로드할 수 없으므로 현재 기본값만을 사용하는 중입니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_INIT_DEFAULT_TEMPLATES	TokenNameIdentifier
,	TokenNameCOMMA
"기본 템플리트를 초기화할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESULT_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"결과는 널(null)이 될 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESULT_COULD_NOT_BE_SET	TokenNameIdentifier
,	TokenNameCOMMA
"결과를 설정할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_OUTPUT_SPECIFIED	TokenNameIdentifier
,	TokenNameCOMMA
"출력을 지정하지 않았습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_TRANSFORM_TO_RESULT_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 유형의 결과로 변환할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_TRANSFORM_SOURCE_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 유형의 소스를 변환할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_CONTENT_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
"널(null) 컨텐츠 핸들러"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
"널(null) 오류 핸들러"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CALL_PARSE	TokenNameIdentifier
,	TokenNameCOMMA
"ContentHandler를 설정하지 않은 경우에는 parse를 호출할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_PARENT_FOR_FILTER	TokenNameIdentifier
,	TokenNameCOMMA
"상위 필터가 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_STYLESHEET_IN_MEDIA	TokenNameIdentifier
,	TokenNameCOMMA
"{0}에 스타일시트가 없습니다. 매체= {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_STYLESHEET_PI	TokenNameIdentifier
,	TokenNameCOMMA
"{0}에 xml-스타일시트 PI가 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"지원되지 않습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROPERTY_VALUE_BOOLEAN	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 특성값은 부울 인스턴스이어야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_FIND_EXTERN_SCRIPT	TokenNameIdentifier
,	TokenNameCOMMA
"{0}에 있는 외부 스크립트에 도달할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESOURCE_COULD_NOT_FIND	TokenNameIdentifier
,	TokenNameCOMMA
"[ {0} ] 자원을 찾을 수 없습니다. {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_OUTPUT_PROPERTY_NOT_RECOGNIZED	TokenNameIdentifier
,	TokenNameCOMMA
"출력 특성이 인식되지 않습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FAILED_CREATING_ELEMLITRSLT	TokenNameIdentifier
,	TokenNameCOMMA
"ElemLiteralResult 인스턴스 작성에 실패했습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_VALUE_SHOULD_BE_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"{0}에 대한 값에 구문 분석 가능한 숫자가 있어야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_VALUE_SHOULD_EQUAL	TokenNameIdentifier
,	TokenNameCOMMA
"{0}의 값은 yes 또는 no여야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FAILED_CALLING_METHOD	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 메소드 호출에 실패했습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FAILED_CREATING_ELEMTMPL	TokenNameIdentifier
,	TokenNameCOMMA
"ElemTemplateElement 인스턴스 작성에 실패했습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CHARS_NOT_ALLOWED	TokenNameIdentifier
,	TokenNameCOMMA
"문서의 이 지점에 문자가 허용되지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ATTR_NOT_ALLOWED	TokenNameIdentifier
,	TokenNameCOMMA
"{1} 요소에 "{0}" 속성이 허용되지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BAD_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 잘못된 값 {1} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ATTRIB_VALUE_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 속성값이 없습니다. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ATTRIB_VALUE_NOT_RECOGNIZED	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 속성값이 인식되지 않습니다. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_URI_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
"널(null) URI로 이름 공간 접두부를 생성하려고 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NUMBER_TOO_BIG	TokenNameIdentifier
,	TokenNameCOMMA
"최대로 긴 정수보다 큰 숫자를 포맷하려고 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_FIND_SAX1_DRIVER	TokenNameIdentifier
,	TokenNameCOMMA
"SAX1 드라이버 클래스 {0}을(를) 찾을 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SAX1_DRIVER_NOT_LOADED	TokenNameIdentifier
,	TokenNameCOMMA
"SAX1 드라이버 클래스 {0}이(가) 있으나 로드할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SAX1_DRIVER_NOT_INSTANTIATED	TokenNameIdentifier
,	TokenNameCOMMA
"SAX1 드라이버 클래스 {0}을(를) 로드했으나 인스턴스화할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SAX1_DRIVER_NOT_IMPLEMENT_PARSER	TokenNameIdentifier
,	TokenNameCOMMA
"SAX1 드라이버 클래스 {0}이(가) org.xml.sax.Parser를 구현하지 않았습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PARSER_PROPERTY_NOT_SPECIFIED	TokenNameIdentifier
,	TokenNameCOMMA
"시스템 특성 org.xml.sax.parser를 지정하지 않았습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PARSER_ARG_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"구문 분석기 인수는 널(null)이 될 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
"특성: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROPERTY	TokenNameIdentifier
,	TokenNameCOMMA
"특성: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_ENTITY_RESOLVER	TokenNameIdentifier
,	TokenNameCOMMA
"널(null) 엔티티 분석기"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_DTD_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
"널(null) DTD 핸들러"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_DRIVER_NAME_SPECIFIED	TokenNameIdentifier
,	TokenNameCOMMA
"드라이버 이름을 지정하지 않았습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_URL_SPECIFIED	TokenNameIdentifier
,	TokenNameCOMMA
"URL을 지정하지 않았습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_POOLSIZE_LESS_THAN_ONE	TokenNameIdentifier
,	TokenNameCOMMA
"풀 크기가 1 미만입니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_DRIVER_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"잘못된 드라이버 이름을 지정했습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ERRORLISTENER	TokenNameIdentifier
,	TokenNameCOMMA
"ErrorListener"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ASSERT_NO_TEMPLATE_PARENT	TokenNameIdentifier
,	TokenNameCOMMA
"프로그래머 오류. 표현식에 ElemTemplateElement의 상위 항목이 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ASSERT_REDUNDENT_EXPR_ELIMINATOR	TokenNameIdentifier
,	TokenNameCOMMA
"RedundentExprEliminator에 있는 프로그래머의 단언문: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_ALLOWED_IN_POSITION	TokenNameIdentifier
,	TokenNameCOMMA
"{0}은(는) 스타일시트의 이 위치에서 허용되지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NONWHITESPACE_NOT_ALLOWED_IN_POSITION	TokenNameIdentifier
,	TokenNameCOMMA
"화이트 스페이스가 아닌 텍스트는 스타일시트의 이 위치에서 허용되지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_TCHAR	TokenNameIdentifier
,	TokenNameCOMMA
"{0} CHAR 속성에 대해 사용된 {1} 값이 유효하지 않습니다. CHAR 유형의 속성은 1자여야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_QNAME	TokenNameIdentifier
,	TokenNameCOMMA
"{0} QNAME 속성에 대해 사용된 {1} 값이 유효하지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_ENUM	TokenNameIdentifier
,	TokenNameCOMMA
"{0} ENUM 속성에 대해 사용된 {1} 값이 유효하지 않습니다. 유효한 값은 {2}입니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_NMTOKEN	TokenNameIdentifier
,	TokenNameCOMMA
"{0} NMTOKEN 속성에 대해 사용된 {1} 값이 유효하지 않습니다. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_NCNAME	TokenNameIdentifier
,	TokenNameCOMMA
"{0} NCNAME 속성에 대해 사용된 {1} 값이 유효하지 않습니다. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_BOOLEAN	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 부울 속성에 대해 사용된 {1} 값이 유효하지 않습니다. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
INVALID_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 숫자 속성에 대해 사용된 {1} 값이 유효하지 않습니다. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ARG_LITERAL	TokenNameIdentifier
,	TokenNameCOMMA
"일치 패턴에서 {0}에 대한 인수는 리터럴이어야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DUPLICATE_GLOBAL_VAR	TokenNameIdentifier
,	TokenNameCOMMA
"중복 글로벌 변수 선언입니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DUPLICATE_VAR	TokenNameIdentifier
,	TokenNameCOMMA
"중복 변수 선언입니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TEMPLATE_NAME_MATCH	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:template에 이름 또는 일치 속성(또는 둘 다)이 있어야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"exclude-result-prefixes에 있는 접두부가 유효하지 않습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_ATTRIB_SET	TokenNameIdentifier
,	TokenNameCOMMA
"이름이 {0}인 attribute-set가 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FUNCTION_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"이름이 {0}인 함수가 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_HAVE_CONTENT_AND_SELECT	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 요소에 컨텐츠와 select 속성이 둘 다 있어서는 안됩니다. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_SET_PARAM_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 매개변수 값은 유효한 Java 오브젝트여야 합니다. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX_FOR_DEFAULT	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:namespace-alias 요소의 result-prefix 속성이 #default' 값을 갖지만 요소의 범위에 기본 이름 공간에 대한 선언이 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_NAMESPACE_URI_VALUE_FOR_RESULT_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:namespace-alias 요소의 result-prefix 속성이 ''{0}'' 값을 갖지만 요소의 범위에 접두부 ''{0}''에 대한 이름 공간 선언이 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SET_FEATURE_NULL_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"TransformerFactory.setFeature(문자열 이름, 부울 값)에서 기능 이름이 널(null)이면 안됩니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_GET_FEATURE_NULL_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"TransformerFactory.getFeature(문자열 이름)에서 기능 이름이 널(null)이면 안됩니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNSUPPORTED_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
"이 TransformerFactory에서 ''{0}'' 기능을 설정할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXTENSION_ELEMENT_NOT_ALLOWED_IN_SECURE_PROCESSING	TokenNameIdentifier
,	TokenNameCOMMA
"보안 처리 기능이 true로 설정된 경우에는 ''{0}'' 확장 요소를 사용할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAMESPACE_CONTEXT_NULL_NAMESPACE	TokenNameIdentifier
,	TokenNameCOMMA
"널(null) 이름 공간 uri에 대한 접두부를 가져올 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAMESPACE_CONTEXT_NULL_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"널(null) 접두부에 대한 이름 공간 uri를 가져올 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XPATH_RESOLVER_NULL_QNAME	TokenNameIdentifier
,	TokenNameCOMMA
"함수 이름이 널(null)이면 안됩니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XPATH_RESOLVER_NEGATIVE_ARITY	TokenNameIdentifier
,	TokenNameCOMMA
"arity가 음수이면 안됩니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_FOUND_CURLYBRACE	TokenNameIdentifier
,	TokenNameCOMMA
"'}'가 발견되었으나 열린 속성 템플리트가 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_COUNT_ATTRIB_MATCHES_NO_ANCESTOR	TokenNameIdentifier
,	TokenNameCOMMA
"경고: 계수 속성이 xsl:number의 상위 요소와 일치하지 않습니다. 대상 = {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_EXPR_ATTRIB_CHANGED_TO_SELECT	TokenNameIdentifier
,	TokenNameCOMMA
"이전 구문: 'expr' 속성의 이름이 'select'로 변경되었습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_NO_LOCALE_IN_FORMATNUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"Xalan이 아직 format-number 함수에 있는 로케일 이름을 처리하지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_LOCALE_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"경고: xml:lang={0}에 대한 로케일을 찾을 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_CANNOT_MAKE_URL_FROM	TokenNameIdentifier
,	TokenNameCOMMA
"{0}에서 URL을 작성할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_CANNOT_LOAD_REQUESTED_DOC	TokenNameIdentifier
,	TokenNameCOMMA
"요청된 문서 {0}을(를) 로드할 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_CANNOT_FIND_COLLATOR	TokenNameIdentifier
,	TokenNameCOMMA
"<sort xml:lang={0}에 대한 Collator를 찾을 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_FUNCTIONS_SHOULD_USE_URL	TokenNameIdentifier
,	TokenNameCOMMA
"이전 구문: 함수 명령어는 {0}의 url을 사용해야 합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ENCODING_NOT_SUPPORTED_USING_UTF8	TokenNameIdentifier
,	TokenNameCOMMA
"인코딩이 지원되지 않습니다: {0}, UTF-8 사용"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ENCODING_NOT_SUPPORTED_USING_JAVA	TokenNameIdentifier
,	TokenNameCOMMA
"인코딩이 지원되지 않습니다: {0}, Java {1} 사용"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_SPECIFICITY_CONFLICTS	TokenNameIdentifier
,	TokenNameCOMMA
"특성 충돌이 발견되었습니다: {0}. 스타일시트에서 마지막으로 발견된 것이 사용됩니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_PARSING_AND_PREPARING	TokenNameIdentifier
,	TokenNameCOMMA
"========= 구문 분석 및 준비 {0} =========="	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ATTR_TEMPLATE	TokenNameIdentifier
,	TokenNameCOMMA
"Attr 템플리트, {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_CONFLICT_BETWEEN_XSLSTRIPSPACE_AND_XSLPRESERVESPACE	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:strip-space 및 xsl:preserve-space 사이의 일치 충돌"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ATTRIB_NOT_HANDLED	TokenNameIdentifier
,	TokenNameCOMMA
"Xalan이 아직 {0} 속성을 처리하지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_NO_DECIMALFORMAT_DECLARATION	TokenNameIdentifier
,	TokenNameCOMMA
"10진수 포맷에 대한 선언이 없습니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_OLD_XSLT_NS	TokenNameIdentifier
,	TokenNameCOMMA
"XSLT 이름 공간이 누락되었거나 유효하지 않습니다. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ONE_DEFAULT_XSLDECIMALFORMAT_ALLOWED	TokenNameIdentifier
,	TokenNameCOMMA
"하나의 기본 xsl:decimal-format 선언만 허용됩니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_XSLDECIMALFORMAT_NAMES_MUST_BE_UNIQUE	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:decimal-format 이름이 고유해야 합니다. "{0}" 이름이 중복되었습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ILLEGAL_ATTRIBUTE	TokenNameIdentifier
,	TokenNameCOMMA
"{0}에 유효하지 않은 속성 {1}이(가) 있습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_COULD_NOT_RESOLVE_PREFIX	TokenNameIdentifier
,	TokenNameCOMMA
"이름 공간 접두부를 분석할 수 없습니다: {0}. 노드가 무시됩니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_STYLESHEET_REQUIRES_VERSION_ATTRIB	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:stylesheet에 'version' 속성이 필요합니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ILLEGAL_ATTRIBUTE_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"유효하지 않은 속성 이름: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ILLEGAL_ATTRIBUTE_VALUE	TokenNameIdentifier
,	TokenNameCOMMA
"{0} 속성에 대해 사용된 유효하지 않은 값: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_EMPTY_SECOND_ARG	TokenNameIdentifier
,	TokenNameCOMMA
"document 함수 두 번째 인수로부터의 결과 nodeset가 비어 있습니다. 빈 노드 세트를 리턴하십시오."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_PROCESSINGINSTRUCTION_NAME_CANT_BE_XML	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:processing-instruction의 'name' 속성값은 'xml'일 수 없습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_PROCESSINGINSTRUCTION_NOTVALID_NCNAME	TokenNameIdentifier
,	TokenNameCOMMA
"xsl:processing-instruction의 ''name'' 속성값이 유효한 NCName이어야 합니다: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ILLEGAL_ATTRIBUTE_POSITION	TokenNameIdentifier
,	TokenNameCOMMA
"하위 노드가 생성된 이후 또는 요소가 작성되기 이전에 {0} 속성을 추가할 수 없습니다. 속성이 무시됩니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
NO_MODIFICATION_ALLOWED_ERR	TokenNameIdentifier
,	TokenNameCOMMA
"수정할 수 없는 오브젝트를 수정하려 했습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"ui_language"	TokenNameStringLiteral
,	TokenNameCOMMA
"ko"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"help_language"	TokenNameStringLiteral
,	TokenNameCOMMA
"ko"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"language"	TokenNameStringLiteral
,	TokenNameCOMMA
"ko"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"BAD_CODE"	TokenNameStringLiteral
,	TokenNameCOMMA
"createMessage에 대한 매개변수가 범위를 벗어났습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"FORMAT_FAILED"	TokenNameStringLiteral
,	TokenNameCOMMA
"messageFormat 호출 중 예외가 발생했습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"version"	TokenNameStringLiteral
,	TokenNameCOMMA
">>>>>>> Xalan 버전 "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"version2"	TokenNameStringLiteral
,	TokenNameCOMMA
"<<<<<<<"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"yes"	TokenNameStringLiteral
,	TokenNameCOMMA
"예"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"line"	TokenNameStringLiteral
,	TokenNameCOMMA
"행 #"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"column"	TokenNameStringLiteral
,	TokenNameCOMMA
"열 #"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xsldone"	TokenNameStringLiteral
,	TokenNameCOMMA
"XSLProcessor: 완료"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_option"	TokenNameStringLiteral
,	TokenNameCOMMA
"Xalan-J 명령행 프로세스 클래스 옵션:"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_option"	TokenNameStringLiteral
,	TokenNameCOMMA
"Xalan-J 명령행 프로세스 클래스 옵션:"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_invalid_xsltc_option"	TokenNameStringLiteral
,	TokenNameCOMMA
"{0} 옵션은 XSLTC 모드에서 지원되지 않습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_invalid_xalan_option"	TokenNameStringLiteral
,	TokenNameCOMMA
"{0} 옵션은 -XSLTC로만 사용될 수 있습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_no_input"	TokenNameStringLiteral
,	TokenNameCOMMA
"오류: 지정된 스타일시트 또는 입력 xml이 없습니다. 사용법 명령어에 대한 옵션없이 이 명령을 실행하십시오."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_common_options"	TokenNameStringLiteral
,	TokenNameCOMMA
"-일반 옵션-"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_xalan_options"	TokenNameStringLiteral
,	TokenNameCOMMA
"-Xalan에 대한 옵션-"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_xsltc_options"	TokenNameStringLiteral
,	TokenNameCOMMA
"-XSLTC에 대한 옵션-"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xslProc_return_to_continue"	TokenNameStringLiteral
,	TokenNameCOMMA
"(계속하려면 Enter 키를 누르십시오.)"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXSLTC"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XSLTC(변환에 대해 XSLTC 사용)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionIN"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-IN inputXMLURL]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXSL"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XSL XSLTransformationURL]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionOUT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-OUT outputFileName]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionLXCIN"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-LXCIN compiledStylesheetFileNameIn]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionLXCOUT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-LXCOUT compiledStylesheetFileNameOutOut]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionPARSER"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-PARSER 구문 분석기 liaison의 완전한 클래스 이름]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionE"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-E(엔티티 ref를 펼치지 않음)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionV"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-E(엔티티 ref를 펼치지 않음)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionQC"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-QC(자동 패턴 충돌 경고)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionQ"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-Q(자동 모드)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionLF"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-LF(출력에서만 줄바꾸기 사용{기본값은 CR/LF임})]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionCR"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-CR(출력에서만 캐리지 리턴 사용{기본값은 CR/LF임})]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionESCAPE"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-ESCAPE(이스케이프할 문자{기본값은 <>&"'\r\n임})]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionINDENT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-INDENT(들여쓰기할 공백 수 제어{기본값은 0임})]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TT(템플리트 호출 시 템플리트 추적)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTG"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TG(각 생성 이벤트 추적)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTS"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TS(각 선택 이벤트 추적)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTTC"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TTC(하위 템플리트 처리 시 하위 템플리트 추적)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTCLASS"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TCLASS(추적 확장에 대한 TraceListener 클래스)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionVALIDATE"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-VALIDATE(유효성 검증 발생 여부 설정. 기본적으로는 유효성 검증이 off로 설정됨.)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionEDUMP"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-EDUMP{optional filename}(오류 시 stackdump 수행)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXML"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XML(XML 포맷터를 사용하여 XML 머리글 추가)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionTEXT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-TEXT(단순 텍스트 포맷터 사용)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionHTML"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-HTML(HTML 포맷터 사용)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionPARAM"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-PARAM name expression(스타일시트 매개변수 설정)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg1"	TokenNameStringLiteral
,	TokenNameCOMMA
"XSL 프로세스가 실패했습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg2"	TokenNameStringLiteral
,	TokenNameCOMMA
"** 구문 분석기를 찾을 수 없습니다 **"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg3"	TokenNameStringLiteral
,	TokenNameCOMMA
"클래스 경로를 점검하십시오."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg4"	TokenNameStringLiteral
,	TokenNameCOMMA
"Java용 IBM XML 구문 분석기가 없는 경우 다음에서 다운로드할 수 있습니다. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg5"	TokenNameStringLiteral
,	TokenNameCOMMA
"IBM's AlphaWorks: http://www.alphaworks.ibm.com/formula/xml"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionURIRESOLVER"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-URIRESOLVER full class name(URIResolver를 사용하여 URI 분석)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionENTITYRESOLVER"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-ENTITYRESOLVER full class name(EntityResolver를 사용하여 엔티티 분석)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionCONTENTHANDLER"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-CONTENTHANDLER full class name(ContentHandler를 사용하여 출력 직렬화)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionLINENUMBERS"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-L 소스 문서에 행 번호 사용]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionSECUREPROCESSING"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-SECURE (보안 처리 기능을 true로 설정)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionMEDIA"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-MEDIA mediaType(매체 속성을 사용하여 문서와 연관된 스타일시트 찾기)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionFLAVOR"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-FLAVOR flavorName(명시적으로 s2s=SAX 또는 d2d=DOM을 사용하여 변환 수행)] "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionDIAG"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-DIAG(변환에 소요된 전체 밀리초 인쇄)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionINCREMENTAL"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-INCREMENTAL(http://xml.apache.org/xalan/features/incremental을 true로 설정하여 증분 DTM 구성 요청)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionNOOPTIMIMIZE"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-NOOPTIMIMIZE(http://xml.apache.org/xalan/features/optimize를 false로 설정하여 스타일시트 최적화 처리를 요청하지 않음)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionRL"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-RL recursionlimit(스타일시트 반복 정도에 대한 숫자 한계 단언)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXO"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XO [transletName](생성된 translet에 이름 지정)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXD"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XD destinationDirectory(translet에 대해 대상 디렉토리 지정)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXJ"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XJ jarfile(이름이 <jarfile>인 jar 파일로 translet 클래스 패키지)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXP"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XP package(생성된 모든 translet 클래스에 대해 패키지 이름 접두부 지정)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXN"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XN(템플리트 인라이닝 사용 가능)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXX"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XX(추가 디버깅 메시지 출력 켜기)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionXT"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-XT(가능한 경우, translet을 사용하여 변환)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"diagTiming"	TokenNameStringLiteral
,	TokenNameCOMMA
"--------- {1}을(를) 통한 {0} 변환에 {2}ms가 소요되었습니다."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"recursionTooDeep"	TokenNameStringLiteral
,	TokenNameCOMMA
"템플리트 중첩이 너무 많습니다. 중첩 = {0}, 템플리트 {1} {2}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"nameIs"	TokenNameStringLiteral
,	TokenNameCOMMA
"이름"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"matchPatternIs"	TokenNameStringLiteral
,	TokenNameCOMMA
"일치 패턴"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
BAD_CODE	TokenNameIdentifier
=	TokenNameEQUAL
"BAD_CODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
FORMAT_FAILED	TokenNameIdentifier
=	TokenNameEQUAL
"FORMAT_FAILED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"#error"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"오류: "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WARNING_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"경고: "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
XSL_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"XSLT "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
XML_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"XML "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
QUERY_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"PATTERN "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
XSLTErrorResources	TokenNameIdentifier
loadResourceBundle	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
className	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
MissingResourceException	TokenNameIdentifier
{	TokenNameLBRACE
Locale	TokenNameIdentifier
locale	TokenNameIdentifier
=	TokenNameEQUAL
Locale	TokenNameIdentifier
.	TokenNameDOT
getDefault	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
suffix	TokenNameIdentifier
=	TokenNameEQUAL
getResourceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
locale	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSLTErrorResources	TokenNameIdentifier
)	TokenNameRPAREN
ResourceBundle	TokenNameIdentifier
.	TokenNameDOT
getBundle	TokenNameIdentifier
(	TokenNameLPAREN
className	TokenNameIdentifier
+	TokenNamePLUS
suffix	TokenNameIdentifier
,	TokenNameCOMMA
locale	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MissingResourceException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XSLTErrorResources	TokenNameIdentifier
)	TokenNameRPAREN
ResourceBundle	TokenNameIdentifier
.	TokenNameDOT
getBundle	TokenNameIdentifier
(	TokenNameLPAREN
className	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Locale	TokenNameIdentifier
(	TokenNameLPAREN
"ko"	TokenNameStringLiteral
,	TokenNameCOMMA
"KR"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MissingResourceException	TokenNameIdentifier
e2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
MissingResourceException	TokenNameIdentifier
(	TokenNameLPAREN
"Could not load any resource bundles."	TokenNameStringLiteral
,	TokenNameCOMMA
className	TokenNameIdentifier
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
getResourceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
Locale	TokenNameIdentifier
locale	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
suffix	TokenNameIdentifier
=	TokenNameEQUAL
"_"	TokenNameStringLiteral
+	TokenNamePLUS
locale	TokenNameIdentifier
.	TokenNameDOT
getLanguage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
country	TokenNameIdentifier
=	TokenNameEQUAL
locale	TokenNameIdentifier
.	TokenNameDOT
getCountry	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
country	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
"TW"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
suffix	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
"_"	TokenNameStringLiteral
+	TokenNamePLUS
country	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
suffix	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
