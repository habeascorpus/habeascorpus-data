package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
xslt	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
File	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
FileWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
io	TokenNameIdentifier
.	TokenNameDOT
PrintWriter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
reflect	TokenNameIdentifier
.	TokenNameDOT
Field	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
reflect	TokenNameIdentifier
.	TokenNameDOT
Method	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Enumeration	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Hashtable	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
StringTokenizer	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Vector	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Document	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Element	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Node	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
EnvironmentCheck	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
main	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
PrintWriter	TokenNameIdentifier
sendOutputTo	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
PrintWriter	TokenNameIdentifier
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
args	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
"-out"	TokenNameStringLiteral
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
i	TokenNameIdentifier
<	TokenNameLESS
args	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
sendOutputTo	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
PrintWriter	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
FileWriter	TokenNameIdentifier
(	TokenNameLPAREN
args	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
err	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"# WARNING: -out "	TokenNameStringLiteral
+	TokenNamePLUS
args	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
" threw "	TokenNameStringLiteral
+	TokenNamePLUS
e	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
err	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"# WARNING: -out argument should have a filename, output sent to console"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
EnvironmentCheck	TokenNameIdentifier
app	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
EnvironmentCheck	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
app	TokenNameIdentifier
.	TokenNameDOT
checkEnvironment	TokenNameIdentifier
(	TokenNameLPAREN
sendOutputTo	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
checkEnvironment	TokenNameIdentifier
(	TokenNameLPAREN
PrintWriter	TokenNameIdentifier
pw	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
pw	TokenNameIdentifier
)	TokenNameRPAREN
outWriter	TokenNameIdentifier
=	TokenNameEQUAL
pw	TokenNameIdentifier
;	TokenNameSEMICOLON
Hashtable	TokenNameIdentifier
hash	TokenNameIdentifier
=	TokenNameEQUAL
getEnvironmentHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
environmentHasErrors	TokenNameIdentifier
=	TokenNameEQUAL
writeEnvironmentReport	TokenNameIdentifier
(	TokenNameLPAREN
hash	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
environmentHasErrors	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logMsg	TokenNameIdentifier
(	TokenNameLPAREN
"# WARNING: Potential problems found in your environment!"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logMsg	TokenNameIdentifier
(	TokenNameLPAREN
"#    Check any 'ERROR' items above against the Xalan FAQs"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logMsg	TokenNameIdentifier
(	TokenNameLPAREN
"#    to correct potential problems with your classes/jars"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
logMsg	TokenNameIdentifier
(	TokenNameLPAREN
"#    http://xml.apache.org/xalan-j/faq.html"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
outWriter	TokenNameIdentifier
)	TokenNameRPAREN
outWriter	TokenNameIdentifier
.	TokenNameDOT
flush	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
logMsg	TokenNameIdentifier
(	TokenNameLPAREN
"# YAHOO! Your environment seems to be OK."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
outWriter	TokenNameIdentifier
)	TokenNameRPAREN
outWriter	TokenNameIdentifier
.	TokenNameDOT
flush	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
Hashtable	TokenNameIdentifier
getEnvironmentHash	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Hashtable	TokenNameIdentifier
hash	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Hashtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkJAXPVersion	TokenNameIdentifier
(	TokenNameLPAREN
hash	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkProcessorVersion	TokenNameIdentifier
(	TokenNameLPAREN
hash	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkParserVersion	TokenNameIdentifier
(	TokenNameLPAREN
hash	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkAntVersion	TokenNameIdentifier
(	TokenNameLPAREN
hash	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkDOMVersion	TokenNameIdentifier
(	TokenNameLPAREN
hash	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkSAXVersion	TokenNameIdentifier
(	TokenNameLPAREN
hash	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
checkSystemProperties	TokenNameIdentifier
(	TokenNameLPAREN
hash	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
hash	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
boolean	TokenNameboolean
writeEnvironmentReport	TokenNameIdentifier
(	TokenNameLPAREN
Hashtable	TokenNameIdentifier
h	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
h	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logMsg	TokenNameIdentifier
(	TokenNameLPAREN
"# ERROR: writeEnvironmentReport called with null Hashtable"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
boolean	TokenNameboolean
errors	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
logMsg	TokenNameIdentifier
(	TokenNameLPAREN
"#---- BEGIN writeEnvironmentReport($Revision$): Useful stuff found: ----"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Enumeration	TokenNameIdentifier
keys	TokenNameIdentifier
=	TokenNameEQUAL
h	TokenNameIdentifier
.	TokenNameDOT
keys	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
keys	TokenNameIdentifier
.	TokenNameDOT
hasMoreElements	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
key	TokenNameIdentifier
=	TokenNameEQUAL
keys	TokenNameIdentifier
.	TokenNameDOT
nextElement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
keyStr	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
key	TokenNameIdentifier
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
keyStr	TokenNameIdentifier
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
FOUNDCLASSES	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Vector	TokenNameIdentifier
v	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Vector	TokenNameIdentifier
)	TokenNameRPAREN
h	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
keyStr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
errors	TokenNameIdentifier
|=	TokenNameOR_EQUAL
logFoundJars	TokenNameIdentifier
(	TokenNameLPAREN
v	TokenNameIdentifier
,	TokenNameCOMMA
keyStr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
keyStr	TokenNameIdentifier
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
errors	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
logMsg	TokenNameIdentifier
(	TokenNameLPAREN
keyStr	TokenNameIdentifier
+	TokenNamePLUS
"="	TokenNameStringLiteral
+	TokenNamePLUS
h	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
keyStr	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
logMsg	TokenNameIdentifier
(	TokenNameLPAREN
"Reading-"	TokenNameStringLiteral
+	TokenNamePLUS
key	TokenNameIdentifier
+	TokenNamePLUS
"= threw: "	TokenNameStringLiteral
+	TokenNamePLUS
e	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
logMsg	TokenNameIdentifier
(	TokenNameLPAREN
"#----- END writeEnvironmentReport: Useful properties found: -----"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
errors	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ERROR."	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WARNING	TokenNameIdentifier
=	TokenNameEQUAL
"WARNING."	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"At least one error was found!"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
VERSION	TokenNameIdentifier
=	TokenNameEQUAL
"version."	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
FOUNDCLASSES	TokenNameIdentifier
=	TokenNameEQUAL
"foundclasses."	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
CLASS_PRESENT	TokenNameIdentifier
=	TokenNameEQUAL
"present-unknown-version"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
CLASS_NOTPRESENT	TokenNameIdentifier
=	TokenNameEQUAL
"not-present"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
jarNames	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"xalan.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"xalansamples.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"xalanj1compat.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"xalanservlet.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"serializer.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"xerces.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"xercesImpl.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"testxsl.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"crimson.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"lotusxsl.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"jaxp.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"parser.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"dom.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"sax.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"xml.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"xml-apis.jar"	TokenNameStringLiteral
,	TokenNameCOMMA
"xsltc.jar"	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
protected	TokenNameprotected
boolean	TokenNameboolean
logFoundJars	TokenNameIdentifier
(	TokenNameLPAREN
Vector	TokenNameIdentifier
v	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
desc	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
v	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
v	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
<	TokenNameLESS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
boolean	TokenNameboolean
errors	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
logMsg	TokenNameIdentifier
(	TokenNameLPAREN
"#---- BEGIN Listing XML-related jars in: "	TokenNameStringLiteral
+	TokenNamePLUS
desc	TokenNameIdentifier
+	TokenNamePLUS
" ----"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
v	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
Hashtable	TokenNameIdentifier
subhash	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Hashtable	TokenNameIdentifier
)	TokenNameRPAREN
v	TokenNameIdentifier
.	TokenNameDOT
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Enumeration	TokenNameIdentifier
keys	TokenNameIdentifier
=	TokenNameEQUAL
subhash	TokenNameIdentifier
.	TokenNameDOT
keys	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
keys	TokenNameIdentifier
.	TokenNameDOT
hasMoreElements	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
key	TokenNameIdentifier
=	TokenNameEQUAL
keys	TokenNameIdentifier
.	TokenNameDOT
nextElement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
keyStr	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
key	TokenNameIdentifier
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
keyStr	TokenNameIdentifier
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
errors	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
logMsg	TokenNameIdentifier
(	TokenNameLPAREN
keyStr	TokenNameIdentifier
+	TokenNamePLUS
"="	TokenNameStringLiteral
+	TokenNamePLUS
subhash	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
keyStr	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
errors	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
logMsg	TokenNameIdentifier
(	TokenNameLPAREN
"Reading-"	TokenNameStringLiteral
+	TokenNamePLUS
key	TokenNameIdentifier
+	TokenNamePLUS
"= threw: "	TokenNameStringLiteral
+	TokenNamePLUS
e	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
logMsg	TokenNameIdentifier
(	TokenNameLPAREN
"#----- END Listing XML-related jars in: "	TokenNameStringLiteral
+	TokenNamePLUS
desc	TokenNameIdentifier
+	TokenNamePLUS
" -----"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
errors	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
appendEnvironmentReport	TokenNameIdentifier
(	TokenNameLPAREN
Node	TokenNameIdentifier
container	TokenNameIdentifier
,	TokenNameCOMMA
Document	TokenNameIdentifier
factory	TokenNameIdentifier
,	TokenNameCOMMA
Hashtable	TokenNameIdentifier
h	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
container	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
factory	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
Element	TokenNameIdentifier
envCheckNode	TokenNameIdentifier
=	TokenNameEQUAL
factory	TokenNameIdentifier
.	TokenNameDOT
createElement	TokenNameIdentifier
(	TokenNameLPAREN
"EnvironmentCheck"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
envCheckNode	TokenNameIdentifier
.	TokenNameDOT
setAttribute	TokenNameIdentifier
(	TokenNameLPAREN
"version"	TokenNameStringLiteral
,	TokenNameCOMMA
"$Revision$"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
container	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
envCheckNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
h	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Element	TokenNameIdentifier
statusNode	TokenNameIdentifier
=	TokenNameEQUAL
factory	TokenNameIdentifier
.	TokenNameDOT
createElement	TokenNameIdentifier
(	TokenNameLPAREN
"status"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
statusNode	TokenNameIdentifier
.	TokenNameDOT
setAttribute	TokenNameIdentifier
(	TokenNameLPAREN
"result"	TokenNameStringLiteral
,	TokenNameCOMMA
"ERROR"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
statusNode	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
factory	TokenNameIdentifier
.	TokenNameDOT
createTextNode	TokenNameIdentifier
(	TokenNameLPAREN
"appendEnvironmentReport called with null Hashtable!"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
envCheckNode	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
statusNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
;	TokenNameSEMICOLON
}	TokenNameRBRACE
boolean	TokenNameboolean
errors	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
hashNode	TokenNameIdentifier
=	TokenNameEQUAL
factory	TokenNameIdentifier
.	TokenNameDOT
createElement	TokenNameIdentifier
(	TokenNameLPAREN
"environment"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
envCheckNode	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
hashNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Enumeration	TokenNameIdentifier
keys	TokenNameIdentifier
=	TokenNameEQUAL
h	TokenNameIdentifier
.	TokenNameDOT
keys	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
keys	TokenNameIdentifier
.	TokenNameDOT
hasMoreElements	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
key	TokenNameIdentifier
=	TokenNameEQUAL
keys	TokenNameIdentifier
.	TokenNameDOT
nextElement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
keyStr	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
key	TokenNameIdentifier
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
keyStr	TokenNameIdentifier
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
FOUNDCLASSES	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
Vector	TokenNameIdentifier
v	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Vector	TokenNameIdentifier
)	TokenNameRPAREN
h	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
keyStr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
errors	TokenNameIdentifier
|=	TokenNameOR_EQUAL
appendFoundJars	TokenNameIdentifier
(	TokenNameLPAREN
hashNode	TokenNameIdentifier
,	TokenNameCOMMA
factory	TokenNameIdentifier
,	TokenNameCOMMA
v	TokenNameIdentifier
,	TokenNameCOMMA
keyStr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
keyStr	TokenNameIdentifier
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
errors	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Element	TokenNameIdentifier
node	TokenNameIdentifier
=	TokenNameEQUAL
factory	TokenNameIdentifier
.	TokenNameDOT
createElement	TokenNameIdentifier
(	TokenNameLPAREN
"item"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
node	TokenNameIdentifier
.	TokenNameDOT
setAttribute	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
keyStr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
node	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
factory	TokenNameIdentifier
.	TokenNameDOT
createTextNode	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
h	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
keyStr	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
hashNode	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
errors	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
node	TokenNameIdentifier
=	TokenNameEQUAL
factory	TokenNameIdentifier
.	TokenNameDOT
createElement	TokenNameIdentifier
(	TokenNameLPAREN
"item"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
node	TokenNameIdentifier
.	TokenNameDOT
setAttribute	TokenNameIdentifier
(	TokenNameLPAREN
"key"	TokenNameStringLiteral
,	TokenNameCOMMA
keyStr	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
node	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
factory	TokenNameIdentifier
.	TokenNameDOT
createTextNode	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
+	TokenNamePLUS
" Reading "	TokenNameStringLiteral
+	TokenNamePLUS
key	TokenNameIdentifier
+	TokenNamePLUS
" threw: "	TokenNameStringLiteral
+	TokenNamePLUS
e	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
hashNode	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
Element	TokenNameIdentifier
statusNode	TokenNameIdentifier
=	TokenNameEQUAL
factory	TokenNameIdentifier
.	TokenNameDOT
createElement	TokenNameIdentifier
(	TokenNameLPAREN
"status"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
statusNode	TokenNameIdentifier
.	TokenNameDOT
setAttribute	TokenNameIdentifier
(	TokenNameLPAREN
"result"	TokenNameStringLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
errors	TokenNameIdentifier
?	TokenNameQUESTION
"ERROR"	TokenNameStringLiteral
:	TokenNameCOLON
"OK"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
envCheckNode	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
statusNode	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
err	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"appendEnvironmentReport threw: "	TokenNameStringLiteral
+	TokenNamePLUS
e2	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
e2	TokenNameIdentifier
.	TokenNameDOT
printStackTrace	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
boolean	TokenNameboolean
appendFoundJars	TokenNameIdentifier
(	TokenNameLPAREN
Node	TokenNameIdentifier
container	TokenNameIdentifier
,	TokenNameCOMMA
Document	TokenNameIdentifier
factory	TokenNameIdentifier
,	TokenNameCOMMA
Vector	TokenNameIdentifier
v	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
desc	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
v	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
v	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
<	TokenNameLESS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
boolean	TokenNameboolean
errors	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
v	TokenNameIdentifier
.	TokenNameDOT
size	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
Hashtable	TokenNameIdentifier
subhash	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
Hashtable	TokenNameIdentifier
)	TokenNameRPAREN
v	TokenNameIdentifier
.	TokenNameDOT
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
Enumeration	TokenNameIdentifier
keys	TokenNameIdentifier
=	TokenNameEQUAL
subhash	TokenNameIdentifier
.	TokenNameDOT
keys	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
keys	TokenNameIdentifier
.	TokenNameDOT
hasMoreElements	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
)	TokenNameRPAREN
{	TokenNameLBRACE
Object	TokenNameIdentifier
key	TokenNameIdentifier
=	TokenNameEQUAL
keys	TokenNameIdentifier
.	TokenNameDOT
nextElement	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
String	TokenNameIdentifier
keyStr	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
key	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
keyStr	TokenNameIdentifier
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
errors	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Element	TokenNameIdentifier
node	TokenNameIdentifier
=	TokenNameEQUAL
factory	TokenNameIdentifier
.	TokenNameDOT
createElement	TokenNameIdentifier
(	TokenNameLPAREN
"foundJar"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
node	TokenNameIdentifier
.	TokenNameDOT
setAttribute	TokenNameIdentifier
(	TokenNameLPAREN
"name"	TokenNameStringLiteral
,	TokenNameCOMMA
keyStr	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
keyStr	TokenNameIdentifier
.	TokenNameDOT
indexOf	TokenNameIdentifier
(	TokenNameLPAREN
"-"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
node	TokenNameIdentifier
.	TokenNameDOT
setAttribute	TokenNameIdentifier
(	TokenNameLPAREN
"desc"	TokenNameStringLiteral
,	TokenNameCOMMA
keyStr	TokenNameIdentifier
.	TokenNameDOT
substring	TokenNameIdentifier
(	TokenNameLPAREN
keyStr	TokenNameIdentifier
.	TokenNameDOT
indexOf	TokenNameIdentifier
(	TokenNameLPAREN
"-"	TokenNameStringLiteral
)	TokenNameRPAREN
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
node	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
factory	TokenNameIdentifier
.	TokenNameDOT
createTextNode	TokenNameIdentifier
(	TokenNameLPAREN
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
subhash	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
keyStr	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
container	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
errors	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
Element	TokenNameIdentifier
node	TokenNameIdentifier
=	TokenNameEQUAL
factory	TokenNameIdentifier
.	TokenNameDOT
createElement	TokenNameIdentifier
(	TokenNameLPAREN
"foundJar"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
node	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
factory	TokenNameIdentifier
.	TokenNameDOT
createTextNode	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
+	TokenNamePLUS
" Reading "	TokenNameStringLiteral
+	TokenNamePLUS
key	TokenNameIdentifier
+	TokenNamePLUS
" threw: "	TokenNameStringLiteral
+	TokenNamePLUS
e	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
container	TokenNameIdentifier
.	TokenNameDOT
appendChild	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
errors	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
checkSystemProperties	TokenNameIdentifier
(	TokenNameLPAREN
Hashtable	TokenNameIdentifier
h	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
h	TokenNameIdentifier
)	TokenNameRPAREN
h	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Hashtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
String	TokenNameIdentifier
javaVersion	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"java.version"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"java.version"	TokenNameStringLiteral
,	TokenNameCOMMA
javaVersion	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
SecurityException	TokenNameIdentifier
se	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"java.version"	TokenNameStringLiteral
,	TokenNameCOMMA
"WARNING: SecurityException thrown accessing system version properties"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
String	TokenNameIdentifier
cp	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"java.class.path"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"java.class.path"	TokenNameStringLiteral
,	TokenNameCOMMA
cp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Vector	TokenNameIdentifier
classpathJars	TokenNameIdentifier
=	TokenNameEQUAL
checkPathForJars	TokenNameIdentifier
(	TokenNameLPAREN
cp	TokenNameIdentifier
,	TokenNameCOMMA
jarNames	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
classpathJars	TokenNameIdentifier
)	TokenNameRPAREN
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
FOUNDCLASSES	TokenNameIdentifier
+	TokenNamePLUS
"java.class.path"	TokenNameStringLiteral
,	TokenNameCOMMA
classpathJars	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
othercp	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"sun.boot.class.path"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
othercp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"sun.boot.class.path"	TokenNameStringLiteral
,	TokenNameCOMMA
othercp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
classpathJars	TokenNameIdentifier
=	TokenNameEQUAL
checkPathForJars	TokenNameIdentifier
(	TokenNameLPAREN
othercp	TokenNameIdentifier
,	TokenNameCOMMA
jarNames	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
classpathJars	TokenNameIdentifier
)	TokenNameRPAREN
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
FOUNDCLASSES	TokenNameIdentifier
+	TokenNamePLUS
"sun.boot.class.path"	TokenNameStringLiteral
,	TokenNameCOMMA
classpathJars	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
othercp	TokenNameIdentifier
=	TokenNameEQUAL
System	TokenNameIdentifier
.	TokenNameDOT
getProperty	TokenNameIdentifier
(	TokenNameLPAREN
"java.ext.dirs"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
othercp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"java.ext.dirs"	TokenNameStringLiteral
,	TokenNameCOMMA
othercp	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
classpathJars	TokenNameIdentifier
=	TokenNameEQUAL
checkPathForJars	TokenNameIdentifier
(	TokenNameLPAREN
othercp	TokenNameIdentifier
,	TokenNameCOMMA
jarNames	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
classpathJars	TokenNameIdentifier
)	TokenNameRPAREN
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
FOUNDCLASSES	TokenNameIdentifier
+	TokenNamePLUS
"java.ext.dirs"	TokenNameStringLiteral
,	TokenNameCOMMA
classpathJars	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
SecurityException	TokenNameIdentifier
se2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
"java.class.path"	TokenNameStringLiteral
,	TokenNameCOMMA
"WARNING: SecurityException thrown accessing system classpath properties"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
Vector	TokenNameIdentifier
checkPathForJars	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
cp	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
jars	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
cp	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
jars	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
==	TokenNameEQUAL_EQUAL
cp	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
==	TokenNameEQUAL_EQUAL
jars	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
Vector	TokenNameIdentifier
v	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Vector	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringTokenizer	TokenNameIdentifier
st	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringTokenizer	TokenNameIdentifier
(	TokenNameLPAREN
cp	TokenNameIdentifier
,	TokenNameCOMMA
File	TokenNameIdentifier
.	TokenNameDOT
pathSeparator	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
st	TokenNameIdentifier
.	TokenNameDOT
hasMoreTokens	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
filename	TokenNameIdentifier
=	TokenNameEQUAL
st	TokenNameIdentifier
.	TokenNameDOT
nextToken	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
jars	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
filename	TokenNameIdentifier
.	TokenNameDOT
indexOf	TokenNameIdentifier
(	TokenNameLPAREN
jars	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
>	TokenNameGREATER
-	TokenNameMINUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
File	TokenNameIdentifier
f	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
File	TokenNameIdentifier
(	TokenNameLPAREN
filename	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
f	TokenNameIdentifier
.	TokenNameDOT
exists	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
Hashtable	TokenNameIdentifier
h	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Hashtable	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
jars	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
"-path"	TokenNameStringLiteral
,	TokenNameCOMMA
f	TokenNameIdentifier
.	TokenNameDOT
getAbsolutePath	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
(	TokenNameLPAREN
"xalan.jar"	TokenNameStringLiteral
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
jars	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
jars	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
"-apparent.version"	TokenNameStringLiteral
,	TokenNameCOMMA
getApparentVersion	TokenNameIdentifier
(	TokenNameLPAREN
jars	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
,	TokenNameCOMMA
f	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
v	TokenNameIdentifier
.	TokenNameDOT
addElement	TokenNameIdentifier
(	TokenNameLPAREN
h	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
Hashtable	TokenNameIdentifier
h	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Hashtable	TokenNameIdentifier
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
jars	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
"-path"	TokenNameStringLiteral
,	TokenNameCOMMA
WARNING	TokenNameIdentifier
+	TokenNamePLUS
" Classpath entry: "	TokenNameStringLiteral
+	TokenNamePLUS
filename	TokenNameIdentifier
+	TokenNamePLUS
" does not exist"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
jars	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
+	TokenNamePLUS
"-apparent.version"	TokenNameStringLiteral
,	TokenNameCOMMA
CLASS_NOTPRESENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
v	TokenNameIdentifier
.	TokenNameDOT
addElement	TokenNameIdentifier
(	TokenNameLPAREN
h	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
v	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
String	TokenNameIdentifier
getApparentVersion	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
jarName	TokenNameIdentifier
,	TokenNameCOMMA
long	TokenNamelong
jarSize	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
foundSize	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
jarVersions	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
jarSize	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
foundSize	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
foundSize	TokenNameIdentifier
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
jarName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
foundSize	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
"xerces.jar"	TokenNameStringLiteral
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
jarName	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
"xercesImpl.jar"	TokenNameStringLiteral
.	TokenNameDOT
equalsIgnoreCase	TokenNameIdentifier
(	TokenNameLPAREN
jarName	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
jarName	TokenNameIdentifier
+	TokenNamePLUS
" "	TokenNameStringLiteral
+	TokenNamePLUS
WARNING	TokenNameIdentifier
+	TokenNamePLUS
CLASS_PRESENT	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
jarName	TokenNameIdentifier
+	TokenNamePLUS
" "	TokenNameStringLiteral
+	TokenNamePLUS
CLASS_PRESENT	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
checkJAXPVersion	TokenNameIdentifier
(	TokenNameLPAREN
Hashtable	TokenNameIdentifier
h	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
h	TokenNameIdentifier
)	TokenNameRPAREN
h	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Hashtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
Class	TokenNameIdentifier
noArgs	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
Class	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
Class	TokenNameIdentifier
clazz	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
final	TokenNamefinal
String	TokenNameIdentifier
JAXP1_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"javax.xml.parsers.DocumentBuilder"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
JAXP11_METHOD	TokenNameIdentifier
=	TokenNameEQUAL
"getDOMImplementation"	TokenNameStringLiteral
;	TokenNameSEMICOLON
clazz	TokenNameIdentifier
=	TokenNameEQUAL
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findProviderClass	TokenNameIdentifier
(	TokenNameLPAREN
JAXP1_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Method	TokenNameIdentifier
method	TokenNameIdentifier
=	TokenNameEQUAL
clazz	TokenNameIdentifier
.	TokenNameDOT
getMethod	TokenNameIdentifier
(	TokenNameLPAREN
JAXP11_METHOD	TokenNameIdentifier
,	TokenNameCOMMA
noArgs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"JAXP"	TokenNameStringLiteral
,	TokenNameCOMMA
"1.1 or higher"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
clazz	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
+	TokenNamePLUS
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"JAXP"	TokenNameStringLiteral
,	TokenNameCOMMA
"1.0.1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
,	TokenNameCOMMA
ERROR_FOUND	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
+	TokenNamePLUS
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"JAXP"	TokenNameStringLiteral
,	TokenNameCOMMA
CLASS_NOTPRESENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
,	TokenNameCOMMA
ERROR_FOUND	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
checkProcessorVersion	TokenNameIdentifier
(	TokenNameLPAREN
Hashtable	TokenNameIdentifier
h	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
h	TokenNameIdentifier
)	TokenNameRPAREN
h	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Hashtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
final	TokenNamefinal
String	TokenNameIdentifier
XALAN1_VERSION_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"org.apache.xalan.xslt.XSLProcessorVersion"	TokenNameStringLiteral
;	TokenNameSEMICOLON
Class	TokenNameIdentifier
clazz	TokenNameIdentifier
=	TokenNameEQUAL
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findProviderClass	TokenNameIdentifier
(	TokenNameLPAREN
XALAN1_VERSION_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringBuffer	TokenNameIdentifier
buf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringBuffer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Field	TokenNameIdentifier
f	TokenNameIdentifier
=	TokenNameEQUAL
clazz	TokenNameIdentifier
.	TokenNameDOT
getField	TokenNameIdentifier
(	TokenNameLPAREN
"PRODUCT"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
f	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
';'	TokenNameCharacterLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
f	TokenNameIdentifier
=	TokenNameEQUAL
clazz	TokenNameIdentifier
.	TokenNameDOT
getField	TokenNameIdentifier
(	TokenNameLPAREN
"LANGUAGE"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
f	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
';'	TokenNameCharacterLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
f	TokenNameIdentifier
=	TokenNameEQUAL
clazz	TokenNameIdentifier
.	TokenNameDOT
getField	TokenNameIdentifier
(	TokenNameLPAREN
"S_VERSION"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
f	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
';'	TokenNameCharacterLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"xalan1"	TokenNameStringLiteral
,	TokenNameCOMMA
buf	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e1	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"xalan1"	TokenNameStringLiteral
,	TokenNameCOMMA
CLASS_NOTPRESENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
final	TokenNamefinal
String	TokenNameIdentifier
XALAN2_VERSION_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"org.apache.xalan.processor.XSLProcessorVersion"	TokenNameStringLiteral
;	TokenNameSEMICOLON
Class	TokenNameIdentifier
clazz	TokenNameIdentifier
=	TokenNameEQUAL
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findProviderClass	TokenNameIdentifier
(	TokenNameLPAREN
XALAN2_VERSION_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StringBuffer	TokenNameIdentifier
buf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringBuffer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Field	TokenNameIdentifier
f	TokenNameIdentifier
=	TokenNameEQUAL
clazz	TokenNameIdentifier
.	TokenNameDOT
getField	TokenNameIdentifier
(	TokenNameLPAREN
"S_VERSION"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
f	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"xalan2x"	TokenNameStringLiteral
,	TokenNameCOMMA
buf	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"xalan2x"	TokenNameStringLiteral
,	TokenNameCOMMA
CLASS_NOTPRESENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
final	TokenNamefinal
String	TokenNameIdentifier
XALAN2_2_VERSION_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"org.apache.xalan.Version"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
XALAN2_2_VERSION_METHOD	TokenNameIdentifier
=	TokenNameEQUAL
"getVersion"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
Class	TokenNameIdentifier
noArgs	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
Class	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
Class	TokenNameIdentifier
clazz	TokenNameIdentifier
=	TokenNameEQUAL
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findProviderClass	TokenNameIdentifier
(	TokenNameLPAREN
XALAN2_2_VERSION_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Method	TokenNameIdentifier
method	TokenNameIdentifier
=	TokenNameEQUAL
clazz	TokenNameIdentifier
.	TokenNameDOT
getMethod	TokenNameIdentifier
(	TokenNameLPAREN
XALAN2_2_VERSION_METHOD	TokenNameIdentifier
,	TokenNameCOMMA
noArgs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Object	TokenNameIdentifier
returnValue	TokenNameIdentifier
=	TokenNameEQUAL
method	TokenNameIdentifier
.	TokenNameDOT
invoke	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"xalan2_2"	TokenNameStringLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
returnValue	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"xalan2_2"	TokenNameStringLiteral
,	TokenNameCOMMA
CLASS_NOTPRESENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
checkParserVersion	TokenNameIdentifier
(	TokenNameLPAREN
Hashtable	TokenNameIdentifier
h	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
h	TokenNameIdentifier
)	TokenNameRPAREN
h	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Hashtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
final	TokenNamefinal
String	TokenNameIdentifier
XERCES1_VERSION_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"org.apache.xerces.framework.Version"	TokenNameStringLiteral
;	TokenNameSEMICOLON
Class	TokenNameIdentifier
clazz	TokenNameIdentifier
=	TokenNameEQUAL
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findProviderClass	TokenNameIdentifier
(	TokenNameLPAREN
XERCES1_VERSION_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Field	TokenNameIdentifier
f	TokenNameIdentifier
=	TokenNameEQUAL
clazz	TokenNameIdentifier
.	TokenNameDOT
getField	TokenNameIdentifier
(	TokenNameLPAREN
"fVersion"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
parserVersion	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
f	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"xerces1"	TokenNameStringLiteral
,	TokenNameCOMMA
parserVersion	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"xerces1"	TokenNameStringLiteral
,	TokenNameCOMMA
CLASS_NOTPRESENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
final	TokenNamefinal
String	TokenNameIdentifier
XERCES2_VERSION_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"org.apache.xerces.impl.Version"	TokenNameStringLiteral
;	TokenNameSEMICOLON
Class	TokenNameIdentifier
clazz	TokenNameIdentifier
=	TokenNameEQUAL
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findProviderClass	TokenNameIdentifier
(	TokenNameLPAREN
XERCES2_VERSION_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Field	TokenNameIdentifier
f	TokenNameIdentifier
=	TokenNameEQUAL
clazz	TokenNameIdentifier
.	TokenNameDOT
getField	TokenNameIdentifier
(	TokenNameLPAREN
"fVersion"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
parserVersion	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
f	TokenNameIdentifier
.	TokenNameDOT
get	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"xerces2"	TokenNameStringLiteral
,	TokenNameCOMMA
parserVersion	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"xerces2"	TokenNameStringLiteral
,	TokenNameCOMMA
CLASS_NOTPRESENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
try	TokenNametry
{	TokenNameLBRACE
final	TokenNamefinal
String	TokenNameIdentifier
CRIMSON_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"org.apache.crimson.parser.Parser2"	TokenNameStringLiteral
;	TokenNameSEMICOLON
Class	TokenNameIdentifier
clazz	TokenNameIdentifier
=	TokenNameEQUAL
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findProviderClass	TokenNameIdentifier
(	TokenNameLPAREN
CRIMSON_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"crimson"	TokenNameStringLiteral
,	TokenNameCOMMA
CLASS_PRESENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"crimson"	TokenNameStringLiteral
,	TokenNameCOMMA
CLASS_NOTPRESENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
checkAntVersion	TokenNameIdentifier
(	TokenNameLPAREN
Hashtable	TokenNameIdentifier
h	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
h	TokenNameIdentifier
)	TokenNameRPAREN
h	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Hashtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
final	TokenNamefinal
String	TokenNameIdentifier
ANT_VERSION_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"org.apache.tools.ant.Main"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
ANT_VERSION_METHOD	TokenNameIdentifier
=	TokenNameEQUAL
"getAntVersion"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
Class	TokenNameIdentifier
noArgs	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
Class	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
Class	TokenNameIdentifier
clazz	TokenNameIdentifier
=	TokenNameEQUAL
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findProviderClass	TokenNameIdentifier
(	TokenNameLPAREN
ANT_VERSION_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Method	TokenNameIdentifier
method	TokenNameIdentifier
=	TokenNameEQUAL
clazz	TokenNameIdentifier
.	TokenNameDOT
getMethod	TokenNameIdentifier
(	TokenNameLPAREN
ANT_VERSION_METHOD	TokenNameIdentifier
,	TokenNameCOMMA
noArgs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Object	TokenNameIdentifier
returnValue	TokenNameIdentifier
=	TokenNameEQUAL
method	TokenNameIdentifier
.	TokenNameDOT
invoke	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
0	TokenNameIntegerLiteral
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"ant"	TokenNameStringLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
String	TokenNameIdentifier
)	TokenNameRPAREN
returnValue	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"ant"	TokenNameStringLiteral
,	TokenNameCOMMA
CLASS_NOTPRESENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
checkDOMVersion	TokenNameIdentifier
(	TokenNameLPAREN
Hashtable	TokenNameIdentifier
h	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
h	TokenNameIdentifier
)	TokenNameRPAREN
h	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Hashtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
DOM_LEVEL2_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"org.w3c.dom.Document"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
DOM_LEVEL2_METHOD	TokenNameIdentifier
=	TokenNameEQUAL
"createElementNS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
DOM_LEVEL2WD_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"org.w3c.dom.Node"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
DOM_LEVEL2WD_METHOD	TokenNameIdentifier
=	TokenNameEQUAL
"supported"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
DOM_LEVEL2FD_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"org.w3c.dom.Node"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
DOM_LEVEL2FD_METHOD	TokenNameIdentifier
=	TokenNameEQUAL
"isSupported"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
Class	TokenNameIdentifier
twoStringArgs	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
{	TokenNameLBRACE
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
,	TokenNameCOMMA
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
}	TokenNameRBRACE
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
Class	TokenNameIdentifier
clazz	TokenNameIdentifier
=	TokenNameEQUAL
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findProviderClass	TokenNameIdentifier
(	TokenNameLPAREN
DOM_LEVEL2_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Method	TokenNameIdentifier
method	TokenNameIdentifier
=	TokenNameEQUAL
clazz	TokenNameIdentifier
.	TokenNameDOT
getMethod	TokenNameIdentifier
(	TokenNameLPAREN
DOM_LEVEL2_METHOD	TokenNameIdentifier
,	TokenNameCOMMA
twoStringArgs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"DOM"	TokenNameStringLiteral
,	TokenNameCOMMA
"2.0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
clazz	TokenNameIdentifier
=	TokenNameEQUAL
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findProviderClass	TokenNameIdentifier
(	TokenNameLPAREN
DOM_LEVEL2WD_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
method	TokenNameIdentifier
=	TokenNameEQUAL
clazz	TokenNameIdentifier
.	TokenNameDOT
getMethod	TokenNameIdentifier
(	TokenNameLPAREN
DOM_LEVEL2WD_METHOD	TokenNameIdentifier
,	TokenNameCOMMA
twoStringArgs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
+	TokenNamePLUS
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"DOM.draftlevel"	TokenNameStringLiteral
,	TokenNameCOMMA
"2.0wd"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
,	TokenNameCOMMA
ERROR_FOUND	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
clazz	TokenNameIdentifier
=	TokenNameEQUAL
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findProviderClass	TokenNameIdentifier
(	TokenNameLPAREN
DOM_LEVEL2FD_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
method	TokenNameIdentifier
=	TokenNameEQUAL
clazz	TokenNameIdentifier
.	TokenNameDOT
getMethod	TokenNameIdentifier
(	TokenNameLPAREN
DOM_LEVEL2FD_METHOD	TokenNameIdentifier
,	TokenNameCOMMA
twoStringArgs	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"DOM.draftlevel"	TokenNameStringLiteral
,	TokenNameCOMMA
"2.0fd"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e3	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
+	TokenNamePLUS
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"DOM.draftlevel"	TokenNameStringLiteral
,	TokenNameCOMMA
"2.0unknown"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
,	TokenNameCOMMA
ERROR_FOUND	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
+	TokenNamePLUS
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"DOM"	TokenNameStringLiteral
,	TokenNameCOMMA
"ERROR attempting to load DOM level 2 class: "	TokenNameStringLiteral
+	TokenNamePLUS
e	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
,	TokenNameCOMMA
ERROR_FOUND	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
protected	TokenNameprotected
void	TokenNamevoid
checkSAXVersion	TokenNameIdentifier
(	TokenNameLPAREN
Hashtable	TokenNameIdentifier
h	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
h	TokenNameIdentifier
)	TokenNameRPAREN
h	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Hashtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
SAX_VERSION1_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"org.xml.sax.Parser"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
SAX_VERSION1_METHOD	TokenNameIdentifier
=	TokenNameEQUAL
"parse"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
SAX_VERSION2_CLASS	TokenNameIdentifier
=	TokenNameEQUAL
"org.xml.sax.XMLReader"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
SAX_VERSION2_METHOD	TokenNameIdentifier
=	TokenNameEQUAL
"parse"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
SAX_VERSION2BETA_CLASSNF	TokenNameIdentifier
=	TokenNameEQUAL
"org.xml.sax.helpers.AttributesImpl"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
String	TokenNameIdentifier
SAX_VERSION2BETA_METHODNF	TokenNameIdentifier
=	TokenNameEQUAL
"setAttributes"	TokenNameStringLiteral
;	TokenNameSEMICOLON
final	TokenNamefinal
Class	TokenNameIdentifier
oneStringArg	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
{	TokenNameLBRACE
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
}	TokenNameRBRACE
;	TokenNameSEMICOLON
final	TokenNamefinal
Class	TokenNameIdentifier
attributesArg	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
{	TokenNameLBRACE
org	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
sax	TokenNameIdentifier
.	TokenNameDOT
Attributes	TokenNameIdentifier
.	TokenNameDOT
class	TokenNameclass
}	TokenNameRBRACE
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
Class	TokenNameIdentifier
clazz	TokenNameIdentifier
=	TokenNameEQUAL
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findProviderClass	TokenNameIdentifier
(	TokenNameLPAREN
SAX_VERSION2BETA_CLASSNF	TokenNameIdentifier
,	TokenNameCOMMA
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Method	TokenNameIdentifier
method	TokenNameIdentifier
=	TokenNameEQUAL
clazz	TokenNameIdentifier
.	TokenNameDOT
getMethod	TokenNameIdentifier
(	TokenNameLPAREN
SAX_VERSION2BETA_METHODNF	TokenNameIdentifier
,	TokenNameCOMMA
attributesArg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"SAX"	TokenNameStringLiteral
,	TokenNameCOMMA
"2.0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
+	TokenNamePLUS
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"SAX"	TokenNameStringLiteral
,	TokenNameCOMMA
"ERROR attempting to load SAX version 2 class: "	TokenNameStringLiteral
+	TokenNamePLUS
e	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
,	TokenNameCOMMA
ERROR_FOUND	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
Class	TokenNameIdentifier
clazz	TokenNameIdentifier
=	TokenNameEQUAL
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findProviderClass	TokenNameIdentifier
(	TokenNameLPAREN
SAX_VERSION2_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Method	TokenNameIdentifier
method	TokenNameIdentifier
=	TokenNameEQUAL
clazz	TokenNameIdentifier
.	TokenNameDOT
getMethod	TokenNameIdentifier
(	TokenNameLPAREN
SAX_VERSION2_METHOD	TokenNameIdentifier
,	TokenNameCOMMA
oneStringArg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"SAX-backlevel"	TokenNameStringLiteral
,	TokenNameCOMMA
"2.0beta2-or-earlier"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
+	TokenNamePLUS
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"SAX"	TokenNameStringLiteral
,	TokenNameCOMMA
"ERROR attempting to load SAX version 2 class: "	TokenNameStringLiteral
+	TokenNamePLUS
e	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
,	TokenNameCOMMA
ERROR_FOUND	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
Class	TokenNameIdentifier
clazz	TokenNameIdentifier
=	TokenNameEQUAL
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findProviderClass	TokenNameIdentifier
(	TokenNameLPAREN
SAX_VERSION1_CLASS	TokenNameIdentifier
,	TokenNameCOMMA
ObjectFactory	TokenNameIdentifier
.	TokenNameDOT
findClassLoader	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Method	TokenNameIdentifier
method	TokenNameIdentifier
=	TokenNameEQUAL
clazz	TokenNameIdentifier
.	TokenNameDOT
getMethod	TokenNameIdentifier
(	TokenNameLPAREN
SAX_VERSION1_METHOD	TokenNameIdentifier
,	TokenNameCOMMA
oneStringArg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"SAX-backlevel"	TokenNameStringLiteral
,	TokenNameCOMMA
"1.0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e3	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
h	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
ERROR	TokenNameIdentifier
+	TokenNamePLUS
VERSION	TokenNameIdentifier
+	TokenNamePLUS
"SAX-backlevel"	TokenNameStringLiteral
,	TokenNameCOMMA
"ERROR attempting to load SAX version 1 class: "	TokenNameStringLiteral
+	TokenNamePLUS
e3	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
Hashtable	TokenNameIdentifier
jarVersions	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Hashtable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
857192	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_1_1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
440237	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_1_2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
436094	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_1_2_1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
426249	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_1_2_2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
702536	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_2_0_0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
720930	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_2_0_1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
732330	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_2_1_0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
872241	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_2_2_D10"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
882739	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_2_2_D11"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
923866	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_2_2_0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
905872	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_2_3_D1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
906122	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_2_3_0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
906248	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_2_3_1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
983377	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_2_4_D1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
997276	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_2_4_0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1031036	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from xalan-j_2_4_1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
596540	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xsltc.jar from xalan-j_2_2_0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
590247	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xsltc.jar from xalan-j_2_3_D1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
589914	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xsltc.jar from xalan-j_2_3_0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
589915	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xsltc.jar from xalan-j_2_3_1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1306667	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xsltc.jar from xalan-j_2_4_D1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1328227	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xsltc.jar from xalan-j_2_4_0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1344009	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xsltc.jar from xalan-j_2_4_1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1348361	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xsltc.jar from xalan-j_2_5_D1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1268634	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xsltc.jar-bundled from xalan-j_2_3_0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
100196	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xml-apis.jar from xalan-j_2_2_0 or xalan-j_2_3_D1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
108484	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xml-apis.jar from xalan-j_2_3_0, or xalan-j_2_3_1 from xml-commons-1.0.b2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
109049	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xml-apis.jar from xalan-j_2_4_0 from xml-commons RIVERCOURT1 branch"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
113749	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xml-apis.jar from xalan-j_2_4_1 from factoryfinder-build of xml-commons RIVERCOURT1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
124704	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xml-apis.jar from tck-jaxp-1_2_0 branch of xml-commons"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
124724	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xml-apis.jar from tck-jaxp-1_2_0 branch of xml-commons, tag: xml-commons-external_1_2_01"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
194205	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xml-apis.jar from head branch of xml-commons, tag: xml-commons-external_1_3_02"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
424490	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from Xerces Tools releases - ERROR:DO NOT USE!"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1591855	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xerces.jar from xalan-j_1_1 from xerces-1..."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1498679	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xerces.jar from xalan-j_1_2 from xerces-1_2_0.bin"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1484896	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xerces.jar from xalan-j_1_2_1 from xerces-1_2_1.bin"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
804460	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xerces.jar from xalan-j_1_2_2 from xerces-1_2_2.bin"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1499244	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xerces.jar from xalan-j_2_0_0 from xerces-1_2_3.bin"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1605266	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xerces.jar from xalan-j_2_0_1 from xerces-1_3_0.bin"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
904030	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xerces.jar from xalan-j_2_1_0 from xerces-1_4.bin"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
904030	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xerces.jar from xerces-1_4_0.bin"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1802885	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xerces.jar from xerces-1_4_2.bin"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1734594	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xerces.jar from Xerces-J-bin.2.0.0.beta3"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1808883	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xerces.jar from xalan-j_2_2_D10,D11,D12 or xerces-1_4_3.bin"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1812019	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xerces.jar from xalan-j_2_2_0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1720292	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xercesImpl.jar from xalan-j_2_3_D1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1730053	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xercesImpl.jar from xalan-j_2_3_0 or xalan-j_2_3_1 from xerces-2_0_0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1728861	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xercesImpl.jar from xalan-j_2_4_D1 from xerces-2_0_1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
972027	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xercesImpl.jar from xalan-j_2_4_0 from xerces-2_1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
831587	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xercesImpl.jar from xalan-j_2_4_1 from xerces-2_2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
891817	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xercesImpl.jar from xalan-j_2_5_D1 from xerces-2_3"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
895924	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xercesImpl.jar from xerces-2_4"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1010806	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xercesImpl.jar from Xerces-J-bin.2.6.2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
1203860	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xercesImpl.jar from Xerces-J-bin.2.7.1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
37485	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalanj1compat.jar from xalan-j_2_0_0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
38100	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalanj1compat.jar from xalan-j_2_0_1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
18779	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalanservlet.jar from xalan-j_2_0_0"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
21453	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalanservlet.jar from xalan-j_2_0_1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
24826	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalanservlet.jar from xalan-j_2_3_1 or xalan-j_2_4_1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
24831	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalanservlet.jar from xalan-j_2_4_1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
5618	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"jaxp.jar from jaxp1.0.1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
136133	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"parser.jar from jaxp1.0.1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
28404	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"jaxp.jar from jaxp-1.1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
187162	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"crimson.jar from jaxp-1.1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
801714	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xalan.jar from jaxp-1.1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
196399	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"crimson.jar from crimson-1.1.1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
33323	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"jaxp.jar from crimson-1.1.1 or jakarta-ant-1.4.1b1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
152717	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"crimson.jar from crimson-1.1.2beta2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
88143	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"xml-apis.jar from crimson-1.1.2beta2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
206384	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"crimson.jar from crimson-1.1.3 or jakarta-ant-1.4.1b1"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
136198	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"parser.jar from jakarta-ant-1.3 or 1.2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
jarVersions	TokenNameIdentifier
.	TokenNameDOT
put	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Long	TokenNameIdentifier
(	TokenNameLPAREN
5537	TokenNameIntegerLiteral
)	TokenNameRPAREN
,	TokenNameCOMMA
"jaxp.jar from jakarta-ant-1.3 or 1.2"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
PrintWriter	TokenNameIdentifier
outWriter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
PrintWriter	TokenNameIdentifier
(	TokenNameLPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
protected	TokenNameprotected
void	TokenNamevoid
logMsg	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
s	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
outWriter	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
