package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
domapi	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
TransformerException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
XPath	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
objects	TokenNameIdentifier
.	TokenNameDOT
XObject	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
res	TokenNameIdentifier
.	TokenNameDOT
XPATHErrorResources	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
res	TokenNameIdentifier
.	TokenNameDOT
XPATHMessages	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
DOMException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
Node	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
NodeList	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
events	TokenNameIdentifier
.	TokenNameDOT
Event	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
events	TokenNameIdentifier
.	TokenNameDOT
EventListener	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
events	TokenNameIdentifier
.	TokenNameDOT
EventTarget	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
traversal	TokenNameIdentifier
.	TokenNameDOT
NodeIterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
XPathException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
w3c	TokenNameIdentifier
.	TokenNameDOT
dom	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
XPathResult	TokenNameIdentifier
;	TokenNameSEMICOLON
class	TokenNameclass
XPathResultImpl	TokenNameIdentifier
implements	TokenNameimplements
XPathResult	TokenNameIdentifier
,	TokenNameCOMMA
EventListener	TokenNameIdentifier
{	TokenNameLBRACE
final	TokenNamefinal
private	TokenNameprivate
XObject	TokenNameIdentifier
m_resultObj	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
private	TokenNameprivate
XPath	TokenNameIdentifier
m_xpath	TokenNameIdentifier
;	TokenNameSEMICOLON
final	TokenNamefinal
private	TokenNameprivate
short	TokenNameshort
m_resultType	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
boolean	TokenNameboolean
m_isInvalidIteratorState	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
final	TokenNamefinal
private	TokenNameprivate
Node	TokenNameIdentifier
m_contextNode	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
NodeIterator	TokenNameIdentifier
m_iterator	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
;	TokenNameSEMICOLON
private	TokenNameprivate
NodeList	TokenNameIdentifier
m_list	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
XPathResultImpl	TokenNameIdentifier
(	TokenNameLPAREN
short	TokenNameshort
type	TokenNameIdentifier
,	TokenNameCOMMA
XObject	TokenNameIdentifier
result	TokenNameIdentifier
,	TokenNameCOMMA
Node	TokenNameIdentifier
contextNode	TokenNameIdentifier
,	TokenNameCOMMA
XPath	TokenNameIdentifier
xpath	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isValidType	TokenNameIdentifier
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
fmsg	TokenNameIdentifier
=	TokenNameEQUAL
XPATHMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_INVALID_XPATH_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
new	TokenNamenew
Integer	TokenNameIdentifier
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
XPathException	TokenNameIdentifier
(	TokenNameLPAREN
XPathException	TokenNameIdentifier
.	TokenNameDOT
TYPE_ERR	TokenNameIdentifier
,	TokenNameCOMMA
fmsg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
result	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
fmsg	TokenNameIdentifier
=	TokenNameEQUAL
XPATHMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_EMPTY_XPATH_RESULT	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
XPathException	TokenNameIdentifier
(	TokenNameLPAREN
XPathException	TokenNameIdentifier
.	TokenNameDOT
INVALID_EXPRESSION_ERR	TokenNameIdentifier
,	TokenNameCOMMA
fmsg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
this	TokenNamethis
.	TokenNameDOT
m_resultObj	TokenNameIdentifier
=	TokenNameEQUAL
result	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
m_contextNode	TokenNameIdentifier
=	TokenNameEQUAL
contextNode	TokenNameIdentifier
;	TokenNameSEMICOLON
this	TokenNamethis
.	TokenNameDOT
m_xpath	TokenNameIdentifier
=	TokenNameEQUAL
xpath	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
type	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ANY_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
m_resultType	TokenNameIdentifier
=	TokenNameEQUAL
getTypeFromXObject	TokenNameIdentifier
(	TokenNameLPAREN
result	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
this	TokenNamethis
.	TokenNameDOT
m_resultType	TokenNameIdentifier
=	TokenNameEQUAL
type	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
XPathResult	TokenNameIdentifier
.	TokenNameDOT
ORDERED_NODE_ITERATOR_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
XPathResult	TokenNameIdentifier
.	TokenNameDOT
UNORDERED_NODE_ITERATOR_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
addEventListener	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ORDERED_NODE_ITERATOR_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
UNORDERED_NODE_ITERATOR_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ANY_UNORDERED_NODE_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
FIRST_ORDERED_NODE_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
m_iterator	TokenNameIdentifier
=	TokenNameEQUAL
m_resultObj	TokenNameIdentifier
.	TokenNameDOT
nodeset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
TransformerException	TokenNameIdentifier
te	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
fmsg	TokenNameIdentifier
=	TokenNameEQUAL
XPATHMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_INCOMPATIBLE_TYPES	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
m_xpath	TokenNameIdentifier
.	TokenNameDOT
getPatternString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
getTypeString	TokenNameIdentifier
(	TokenNameLPAREN
getTypeFromXObject	TokenNameIdentifier
(	TokenNameLPAREN
m_resultObj	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
getTypeString	TokenNameIdentifier
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
XPathException	TokenNameIdentifier
(	TokenNameLPAREN
XPathException	TokenNameIdentifier
.	TokenNameDOT
TYPE_ERR	TokenNameIdentifier
,	TokenNameCOMMA
fmsg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
UNORDERED_NODE_SNAPSHOT_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
ORDERED_NODE_SNAPSHOT_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
m_list	TokenNameIdentifier
=	TokenNameEQUAL
m_resultObj	TokenNameIdentifier
.	TokenNameDOT
nodelist	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
TransformerException	TokenNameIdentifier
te	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
fmsg	TokenNameIdentifier
=	TokenNameEQUAL
XPATHMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_INCOMPATIBLE_TYPES	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
m_xpath	TokenNameIdentifier
.	TokenNameDOT
getPatternString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
getTypeString	TokenNameIdentifier
(	TokenNameLPAREN
getTypeFromXObject	TokenNameIdentifier
(	TokenNameLPAREN
m_resultObj	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
getTypeString	TokenNameIdentifier
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
XPathException	TokenNameIdentifier
(	TokenNameLPAREN
XPathException	TokenNameIdentifier
.	TokenNameDOT
TYPE_ERR	TokenNameIdentifier
,	TokenNameCOMMA
fmsg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
short	TokenNameshort
getResultType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
m_resultType	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
double	TokenNamedouble
getNumberValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
XPathException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
getResultType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
NUMBER_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
fmsg	TokenNameIdentifier
=	TokenNameEQUAL
XPATHMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
m_xpath	TokenNameIdentifier
.	TokenNameDOT
getPatternString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
getTypeString	TokenNameIdentifier
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
XPathException	TokenNameIdentifier
(	TokenNameLPAREN
XPathException	TokenNameIdentifier
.	TokenNameDOT
TYPE_ERR	TokenNameIdentifier
,	TokenNameCOMMA
fmsg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
m_resultObj	TokenNameIdentifier
.	TokenNameDOT
num	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
XPathException	TokenNameIdentifier
(	TokenNameLPAREN
XPathException	TokenNameIdentifier
.	TokenNameDOT
TYPE_ERR	TokenNameIdentifier
,	TokenNameCOMMA
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
String	TokenNameIdentifier
getStringValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
XPathException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
getResultType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
STRING_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
fmsg	TokenNameIdentifier
=	TokenNameEQUAL
XPATHMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_CANT_CONVERT_TO_STRING	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
m_xpath	TokenNameIdentifier
.	TokenNameDOT
getPatternString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
m_resultObj	TokenNameIdentifier
.	TokenNameDOT
getTypeString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
XPathException	TokenNameIdentifier
(	TokenNameLPAREN
XPathException	TokenNameIdentifier
.	TokenNameDOT
TYPE_ERR	TokenNameIdentifier
,	TokenNameCOMMA
fmsg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
m_resultObj	TokenNameIdentifier
.	TokenNameDOT
str	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
Exception	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
XPathException	TokenNameIdentifier
(	TokenNameLPAREN
XPathException	TokenNameIdentifier
.	TokenNameDOT
TYPE_ERR	TokenNameIdentifier
,	TokenNameCOMMA
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
getBooleanValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
XPathException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
getResultType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
BOOLEAN_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
fmsg	TokenNameIdentifier
=	TokenNameEQUAL
XPATHMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_CANT_CONVERT_TO_BOOLEAN	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
m_xpath	TokenNameIdentifier
.	TokenNameDOT
getPatternString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
getTypeString	TokenNameIdentifier
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
XPathException	TokenNameIdentifier
(	TokenNameLPAREN
XPathException	TokenNameIdentifier
.	TokenNameDOT
TYPE_ERR	TokenNameIdentifier
,	TokenNameCOMMA
fmsg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
m_resultObj	TokenNameIdentifier
.	TokenNameDOT
bool	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
TransformerException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
XPathException	TokenNameIdentifier
(	TokenNameLPAREN
XPathException	TokenNameIdentifier
.	TokenNameDOT
TYPE_ERR	TokenNameIdentifier
,	TokenNameCOMMA
e	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
Node	TokenNameIdentifier
getSingleNodeValue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
XPathException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
ANY_UNORDERED_NODE_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
FIRST_ORDERED_NODE_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
fmsg	TokenNameIdentifier
=	TokenNameEQUAL
XPATHMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_CANT_CONVERT_TO_SINGLENODE	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
m_xpath	TokenNameIdentifier
.	TokenNameDOT
getPatternString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
getTypeString	TokenNameIdentifier
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
XPathException	TokenNameIdentifier
(	TokenNameLPAREN
XPathException	TokenNameIdentifier
.	TokenNameDOT
TYPE_ERR	TokenNameIdentifier
,	TokenNameCOMMA
fmsg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
NodeIterator	TokenNameIdentifier
result	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
result	TokenNameIdentifier
=	TokenNameEQUAL
m_resultObj	TokenNameIdentifier
.	TokenNameDOT
nodeset	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
TransformerException	TokenNameIdentifier
te	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
XPathException	TokenNameIdentifier
(	TokenNameLPAREN
XPathException	TokenNameIdentifier
.	TokenNameDOT
TYPE_ERR	TokenNameIdentifier
,	TokenNameCOMMA
te	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
result	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
Node	TokenNameIdentifier
node	TokenNameIdentifier
=	TokenNameEQUAL
result	TokenNameIdentifier
.	TokenNameDOT
nextNode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isNamespaceNode	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
XPathNamespaceImpl	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
node	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
boolean	TokenNameboolean
getInvalidIteratorState	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
m_isInvalidIteratorState	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getSnapshotLength	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
XPathException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
UNORDERED_NODE_SNAPSHOT_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
ORDERED_NODE_SNAPSHOT_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
fmsg	TokenNameIdentifier
=	TokenNameEQUAL
XPATHMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_CANT_GET_SNAPSHOT_LENGTH	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
m_xpath	TokenNameIdentifier
.	TokenNameDOT
getPatternString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
getTypeString	TokenNameIdentifier
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
XPathException	TokenNameIdentifier
(	TokenNameLPAREN
XPathException	TokenNameIdentifier
.	TokenNameDOT
TYPE_ERR	TokenNameIdentifier
,	TokenNameCOMMA
fmsg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
m_list	TokenNameIdentifier
.	TokenNameDOT
getLength	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Node	TokenNameIdentifier
iterateNext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
throws	TokenNamethrows
XPathException	TokenNameIdentifier
,	TokenNameCOMMA
DOMException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
UNORDERED_NODE_ITERATOR_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
ORDERED_NODE_ITERATOR_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
fmsg	TokenNameIdentifier
=	TokenNameEQUAL
XPATHMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_NON_ITERATOR_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
m_xpath	TokenNameIdentifier
.	TokenNameDOT
getPatternString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
getTypeString	TokenNameIdentifier
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
XPathException	TokenNameIdentifier
(	TokenNameLPAREN
XPathException	TokenNameIdentifier
.	TokenNameDOT
TYPE_ERR	TokenNameIdentifier
,	TokenNameCOMMA
fmsg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
getInvalidIteratorState	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
fmsg	TokenNameIdentifier
=	TokenNameEQUAL
XPATHMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_DOC_MUTATED	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
DOMException	TokenNameIdentifier
(	TokenNameLPAREN
DOMException	TokenNameIdentifier
.	TokenNameDOT
INVALID_STATE_ERR	TokenNameIdentifier
,	TokenNameCOMMA
fmsg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Node	TokenNameIdentifier
node	TokenNameIdentifier
=	TokenNameEQUAL
m_iterator	TokenNameIdentifier
.	TokenNameDOT
nextNode	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
node	TokenNameIdentifier
)	TokenNameRPAREN
removeEventListener	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isNamespaceNode	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
XPathNamespaceImpl	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
node	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
Node	TokenNameIdentifier
snapshotItem	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
index	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
XPathException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
UNORDERED_NODE_SNAPSHOT_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
ORDERED_NODE_SNAPSHOT_TYPE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
fmsg	TokenNameIdentifier
=	TokenNameEQUAL
XPATHMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_NON_SNAPSHOT_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
m_xpath	TokenNameIdentifier
.	TokenNameDOT
getPatternString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
getTypeString	TokenNameIdentifier
(	TokenNameLPAREN
m_resultType	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
XPathException	TokenNameIdentifier
(	TokenNameLPAREN
XPathException	TokenNameIdentifier
.	TokenNameDOT
TYPE_ERR	TokenNameIdentifier
,	TokenNameCOMMA
fmsg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
Node	TokenNameIdentifier
node	TokenNameIdentifier
=	TokenNameEQUAL
m_list	TokenNameIdentifier
.	TokenNameDOT
item	TokenNameIdentifier
(	TokenNameLPAREN
index	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isNamespaceNode	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
XPathNamespaceImpl	TokenNameIdentifier
(	TokenNameLPAREN
node	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
node	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
boolean	TokenNameboolean
isValidType	TokenNameIdentifier
(	TokenNameLPAREN
short	TokenNameshort
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
ANY_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
NUMBER_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
STRING_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
BOOLEAN_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
UNORDERED_NODE_ITERATOR_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
ORDERED_NODE_ITERATOR_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
UNORDERED_NODE_SNAPSHOT_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
ORDERED_NODE_SNAPSHOT_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
ANY_UNORDERED_NODE_TYPE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
FIRST_ORDERED_NODE_TYPE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
handleEvent	TokenNameIdentifier
(	TokenNameLPAREN
Event	TokenNameIdentifier
event	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
event	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
"DOMSubtreeModified"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
m_isInvalidIteratorState	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
removeEventListener	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
String	TokenNameIdentifier
getTypeString	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
type	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
ANY_TYPE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"ANY_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
ANY_UNORDERED_NODE_TYPE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"ANY_UNORDERED_NODE_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
BOOLEAN_TYPE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"BOOLEAN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
FIRST_ORDERED_NODE_TYPE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"FIRST_ORDERED_NODE_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
NUMBER_TYPE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"NUMBER_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
ORDERED_NODE_ITERATOR_TYPE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"ORDERED_NODE_ITERATOR_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
ORDERED_NODE_SNAPSHOT_TYPE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"ORDERED_NODE_SNAPSHOT_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
STRING_TYPE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"STRING_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
UNORDERED_NODE_ITERATOR_TYPE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"UNORDERED_NODE_ITERATOR_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
case	TokenNamecase
UNORDERED_NODE_SNAPSHOT_TYPE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
"UNORDERED_NODE_SNAPSHOT_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
"#UNKNOWN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
short	TokenNameshort
getTypeFromXObject	TokenNameIdentifier
(	TokenNameLPAREN
XObject	TokenNameIdentifier
object	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
object	TokenNameIdentifier
.	TokenNameDOT
getType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
XObject	TokenNameIdentifier
.	TokenNameDOT
CLASS_BOOLEAN	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BOOLEAN_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
XObject	TokenNameIdentifier
.	TokenNameDOT
CLASS_NODESET	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
UNORDERED_NODE_ITERATOR_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
XObject	TokenNameIdentifier
.	TokenNameDOT
CLASS_NUMBER	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
NUMBER_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
XObject	TokenNameIdentifier
.	TokenNameDOT
CLASS_STRING	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
STRING_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
XObject	TokenNameIdentifier
.	TokenNameDOT
CLASS_RTREEFRAG	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
UNORDERED_NODE_ITERATOR_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
XObject	TokenNameIdentifier
.	TokenNameDOT
CLASS_NULL	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
ANY_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
ANY_TYPE	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
boolean	TokenNameboolean
isNamespaceNode	TokenNameIdentifier
(	TokenNameLPAREN
Node	TokenNameIdentifier
node	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
node	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
node	TokenNameIdentifier
.	TokenNameDOT
getNodeType	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
Node	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE_NODE	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
node	TokenNameIdentifier
.	TokenNameDOT
getNodeName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
startsWith	TokenNameIdentifier
(	TokenNameLPAREN
"xmlns:"	TokenNameStringLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
node	TokenNameIdentifier
.	TokenNameDOT
getNodeName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
"xmlns"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
addEventListener	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
m_contextNode	TokenNameIdentifier
instanceof	TokenNameinstanceof
EventTarget	TokenNameIdentifier
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
EventTarget	TokenNameIdentifier
)	TokenNameRPAREN
m_contextNode	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
addEventListener	TokenNameIdentifier
(	TokenNameLPAREN
"DOMSubtreeModified"	TokenNameStringLiteral
,	TokenNameCOMMA
this	TokenNamethis
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
removeEventListener	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
m_contextNode	TokenNameIdentifier
instanceof	TokenNameinstanceof
EventTarget	TokenNameIdentifier
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
EventTarget	TokenNameIdentifier
)	TokenNameRPAREN
m_contextNode	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
removeEventListener	TokenNameIdentifier
(	TokenNameLPAREN
"DOMSubtreeModified"	TokenNameStringLiteral
,	TokenNameCOMMA
this	TokenNamethis
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
