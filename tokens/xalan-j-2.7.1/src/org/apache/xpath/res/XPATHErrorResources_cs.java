package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
res	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ListResourceBundle	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Locale	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
MissingResourceException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ResourceBundle	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
XPATHErrorResources_cs	TokenNameIdentifier
extends	TokenNameextends
ListResourceBundle	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR0000	TokenNameIdentifier
=	TokenNameEQUAL
"ERROR0000"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CURRENT_NOT_ALLOWED_IN_MATCH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CURRENT_NOT_ALLOWED_IN_MATCH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CURRENT_TAKES_NO_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CURRENT_TAKES_NO_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DOCUMENT_REPLACED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DOCUMENT_REPLACED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CONTEXT_HAS_NO_OWNERDOC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CONTEXT_HAS_NO_OWNERDOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_LOCALNAME_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_LOCALNAME_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAMESPACEURI_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAMESPACEURI_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NUMBER_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NUMBER_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAME_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAME_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STRING_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STRING_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STRINGLENGTH_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STRINGLENGTH_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TRANSLATE_TAKES_3_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TRANSLATE_TAKES_3_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNPARSEDENTITYURI_TAKES_1_ARG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNPARSEDENTITYURI_TAKES_1_ARG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAMESPACEAXIS_NOT_IMPLEMENTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAMESPACEAXIS_NOT_IMPLEMENTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_AXIS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_AXIS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_MATCH_OPERATION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_MATCH_OPERATION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INCORRECT_ARG_LENGTH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INCORRECT_ARG_LENGTH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_NUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_NODELIST	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_NODELIST"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_MUTABLENODELIST	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_MUTABLENODELIST"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_MATCH_PATTERN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_MATCH_PATTERN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNOT_GET_VAR_NAMED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNOT_GET_VAR_NAMED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_OPCODE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_OPCODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXTRA_ILLEGAL_TOKENS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXTRA_ILLEGAL_TOKENS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_DOUBLE_QUOTE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_DOUBLE_QUOTE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_SINGLE_QUOTE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_SINGLE_QUOTE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EMPTY_EXPRESSION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EMPTY_EXPRESSION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_BUT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_BUT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INCORRECT_PROGRAMMER_ASSERTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INCORRECT_PROGRAMMER_ASSERTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PREDICATE_ILLEGAL_SYNTAX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PREDICATE_ILLEGAL_SYNTAX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_AXIS_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_AXIS_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_NODETYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_NODETYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PATTERN_LITERAL_NEEDS_BE_QUOTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PATTERN_LITERAL_NEEDS_BE_QUOTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNOT_BE_FORMATTED_TO_NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNOT_BE_FORMATTED_TO_NUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNOT_CREATE_XMLPROCESSORLIAISON	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNOT_CREATE_XMLPROCESSORLIAISON"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DIDNOT_FIND_XPATH_SELECT_EXP	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DIDNOT_FIND_XPATH_SELECT_EXP"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ERROR_OCCURED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ERROR_OCCURED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_VARIABLE_REFERENCE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_VARIABLE_REFERENCE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_AXES_NOT_ALLOWED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_AXES_NOT_ALLOWED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_KEY_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_KEY_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COUNT_TAKES_1_ARG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COUNT_TAKES_1_ARG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNOT_FIND_FUNCTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNOT_FIND_FUNCTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNSUPPORTED_ENCODING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNSUPPORTED_ENCODING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROBLEM_IN_DTM_NEXTSIBLING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROBLEM_IN_DTM_NEXTSIBLING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SETDOMFACTORY_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SETDOMFACTORY_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PREFIX_MUST_RESOLVE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PREFIX_MUST_RESOLVE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PARSE_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PARSE_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SAX_API_NOT_HANDLED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SAX_API_NOT_HANDLED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_IGNORABLE_WHITESPACE_NOT_HANDLED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_IGNORABLE_WHITESPACE_NOT_HANDLED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DTM_CANNOT_HANDLE_NODES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DTM_CANNOT_HANDLE_NODES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XERCES_CANNOT_HANDLE_NODES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XERCES_CANNOT_HANDLE_NODES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XERCES_PARSE_ERROR_DETAILS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XERCES_PARSE_ERROR_DETAILS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XERCES_PARSE_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XERCES_PARSE_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_UTF16_SURROGATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_UTF16_SURROGATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_OIERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_OIERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CREATE_URL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CREATE_URL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XPATH_READOBJECT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XPATH_READOBJECT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FUNCTION_TOKEN_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FUNCTION_TOKEN_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_DEAL_XPATH_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_DEAL_XPATH_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESET_NOT_MUTABLE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESET_NOT_MUTABLE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESETDTM_NOT_MUTABLE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESETDTM_NOT_MUTABLE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_VAR_NOT_RESOLVABLE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_VAR_NOT_RESOLVABLE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_ERROR_HANDLER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROG_ASSERT_UNKNOWN_OPCODE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROG_ASSERT_UNKNOWN_OPCODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ZERO_OR_ONE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ZERO_OR_ONE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_FIND_VAR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_FIND_VAR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FASTSTRINGBUFFER_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FASTSTRINGBUFFER_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TWO_OR_THREE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TWO_OR_THREE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_VARIABLE_ACCESSED_BEFORE_BIND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_VARIABLE_ACCESSED_BEFORE_BIND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FSB_CANNOT_TAKE_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FSB_CANNOT_TAKE_STRING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SETTING_WALKER_ROOT_TO_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SETTING_WALKER_ROOT_TO_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESETDTM_CANNOT_ITERATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESETDTM_CANNOT_ITERATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESET_CANNOT_ITERATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESET_CANNOT_ITERATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESETDTM_CANNOT_INDEX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESETDTM_CANNOT_INDEX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESET_CANNOT_INDEX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESET_CANNOT_INDEX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CALL_SETSHOULDCACHENODE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CALL_SETSHOULDCACHENODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ONLY_ALLOWS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ONLY_ALLOWS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_STEP	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_STEP"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_REL_LOC_PATH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_REL_LOC_PATH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_LOC_PATH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_LOC_PATH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_LOC_PATH_AT_END_EXPR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_LOC_PATH_AT_END_EXPR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_LOC_STEP	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_LOC_STEP"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_NODE_TEST	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_NODE_TEST"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_STEP_PATTERN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_STEP_PATTERN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_REL_PATH_PATTERN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_REL_PATH_PATTERN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_BOOLEAN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_BOOLEAN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_SINGLENODE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_SINGLENODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_GET_SNAPSHOT_LENGTH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_GET_SNAPSHOT_LENGTH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NON_ITERATOR_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NON_ITERATOR_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DOC_MUTATED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DOC_MUTATED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_XPATH_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_XPATH_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EMPTY_XPATH_RESULT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EMPTY_XPATH_RESULT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INCOMPATIBLE_TYPES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INCOMPATIBLE_TYPES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_RESOLVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_RESOLVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_STRING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NON_SNAPSHOT_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NON_SNAPSHOT_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_WRONG_DOCUMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_WRONG_DOCUMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_WRONG_NODETYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_WRONG_NODETYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XPATH_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XPATH_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESOLVE_VARIABLE_RETURNS_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESOLVE_VARIABLE_RETURNS_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNSUPPORTED_RETURN_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNSUPPORTED_RETURN_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ARG_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ARG_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_OBJECT_MODEL_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_OBJECT_MODEL_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_OBJECT_MODEL_EMPTY	TokenNameIdentifier
=	TokenNameEQUAL
"ER_OBJECT_MODEL_EMPTY"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FEATURE_NAME_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FEATURE_NAME_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FEATURE_UNKNOWN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FEATURE_UNKNOWN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_GETTING_NULL_FEATURE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_GETTING_NULL_FEATURE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_GETTING_UNKNOWN_FEATURE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_GETTING_UNKNOWN_FEATURE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_XPATH_FUNCTION_RESOLVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_XPATH_FUNCTION_RESOLVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_XPATH_VARIABLE_RESOLVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_XPATH_VARIABLE_RESOLVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_LOCALE_NAME_NOT_HANDLED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_LOCALE_NAME_NOT_HANDLED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_PROPERTY_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_PROPERTY_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_DONT_DO_ANYTHING_WITH_NS	TokenNameIdentifier
=	TokenNameEQUAL
"WG_DONT_DO_ANYTHING_WITH_NS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_SECURITY_EXCEPTION	TokenNameIdentifier
=	TokenNameEQUAL
"WG_SECURITY_EXCEPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_QUO_NO_LONGER_DEFINED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_QUO_NO_LONGER_DEFINED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST	TokenNameIdentifier
=	TokenNameEQUAL
"WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_FUNCTION_TOKEN_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"WG_FUNCTION_TOKEN_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_COULDNOT_FIND_FUNCTION	TokenNameIdentifier
=	TokenNameEQUAL
"WG_COULDNOT_FIND_FUNCTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_CANNOT_MAKE_URL_FROM	TokenNameIdentifier
=	TokenNameEQUAL
"WG_CANNOT_MAKE_URL_FROM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_EXPAND_ENTITIES_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_EXPAND_ENTITIES_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ILLEGAL_VARIABLE_REFERENCE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ILLEGAL_VARIABLE_REFERENCE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_UNSUPPORTED_ENCODING	TokenNameIdentifier
=	TokenNameEQUAL
"WG_UNSUPPORTED_ENCODING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getContents	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
{	TokenNameLBRACE
"ERROR0000"	TokenNameStringLiteral
,	TokenNameCOMMA
"{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CURRENT_NOT_ALLOWED_IN_MATCH	TokenNameIdentifier
,	TokenNameCOMMA
"Funkce current() není ve vzorku shody povolena!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CURRENT_TAKES_NO_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"Funkce current() neakceptuje argumenty!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DOCUMENT_REPLACED	TokenNameIdentifier
,	TokenNameCOMMA
"implementace funkce document() byla nahrazena funkcí org.apache.xalan.xslt.FuncDocument!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CONTEXT_HAS_NO_OWNERDOC	TokenNameIdentifier
,	TokenNameCOMMA
"Parametr context nemá dokument vlastníka!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_LOCALNAME_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"Příliš mnoho argumentů funkce local-name()."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAMESPACEURI_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"Příliš mnoho argumentů funkce namespace-uri()."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"Příliš mnoho argumentů funkce normalize-space()."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NUMBER_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"Příliš mnoho argumentů funkce number()."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAME_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"Příliš mnoho argumentů funkce name()."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STRING_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"Příliš mnoho argumentů funkce string()."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STRINGLENGTH_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"Příliš mnoho argumentů funkce string-length()."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TRANSLATE_TAKES_3_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"Funkce translate() akceptuje tři argumenty!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNPARSEDENTITYURI_TAKES_1_ARG	TokenNameIdentifier
,	TokenNameCOMMA
"Funkce unparsed-entity-uri musí akceptovat jeden argument!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAMESPACEAXIS_NOT_IMPLEMENTED	TokenNameIdentifier
,	TokenNameCOMMA
"Obor názvů axis nebyl ještě implementován!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_AXIS	TokenNameIdentifier
,	TokenNameCOMMA
"neznámý parametr axis: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_MATCH_OPERATION	TokenNameIdentifier
,	TokenNameCOMMA
"neznámá operace shody!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INCORRECT_ARG_LENGTH	TokenNameIdentifier
,	TokenNameCOMMA
"Nesprávná délka argumentu testu uzlu processing-instruction()!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"{0} nelze převést na parametr number"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_NODELIST	TokenNameIdentifier
,	TokenNameCOMMA
"{0} nelze převést na parametr NodeList!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_MUTABLENODELIST	TokenNameIdentifier
,	TokenNameCOMMA
"{0} nelze převést na parametr NodeSetDTM!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"{0} nelze převést na parametr type#{1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_MATCH_PATTERN	TokenNameIdentifier
,	TokenNameCOMMA
"Funkce getMatchScore očekává parametr!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNOT_GET_VAR_NAMED	TokenNameIdentifier
,	TokenNameCOMMA
"Nelze získat proměnnou s názvem {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_OPCODE	TokenNameIdentifier
,	TokenNameCOMMA
"Chyba! Neznámý kód operace: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXTRA_ILLEGAL_TOKENS	TokenNameIdentifier
,	TokenNameCOMMA
"Další nepovolené tokeny: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_DOUBLE_QUOTE	TokenNameIdentifier
,	TokenNameCOMMA
"nesprávně uvedený literál... Byly očekávány uvozovky!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_SINGLE_QUOTE	TokenNameIdentifier
,	TokenNameCOMMA
"nesprávně uvedený literál... Byly očekávány jednoduché uvozovky!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EMPTY_EXPRESSION	TokenNameIdentifier
,	TokenNameCOMMA
"Prázdný výraz!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_BUT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"Očekáváno: {0}, ale nalezeno: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INCORRECT_PROGRAMMER_ASSERTION	TokenNameIdentifier
,	TokenNameCOMMA
"Nesprávné tvrzení programátora! - {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL	TokenNameIdentifier
,	TokenNameCOMMA
"booleovský(...) argument již není v návrhu 19990709 XPath volitelný."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG	TokenNameIdentifier
,	TokenNameCOMMA
"Byl nalezen znak ',' bez předchozího argumentu!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG	TokenNameIdentifier
,	TokenNameCOMMA
"Byl nalezen znak ',' bez následujícího argumentu!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PREDICATE_ILLEGAL_SYNTAX	TokenNameIdentifier
,	TokenNameCOMMA
"Výraz '..[predicate]' nebo '.[predicate]' má nesprávnou syntaxi. Použijte místo toho 'self::node()[predicate]'."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_AXIS_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"nepovolený název osy: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_NODETYPE	TokenNameIdentifier
,	TokenNameCOMMA
"Neznámý typ uzlu: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PATTERN_LITERAL_NEEDS_BE_QUOTED	TokenNameIdentifier
,	TokenNameCOMMA
"Je nutno uvést vzorek literálu ({0})!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNOT_BE_FORMATTED_TO_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"{0} nelze zformátovat jako číslo!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNOT_CREATE_XMLPROCESSORLIAISON	TokenNameIdentifier
,	TokenNameCOMMA
"Nelze vytvořit prvek XML TransformerFactory Liaison: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DIDNOT_FIND_XPATH_SELECT_EXP	TokenNameIdentifier
,	TokenNameCOMMA
"Chyba! Nebyl nalezen výraz výběru xpath (-select)."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH	TokenNameIdentifier
,	TokenNameCOMMA
"Chyba! Nebyl nalezen výraz ENDOP po OP_LOCATIONPATH"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ERROR_OCCURED	TokenNameIdentifier
,	TokenNameCOMMA
"Došlo k chybě!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_VARIABLE_REFERENCE	TokenNameIdentifier
,	TokenNameCOMMA
"Odkaz VariableReference uveden k proměnné mimo kontext nebo bez definice!  Název = {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_AXES_NOT_ALLOWED	TokenNameIdentifier
,	TokenNameCOMMA
"Ve vzorcích shody jsou povoleny pouze osy child:: a attribute::!  Nepovolené osy = {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_KEY_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"nesprávný počet argumentů parametru key()."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COUNT_TAKES_1_ARG	TokenNameIdentifier
,	TokenNameCOMMA
"Funkce count musí obsahovat jeden argument!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNOT_FIND_FUNCTION	TokenNameIdentifier
,	TokenNameCOMMA
"Nelze nalézt funkci: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNSUPPORTED_ENCODING	TokenNameIdentifier
,	TokenNameCOMMA
"Nepodporované kódování: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROBLEM_IN_DTM_NEXTSIBLING	TokenNameIdentifier
,	TokenNameCOMMA
"Ve funkci getNextSibling došlo v DTM k chybě... Probíhá pokus o obnovu"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL	TokenNameIdentifier
,	TokenNameCOMMA
"Chyba programátora: Do funkce EmptyNodeList nelze zapisovat."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SETDOMFACTORY_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Funkce XPathContext nepodporuje funkci setDOMFactory!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PREFIX_MUST_RESOLVE	TokenNameIdentifier
,	TokenNameCOMMA
"Předponu musí být možno přeložit do oboru názvů: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PARSE_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Funkce XPathContext nepodporuje analýzu (InputSource source)! {0} - nelze otevřít"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SAX_API_NOT_HANDLED	TokenNameIdentifier
,	TokenNameCOMMA
"Znaky SAX API (char ch[]... není v DTM zpracovávána!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_IGNORABLE_WHITESPACE_NOT_HANDLED	TokenNameIdentifier
,	TokenNameCOMMA
"Funkce ignorableWhitespace(char ch[]... není v DTM zpracovávána!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DTM_CANNOT_HANDLE_NODES	TokenNameIdentifier
,	TokenNameCOMMA
"Funkce DTMLiaison nemůže zpracovávat uzly typu {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XERCES_CANNOT_HANDLE_NODES	TokenNameIdentifier
,	TokenNameCOMMA
"Funkce DOM2Helper nemůže zpracovávat uzly typu {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XERCES_PARSE_ERROR_DETAILS	TokenNameIdentifier
,	TokenNameCOMMA
"Chyba funkce DOM2Helper.parse: SystemID - {0} řádek - {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XERCES_PARSE_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"Chyba funkce DOM2Helper.parse"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_UTF16_SURROGATE	TokenNameIdentifier
,	TokenNameCOMMA
"Byla zjištěna neplatná náhrada UTF-16: {0} ?"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_OIERROR	TokenNameIdentifier
,	TokenNameCOMMA
"Chyba vstupu/výstupu"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CREATE_URL	TokenNameIdentifier
,	TokenNameCOMMA
"Nelze vytvořit url pro: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XPATH_READOBJECT	TokenNameIdentifier
,	TokenNameCOMMA
"Ve funkci XPath.readObject: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FUNCTION_TOKEN_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"nebyl nalezen token funkce."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_DEAL_XPATH_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"Nelze pracovat s typem XPath: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESET_NOT_MUTABLE	TokenNameIdentifier
,	TokenNameCOMMA
"Tento prvek NodeSet nelze měnit"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESETDTM_NOT_MUTABLE	TokenNameIdentifier
,	TokenNameCOMMA
"Tento prvek NodeSetDTM nelze měnit"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_VAR_NOT_RESOLVABLE	TokenNameIdentifier
,	TokenNameCOMMA
"Proměnnou nelze přeložit: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
"Obslužný program pro zpracování chyb hodnoty null"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROG_ASSERT_UNKNOWN_OPCODE	TokenNameIdentifier
,	TokenNameCOMMA
"Tvrzení programátora: neznámý kód operace: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ZERO_OR_ONE	TokenNameIdentifier
,	TokenNameCOMMA
"0 nebo 1"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"Modul XRTreeFragSelectWrapper nepodporuje rtf()"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"Modul XRTreeFragSelectWrapper nepodporuje funkci asNodeIterator()"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"Modul XRTreeFragSelectWrapper nepodporuje funkci detach()"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"Modul XRTreeFragSelectWrapper nepodporuje funkci num()"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"Modul XRTreeFragSelectWrapper nepodporuje funkci xstr()"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"Modul XRTreeFragSelectWrapper nepodporuje funkci str()"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS	TokenNameIdentifier
,	TokenNameCOMMA
"Funkce XStringForChars nepodporuje funkci fsb()"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_FIND_VAR	TokenNameIdentifier
,	TokenNameCOMMA
"Nelze nalézt proměnnou s názvem {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING	TokenNameIdentifier
,	TokenNameCOMMA
"Argumentem funkce XStringForChars nemůže být řetězec"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FASTSTRINGBUFFER_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"Argument funkce FastStringBuffer nemůže mít hodnotu null"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TWO_OR_THREE	TokenNameIdentifier
,	TokenNameCOMMA
"2 nebo 3"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_VARIABLE_ACCESSED_BEFORE_BIND	TokenNameIdentifier
,	TokenNameCOMMA
"Přístup k proměnné předtím, než je závazná!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FSB_CANNOT_TAKE_STRING	TokenNameIdentifier
,	TokenNameCOMMA
"Argumentem funkce XStringForFSB nemůže být řetězec!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SETTING_WALKER_ROOT_TO_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"  !!!! Chyba! Nastavení kořene objektu walker na hodnotu null!!!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESETDTM_CANNOT_ITERATE	TokenNameIdentifier
,	TokenNameCOMMA
"Tato funkce NodeSetDTM nemůže být stejná jako předcházející uzel!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESET_CANNOT_ITERATE	TokenNameIdentifier
,	TokenNameCOMMA
"Tato funkce NodeSet nemůže být stejná jako předcházející uzel!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESETDTM_CANNOT_INDEX	TokenNameIdentifier
,	TokenNameCOMMA
"Tato funkce NodeSetDTM nemůže provádět indexovací nebo početní funkce!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESET_CANNOT_INDEX	TokenNameIdentifier
,	TokenNameCOMMA
"Tato funkce NodeSet nemůže provádět indexovací nebo početní funkce!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CALL_SETSHOULDCACHENODE	TokenNameIdentifier
,	TokenNameCOMMA
"Nelze volat funkci setShouldCacheNodes poté, co byla volána funkce nextNode!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ONLY_ALLOWS	TokenNameIdentifier
,	TokenNameCOMMA
"{0} povoluje pouze {1} argumentů"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_STEP	TokenNameIdentifier
,	TokenNameCOMMA
"Tvrzení programátora ve funkci getNextStepPos: neznámý typ stepType: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_REL_LOC_PATH	TokenNameIdentifier
,	TokenNameCOMMA
"Po tokenu '/' nebo '//' byla očekávána cesta relativního umístění."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_LOC_PATH	TokenNameIdentifier
,	TokenNameCOMMA
"Očekávala se cesta umístění, avšak byl zaznamenán následující token:  {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_LOC_PATH_AT_END_EXPR	TokenNameIdentifier
,	TokenNameCOMMA
"Byla očekávána cesta umístění, místo toho však byl nalezen konec výrazu XPath. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_LOC_STEP	TokenNameIdentifier
,	TokenNameCOMMA
"Po tokenu '/' nebo '//' byl očekáván krok umístění"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_NODE_TEST	TokenNameIdentifier
,	TokenNameCOMMA
"Byl očekáván test uzlu, který odpovídá buď prvkům NCName:* nebo QName."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_STEP_PATTERN	TokenNameIdentifier
,	TokenNameCOMMA
"Byl očekáván vzorek kroku, avšak byl zaznamenán znak '/'."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_REL_PATH_PATTERN	TokenNameIdentifier
,	TokenNameCOMMA
"Byl očekáván vzorek relativní cesty."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_BOOLEAN	TokenNameIdentifier
,	TokenNameCOMMA
"Hodnota XPathResult výrazu XPath ''{0}'' je typu XPathResultType {1}, který nelze převést na booleovský typ. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_SINGLENODE	TokenNameIdentifier
,	TokenNameCOMMA
"Hodnota XPathResult výrazu XPath ''{0}'' je typu XPathResultType {1}, který nelze převést na jediný uzel. Metoda getSingleNodeValue je použitelná pouze pro typy ANY_UNORDERED_NODE_TYPE a FIRST_ORDERED_NODE_TYPE. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_GET_SNAPSHOT_LENGTH	TokenNameIdentifier
,	TokenNameCOMMA
"Metodu getSnapshotLength nelze volat v datech XPathResult ani ve výrazu XPath ''{0}'', protože její typ XPathResultType je {1}. Tato metoda se používá pouze pro typy UNORDERED_NODE_SNAPSHOT_TYPE a ORDERED_NODE_SNAPSHOT_TYPE. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NON_ITERATOR_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"Metodu iterateNext nelze volat v datech XPathResult ani ve výrazu XPath ''{0}'', protože její typ XPathResultType je {1}. Tato metoda se používá pouze pro typy UNORDERED_NODE_ITERATOR_TYPE a ORDERED_NODE_ITERATOR_TYPE. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DOC_MUTATED	TokenNameIdentifier
,	TokenNameCOMMA
"Dokument se od doby, kdy byly vráceny výsledky, změnil. Iterátor je neplatný."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_XPATH_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"Neplatný argument typu XPath: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EMPTY_XPATH_RESULT	TokenNameIdentifier
,	TokenNameCOMMA
"Prázdný objekt výsledku XPath"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INCOMPATIBLE_TYPES	TokenNameIdentifier
,	TokenNameCOMMA
"Hodnota XPathResult výrazu XPath ''{0}'' je typu XPathResultType {1}, který nelze vynuceně převést na zadaný typ XPathResultType {2}. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_RESOLVER	TokenNameIdentifier
,	TokenNameCOMMA
"Nelze řešit předponu řešitelem (resolver) s předponou hodnoty null."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_STRING	TokenNameIdentifier
,	TokenNameCOMMA
"Hodnota XPathResult výrazu XPath ''{0}'' je typu XPathResultType {1}, který nelze převést na řetězec. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NON_SNAPSHOT_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"Metodu snapshotItem nelze volat v datech XPathResult ani ve výrazu of XPath ''{0}'', protože její typ XPathResultType je {1}. Tato metoda se používá pouze pro typy UNORDERED_NODE_SNAPSHOT_TYPE a ORDERED_NODE_SNAPSHOT_TYPE. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_WRONG_DOCUMENT	TokenNameIdentifier
,	TokenNameCOMMA
"Uzel kontextu nepatří mezi dokumenty, které jsou vázány k XPathEvaluator."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_WRONG_NODETYPE	TokenNameIdentifier
,	TokenNameCOMMA
"Typ uzlu kontextu není podporován."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XPATH_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"Neznámá chyba objektu XPath."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"Hodnota XPathResult výrazu XPath ''{0}'' je typu XPathResultType {1}, který nelze převést na číslo. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED	TokenNameIdentifier
,	TokenNameCOMMA
"Rozšiřující funkci ''{0}'' nelze vyvolat, pokud je funkce XMLConstants.FEATURE_SECURE_PROCESSING nastavena na hodnotu True. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESOLVE_VARIABLE_RETURNS_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"Funkce resolveVariable pro proměnnou {0} vrací hodnotu Null"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNSUPPORTED_RETURN_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"Nepodporovaný návratový typ: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"Zdrojový a návratový typ nesmí mít hodnotu Null"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ARG_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"Argument {0} nesmí mít hodnotu Null"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_OBJECT_MODEL_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"Funkci {0}#isObjectModelSupported( String objectModel ) nelze volat s hodnotou objectModel == Null"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_OBJECT_MODEL_EMPTY	TokenNameIdentifier
,	TokenNameCOMMA
"Funkci {0}#isObjectModelSupported( String objectModel ) nelze volat s hodnotou objectModel == """	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FEATURE_NAME_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"Pokus o nastavení funkce s názvem s hodnotou Null: {0}#setFeature( null, {1})"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FEATURE_UNKNOWN	TokenNameIdentifier
,	TokenNameCOMMA
"Pokus o nastavení neznámé funkce "{0}":{1}#setFeature({0},{2})"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_GETTING_NULL_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
"Pokus o načtení funkce s názvem s hodnotou Null: {0}#getFeature(null)"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_GETTING_UNKNOWN_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
"Pokus o získání neznámé funkce "{0}":{1}#getFeature({0})"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_XPATH_FUNCTION_RESOLVER	TokenNameIdentifier
,	TokenNameCOMMA
"Pokus o nastavení parametru XPathFunctionResolver s hodnotou Null:{0}#setXPathFunctionResolver(null)"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_XPATH_VARIABLE_RESOLVER	TokenNameIdentifier
,	TokenNameCOMMA
"Pokus o nastavení parametru XPathVariableResolver s hodnotou Null:{0}#setXPathVariableResolver(null)"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_LOCALE_NAME_NOT_HANDLED	TokenNameIdentifier
,	TokenNameCOMMA
"funkce format-number prozatím nezpracovala název národního prostředí (locale)!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_PROPERTY_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Vlastnost XSL není podporována: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_DONT_DO_ANYTHING_WITH_NS	TokenNameIdentifier
,	TokenNameCOMMA
"Aktuálně nedělejte nic s oborem názvů {0} vlastnosti: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_SECURITY_EXCEPTION	TokenNameIdentifier
,	TokenNameCOMMA
"Při pokusu o přístup k systémové vlastnosti XSL došlo k výjimce SecurityException: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_QUO_NO_LONGER_DEFINED	TokenNameIdentifier
,	TokenNameCOMMA
"Zastaralá syntaxe: quo(...) již není v XPath definováno."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST	TokenNameIdentifier
,	TokenNameCOMMA
"XPath potřebuje k implementaci funkce nodeTest odvozený objekt!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_FUNCTION_TOKEN_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"nebyl nalezen token funkce."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_COULDNOT_FIND_FUNCTION	TokenNameIdentifier
,	TokenNameCOMMA
"Nelze nalézt funkci: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_CANNOT_MAKE_URL_FROM	TokenNameIdentifier
,	TokenNameCOMMA
"Nelze vytvořit adresu URL z: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_EXPAND_ENTITIES_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Analyzátor DTM nepodporuje volbu -E"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ILLEGAL_VARIABLE_REFERENCE	TokenNameIdentifier
,	TokenNameCOMMA
"Odkaz VariableReference uveden k proměnné mimo kontext nebo bez definice!  Název = {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_UNSUPPORTED_ENCODING	TokenNameIdentifier
,	TokenNameCOMMA
"Nepodporované kódování: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"ui_language"	TokenNameStringLiteral
,	TokenNameCOMMA
"cs"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"help_language"	TokenNameStringLiteral
,	TokenNameCOMMA
"cs"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"language"	TokenNameStringLiteral
,	TokenNameCOMMA
"cs"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"BAD_CODE"	TokenNameStringLiteral
,	TokenNameCOMMA
"Parametr funkce createMessage je mimo limit"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"FORMAT_FAILED"	TokenNameStringLiteral
,	TokenNameCOMMA
"Při volání funkce messageFormat došlo k výjimce"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"version"	TokenNameStringLiteral
,	TokenNameCOMMA
">>>>>>> Verze Xalan "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"version2"	TokenNameStringLiteral
,	TokenNameCOMMA
"<<<<<<<"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"yes"	TokenNameStringLiteral
,	TokenNameCOMMA
"ano"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"line"	TokenNameStringLiteral
,	TokenNameCOMMA
"Řádek #"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"column"	TokenNameStringLiteral
,	TokenNameCOMMA
"Sloupec #"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xsldone"	TokenNameStringLiteral
,	TokenNameCOMMA
"XSLProcessor: hotovo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xpath_option"	TokenNameStringLiteral
,	TokenNameCOMMA
"volby xpath: "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionIN"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-in inputXMLURL]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionSelect"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-select výraz xpath]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionMatch"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-match vzorek shody (pro diagnostiku shody)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionAnyExpr"	TokenNameStringLiteral
,	TokenNameCOMMA
"Jinak výpis diagnostiky provede pouze výraz xpath"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg1"	TokenNameStringLiteral
,	TokenNameCOMMA
"Proces XSL nebyl úspěšný."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg2"	TokenNameStringLiteral
,	TokenNameCOMMA
"** Nelze najít analyzátor **"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg3"	TokenNameStringLiteral
,	TokenNameCOMMA
"Zkontrolujte cestu classpath."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg4"	TokenNameStringLiteral
,	TokenNameCOMMA
"Nemáte-li analyzátor XML jazyka Java společnosti IBM, můžete si jej stáhnout z adresy:"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg5"	TokenNameStringLiteral
,	TokenNameCOMMA
"AlphaWorks: http://www.alphaworks.ibm.com/formula/xml"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"gtone"	TokenNameStringLiteral
,	TokenNameCOMMA
">1"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"zero"	TokenNameStringLiteral
,	TokenNameCOMMA
"0"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"one"	TokenNameStringLiteral
,	TokenNameCOMMA
"1"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"two"	TokenNameStringLiteral
,	TokenNameCOMMA
"2"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"three"	TokenNameStringLiteral
,	TokenNameCOMMA
"3"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
BAD_CODE	TokenNameIdentifier
=	TokenNameEQUAL
"BAD_CODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
FORMAT_FAILED	TokenNameIdentifier
=	TokenNameEQUAL
"FORMAT_FAILED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_RESOURCES	TokenNameIdentifier
=	TokenNameEQUAL
"org.apache.xpath.res.XPATHErrorResources"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"#chyba"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"Chyba: "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WARNING_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"Varování: "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
XSL_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"XSL "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
XML_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"XML "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
QUERY_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"PATTERN "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
XPATHErrorResources	TokenNameIdentifier
loadResourceBundle	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
className	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
MissingResourceException	TokenNameIdentifier
{	TokenNameLBRACE
Locale	TokenNameIdentifier
locale	TokenNameIdentifier
=	TokenNameEQUAL
Locale	TokenNameIdentifier
.	TokenNameDOT
getDefault	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
suffix	TokenNameIdentifier
=	TokenNameEQUAL
getResourceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
locale	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
)	TokenNameRPAREN
ResourceBundle	TokenNameIdentifier
.	TokenNameDOT
getBundle	TokenNameIdentifier
(	TokenNameLPAREN
className	TokenNameIdentifier
+	TokenNamePLUS
suffix	TokenNameIdentifier
,	TokenNameCOMMA
locale	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MissingResourceException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
)	TokenNameRPAREN
ResourceBundle	TokenNameIdentifier
.	TokenNameDOT
getBundle	TokenNameIdentifier
(	TokenNameLPAREN
className	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Locale	TokenNameIdentifier
(	TokenNameLPAREN
"cs"	TokenNameStringLiteral
,	TokenNameCOMMA
"CZ"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MissingResourceException	TokenNameIdentifier
e2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
MissingResourceException	TokenNameIdentifier
(	TokenNameLPAREN
"Could not load any resource bundles."	TokenNameStringLiteral
,	TokenNameCOMMA
className	TokenNameIdentifier
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
getResourceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
Locale	TokenNameIdentifier
locale	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
suffix	TokenNameIdentifier
=	TokenNameEQUAL
"_"	TokenNameStringLiteral
+	TokenNamePLUS
locale	TokenNameIdentifier
.	TokenNameDOT
getLanguage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
country	TokenNameIdentifier
=	TokenNameEQUAL
locale	TokenNameIdentifier
.	TokenNameDOT
getCountry	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
country	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
"TW"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
suffix	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
"_"	TokenNameStringLiteral
+	TokenNamePLUS
country	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
suffix	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
