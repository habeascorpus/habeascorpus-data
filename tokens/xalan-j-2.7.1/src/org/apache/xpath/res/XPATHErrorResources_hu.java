package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
res	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ListResourceBundle	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Locale	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
MissingResourceException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ResourceBundle	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
XPATHErrorResources_hu	TokenNameIdentifier
extends	TokenNameextends
ListResourceBundle	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR0000	TokenNameIdentifier
=	TokenNameEQUAL
"ERROR0000"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CURRENT_NOT_ALLOWED_IN_MATCH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CURRENT_NOT_ALLOWED_IN_MATCH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CURRENT_TAKES_NO_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CURRENT_TAKES_NO_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DOCUMENT_REPLACED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DOCUMENT_REPLACED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CONTEXT_HAS_NO_OWNERDOC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CONTEXT_HAS_NO_OWNERDOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_LOCALNAME_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_LOCALNAME_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAMESPACEURI_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAMESPACEURI_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NUMBER_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NUMBER_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAME_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAME_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STRING_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STRING_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STRINGLENGTH_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STRINGLENGTH_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TRANSLATE_TAKES_3_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TRANSLATE_TAKES_3_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNPARSEDENTITYURI_TAKES_1_ARG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNPARSEDENTITYURI_TAKES_1_ARG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAMESPACEAXIS_NOT_IMPLEMENTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAMESPACEAXIS_NOT_IMPLEMENTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_AXIS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_AXIS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_MATCH_OPERATION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_MATCH_OPERATION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INCORRECT_ARG_LENGTH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INCORRECT_ARG_LENGTH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_NUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_NODELIST	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_NODELIST"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_MUTABLENODELIST	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_MUTABLENODELIST"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_MATCH_PATTERN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_MATCH_PATTERN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNOT_GET_VAR_NAMED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNOT_GET_VAR_NAMED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_OPCODE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_OPCODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXTRA_ILLEGAL_TOKENS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXTRA_ILLEGAL_TOKENS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_DOUBLE_QUOTE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_DOUBLE_QUOTE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_SINGLE_QUOTE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_SINGLE_QUOTE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EMPTY_EXPRESSION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EMPTY_EXPRESSION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_BUT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_BUT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INCORRECT_PROGRAMMER_ASSERTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INCORRECT_PROGRAMMER_ASSERTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PREDICATE_ILLEGAL_SYNTAX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PREDICATE_ILLEGAL_SYNTAX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_AXIS_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_AXIS_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_NODETYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_NODETYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PATTERN_LITERAL_NEEDS_BE_QUOTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PATTERN_LITERAL_NEEDS_BE_QUOTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNOT_BE_FORMATTED_TO_NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNOT_BE_FORMATTED_TO_NUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNOT_CREATE_XMLPROCESSORLIAISON	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNOT_CREATE_XMLPROCESSORLIAISON"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DIDNOT_FIND_XPATH_SELECT_EXP	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DIDNOT_FIND_XPATH_SELECT_EXP"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ERROR_OCCURED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ERROR_OCCURED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_VARIABLE_REFERENCE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_VARIABLE_REFERENCE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_AXES_NOT_ALLOWED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_AXES_NOT_ALLOWED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_KEY_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_KEY_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COUNT_TAKES_1_ARG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COUNT_TAKES_1_ARG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNOT_FIND_FUNCTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNOT_FIND_FUNCTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNSUPPORTED_ENCODING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNSUPPORTED_ENCODING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROBLEM_IN_DTM_NEXTSIBLING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROBLEM_IN_DTM_NEXTSIBLING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SETDOMFACTORY_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SETDOMFACTORY_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PREFIX_MUST_RESOLVE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PREFIX_MUST_RESOLVE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PARSE_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PARSE_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SAX_API_NOT_HANDLED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SAX_API_NOT_HANDLED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_IGNORABLE_WHITESPACE_NOT_HANDLED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_IGNORABLE_WHITESPACE_NOT_HANDLED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DTM_CANNOT_HANDLE_NODES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DTM_CANNOT_HANDLE_NODES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XERCES_CANNOT_HANDLE_NODES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XERCES_CANNOT_HANDLE_NODES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XERCES_PARSE_ERROR_DETAILS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XERCES_PARSE_ERROR_DETAILS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XERCES_PARSE_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XERCES_PARSE_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_UTF16_SURROGATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_UTF16_SURROGATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_OIERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_OIERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CREATE_URL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CREATE_URL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XPATH_READOBJECT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XPATH_READOBJECT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FUNCTION_TOKEN_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FUNCTION_TOKEN_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_DEAL_XPATH_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_DEAL_XPATH_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESET_NOT_MUTABLE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESET_NOT_MUTABLE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESETDTM_NOT_MUTABLE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESETDTM_NOT_MUTABLE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_VAR_NOT_RESOLVABLE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_VAR_NOT_RESOLVABLE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_ERROR_HANDLER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROG_ASSERT_UNKNOWN_OPCODE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROG_ASSERT_UNKNOWN_OPCODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ZERO_OR_ONE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ZERO_OR_ONE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_FIND_VAR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_FIND_VAR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FASTSTRINGBUFFER_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FASTSTRINGBUFFER_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TWO_OR_THREE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TWO_OR_THREE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_VARIABLE_ACCESSED_BEFORE_BIND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_VARIABLE_ACCESSED_BEFORE_BIND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FSB_CANNOT_TAKE_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FSB_CANNOT_TAKE_STRING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SETTING_WALKER_ROOT_TO_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SETTING_WALKER_ROOT_TO_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESETDTM_CANNOT_ITERATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESETDTM_CANNOT_ITERATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESET_CANNOT_ITERATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESET_CANNOT_ITERATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESETDTM_CANNOT_INDEX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESETDTM_CANNOT_INDEX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESET_CANNOT_INDEX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESET_CANNOT_INDEX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CALL_SETSHOULDCACHENODE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CALL_SETSHOULDCACHENODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ONLY_ALLOWS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ONLY_ALLOWS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_STEP	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_STEP"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_REL_LOC_PATH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_REL_LOC_PATH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_LOC_PATH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_LOC_PATH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_LOC_PATH_AT_END_EXPR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_LOC_PATH_AT_END_EXPR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_LOC_STEP	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_LOC_STEP"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_NODE_TEST	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_NODE_TEST"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_STEP_PATTERN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_STEP_PATTERN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_REL_PATH_PATTERN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_REL_PATH_PATTERN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_BOOLEAN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_BOOLEAN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_SINGLENODE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_SINGLENODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_GET_SNAPSHOT_LENGTH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_GET_SNAPSHOT_LENGTH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NON_ITERATOR_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NON_ITERATOR_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DOC_MUTATED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DOC_MUTATED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_XPATH_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_XPATH_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EMPTY_XPATH_RESULT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EMPTY_XPATH_RESULT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INCOMPATIBLE_TYPES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INCOMPATIBLE_TYPES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_RESOLVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_RESOLVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_STRING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NON_SNAPSHOT_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NON_SNAPSHOT_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_WRONG_DOCUMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_WRONG_DOCUMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_WRONG_NODETYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_WRONG_NODETYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XPATH_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XPATH_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESOLVE_VARIABLE_RETURNS_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESOLVE_VARIABLE_RETURNS_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNSUPPORTED_RETURN_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNSUPPORTED_RETURN_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ARG_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ARG_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_OBJECT_MODEL_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_OBJECT_MODEL_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_OBJECT_MODEL_EMPTY	TokenNameIdentifier
=	TokenNameEQUAL
"ER_OBJECT_MODEL_EMPTY"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FEATURE_NAME_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FEATURE_NAME_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FEATURE_UNKNOWN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FEATURE_UNKNOWN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_GETTING_NULL_FEATURE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_GETTING_NULL_FEATURE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_GETTING_UNKNOWN_FEATURE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_GETTING_UNKNOWN_FEATURE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_XPATH_FUNCTION_RESOLVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_XPATH_FUNCTION_RESOLVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_XPATH_VARIABLE_RESOLVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_XPATH_VARIABLE_RESOLVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_LOCALE_NAME_NOT_HANDLED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_LOCALE_NAME_NOT_HANDLED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_PROPERTY_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_PROPERTY_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_DONT_DO_ANYTHING_WITH_NS	TokenNameIdentifier
=	TokenNameEQUAL
"WG_DONT_DO_ANYTHING_WITH_NS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_SECURITY_EXCEPTION	TokenNameIdentifier
=	TokenNameEQUAL
"WG_SECURITY_EXCEPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_QUO_NO_LONGER_DEFINED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_QUO_NO_LONGER_DEFINED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST	TokenNameIdentifier
=	TokenNameEQUAL
"WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_FUNCTION_TOKEN_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"WG_FUNCTION_TOKEN_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_COULDNOT_FIND_FUNCTION	TokenNameIdentifier
=	TokenNameEQUAL
"WG_COULDNOT_FIND_FUNCTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_CANNOT_MAKE_URL_FROM	TokenNameIdentifier
=	TokenNameEQUAL
"WG_CANNOT_MAKE_URL_FROM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_EXPAND_ENTITIES_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_EXPAND_ENTITIES_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ILLEGAL_VARIABLE_REFERENCE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ILLEGAL_VARIABLE_REFERENCE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_UNSUPPORTED_ENCODING	TokenNameIdentifier
=	TokenNameEQUAL
"WG_UNSUPPORTED_ENCODING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getContents	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
{	TokenNameLBRACE
"ERROR0000"	TokenNameStringLiteral
,	TokenNameCOMMA
"{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CURRENT_NOT_ALLOWED_IN_MATCH	TokenNameIdentifier
,	TokenNameCOMMA
"A current() függvény nem megengedett az illesztési mintában!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CURRENT_TAKES_NO_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"A current() függvény nem fogad el argumentumokat!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DOCUMENT_REPLACED	TokenNameIdentifier
,	TokenNameCOMMA
"A document() függvény megvalósítását lecserélte az org.apache.xalan.xslt.FuncDocument!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CONTEXT_HAS_NO_OWNERDOC	TokenNameIdentifier
,	TokenNameCOMMA
"A környezetnek nincs tulajdonos dokumentuma!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_LOCALNAME_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"A local-name()-nek túl sok argumentuma van."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAMESPACEURI_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"A namespace-uri()-nek túl sok argumentuma van."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"A normalize-space()-nek túl sok argumentuma van."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NUMBER_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"A number()-nek túl sok argumentuma van."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAME_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"A name()-nek túl sok argumentuma van."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STRING_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"A string()-nek túl sok argumentuma van."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STRINGLENGTH_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"A string-length()-nek túl sok argumentuma van."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TRANSLATE_TAKES_3_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"A translate() függvény három argumentumot kér!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNPARSEDENTITYURI_TAKES_1_ARG	TokenNameIdentifier
,	TokenNameCOMMA
"Az unparsed-entity-uri függvényhez egy argumentum szükséges!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAMESPACEAXIS_NOT_IMPLEMENTED	TokenNameIdentifier
,	TokenNameCOMMA
"A névtér tengely még nincs magvalósítva!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_AXIS	TokenNameIdentifier
,	TokenNameCOMMA
"Ismeretlen tengely: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_MATCH_OPERATION	TokenNameIdentifier
,	TokenNameCOMMA
"ismeretlen illesztési művelet!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INCORRECT_ARG_LENGTH	TokenNameIdentifier
,	TokenNameCOMMA
"A processing-instruction() csomópont teszt argumentumának hossza helytelen!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"A(z) {0} nem konvertálható számmá"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_NODELIST	TokenNameIdentifier
,	TokenNameCOMMA
"A(z) {0} nem konvertálható NodeList-té!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_MUTABLENODELIST	TokenNameIdentifier
,	TokenNameCOMMA
"A(z) {0} nem konvertálható NodeSetDTM-mé!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"{0} nem konvertálható type#{1} típussá"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_MATCH_PATTERN	TokenNameIdentifier
,	TokenNameCOMMA
"Illesztési mintát vártunk a getMatchScore-ban!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNOT_GET_VAR_NAMED	TokenNameIdentifier
,	TokenNameCOMMA
"Nem lehet lekérni a(z) {0} nevű változót"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_OPCODE	TokenNameIdentifier
,	TokenNameCOMMA
"HIBA! Ismeretlen opkód: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXTRA_ILLEGAL_TOKENS	TokenNameIdentifier
,	TokenNameCOMMA
"Extra tiltott tokenek: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_DOUBLE_QUOTE	TokenNameIdentifier
,	TokenNameCOMMA
"rosszul idézett literál... dupla idézőjelet vártunk!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_SINGLE_QUOTE	TokenNameIdentifier
,	TokenNameCOMMA
"rosszul idézett literál... szimpla idézőjelet vártunk!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EMPTY_EXPRESSION	TokenNameIdentifier
,	TokenNameCOMMA
"Üres kifejezés!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_BUT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"{0}-t vártunk, de ezt találtuk: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INCORRECT_PROGRAMMER_ASSERTION	TokenNameIdentifier
,	TokenNameCOMMA
"A programozó feltevése hibás! - {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL	TokenNameIdentifier
,	TokenNameCOMMA
"A boolean(...) argumentuma többé nem opcionális az 19990709 XPath vázlat szerint."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG	TokenNameIdentifier
,	TokenNameCOMMA
"','-t találtunk, de nincs előtte argumentum!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG	TokenNameIdentifier
,	TokenNameCOMMA
"','-t találtunk, de nincs utána argumentum!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PREDICATE_ILLEGAL_SYNTAX	TokenNameIdentifier
,	TokenNameCOMMA
"A '..[feltétel]' vagy '.[feltétel]' szintaktika tiltott.  Használja inkább a 'self::node()[predicate]' definíciót."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_AXIS_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"Tiltott tengelynév: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_NODETYPE	TokenNameIdentifier
,	TokenNameCOMMA
"Ismeretlen node-típus: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PATTERN_LITERAL_NEEDS_BE_QUOTED	TokenNameIdentifier
,	TokenNameCOMMA
"A minta-literált ({0}) idézőjelek közé kell tenni!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNOT_BE_FORMATTED_TO_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"A(z) {0} nem formázható számmá!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNOT_CREATE_XMLPROCESSORLIAISON	TokenNameIdentifier
,	TokenNameCOMMA
"Nem lehet XML TransformerFactory Liaison-t létrehozni: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DIDNOT_FIND_XPATH_SELECT_EXP	TokenNameIdentifier
,	TokenNameCOMMA
"Hiba! Az xpath kiválasztási kifejezés nem található (-select)."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH	TokenNameIdentifier
,	TokenNameCOMMA
"HIBA! Nem található ENDOP az OP_LOCATIONPATH után"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ERROR_OCCURED	TokenNameIdentifier
,	TokenNameCOMMA
"Hiba történt!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_VARIABLE_REFERENCE	TokenNameIdentifier
,	TokenNameCOMMA
"A változóra adott VariableReference (változóhivatkozás) kívül van a környezeten vagy nincs definíciója!  Név = {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_AXES_NOT_ALLOWED	TokenNameIdentifier
,	TokenNameCOMMA
"Csak a child:: és az attribute:: tengelyek illeszkedhetnek mintákra.  Zavaró tengelyek = {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_KEY_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"A key()-nek nem megfelelő számú argumentuma van."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COUNT_TAKES_1_ARG	TokenNameIdentifier
,	TokenNameCOMMA
"A count függvényhez csak egy argumentumot lehet megadni!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNOT_FIND_FUNCTION	TokenNameIdentifier
,	TokenNameCOMMA
"Nem található a függvény: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNSUPPORTED_ENCODING	TokenNameIdentifier
,	TokenNameCOMMA
"Nem támogatott kódolás: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROBLEM_IN_DTM_NEXTSIBLING	TokenNameIdentifier
,	TokenNameCOMMA
"Probléma merült fel a DTM-ben a getNextSibling-ben... megpróbáljuk helyrehozni"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL	TokenNameIdentifier
,	TokenNameCOMMA
"Programozói hiba: az EmptyNodeList-be (üres csomópontlistába) nem lehet írni."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SETDOMFACTORY_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"A setDOMFactory-t nem támogatja az XPathContext!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PREFIX_MUST_RESOLVE	TokenNameIdentifier
,	TokenNameCOMMA
"Az előtagnak egy névtérre kell feloldódnia: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PARSE_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Az elemés (InputSource forrás) nem támogatott az XPathContext-ben! Nem lehet megnyitni a(z) {0}-t"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SAX_API_NOT_HANDLED	TokenNameIdentifier
,	TokenNameCOMMA
"SAX API characters(char ch[]... függvényt nem kezeli a DTM!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_IGNORABLE_WHITESPACE_NOT_HANDLED	TokenNameIdentifier
,	TokenNameCOMMA
"Az ignorableWhitespace(char ch[]... függvényt nem kezeli a DTM!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DTM_CANNOT_HANDLE_NODES	TokenNameIdentifier
,	TokenNameCOMMA
"A DTMLiaison nem tud {0} típusú csomópontokat kezelni"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XERCES_CANNOT_HANDLE_NODES	TokenNameIdentifier
,	TokenNameCOMMA
"A DOM2Helper nem tud {0} típusú csomópontokat kezelni"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XERCES_PARSE_ERROR_DETAILS	TokenNameIdentifier
,	TokenNameCOMMA
"DOM2Helper.parse hiba: SystemID - {0} sor - {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XERCES_PARSE_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"DOM2Helper.parse hiba"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_UTF16_SURROGATE	TokenNameIdentifier
,	TokenNameCOMMA
"Érvénytelen UTF-16 helyettesítés: {0} ?"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_OIERROR	TokenNameIdentifier
,	TokenNameCOMMA
"IO hiba"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CREATE_URL	TokenNameIdentifier
,	TokenNameCOMMA
"Nem lehet URL-t létrehozni ehhez: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XPATH_READOBJECT	TokenNameIdentifier
,	TokenNameCOMMA
"A XPath.readObject metódusban: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FUNCTION_TOKEN_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"A függvény jelsor nem található."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_DEAL_XPATH_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"Nem lehet megbirkózni az XPath típussal: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESET_NOT_MUTABLE	TokenNameIdentifier
,	TokenNameCOMMA
"Ez a NodeSet nem illeszthető be"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESETDTM_NOT_MUTABLE	TokenNameIdentifier
,	TokenNameCOMMA
"Ez a NodeSetDTM nem illeszthető be"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_VAR_NOT_RESOLVABLE	TokenNameIdentifier
,	TokenNameCOMMA
"A változó nem oldható fel: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
"Null hibakezelő"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROG_ASSERT_UNKNOWN_OPCODE	TokenNameIdentifier
,	TokenNameCOMMA
"Programozói értesítés: ismeretlen műveletkód: {0} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ZERO_OR_ONE	TokenNameIdentifier
,	TokenNameCOMMA
"0 vagy 1"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"Az rtf()-et nem támogatja az XRTreeFragSelectWrapper"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"Az asNodeIterator()-t nem támogatja az XRTreeFragSelectWrapper"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"A detach() függvényt nem támogatja az XRTreeFragSelectWrapper"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"A num() függvényt nem támogatja az XRTreeFragSelectWrapper"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"A xstr() függvényt nem támogatja az XRTreeFragSelectWrapper"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"A str() függvényt nem támogatja az XRTreeFragSelectWrapper"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS	TokenNameIdentifier
,	TokenNameCOMMA
"Az fsb() nem támogatott az XStringForChars-nál"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_FIND_VAR	TokenNameIdentifier
,	TokenNameCOMMA
"Nem található {0} nevű változó"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING	TokenNameIdentifier
,	TokenNameCOMMA
"Az XStringForChars-nak nem adhat meg karakterlánc argumentumot"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FASTSTRINGBUFFER_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"A FastStringBuffer argumentum nem lehet null"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TWO_OR_THREE	TokenNameIdentifier
,	TokenNameCOMMA
"2 vagy 3"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_VARIABLE_ACCESSED_BEFORE_BIND	TokenNameIdentifier
,	TokenNameCOMMA
"Változóelérés értékadás előtt!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FSB_CANNOT_TAKE_STRING	TokenNameIdentifier
,	TokenNameCOMMA
"XStringForFSB nem kaphat sztring argumentumot!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SETTING_WALKER_ROOT_TO_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"  !!!! Hiba! A bejáró gyökerét null-ra állította!!!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESETDTM_CANNOT_ITERATE	TokenNameIdentifier
,	TokenNameCOMMA
"Ez a NodeSetDTM nem iterálhat egy korábbi node-ra!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESET_CANNOT_ITERATE	TokenNameIdentifier
,	TokenNameCOMMA
"Ez a NodeSet nem iterálhat egy korábbi node-ra!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESETDTM_CANNOT_INDEX	TokenNameIdentifier
,	TokenNameCOMMA
"Ez a NodeSetDTM nem indexelhet és nem számlálhatja a funkciókat!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESET_CANNOT_INDEX	TokenNameIdentifier
,	TokenNameCOMMA
"Ez a NodeSet nem indexelhet és nem számlálhatja a funkciókat!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CALL_SETSHOULDCACHENODE	TokenNameIdentifier
,	TokenNameCOMMA
"Nem hívható setShouldCacheNodes nextNode hívása után!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ONLY_ALLOWS	TokenNameIdentifier
,	TokenNameCOMMA
"{0} csak {1} argumentumot engedélyez"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_STEP	TokenNameIdentifier
,	TokenNameCOMMA
"Programozói értesítés getNextStepPos hívásban: ismeretlen stepType: {0} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_REL_LOC_PATH	TokenNameIdentifier
,	TokenNameCOMMA
"Egy relatív elhelyezési útvonalat vártunk a '/' vagy '//' token után."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_LOC_PATH	TokenNameIdentifier
,	TokenNameCOMMA
"Egy hely útvonalat vártam, de a következő tokent találtam:  {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_LOC_PATH_AT_END_EXPR	TokenNameIdentifier
,	TokenNameCOMMA
"A rendszer hely útvonalat várt, de helyette az XPath kifejezés végébe ütközött."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_LOC_STEP	TokenNameIdentifier
,	TokenNameCOMMA
"Egy elhelyezési lépést vártunk a '/' vagy '//' token után."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_NODE_TEST	TokenNameIdentifier
,	TokenNameCOMMA
"Egy olyan node-tesztet vártunk, ami vagy az NCName:*-ra vagy a QName-re illeszkedik."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_STEP_PATTERN	TokenNameIdentifier
,	TokenNameCOMMA
"Egy lépésmintát vártunk, de '/' szerepelt."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_REL_PATH_PATTERN	TokenNameIdentifier
,	TokenNameCOMMA
"Relatív útvonalat vártunk."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_BOOLEAN	TokenNameIdentifier
,	TokenNameCOMMA
"A(z) ''{0}'' XPath kifejezés XPathResult elemének XPathResultType értéke {1}, ami nem alakítható át logikai típussá."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_SINGLENODE	TokenNameIdentifier
,	TokenNameCOMMA
"A(z) ''{0}'' XPath kifejezés XPathResult elemének XPathResultType értéke {1}, ami nem alakítható át egyetlen csomóponttá. A getSingleNodeValue metódus csak az ANY_UNORDERED_NODE_TYPE és a FIRST_ORDERED_NODE_TYPE típusra alkalmazható. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_GET_SNAPSHOT_LENGTH	TokenNameIdentifier
,	TokenNameCOMMA
"A getSnapshotLength metódus nem hívható meg a(z) ''{0}'' XPath kifejezés XPathResult értékére, mert az XPathResultType értéke {1}. Ez a metódus csak UNORDERED_NODE_SNAPSHOT_TYPE és ORDERED_NODE_SNAPSHOT_TYPE típusokra alkalmazható."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NON_ITERATOR_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"Az iterateNext metódus nem hívható meg a(z) ''{0}'' XPath kifejezés XPathResult értékére, mert az XPathResultType értéke {1}. Ez a metódus csak UNORDERED_NODE_ITERATOR_TYPE és ORDERED_NODE_ITERATOR_TYPE típusokra alkalmazható."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DOC_MUTATED	TokenNameIdentifier
,	TokenNameCOMMA
"A dokumentum megváltozott, mióta az eredmény visszatért. Az iterátor érvénytelen."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_XPATH_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"Érvénytelen XPath típus-argumentum: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EMPTY_XPATH_RESULT	TokenNameIdentifier
,	TokenNameCOMMA
"Üres XPath eredményobjektum"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INCOMPATIBLE_TYPES	TokenNameIdentifier
,	TokenNameCOMMA
"A(z) ''{0}'' XPath kifejezés XPathResult elemének XPathResultType értéke {1}, ami nem helyezhető el a megadott {2} XPathResultType típusban. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_RESOLVER	TokenNameIdentifier
,	TokenNameCOMMA
"Nem lehet feloldani a prefixet null prefix-feloldóval."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_STRING	TokenNameIdentifier
,	TokenNameCOMMA
"A(z) ''{0}'' XPath kifejezés XPathResult elemének XPathResultType értéke {1}, ami nem alakítható át karaktersorozattá. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NON_SNAPSHOT_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"A snapshotItem metódus nem hívható meg a(z) ''{0}'' XPath kifejezés XPathResult értékére, mert az XPathResultType értéke {1}. Ez a metódus csak UNORDERED_NODE_SNAPSHOT_TYPE és ORDERED_NODE_SNAPSHOT_TYPE típusokra alkalmazható."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_WRONG_DOCUMENT	TokenNameIdentifier
,	TokenNameCOMMA
"A környezeti node nem az XPathEvaluator-hoz tartozó dokumentumhoz tartozik."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_WRONG_NODETYPE	TokenNameIdentifier
,	TokenNameCOMMA
"A környezeti node típusa nem támogatott."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XPATH_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"Ismeretlen hiba az XPath-ban."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"A(z) ''{0}'' XPath kifejezés XPathResult elemének XPathResultType értéke {1}, ami nem alakítható át számmá. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED	TokenNameIdentifier
,	TokenNameCOMMA
"A(z) ''{0}'' bővítő függvény nem hívható meg, amikor az XMLConstants.FEATURE_SECURE_PROCESSING szolgáltatás igazra van állítva. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESOLVE_VARIABLE_RETURNS_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"A resolveVariable nullértéket adott vissza a(z) {0} változóra"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNSUPPORTED_RETURN_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"Nem támogatott visszatérési típus: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"A forrás és/vagy a visszatérési típus nem lehet null. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ARG_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"A(z) {0} argumentum nem lehet null"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_OBJECT_MODEL_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"{0}#isObjectModelSupported( String objectModel ) nem hívható meg objectModel == null értékkel "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_OBJECT_MODEL_EMPTY	TokenNameIdentifier
,	TokenNameCOMMA
"{0}#isObjectModelSupported( String objectModel ) nem hívható meg  objectModel == "" értékkel "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FEATURE_NAME_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"Próbálkozás egy szolgáltatás beállítására null névvel: {0}#setFeature( null, {1})"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FEATURE_UNKNOWN	TokenNameIdentifier
,	TokenNameCOMMA
"Próbálkozás az ismeretlen "{0}" szolgáltatás beállítására:{1}#setFeature({0},{2})"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_GETTING_NULL_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
"Null nevű szolgáltatást próbált meg beolvasni: {0}#getFeature(null)"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_GETTING_UNKNOWN_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
"Próbálkozás az ismeretlen "{0}" szolgáltatás beolvasására:{1}#getFeature({0})"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_XPATH_FUNCTION_RESOLVER	TokenNameIdentifier
,	TokenNameCOMMA
"Null XPathFunctionResolver értéket próbált meg beállítani:{0}#setXPathFunctionResolver(null)"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_XPATH_VARIABLE_RESOLVER	TokenNameIdentifier
,	TokenNameCOMMA
"Null XPathVariableResolver értéket próbált meg beállítani:{0}#setXPathVariableResolver(null)"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_LOCALE_NAME_NOT_HANDLED	TokenNameIdentifier
,	TokenNameCOMMA
"A locale-név a format-number függvényben még nincs kezelve!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_PROPERTY_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Az XSL tulajdonság nem támogatott: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_DONT_DO_ANYTHING_WITH_NS	TokenNameIdentifier
,	TokenNameCOMMA
"Jelenleg ne tegyen semmit a(z) {0} névtérrel a tulajdonságban: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_SECURITY_EXCEPTION	TokenNameIdentifier
,	TokenNameCOMMA
"SecurityException az XSL rendszertulajdonság elérésénél: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_QUO_NO_LONGER_DEFINED	TokenNameIdentifier
,	TokenNameCOMMA
"A régi szintaktika: quo(...) többé nincs definiálva az XPath-ban."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST	TokenNameIdentifier
,	TokenNameCOMMA
"Az XPath-nak kell egy származtatott objektum a nodeTest-hez!"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_FUNCTION_TOKEN_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"A függvény jelsor nem található."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_COULDNOT_FIND_FUNCTION	TokenNameIdentifier
,	TokenNameCOMMA
"Nem található a függvény: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_CANNOT_MAKE_URL_FROM	TokenNameIdentifier
,	TokenNameCOMMA
"Nem készíthető URL ebből: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_EXPAND_ENTITIES_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"A -E opció nem támogatott a DTM értelmezőhöz"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ILLEGAL_VARIABLE_REFERENCE	TokenNameIdentifier
,	TokenNameCOMMA
"A változóra adott VariableReference (változóhivatkozás) kívül van a környezeten vagy nincs definíciója!  Név = {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_UNSUPPORTED_ENCODING	TokenNameIdentifier
,	TokenNameCOMMA
"Nem támogatott kódolás: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"ui_language"	TokenNameStringLiteral
,	TokenNameCOMMA
"hu"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"help_language"	TokenNameStringLiteral
,	TokenNameCOMMA
"hu"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"language"	TokenNameStringLiteral
,	TokenNameCOMMA
"hu"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"BAD_CODE"	TokenNameStringLiteral
,	TokenNameCOMMA
"A createMessage paramétere nincs a megfelelő tartományban"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"FORMAT_FAILED"	TokenNameStringLiteral
,	TokenNameCOMMA
"Kivétel történt a messageFormat hívás alatt"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"version"	TokenNameStringLiteral
,	TokenNameCOMMA
">>>>>>> Xalan verzió "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"version2"	TokenNameStringLiteral
,	TokenNameCOMMA
"<<<<<<<"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"yes"	TokenNameStringLiteral
,	TokenNameCOMMA
"igen"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"line"	TokenNameStringLiteral
,	TokenNameCOMMA
"Sor #"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"column"	TokenNameStringLiteral
,	TokenNameCOMMA
"Oszlop #"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xsldone"	TokenNameStringLiteral
,	TokenNameCOMMA
"XSLProcessor: kész"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xpath_option"	TokenNameStringLiteral
,	TokenNameCOMMA
"xpath opciói: "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionIN"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-in bemenetiXMLURL]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionSelect"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-select xpath kifejezés]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionMatch"	TokenNameStringLiteral
,	TokenNameCOMMA
"   [-match illesztési minta (az illesztési diagnosztikához)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionAnyExpr"	TokenNameStringLiteral
,	TokenNameCOMMA
"Vagy csak egy xpath kifejezés megcsinál egy diagnosztikai dump-ot"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg1"	TokenNameStringLiteral
,	TokenNameCOMMA
"Az XSL folyamat sikertelen volt."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg2"	TokenNameStringLiteral
,	TokenNameCOMMA
"** Az értelmező nem található **"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg3"	TokenNameStringLiteral
,	TokenNameCOMMA
"Kérem, ellenőrizze az osztály elérési utat."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg4"	TokenNameStringLiteral
,	TokenNameCOMMA
"Ha önnek nincs meg az IBM Java XML értelmezője, akkor letöltheti az"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg5"	TokenNameStringLiteral
,	TokenNameCOMMA
"IBM AlphaWorks weblapról: http://www.alphaworks.ibm.com/formula/xml"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"gtone"	TokenNameStringLiteral
,	TokenNameCOMMA
">1"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"zero"	TokenNameStringLiteral
,	TokenNameCOMMA
"0"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"one"	TokenNameStringLiteral
,	TokenNameCOMMA
"1"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"two"	TokenNameStringLiteral
,	TokenNameCOMMA
"2"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"three"	TokenNameStringLiteral
,	TokenNameCOMMA
"3"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
BAD_CODE	TokenNameIdentifier
=	TokenNameEQUAL
"BAD_CODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
FORMAT_FAILED	TokenNameIdentifier
=	TokenNameEQUAL
"FORMAT_FAILED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_RESOURCES	TokenNameIdentifier
=	TokenNameEQUAL
"org.apache.xpath.res.XPATHErrorResources"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"#error"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"Hiba: "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WARNING_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"Figyelmeztetés: "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
XSL_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"XSL "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
XML_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"XML "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
QUERY_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"MINTA "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
XPATHErrorResources	TokenNameIdentifier
loadResourceBundle	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
className	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
MissingResourceException	TokenNameIdentifier
{	TokenNameLBRACE
Locale	TokenNameIdentifier
locale	TokenNameIdentifier
=	TokenNameEQUAL
Locale	TokenNameIdentifier
.	TokenNameDOT
getDefault	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
suffix	TokenNameIdentifier
=	TokenNameEQUAL
getResourceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
locale	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
)	TokenNameRPAREN
ResourceBundle	TokenNameIdentifier
.	TokenNameDOT
getBundle	TokenNameIdentifier
(	TokenNameLPAREN
className	TokenNameIdentifier
+	TokenNamePLUS
suffix	TokenNameIdentifier
,	TokenNameCOMMA
locale	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MissingResourceException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
)	TokenNameRPAREN
ResourceBundle	TokenNameIdentifier
.	TokenNameDOT
getBundle	TokenNameIdentifier
(	TokenNameLPAREN
className	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Locale	TokenNameIdentifier
(	TokenNameLPAREN
"hu"	TokenNameStringLiteral
,	TokenNameCOMMA
"HU"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MissingResourceException	TokenNameIdentifier
e2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
MissingResourceException	TokenNameIdentifier
(	TokenNameLPAREN
"Could not load any resource bundles."	TokenNameStringLiteral
,	TokenNameCOMMA
className	TokenNameIdentifier
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
getResourceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
Locale	TokenNameIdentifier
locale	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
suffix	TokenNameIdentifier
=	TokenNameEQUAL
"_"	TokenNameStringLiteral
+	TokenNamePLUS
locale	TokenNameIdentifier
.	TokenNameDOT
getLanguage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
country	TokenNameIdentifier
=	TokenNameEQUAL
locale	TokenNameIdentifier
.	TokenNameDOT
getCountry	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
country	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
"TW"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
suffix	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
"_"	TokenNameStringLiteral
+	TokenNamePLUS
country	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
suffix	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
