package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
res	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ListResourceBundle	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Locale	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
MissingResourceException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ResourceBundle	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
XPATHErrorResources_es	TokenNameIdentifier
extends	TokenNameextends
ListResourceBundle	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR0000	TokenNameIdentifier
=	TokenNameEQUAL
"ERROR0000"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CURRENT_NOT_ALLOWED_IN_MATCH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CURRENT_NOT_ALLOWED_IN_MATCH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CURRENT_TAKES_NO_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CURRENT_TAKES_NO_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DOCUMENT_REPLACED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DOCUMENT_REPLACED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CONTEXT_HAS_NO_OWNERDOC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CONTEXT_HAS_NO_OWNERDOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_LOCALNAME_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_LOCALNAME_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAMESPACEURI_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAMESPACEURI_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NUMBER_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NUMBER_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAME_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAME_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STRING_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STRING_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STRINGLENGTH_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STRINGLENGTH_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TRANSLATE_TAKES_3_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TRANSLATE_TAKES_3_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNPARSEDENTITYURI_TAKES_1_ARG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNPARSEDENTITYURI_TAKES_1_ARG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAMESPACEAXIS_NOT_IMPLEMENTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAMESPACEAXIS_NOT_IMPLEMENTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_AXIS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_AXIS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_MATCH_OPERATION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_MATCH_OPERATION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INCORRECT_ARG_LENGTH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INCORRECT_ARG_LENGTH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_NUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_NODELIST	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_NODELIST"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_MUTABLENODELIST	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_MUTABLENODELIST"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_MATCH_PATTERN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_MATCH_PATTERN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNOT_GET_VAR_NAMED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNOT_GET_VAR_NAMED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_OPCODE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_OPCODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXTRA_ILLEGAL_TOKENS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXTRA_ILLEGAL_TOKENS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_DOUBLE_QUOTE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_DOUBLE_QUOTE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_SINGLE_QUOTE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_SINGLE_QUOTE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EMPTY_EXPRESSION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EMPTY_EXPRESSION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_BUT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_BUT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INCORRECT_PROGRAMMER_ASSERTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INCORRECT_PROGRAMMER_ASSERTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PREDICATE_ILLEGAL_SYNTAX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PREDICATE_ILLEGAL_SYNTAX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_AXIS_NAME	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_AXIS_NAME"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_NODETYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_NODETYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PATTERN_LITERAL_NEEDS_BE_QUOTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PATTERN_LITERAL_NEEDS_BE_QUOTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNOT_BE_FORMATTED_TO_NUMBER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNOT_BE_FORMATTED_TO_NUMBER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNOT_CREATE_XMLPROCESSORLIAISON	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNOT_CREATE_XMLPROCESSORLIAISON"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DIDNOT_FIND_XPATH_SELECT_EXP	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DIDNOT_FIND_XPATH_SELECT_EXP"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ERROR_OCCURED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ERROR_OCCURED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ILLEGAL_VARIABLE_REFERENCE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ILLEGAL_VARIABLE_REFERENCE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_AXES_NOT_ALLOWED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_AXES_NOT_ALLOWED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_KEY_HAS_TOO_MANY_ARGS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_KEY_HAS_TOO_MANY_ARGS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COUNT_TAKES_1_ARG	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COUNT_TAKES_1_ARG"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULDNOT_FIND_FUNCTION	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULDNOT_FIND_FUNCTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNSUPPORTED_ENCODING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNSUPPORTED_ENCODING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROBLEM_IN_DTM_NEXTSIBLING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROBLEM_IN_DTM_NEXTSIBLING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SETDOMFACTORY_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SETDOMFACTORY_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PREFIX_MUST_RESOLVE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PREFIX_MUST_RESOLVE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PARSE_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PARSE_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SAX_API_NOT_HANDLED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SAX_API_NOT_HANDLED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_IGNORABLE_WHITESPACE_NOT_HANDLED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_IGNORABLE_WHITESPACE_NOT_HANDLED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DTM_CANNOT_HANDLE_NODES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DTM_CANNOT_HANDLE_NODES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XERCES_CANNOT_HANDLE_NODES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XERCES_CANNOT_HANDLE_NODES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XERCES_PARSE_ERROR_DETAILS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XERCES_PARSE_ERROR_DETAILS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XERCES_PARSE_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XERCES_PARSE_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_UTF16_SURROGATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_UTF16_SURROGATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_OIERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_OIERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CREATE_URL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CREATE_URL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XPATH_READOBJECT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XPATH_READOBJECT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FUNCTION_TOKEN_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FUNCTION_TOKEN_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_DEAL_XPATH_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_DEAL_XPATH_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESET_NOT_MUTABLE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESET_NOT_MUTABLE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESETDTM_NOT_MUTABLE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESETDTM_NOT_MUTABLE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_VAR_NOT_RESOLVABLE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_VAR_NOT_RESOLVABLE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_ERROR_HANDLER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PROG_ASSERT_UNKNOWN_OPCODE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PROG_ASSERT_UNKNOWN_OPCODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ZERO_OR_ONE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ZERO_OR_ONE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_FIND_VAR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_FIND_VAR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FASTSTRINGBUFFER_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FASTSTRINGBUFFER_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TWO_OR_THREE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TWO_OR_THREE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_VARIABLE_ACCESSED_BEFORE_BIND	TokenNameIdentifier
=	TokenNameEQUAL
"ER_VARIABLE_ACCESSED_BEFORE_BIND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FSB_CANNOT_TAKE_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FSB_CANNOT_TAKE_STRING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SETTING_WALKER_ROOT_TO_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SETTING_WALKER_ROOT_TO_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESETDTM_CANNOT_ITERATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESETDTM_CANNOT_ITERATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESET_CANNOT_ITERATE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESET_CANNOT_ITERATE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESETDTM_CANNOT_INDEX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESETDTM_CANNOT_INDEX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODESET_CANNOT_INDEX	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODESET_CANNOT_INDEX"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CALL_SETSHOULDCACHENODE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CALL_SETSHOULDCACHENODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ONLY_ALLOWS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ONLY_ALLOWS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_STEP	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_STEP"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_REL_LOC_PATH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_REL_LOC_PATH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_LOC_PATH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_LOC_PATH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_LOC_PATH_AT_END_EXPR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_LOC_PATH_AT_END_EXPR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_LOC_STEP	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_LOC_STEP"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_NODE_TEST	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_NODE_TEST"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_STEP_PATTERN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_STEP_PATTERN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXPECTED_REL_PATH_PATTERN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXPECTED_REL_PATH_PATTERN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_BOOLEAN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_BOOLEAN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_SINGLENODE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_SINGLENODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_GET_SNAPSHOT_LENGTH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_GET_SNAPSHOT_LENGTH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NON_ITERATOR_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NON_ITERATOR_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DOC_MUTATED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DOC_MUTATED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_XPATH_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_XPATH_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EMPTY_XPATH_RESULT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EMPTY_XPATH_RESULT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INCOMPATIBLE_TYPES	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INCOMPATIBLE_TYPES"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_RESOLVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_RESOLVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_CONVERT_TO_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_CONVERT_TO_STRING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NON_SNAPSHOT_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NON_SNAPSHOT_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_WRONG_DOCUMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_WRONG_DOCUMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_WRONG_NODETYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_WRONG_NODETYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XPATH_ERROR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XPATH_ERROR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_RESOLVE_VARIABLE_RETURNS_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_RESOLVE_VARIABLE_RETURNS_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNSUPPORTED_RETURN_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNSUPPORTED_RETURN_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ARG_CANNOT_BE_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ARG_CANNOT_BE_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_OBJECT_MODEL_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_OBJECT_MODEL_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_OBJECT_MODEL_EMPTY	TokenNameIdentifier
=	TokenNameEQUAL
"ER_OBJECT_MODEL_EMPTY"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FEATURE_NAME_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FEATURE_NAME_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FEATURE_UNKNOWN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FEATURE_UNKNOWN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_GETTING_NULL_FEATURE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_GETTING_NULL_FEATURE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_GETTING_UNKNOWN_FEATURE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_GETTING_UNKNOWN_FEATURE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_XPATH_FUNCTION_RESOLVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_XPATH_FUNCTION_RESOLVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NULL_XPATH_VARIABLE_RESOLVER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NULL_XPATH_VARIABLE_RESOLVER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_LOCALE_NAME_NOT_HANDLED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_LOCALE_NAME_NOT_HANDLED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_PROPERTY_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_PROPERTY_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_DONT_DO_ANYTHING_WITH_NS	TokenNameIdentifier
=	TokenNameEQUAL
"WG_DONT_DO_ANYTHING_WITH_NS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_SECURITY_EXCEPTION	TokenNameIdentifier
=	TokenNameEQUAL
"WG_SECURITY_EXCEPTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_QUO_NO_LONGER_DEFINED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_QUO_NO_LONGER_DEFINED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST	TokenNameIdentifier
=	TokenNameEQUAL
"WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_FUNCTION_TOKEN_NOT_FOUND	TokenNameIdentifier
=	TokenNameEQUAL
"WG_FUNCTION_TOKEN_NOT_FOUND"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_COULDNOT_FIND_FUNCTION	TokenNameIdentifier
=	TokenNameEQUAL
"WG_COULDNOT_FIND_FUNCTION"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_CANNOT_MAKE_URL_FROM	TokenNameIdentifier
=	TokenNameEQUAL
"WG_CANNOT_MAKE_URL_FROM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_EXPAND_ENTITIES_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"WG_EXPAND_ENTITIES_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_ILLEGAL_VARIABLE_REFERENCE	TokenNameIdentifier
=	TokenNameEQUAL
"WG_ILLEGAL_VARIABLE_REFERENCE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WG_UNSUPPORTED_ENCODING	TokenNameIdentifier
=	TokenNameEQUAL
"WG_UNSUPPORTED_ENCODING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getContents	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
{	TokenNameLBRACE
"ERROR0000"	TokenNameStringLiteral
,	TokenNameCOMMA
"{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CURRENT_NOT_ALLOWED_IN_MATCH	TokenNameIdentifier
,	TokenNameCOMMA
"No está permitida la función current() en un patrón de coincidencia."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CURRENT_TAKES_NO_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"La función current() no acepta argumentos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DOCUMENT_REPLACED	TokenNameIdentifier
,	TokenNameCOMMA
"La implementación de la función document() ha sido sustituida por org.apache.xalan.xslt.FuncDocument."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CONTEXT_HAS_NO_OWNERDOC	TokenNameIdentifier
,	TokenNameCOMMA
"El contexto no tiene un documento propietario."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_LOCALNAME_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"local-name() tiene demasiados argumentos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAMESPACEURI_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"namespace-uri() tiene demasiados argumentos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"normalize-space() tiene demasiados argumentos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NUMBER_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"number() tiene demasiados argumentos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAME_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"name() tiene demasiados argumentos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STRING_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"string() tiene demasiados argumentos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STRINGLENGTH_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"string-length() tiene demasiados argumentos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TRANSLATE_TAKES_3_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"La función translate() utiliza tres argumentos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNPARSEDENTITYURI_TAKES_1_ARG	TokenNameIdentifier
,	TokenNameCOMMA
"La función unparsed-entity-uri debería utilizar un solo argumento."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAMESPACEAXIS_NOT_IMPLEMENTED	TokenNameIdentifier
,	TokenNameCOMMA
"Eje de espacio de nombres aún no implementado."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_AXIS	TokenNameIdentifier
,	TokenNameCOMMA
"Eje desconocido: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_MATCH_OPERATION	TokenNameIdentifier
,	TokenNameCOMMA
"Operación de coincidencia desconocida."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INCORRECT_ARG_LENGTH	TokenNameIdentifier
,	TokenNameCOMMA
"La longitud del argumento de prueba del nodo processing-instruction() es incorrecta."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede convertir {0} a un número"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_NODELIST	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede convertir {0} a NodeList."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_MUTABLENODELIST	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede convertir {0} a NodeSetDTM."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede convertir {0} a un tipo {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_MATCH_PATTERN	TokenNameIdentifier
,	TokenNameCOMMA
"Se esperaba un patrón de coincidencia en getMatchScore."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNOT_GET_VAR_NAMED	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido obtener la variable de nombre {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_OPCODE	TokenNameIdentifier
,	TokenNameCOMMA
"ERROR. Código de operación desconocido: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXTRA_ILLEGAL_TOKENS	TokenNameIdentifier
,	TokenNameCOMMA
"Señales extra no permitidas: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_DOUBLE_QUOTE	TokenNameIdentifier
,	TokenNameCOMMA
"Literal sin entrecomillar... Se esperaban comillas dobles."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_SINGLE_QUOTE	TokenNameIdentifier
,	TokenNameCOMMA
"Literal sin entrecomillar... Se esperaban comillas simples."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EMPTY_EXPRESSION	TokenNameIdentifier
,	TokenNameCOMMA
"Expresión vacía."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_BUT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"Se esperaba {0}, pero se ha encontrado: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INCORRECT_PROGRAMMER_ASSERTION	TokenNameIdentifier
,	TokenNameCOMMA
"La aserción del programador es incorrecta. - {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL	TokenNameIdentifier
,	TokenNameCOMMA
"El argumento boolean(...) ya no es opcional con el borrador de XPath 19990709."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha encontrado ',' pero sin argumento precedente."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha encontrado ',' pero sin argumento siguiente."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PREDICATE_ILLEGAL_SYNTAX	TokenNameIdentifier
,	TokenNameCOMMA
"'..[predicate]' o '.[predicate]' es una sintaxis no permitida. Utilice 'self::node()[predicate]' en su lugar."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_AXIS_NAME	TokenNameIdentifier
,	TokenNameCOMMA
"Nombre de eje no permitido: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_NODETYPE	TokenNameIdentifier
,	TokenNameCOMMA
"nodetype desconocido: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PATTERN_LITERAL_NEEDS_BE_QUOTED	TokenNameIdentifier
,	TokenNameCOMMA
"El literal del patrón ({0}) tiene que estar entrecomillado."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNOT_BE_FORMATTED_TO_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido formatear {0} como un número."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNOT_CREATE_XMLPROCESSORLIAISON	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido crear Liaison TransformerFactory XML: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DIDNOT_FIND_XPATH_SELECT_EXP	TokenNameIdentifier
,	TokenNameCOMMA
"Error. No se ha encontrado la expresión de selección (-select) de xpath."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH	TokenNameIdentifier
,	TokenNameCOMMA
"ERROR. No se ha podido encontrar ENDOP después de OP_LOCATIONPATH"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ERROR_OCCURED	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha producido un error."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ILLEGAL_VARIABLE_REFERENCE	TokenNameIdentifier
,	TokenNameCOMMA
"VariableReference dada para la variable está fuera de contexto o sin definición.  Nombre = {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_AXES_NOT_ALLOWED	TokenNameIdentifier
,	TokenNameCOMMA
"Sólo se permiten los ejes child:: y attribute:: en patrones de coincidencia.  Ejes incorrectos = {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_KEY_HAS_TOO_MANY_ARGS	TokenNameIdentifier
,	TokenNameCOMMA
"key() tiene un número incorrecto de argumentos."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COUNT_TAKES_1_ARG	TokenNameIdentifier
,	TokenNameCOMMA
"La función count debería utilizar un solo argumento."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULDNOT_FIND_FUNCTION	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido encontrar la función: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNSUPPORTED_ENCODING	TokenNameIdentifier
,	TokenNameCOMMA
"Codificación no soportada: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROBLEM_IN_DTM_NEXTSIBLING	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha producido un problema en DTM en getNextSibling... Intentando recuperar"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL	TokenNameIdentifier
,	TokenNameCOMMA
"Error del programador: No se puede escribir enEmptyNodeList."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SETDOMFACTORY_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"setDOMFactory no soportada por XPathContext."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PREFIX_MUST_RESOLVE	TokenNameIdentifier
,	TokenNameCOMMA
"El prefijo debe resolverse como un espacio de nombres: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PARSE_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"parse (InputSource source) no soportada en XPathContext. No se puede abrir {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SAX_API_NOT_HANDLED	TokenNameIdentifier
,	TokenNameCOMMA
"API SAX characters(char ch[]... no manejada por DTM."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_IGNORABLE_WHITESPACE_NOT_HANDLED	TokenNameIdentifier
,	TokenNameCOMMA
"ignorableWhitespace(char ch[]... no manejada por DTM."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DTM_CANNOT_HANDLE_NODES	TokenNameIdentifier
,	TokenNameCOMMA
"DTMLiaison no puede manejar nodos de tipo {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XERCES_CANNOT_HANDLE_NODES	TokenNameIdentifier
,	TokenNameCOMMA
"DOM2Helper no puede manejar nodos de tipo {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XERCES_PARSE_ERROR_DETAILS	TokenNameIdentifier
,	TokenNameCOMMA
"Error DOM2Helper.parse: SystemID - {0} línea - {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XERCES_PARSE_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"Error DOM2Helper.parse"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_UTF16_SURROGATE	TokenNameIdentifier
,	TokenNameCOMMA
"¿Se ha detectado un sustituto UTF-16 no válido: {0}?"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_OIERROR	TokenNameIdentifier
,	TokenNameCOMMA
"Error de ES"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CREATE_URL	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede crear url para: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XPATH_READOBJECT	TokenNameIdentifier
,	TokenNameCOMMA
"En XPath.readObject: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FUNCTION_TOKEN_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"Señal de función no encontrada."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_DEAL_XPATH_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede tratar con el tipo XPath: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESET_NOT_MUTABLE	TokenNameIdentifier
,	TokenNameCOMMA
"Este NodeSet no es mutable"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESETDTM_NOT_MUTABLE	TokenNameIdentifier
,	TokenNameCOMMA
"Este NodeSetDTM no es mutable"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_VAR_NOT_RESOLVABLE	TokenNameIdentifier
,	TokenNameCOMMA
"Variable no resoluble: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
"Manejador de error nulo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PROG_ASSERT_UNKNOWN_OPCODE	TokenNameIdentifier
,	TokenNameCOMMA
"Aserción del programador: opcode desconocido: {0} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ZERO_OR_ONE	TokenNameIdentifier
,	TokenNameCOMMA
"0 ó 1"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"rtf() no soportada por XRTreeFragSelectWrapper"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"asNodeIterator() no soportada por XRTreeFragSelectWrapper"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"detach() no soportada por XRTreeFragSelectWrapper "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"num() no soportada por XRTreeFragSelectWrapper"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"xstr() no soportada por XRTreeFragSelectWrapper "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER	TokenNameIdentifier
,	TokenNameCOMMA
"str() no soportada por XRTreeFragSelectWrapper"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS	TokenNameIdentifier
,	TokenNameCOMMA
"fsb() no soportada para XStringForChars"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_FIND_VAR	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido encontrar la variable con el nombre {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING	TokenNameIdentifier
,	TokenNameCOMMA
"XStringForChars no puede utilizar una serie para un argumento"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FASTSTRINGBUFFER_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"El argumento FastStringBuffer no puede ser nulo"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TWO_OR_THREE	TokenNameIdentifier
,	TokenNameCOMMA
"2 ó 3"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_VARIABLE_ACCESSED_BEFORE_BIND	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha accedido a la variable antes de enlazarla."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FSB_CANNOT_TAKE_STRING	TokenNameIdentifier
,	TokenNameCOMMA
"XStringForFSB no puede utilizar una serie para un argumento."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SETTING_WALKER_ROOT_TO_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"  Error. Estableciendo raíz de walker como nulo."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESETDTM_CANNOT_ITERATE	TokenNameIdentifier
,	TokenNameCOMMA
"Este NodeSetDTM no puede iterar a un nodo previo."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESET_CANNOT_ITERATE	TokenNameIdentifier
,	TokenNameCOMMA
"Este NodeSet no puede iterar a un nodo previo."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESETDTM_CANNOT_INDEX	TokenNameIdentifier
,	TokenNameCOMMA
"Este NodeSetDTM no puede realizar funciones de indexación o recuento."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODESET_CANNOT_INDEX	TokenNameIdentifier
,	TokenNameCOMMA
"Este NodeSet no puede realizar funciones de indexación o recuento."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CALL_SETSHOULDCACHENODE	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede llamar a setShouldCacheNodes después de llamar a nextNode."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ONLY_ALLOWS	TokenNameIdentifier
,	TokenNameCOMMA
"{0} sólo admite {1} argumentos"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_STEP	TokenNameIdentifier
,	TokenNameCOMMA
"Aserción del programador en getNextStepPos: stepType desconocido: {0} "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_REL_LOC_PATH	TokenNameIdentifier
,	TokenNameCOMMA
"Se esperaba una vía de acceso de ubicación relativa después de la señal '/' o '//'."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_LOC_PATH	TokenNameIdentifier
,	TokenNameCOMMA
"Se esperaba una vía de acceso de ubicación, pero se ha encontrado la señal siguiente:  {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_LOC_PATH_AT_END_EXPR	TokenNameIdentifier
,	TokenNameCOMMA
"Se esperaba una vía de acceso de ubicación, pero en su lugar se ha encontrado el final de la expresión XPath."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_LOC_STEP	TokenNameIdentifier
,	TokenNameCOMMA
"Se esperaba un paso de ubicación después de la señal '/' o '//'."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_NODE_TEST	TokenNameIdentifier
,	TokenNameCOMMA
"Se esperaba una prueba de nodo coincidente con NCName:* o QName."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_STEP_PATTERN	TokenNameIdentifier
,	TokenNameCOMMA
"Se esperaba un patrón de paso, pero se ha encontrado '/'."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXPECTED_REL_PATH_PATTERN	TokenNameIdentifier
,	TokenNameCOMMA
"Se esperaba un patrón de vía de acceso relativa."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_BOOLEAN	TokenNameIdentifier
,	TokenNameCOMMA
"XPathResult de la expresión XPath ''{0}'' tiene un XPathResultType de {1} que no se puede convertir a booleano."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_SINGLENODE	TokenNameIdentifier
,	TokenNameCOMMA
"XPathResult de la expresión XPath ''{0}'' tiene un XPathResultType de {1} que no se puede convertir a un solo nodo. El método getSingleNodeValue se aplica sólo a tipos ANY_UNORDERED_NODE_TYPE and FIRST_ORDERED_NODE_TYPE."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_GET_SNAPSHOT_LENGTH	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede llamar al método getSnapshotLength en XPathResult de la expresión XPath ''{0}'' porque su XPathResultType es {1}. Este método se aplica sólo a los tipos UNORDERED_NODE_SNAPSHOT_TYPE y ORDERED_NODE_SNAPSHOT_TYPE. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NON_ITERATOR_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede llamar al método iterateNext en XPathResult de la expresión XPath ''{0}'' porque su XPathResultType es {1}. Este método se aplica sólo a los tipos UNORDERED_NODE_ITERATOR_TYPE y ORDERED_NODE_ITERATOR_TYPE. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_DOC_MUTATED	TokenNameIdentifier
,	TokenNameCOMMA
"El documento ha mutado desde que se devolvió el resultado. El iterador no es válido."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_XPATH_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"Argumento de tipo XPath no válido: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EMPTY_XPATH_RESULT	TokenNameIdentifier
,	TokenNameCOMMA
"Objeto de resultado XPath vacío"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INCOMPATIBLE_TYPES	TokenNameIdentifier
,	TokenNameCOMMA
"XPathResult de la expresión XPath ''{0}'' tiene un XPathResultType de {1} que no se puede forzar al  XPathResultType especificado de {2}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_RESOLVER	TokenNameIdentifier
,	TokenNameCOMMA
"Imposible resolver prefijo con un solucionador de prefijo nulo."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_TO_STRING	TokenNameIdentifier
,	TokenNameCOMMA
"XPathResult de la expresión XPath ''{0}'' tiene un XPathResultType de {1} que no se puede convertir a una serie."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NON_SNAPSHOT_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede llamar al método snapshotItem en XPathResult de la expresión XPath ''{0}'' porque su XPathResultType es {1}. Este método se aplica sólo a los tipos UNORDERED_NODE_SNAPSHOT_TYPE y ORDERED_NODE_SNAPSHOT_TYPE. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_WRONG_DOCUMENT	TokenNameIdentifier
,	TokenNameCOMMA
"El nodo de contexto no pertenece al documento que está enlazado a este XPathEvaluator."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_WRONG_NODETYPE	TokenNameIdentifier
,	TokenNameCOMMA
"El tipo de nodo de contexto no está soportado."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XPATH_ERROR	TokenNameIdentifier
,	TokenNameCOMMA
"Error desconocido en XPath."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER	TokenNameIdentifier
,	TokenNameCOMMA
"XPathResult de la expresión XPath ''{0}'' tiene un XPathResultType de {1} que no se puede convertir a un número."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED	TokenNameIdentifier
,	TokenNameCOMMA
"La función de extensión: ''{0}'' no se puede invocar si la característica XMLConstants.FEATURE_SECURE_PROCESSING está establecida en true."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_RESOLVE_VARIABLE_RETURNS_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"resolveVariable para la variable {0} devuelve null"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNSUPPORTED_RETURN_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"Tipo devuelto no soportado : {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"El tipo de origen y/o devuelto no puede ser null"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ARG_CANNOT_BE_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"El argumento {0} no puede ser null"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_OBJECT_MODEL_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede llamar a {0}#isObjectModelSupported( String objectModel ) con objectModel == null"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_OBJECT_MODEL_EMPTY	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede llamar a {0}#isObjectModelSupported( String objectModel ) con objectModel == """	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FEATURE_NAME_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha intentado establecer una característica con un nombre null: {0}#setFeature( null, {1})"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FEATURE_UNKNOWN	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha intentado establecer la característica "{0}":{1}#setFeature({0},{2}) desconocida"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_GETTING_NULL_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha intentado obtener una característica con un nombre null: {0}#getFeature(null)"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_GETTING_UNKNOWN_FEATURE	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha intentado obtener la característica desconocida "{0}":{1}#getFeature({0})"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_XPATH_FUNCTION_RESOLVER	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha intentado establecer un XPathFunctionResolver:{0}#setXPathFunctionResolver(null) null"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NULL_XPATH_VARIABLE_RESOLVER	TokenNameIdentifier
,	TokenNameCOMMA
"Se ha intentado establecer un XPathVariableResolver:{0}#setXPathVariableResolver(null) null"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_LOCALE_NAME_NOT_HANDLED	TokenNameIdentifier
,	TokenNameCOMMA
"No se maneja aún el nombre de entorno local en la función format-number."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_PROPERTY_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Propiedad XSL no soportada: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_DONT_DO_ANYTHING_WITH_NS	TokenNameIdentifier
,	TokenNameCOMMA
"No hacer nada actualmente con el espacio de nombres {0} en la propiedad: {1}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_SECURITY_EXCEPTION	TokenNameIdentifier
,	TokenNameCOMMA
"SecurityException al intentar acceder a la propiedad del sistema XSL: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_QUO_NO_LONGER_DEFINED	TokenNameIdentifier
,	TokenNameCOMMA
"La antigua sintaxis: quo(...) ya no está definida en XPath."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST	TokenNameIdentifier
,	TokenNameCOMMA
"XPath necesita un objeto derivado para implementar nodeTest."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_FUNCTION_TOKEN_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
"Señal de función no encontrada."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_COULDNOT_FIND_FUNCTION	TokenNameIdentifier
,	TokenNameCOMMA
"No se ha podido encontrar la función: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_CANNOT_MAKE_URL_FROM	TokenNameIdentifier
,	TokenNameCOMMA
"No se puede crear URL desde: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_EXPAND_ENTITIES_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Opción -E no soportada para analizador DTM"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_ILLEGAL_VARIABLE_REFERENCE	TokenNameIdentifier
,	TokenNameCOMMA
"VariableReference dada para la variable está fuera de contexto o sin definición  Nombre = {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
WG_UNSUPPORTED_ENCODING	TokenNameIdentifier
,	TokenNameCOMMA
"Codificación no soportada: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"ui_language"	TokenNameStringLiteral
,	TokenNameCOMMA
"es"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"help_language"	TokenNameStringLiteral
,	TokenNameCOMMA
"es"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"language"	TokenNameStringLiteral
,	TokenNameCOMMA
"es"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"BAD_CODE"	TokenNameStringLiteral
,	TokenNameCOMMA
"El parámetro para createMessage estaba fuera de los límites"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"FORMAT_FAILED"	TokenNameStringLiteral
,	TokenNameCOMMA
"Se ha generado una excepción durante la llamada messageFormat"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"version"	TokenNameStringLiteral
,	TokenNameCOMMA
">>>>>>> Xalan versión "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"version2"	TokenNameStringLiteral
,	TokenNameCOMMA
"<<<<<<<"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"yes"	TokenNameStringLiteral
,	TokenNameCOMMA
"sí"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"line"	TokenNameStringLiteral
,	TokenNameCOMMA
"Línea núm."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"column"	TokenNameStringLiteral
,	TokenNameCOMMA
"Columna núm."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xsldone"	TokenNameStringLiteral
,	TokenNameCOMMA
"XSLProcessor: terminado"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"xpath_option"	TokenNameStringLiteral
,	TokenNameCOMMA
"Opciones de xpath: "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionIN"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-in URLXMLEntrada]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionSelect"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-select expresión xpath]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionMatch"	TokenNameStringLiteral
,	TokenNameCOMMA
"[-match patrón de coincidencia (para diagnósticos de coincidencia)]"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"optionAnyExpr"	TokenNameStringLiteral
,	TokenNameCOMMA
"O simplemente una expresión xpath realizará un vuelco de diagnóstico"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg1"	TokenNameStringLiteral
,	TokenNameCOMMA
"El proceso XSL no ha sido satisfactorio."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg2"	TokenNameStringLiteral
,	TokenNameCOMMA
"** No se ha podido encontrar el analizador **"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg3"	TokenNameStringLiteral
,	TokenNameCOMMA
"Compruebe la classpath."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg4"	TokenNameStringLiteral
,	TokenNameCOMMA
"Si no dispone del analizador XML para Java de IBM, puede descargarlo de"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"noParsermsg5"	TokenNameStringLiteral
,	TokenNameCOMMA
"IBM AlphaWorks: http://www.alphaworks.ibm.com/formula/xml"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"gtone"	TokenNameStringLiteral
,	TokenNameCOMMA
">1"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"zero"	TokenNameStringLiteral
,	TokenNameCOMMA
"0"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"one"	TokenNameStringLiteral
,	TokenNameCOMMA
"1"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"two"	TokenNameStringLiteral
,	TokenNameCOMMA
"2"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"three"	TokenNameStringLiteral
,	TokenNameCOMMA
"3"	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
BAD_CODE	TokenNameIdentifier
=	TokenNameEQUAL
"BAD_CODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
FORMAT_FAILED	TokenNameIdentifier
=	TokenNameEQUAL
"FORMAT_FAILED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_RESOURCES	TokenNameIdentifier
=	TokenNameEQUAL
"org.apache.xpath.res.XPATHErrorResources"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"#error"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ERROR_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"Error: "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
WARNING_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"Aviso: "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
XSL_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"XSL "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
XML_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"XML "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
QUERY_HEADER	TokenNameIdentifier
=	TokenNameEQUAL
"PATTERN "	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
XPATHErrorResources	TokenNameIdentifier
loadResourceBundle	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
className	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
MissingResourceException	TokenNameIdentifier
{	TokenNameLBRACE
Locale	TokenNameIdentifier
locale	TokenNameIdentifier
=	TokenNameEQUAL
Locale	TokenNameIdentifier
.	TokenNameDOT
getDefault	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
suffix	TokenNameIdentifier
=	TokenNameEQUAL
getResourceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
locale	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
)	TokenNameRPAREN
ResourceBundle	TokenNameIdentifier
.	TokenNameDOT
getBundle	TokenNameIdentifier
(	TokenNameLPAREN
className	TokenNameIdentifier
+	TokenNamePLUS
suffix	TokenNameIdentifier
,	TokenNameCOMMA
locale	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MissingResourceException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
)	TokenNameRPAREN
ResourceBundle	TokenNameIdentifier
.	TokenNameDOT
getBundle	TokenNameIdentifier
(	TokenNameLPAREN
className	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Locale	TokenNameIdentifier
(	TokenNameLPAREN
"es"	TokenNameStringLiteral
,	TokenNameCOMMA
"ES"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MissingResourceException	TokenNameIdentifier
e2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
MissingResourceException	TokenNameIdentifier
(	TokenNameLPAREN
"Could not load any resource bundles."	TokenNameStringLiteral
,	TokenNameCOMMA
className	TokenNameIdentifier
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
getResourceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
Locale	TokenNameIdentifier
locale	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
suffix	TokenNameIdentifier
=	TokenNameEQUAL
"_"	TokenNameStringLiteral
+	TokenNamePLUS
locale	TokenNameIdentifier
.	TokenNameDOT
getLanguage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
country	TokenNameIdentifier
=	TokenNameEQUAL
locale	TokenNameIdentifier
.	TokenNameDOT
getCountry	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
country	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
"TW"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
suffix	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
"_"	TokenNameStringLiteral
+	TokenNamePLUS
country	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
suffix	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
