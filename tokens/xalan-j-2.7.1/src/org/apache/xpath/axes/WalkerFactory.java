package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
axes	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
res	TokenNameIdentifier
.	TokenNameDOT
XSLMessages	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
dtm	TokenNameIdentifier
.	TokenNameDOT
Axis	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
dtm	TokenNameIdentifier
.	TokenNameDOT
DTMFilter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
dtm	TokenNameIdentifier
.	TokenNameDOT
DTMIterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
Expression	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
Compiler	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
FunctionTable	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
OpCodes	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
.	TokenNameDOT
OpMap	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
objects	TokenNameIdentifier
.	TokenNameDOT
XNumber	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
patterns	TokenNameIdentifier
.	TokenNameDOT
ContextMatchStepPattern	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
patterns	TokenNameIdentifier
.	TokenNameDOT
FunctionPattern	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
patterns	TokenNameIdentifier
.	TokenNameDOT
NodeTest	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
patterns	TokenNameIdentifier
.	TokenNameDOT
StepPattern	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
res	TokenNameIdentifier
.	TokenNameDOT
XPATHErrorResources	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
WalkerFactory	TokenNameIdentifier
{	TokenNameLBRACE
static	TokenNamestatic
AxesWalker	TokenNameIdentifier
loadOneWalker	TokenNameIdentifier
(	TokenNameLPAREN
WalkingIterator	TokenNameIdentifier
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Compiler	TokenNameIdentifier
compiler	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
AxesWalker	TokenNameIdentifier
firstWalker	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
stepType	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
stepType	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
OpCodes	TokenNameIdentifier
.	TokenNameDOT
ENDOP	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
firstWalker	TokenNameIdentifier
=	TokenNameEQUAL
createDefaultWalker	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
stepType	TokenNameIdentifier
,	TokenNameCOMMA
lpi	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
firstWalker	TokenNameIdentifier
.	TokenNameDOT
init	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
stepOpCodePos	TokenNameIdentifier
,	TokenNameCOMMA
stepType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
firstWalker	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
AxesWalker	TokenNameIdentifier
loadWalkers	TokenNameIdentifier
(	TokenNameLPAREN
WalkingIterator	TokenNameIdentifier
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Compiler	TokenNameIdentifier
compiler	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
stepOpCodePos	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
stepIndex	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
stepType	TokenNameIdentifier
;	TokenNameSEMICOLON
AxesWalker	TokenNameIdentifier
firstWalker	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
AxesWalker	TokenNameIdentifier
walker	TokenNameIdentifier
,	TokenNameCOMMA
prevWalker	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
analysis	TokenNameIdentifier
=	TokenNameEQUAL
analyze	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
stepOpCodePos	TokenNameIdentifier
,	TokenNameCOMMA
stepIndex	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
OpCodes	TokenNameIdentifier
.	TokenNameDOT
ENDOP	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
(	TokenNameLPAREN
stepType	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
walker	TokenNameIdentifier
=	TokenNameEQUAL
createDefaultWalker	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
stepOpCodePos	TokenNameIdentifier
,	TokenNameCOMMA
lpi	TokenNameIdentifier
,	TokenNameCOMMA
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
walker	TokenNameIdentifier
.	TokenNameDOT
init	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
stepOpCodePos	TokenNameIdentifier
,	TokenNameCOMMA
stepType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
walker	TokenNameIdentifier
.	TokenNameDOT
exprSetParent	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
firstWalker	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
firstWalker	TokenNameIdentifier
=	TokenNameEQUAL
walker	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
prevWalker	TokenNameIdentifier
.	TokenNameDOT
setNextWalker	TokenNameIdentifier
(	TokenNameLPAREN
walker	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
walker	TokenNameIdentifier
.	TokenNameDOT
setPrevWalker	TokenNameIdentifier
(	TokenNameLPAREN
prevWalker	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
prevWalker	TokenNameIdentifier
=	TokenNameEQUAL
walker	TokenNameIdentifier
;	TokenNameSEMICOLON
stepOpCodePos	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getNextStepPos	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
<	TokenNameLESS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
firstWalker	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isSet	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
bits	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
!=	TokenNameNOT_EQUAL
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
bits	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
diagnoseIterator	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
analysis	TokenNameIdentifier
,	TokenNameCOMMA
Compiler	TokenNameIdentifier
compiler	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
", "	TokenNameStringLiteral
+	TokenNamePLUS
name	TokenNameIdentifier
+	TokenNamePLUS
", "	TokenNameStringLiteral
+	TokenNamePLUS
Integer	TokenNameIdentifier
.	TokenNameDOT
toBinaryString	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
", "	TokenNameStringLiteral
+	TokenNamePLUS
getAnalysisString	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
DTMIterator	TokenNameIdentifier
newDTMIterator	TokenNameIdentifier
(	TokenNameLPAREN
Compiler	TokenNameIdentifier
compiler	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
opPos	TokenNameIdentifier
,	TokenNameCOMMA
boolean	TokenNameboolean
isTopLevel	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
firstStepPos	TokenNameIdentifier
=	TokenNameEQUAL
OpMap	TokenNameIdentifier
.	TokenNameDOT
getFirstChildPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
analysis	TokenNameIdentifier
=	TokenNameEQUAL
analyze	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
firstStepPos	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
isOneStep	TokenNameIdentifier
=	TokenNameEQUAL
isOneStep	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
DTMIterator	TokenNameIdentifier
iter	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isOneStep	TokenNameIdentifier
&&	TokenNameAND_AND
walksSelfOnly	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
isWild	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
hasPredicate	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
DEBUG_ITERATOR_CREATION	TokenNameIdentifier
)	TokenNameRPAREN
diagnoseIterator	TokenNameIdentifier
(	TokenNameLPAREN
"SelfIteratorNoPredicate"	TokenNameStringLiteral
,	TokenNameCOMMA
analysis	TokenNameIdentifier
,	TokenNameCOMMA
compiler	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
iter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
SelfIteratorNoPredicate	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
opPos	TokenNameIdentifier
,	TokenNameCOMMA
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
walksChildrenOnly	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
isOneStep	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
isWild	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
hasPredicate	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
DEBUG_ITERATOR_CREATION	TokenNameIdentifier
)	TokenNameRPAREN
diagnoseIterator	TokenNameIdentifier
(	TokenNameLPAREN
"ChildIterator"	TokenNameStringLiteral
,	TokenNameCOMMA
analysis	TokenNameIdentifier
,	TokenNameCOMMA
compiler	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
iter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ChildIterator	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
opPos	TokenNameIdentifier
,	TokenNameCOMMA
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
DEBUG_ITERATOR_CREATION	TokenNameIdentifier
)	TokenNameRPAREN
diagnoseIterator	TokenNameIdentifier
(	TokenNameLPAREN
"ChildTestIterator"	TokenNameStringLiteral
,	TokenNameCOMMA
analysis	TokenNameIdentifier
,	TokenNameCOMMA
compiler	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
iter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ChildTestIterator	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
opPos	TokenNameIdentifier
,	TokenNameCOMMA
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
isOneStep	TokenNameIdentifier
&&	TokenNameAND_AND
walksAttributes	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
DEBUG_ITERATOR_CREATION	TokenNameIdentifier
)	TokenNameRPAREN
diagnoseIterator	TokenNameIdentifier
(	TokenNameLPAREN
"AttributeIterator"	TokenNameStringLiteral
,	TokenNameCOMMA
analysis	TokenNameIdentifier
,	TokenNameCOMMA
compiler	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
iter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AttributeIterator	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
opPos	TokenNameIdentifier
,	TokenNameCOMMA
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
isOneStep	TokenNameIdentifier
&&	TokenNameAND_AND
!	TokenNameNOT
walksFilteredList	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
walksNamespaces	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
walksInDocOrder	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_PARENT	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
false	TokenNamefalse
||	TokenNameOR_OR
DEBUG_ITERATOR_CREATION	TokenNameIdentifier
)	TokenNameRPAREN
diagnoseIterator	TokenNameIdentifier
(	TokenNameLPAREN
"OneStepIteratorForward"	TokenNameStringLiteral
,	TokenNameCOMMA
analysis	TokenNameIdentifier
,	TokenNameCOMMA
compiler	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
iter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
OneStepIteratorForward	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
opPos	TokenNameIdentifier
,	TokenNameCOMMA
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
false	TokenNamefalse
||	TokenNameOR_OR
DEBUG_ITERATOR_CREATION	TokenNameIdentifier
)	TokenNameRPAREN
diagnoseIterator	TokenNameIdentifier
(	TokenNameLPAREN
"OneStepIterator"	TokenNameStringLiteral
,	TokenNameCOMMA
analysis	TokenNameIdentifier
,	TokenNameCOMMA
compiler	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
iter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
OneStepIterator	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
opPos	TokenNameIdentifier
,	TokenNameCOMMA
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
isOptimizableForDescendantIterator	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
firstStepPos	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
DEBUG_ITERATOR_CREATION	TokenNameIdentifier
)	TokenNameRPAREN
diagnoseIterator	TokenNameIdentifier
(	TokenNameLPAREN
"DescendantIterator"	TokenNameStringLiteral
,	TokenNameCOMMA
analysis	TokenNameIdentifier
,	TokenNameCOMMA
compiler	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
iter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DescendantIterator	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
opPos	TokenNameIdentifier
,	TokenNameCOMMA
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
isNaturalDocOrder	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
firstStepPos	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
false	TokenNamefalse
||	TokenNameOR_OR
DEBUG_ITERATOR_CREATION	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
diagnoseIterator	TokenNameIdentifier
(	TokenNameLPAREN
"WalkingIterator"	TokenNameStringLiteral
,	TokenNameCOMMA
analysis	TokenNameIdentifier
,	TokenNameCOMMA
compiler	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
iter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
WalkingIterator	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
opPos	TokenNameIdentifier
,	TokenNameCOMMA
analysis	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
DEBUG_ITERATOR_CREATION	TokenNameIdentifier
)	TokenNameRPAREN
diagnoseIterator	TokenNameIdentifier
(	TokenNameLPAREN
"WalkingIteratorSorted"	TokenNameStringLiteral
,	TokenNameCOMMA
analysis	TokenNameIdentifier
,	TokenNameCOMMA
compiler	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
iter	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
WalkingIteratorSorted	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
opPos	TokenNameIdentifier
,	TokenNameCOMMA
analysis	TokenNameIdentifier
,	TokenNameCOMMA
true	TokenNametrue
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
iter	TokenNameIdentifier
instanceof	TokenNameinstanceof
LocPathIterator	TokenNameIdentifier
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
LocPathIterator	TokenNameIdentifier
)	TokenNameRPAREN
iter	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setIsTopLevel	TokenNameIdentifier
(	TokenNameLPAREN
isTopLevel	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
iter	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
getAxisFromStep	TokenNameIdentifier
(	TokenNameLPAREN
Compiler	TokenNameIdentifier
compiler	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
stepType	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_FOLLOWING	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Axis	TokenNameIdentifier
.	TokenNameDOT
FOLLOWING	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_FOLLOWING_SIBLINGS	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Axis	TokenNameIdentifier
.	TokenNameDOT
FOLLOWINGSIBLING	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PRECEDING	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Axis	TokenNameIdentifier
.	TokenNameDOT
PRECEDING	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PRECEDING_SIBLINGS	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Axis	TokenNameIdentifier
.	TokenNameDOT
PRECEDINGSIBLING	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PARENT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Axis	TokenNameIdentifier
.	TokenNameDOT
PARENT	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_NAMESPACE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Axis	TokenNameIdentifier
.	TokenNameDOT
NAMESPACE	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ANCESTORS	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Axis	TokenNameIdentifier
.	TokenNameDOT
ANCESTOR	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ANCESTORS_OR_SELF	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Axis	TokenNameIdentifier
.	TokenNameDOT
ANCESTORORSELF	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ATTRIBUTES	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Axis	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ROOT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Axis	TokenNameIdentifier
.	TokenNameDOT
ROOT	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_CHILDREN	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Axis	TokenNameIdentifier
.	TokenNameDOT
CHILD	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_DESCENDANTS_OR_SELF	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANTORSELF	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_DESCENDANTS	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANT	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_SELF	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Axis	TokenNameIdentifier
.	TokenNameDOT
SELF	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_EXTFUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_FUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GROUP	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_VARIABLE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
Axis	TokenNameIdentifier
.	TokenNameDOT
FILTEREDLIST	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
XSLMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
Integer	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
public	TokenNamepublic
int	TokenNameint
getAnalysisBitFromAxes	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
axis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
switch	TokenNameswitch
(	TokenNameLPAREN
axis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
ANCESTOR	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_ANCESTOR	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
ANCESTORORSELF	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_ANCESTOR_OR_SELF	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_ATTRIBUTE	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
CHILD	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_CHILD	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_DESCENDANT	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANTORSELF	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_DESCENDANT_OR_SELF	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
FOLLOWING	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_FOLLOWING	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
FOLLOWINGSIBLING	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_FOLLOWING_SIBLING	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
NAMESPACE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
NAMESPACEDECLS	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_NAMESPACE	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
PARENT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_PARENT	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
PRECEDING	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_PRECEDING	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
PRECEDINGSIBLING	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_PRECEDING_SIBLING	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
SELF	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_SELF	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
ALLFROMNODE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_DESCENDANT_OR_SELF	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANTSFROMROOT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
ALL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANTSORSELFFROMROOT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_ANY_DESCENDANT_FROM_ROOT	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
ROOT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_ROOT	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
Axis	TokenNameIdentifier
.	TokenNameDOT
FILTEREDLIST	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
BIT_FILTER	TokenNameIdentifier
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
BIT_FILTER	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
static	TokenNamestatic
boolean	TokenNameboolean
functionProximateOrContainsProximate	TokenNameIdentifier
(	TokenNameLPAREN
Compiler	TokenNameIdentifier
compiler	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
endFunc	TokenNameIdentifier
=	TokenNameEQUAL
opPos	TokenNameIdentifier
+	TokenNamePLUS
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
opPos	TokenNameIdentifier
=	TokenNameEQUAL
OpMap	TokenNameIdentifier
.	TokenNameDOT
getFirstChildPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
funcID	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
funcID	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
FunctionTable	TokenNameIdentifier
.	TokenNameDOT
FUNC_LAST	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
FunctionTable	TokenNameIdentifier
.	TokenNameDOT
FUNC_POSITION	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
opPos	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
p	TokenNameIdentifier
=	TokenNameEQUAL
opPos	TokenNameIdentifier
;	TokenNameSEMICOLON
p	TokenNameIdentifier
<	TokenNameLESS
endFunc	TokenNameIdentifier
;	TokenNameSEMICOLON
p	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getNextOpPos	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
innerExprOpPos	TokenNameIdentifier
=	TokenNameEQUAL
p	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
argOp	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
innerExprOpPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
prox	TokenNameIdentifier
=	TokenNameEQUAL
isProximateInnerExpr	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
innerExprOpPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
prox	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
boolean	TokenNameboolean
isProximateInnerExpr	TokenNameIdentifier
(	TokenNameLPAREN
Compiler	TokenNameIdentifier
compiler	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
op	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
innerExprOpPos	TokenNameIdentifier
=	TokenNameEQUAL
opPos	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
op	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_ARGUMENT	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
isProximateInnerExpr	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
innerExprOpPos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_VARIABLE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_NUMBERLIT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_LITERAL	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_LOCATIONPATH	TokenNameIdentifier
:	TokenNameCOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_FUNCTION	TokenNameIdentifier
:	TokenNameCOLON
boolean	TokenNameboolean
isProx	TokenNameIdentifier
=	TokenNameEQUAL
functionProximateOrContainsProximate	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isProx	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GTE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_LT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_LTE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_EQUALS	TokenNameIdentifier
:	TokenNameCOLON
int	TokenNameint
leftPos	TokenNameIdentifier
=	TokenNameEQUAL
OpMap	TokenNameIdentifier
.	TokenNameDOT
getFirstChildPos	TokenNameIdentifier
(	TokenNameLPAREN
op	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
rightPos	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getNextOpPos	TokenNameIdentifier
(	TokenNameLPAREN
leftPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
isProx	TokenNameIdentifier
=	TokenNameEQUAL
isProximateInnerExpr	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
leftPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isProx	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
isProx	TokenNameIdentifier
=	TokenNameEQUAL
isProximateInnerExpr	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
rightPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isProx	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
mightBeProximate	TokenNameIdentifier
(	TokenNameLPAREN
Compiler	TokenNameIdentifier
compiler	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
opPos	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
stepType	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
boolean	TokenNameboolean
mightBeProximate	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
int	TokenNameint
argLen	TokenNameIdentifier
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_VARIABLE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_EXTFUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_FUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GROUP	TokenNameIdentifier
:	TokenNameCOLON
argLen	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getArgLength	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
argLen	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getArgLengthOfStep	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
predPos	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getFirstPredicateOpPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
count	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_PREDICATE	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
predPos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
count	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
int	TokenNameint
innerExprOpPos	TokenNameIdentifier
=	TokenNameEQUAL
predPos	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
predOp	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
innerExprOpPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
predOp	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_VARIABLE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_LOCATIONPATH	TokenNameIdentifier
:	TokenNameCOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_NUMBER	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_NUMBERLIT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_FUNCTION	TokenNameIdentifier
:	TokenNameCOLON
boolean	TokenNameboolean
isProx	TokenNameIdentifier
=	TokenNameEQUAL
functionProximateOrContainsProximate	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
innerExprOpPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isProx	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GTE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_LT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_LTE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_EQUALS	TokenNameIdentifier
:	TokenNameCOLON
int	TokenNameint
leftPos	TokenNameIdentifier
=	TokenNameEQUAL
OpMap	TokenNameIdentifier
.	TokenNameDOT
getFirstChildPos	TokenNameIdentifier
(	TokenNameLPAREN
innerExprOpPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
rightPos	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getNextOpPos	TokenNameIdentifier
(	TokenNameLPAREN
leftPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
isProx	TokenNameIdentifier
=	TokenNameEQUAL
isProximateInnerExpr	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
leftPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isProx	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
isProx	TokenNameIdentifier
=	TokenNameEQUAL
isProximateInnerExpr	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
rightPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isProx	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
predPos	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getNextOpPos	TokenNameIdentifier
(	TokenNameLPAREN
predPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
mightBeProximate	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
boolean	TokenNameboolean
isOptimizableForDescendantIterator	TokenNameIdentifier
(	TokenNameLPAREN
Compiler	TokenNameIdentifier
compiler	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
stepOpCodePos	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
stepIndex	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
stepType	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
stepCount	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
boolean	TokenNameboolean
foundDorDS	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
boolean	TokenNameboolean
foundSelf	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
boolean	TokenNameboolean
foundDS	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
int	TokenNameint
nodeTestType	TokenNameIdentifier
=	TokenNameEQUAL
OpCodes	TokenNameIdentifier
.	TokenNameDOT
NODETYPE_NODE	TokenNameIdentifier
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
OpCodes	TokenNameIdentifier
.	TokenNameDOT
ENDOP	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
(	TokenNameLPAREN
stepType	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
nodeTestType	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
OpCodes	TokenNameIdentifier
.	TokenNameDOT
NODETYPE_NODE	TokenNameIdentifier
&&	TokenNameAND_AND
nodeTestType	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
OpCodes	TokenNameIdentifier
.	TokenNameDOT
NODETYPE_ROOT	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
stepCount	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
stepCount	TokenNameIdentifier
>	TokenNameGREATER
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
boolean	TokenNameboolean
mightBeProximate	TokenNameIdentifier
=	TokenNameEQUAL
mightBeProximate	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
stepOpCodePos	TokenNameIdentifier
,	TokenNameCOMMA
stepType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
mightBeProximate	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_FOLLOWING	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_FOLLOWING_SIBLINGS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PRECEDING	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PRECEDING_SIBLINGS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PARENT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_VARIABLE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_EXTFUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_FUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GROUP	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_NAMESPACE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ANCESTORS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ANCESTORS_OR_SELF	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ATTRIBUTES	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_ATTRIBUTE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_ANY_ANCESTOR	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_IMMEDIATE_ANCESTOR	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ROOT	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
!=	TokenNameNOT_EQUAL
stepCount	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_CHILDREN	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
foundDS	TokenNameIdentifier
&&	TokenNameAND_AND
!	TokenNameNOT
(	TokenNameLPAREN
foundDorDS	TokenNameIdentifier
&&	TokenNameAND_AND
foundSelf	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_DESCENDANTS_OR_SELF	TokenNameIdentifier
:	TokenNameCOLON
foundDS	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_DESCENDANTS	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
3	TokenNameIntegerLiteral
==	TokenNameEQUAL_EQUAL
stepCount	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
foundDorDS	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_SELF	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
!=	TokenNameNOT_EQUAL
stepCount	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
foundSelf	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
XSLMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
Integer	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
nodeTestType	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getStepTestType	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
nextStepOpCodePos	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getNextStepPos	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
nextStepOpCodePos	TokenNameIdentifier
<	TokenNameLESS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
OpCodes	TokenNameIdentifier
.	TokenNameDOT
ENDOP	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
nextStepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
compiler	TokenNameIdentifier
.	TokenNameDOT
countPredicates	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
stepOpCodePos	TokenNameIdentifier
=	TokenNameEQUAL
nextStepOpCodePos	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
int	TokenNameint
analyze	TokenNameIdentifier
(	TokenNameLPAREN
Compiler	TokenNameIdentifier
compiler	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
stepOpCodePos	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
stepIndex	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
stepType	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
stepCount	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
int	TokenNameint
analysisResult	TokenNameIdentifier
=	TokenNameEQUAL
0x00000000	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
OpCodes	TokenNameIdentifier
.	TokenNameDOT
ENDOP	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
(	TokenNameLPAREN
stepType	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
stepCount	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
boolean	TokenNameboolean
predAnalysis	TokenNameIdentifier
=	TokenNameEQUAL
analyzePredicate	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
stepOpCodePos	TokenNameIdentifier
,	TokenNameCOMMA
stepType	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
predAnalysis	TokenNameIdentifier
)	TokenNameRPAREN
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_PREDICATE	TokenNameIdentifier
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_VARIABLE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_EXTFUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_FUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GROUP	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_FILTER	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ROOT	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_ROOT	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ANCESTORS	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_ANCESTOR	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ANCESTORS_OR_SELF	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_ANCESTOR_OR_SELF	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ATTRIBUTES	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_ATTRIBUTE	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_NAMESPACE	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_NAMESPACE	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_CHILDREN	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_CHILD	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_DESCENDANTS	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_DESCENDANT	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_DESCENDANTS_OR_SELF	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
2	TokenNameIntegerLiteral
==	TokenNameEQUAL_EQUAL
stepCount	TokenNameIdentifier
&&	TokenNameAND_AND
BIT_ROOT	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
analysisResult	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_ANY_DESCENDANT_FROM_ROOT	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_DESCENDANT_OR_SELF	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_FOLLOWING	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_FOLLOWING	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_FOLLOWING_SIBLINGS	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_FOLLOWING_SIBLING	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PRECEDING	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_PRECEDING	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PRECEDING_SIBLINGS	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_PRECEDING_SIBLING	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PARENT	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_PARENT	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_SELF	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_SELF	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_ATTRIBUTE	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
(	TokenNameLPAREN
BIT_MATCH_PATTERN	TokenNameIdentifier
|	TokenNameOR
BIT_ATTRIBUTE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_ANY_ANCESTOR	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
(	TokenNameLPAREN
BIT_MATCH_PATTERN	TokenNameIdentifier
|	TokenNameOR
BIT_ANCESTOR	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_IMMEDIATE_ANCESTOR	TokenNameIdentifier
:	TokenNameCOLON
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
(	TokenNameLPAREN
BIT_MATCH_PATTERN	TokenNameIdentifier
|	TokenNameOR
BIT_PARENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
XSLMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
Integer	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
OpCodes	TokenNameIdentifier
.	TokenNameDOT
NODETYPE_NODE	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
BIT_NODETEST_ANY	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
stepOpCodePos	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getNextStepPos	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
<	TokenNameLESS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
analysisResult	TokenNameIdentifier
|=	TokenNameOR_EQUAL
(	TokenNameLPAREN
stepCount	TokenNameIdentifier
&	TokenNameAND
BITS_COUNT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
analysisResult	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isDownwardAxisOfMany	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
axis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
(	TokenNameLPAREN
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANTORSELF	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
axis	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANT	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
axis	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
Axis	TokenNameIdentifier
.	TokenNameDOT
FOLLOWING	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
axis	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
Axis	TokenNameIdentifier
.	TokenNameDOT
PRECEDING	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
axis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
StepPattern	TokenNameIdentifier
loadSteps	TokenNameIdentifier
(	TokenNameLPAREN
MatchPatternIterator	TokenNameIdentifier
mpi	TokenNameIdentifier
,	TokenNameCOMMA
Compiler	TokenNameIdentifier
compiler	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
stepOpCodePos	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
stepIndex	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
DEBUG_PATTERN_CREATION	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"================"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"loadSteps for: "	TokenNameStringLiteral
+	TokenNamePLUS
compiler	TokenNameIdentifier
.	TokenNameDOT
getPatternString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
stepType	TokenNameIdentifier
;	TokenNameSEMICOLON
StepPattern	TokenNameIdentifier
step	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
StepPattern	TokenNameIdentifier
firstStep	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
,	TokenNameCOMMA
prevStep	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
analysis	TokenNameIdentifier
=	TokenNameEQUAL
analyze	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
stepOpCodePos	TokenNameIdentifier
,	TokenNameCOMMA
stepIndex	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
OpCodes	TokenNameIdentifier
.	TokenNameDOT
ENDOP	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
(	TokenNameLPAREN
stepType	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
step	TokenNameIdentifier
=	TokenNameEQUAL
createDefaultStepPattern	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
,	TokenNameCOMMA
stepOpCodePos	TokenNameIdentifier
,	TokenNameCOMMA
mpi	TokenNameIdentifier
,	TokenNameCOMMA
analysis	TokenNameIdentifier
,	TokenNameCOMMA
firstStep	TokenNameIdentifier
,	TokenNameCOMMA
prevStep	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
firstStep	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
firstStep	TokenNameIdentifier
=	TokenNameEQUAL
step	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
step	TokenNameIdentifier
.	TokenNameDOT
setRelativePathPattern	TokenNameIdentifier
(	TokenNameLPAREN
prevStep	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
prevStep	TokenNameIdentifier
=	TokenNameEQUAL
step	TokenNameIdentifier
;	TokenNameSEMICOLON
stepOpCodePos	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getNextStepPos	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
<	TokenNameLESS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
SELF	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
paxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
SELF	TokenNameIdentifier
;	TokenNameSEMICOLON
StepPattern	TokenNameIdentifier
tail	TokenNameIdentifier
=	TokenNameEQUAL
step	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
StepPattern	TokenNameIdentifier
pat	TokenNameIdentifier
=	TokenNameEQUAL
step	TokenNameIdentifier
;	TokenNameSEMICOLON
null	TokenNamenull
!=	TokenNameNOT_EQUAL
pat	TokenNameIdentifier
;	TokenNameSEMICOLON
pat	TokenNameIdentifier
=	TokenNameEQUAL
pat	TokenNameIdentifier
.	TokenNameDOT
getRelativePathPattern	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
nextAxis	TokenNameIdentifier
=	TokenNameEQUAL
pat	TokenNameIdentifier
.	TokenNameDOT
getAxis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pat	TokenNameIdentifier
.	TokenNameDOT
setAxis	TokenNameIdentifier
(	TokenNameLPAREN
axis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
whatToShow	TokenNameIdentifier
=	TokenNameEQUAL
pat	TokenNameIdentifier
.	TokenNameDOT
getWhatToShow	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
whatToShow	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ATTRIBUTE	TokenNameIdentifier
||	TokenNameOR_OR
whatToShow	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_NAMESPACE	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
newAxis	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
whatToShow	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ATTRIBUTE	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
Axis	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE	TokenNameIdentifier
:	TokenNameCOLON
Axis	TokenNameIdentifier
.	TokenNameDOT
NAMESPACE	TokenNameIdentifier
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isDownwardAxisOfMany	TokenNameIdentifier
(	TokenNameLPAREN
axis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
StepPattern	TokenNameIdentifier
attrPat	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StepPattern	TokenNameIdentifier
(	TokenNameLPAREN
whatToShow	TokenNameIdentifier
,	TokenNameCOMMA
pat	TokenNameIdentifier
.	TokenNameDOT
getNamespace	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
pat	TokenNameIdentifier
.	TokenNameDOT
getLocalName	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
newAxis	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XNumber	TokenNameIdentifier
score	TokenNameIdentifier
=	TokenNameEQUAL
pat	TokenNameIdentifier
.	TokenNameDOT
getStaticScore	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pat	TokenNameIdentifier
.	TokenNameDOT
setNamespace	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pat	TokenNameIdentifier
.	TokenNameDOT
setLocalName	TokenNameIdentifier
(	TokenNameLPAREN
NodeTest	TokenNameIdentifier
.	TokenNameDOT
WILD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attrPat	TokenNameIdentifier
.	TokenNameDOT
setPredicates	TokenNameIdentifier
(	TokenNameLPAREN
pat	TokenNameIdentifier
.	TokenNameDOT
getPredicates	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pat	TokenNameIdentifier
.	TokenNameDOT
setPredicates	TokenNameIdentifier
(	TokenNameLPAREN
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pat	TokenNameIdentifier
.	TokenNameDOT
setWhatToShow	TokenNameIdentifier
(	TokenNameLPAREN
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ELEMENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StepPattern	TokenNameIdentifier
rel	TokenNameIdentifier
=	TokenNameEQUAL
pat	TokenNameIdentifier
.	TokenNameDOT
getRelativePathPattern	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pat	TokenNameIdentifier
.	TokenNameDOT
setRelativePathPattern	TokenNameIdentifier
(	TokenNameLPAREN
attrPat	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attrPat	TokenNameIdentifier
.	TokenNameDOT
setRelativePathPattern	TokenNameIdentifier
(	TokenNameLPAREN
rel	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
attrPat	TokenNameIdentifier
.	TokenNameDOT
setStaticScore	TokenNameIdentifier
(	TokenNameLPAREN
score	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
Axis	TokenNameIdentifier
.	TokenNameDOT
PRECEDING	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
pat	TokenNameIdentifier
.	TokenNameDOT
getAxis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
pat	TokenNameIdentifier
.	TokenNameDOT
setAxis	TokenNameIdentifier
(	TokenNameLPAREN
Axis	TokenNameIdentifier
.	TokenNameDOT
PRECEDINGANDANCESTOR	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANT	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
pat	TokenNameIdentifier
.	TokenNameDOT
getAxis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
pat	TokenNameIdentifier
.	TokenNameDOT
setAxis	TokenNameIdentifier
(	TokenNameLPAREN
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANTORSELF	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pat	TokenNameIdentifier
=	TokenNameEQUAL
attrPat	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
Axis	TokenNameIdentifier
.	TokenNameDOT
CHILD	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
pat	TokenNameIdentifier
.	TokenNameDOT
getAxis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
pat	TokenNameIdentifier
.	TokenNameDOT
setAxis	TokenNameIdentifier
(	TokenNameLPAREN
Axis	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
axis	TokenNameIdentifier
=	TokenNameEQUAL
nextAxis	TokenNameIdentifier
;	TokenNameSEMICOLON
tail	TokenNameIdentifier
=	TokenNameEQUAL
pat	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
axis	TokenNameIdentifier
<	TokenNameLESS
Axis	TokenNameIdentifier
.	TokenNameDOT
ALL	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
StepPattern	TokenNameIdentifier
selfPattern	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ContextMatchStepPattern	TokenNameIdentifier
(	TokenNameLPAREN
axis	TokenNameIdentifier
,	TokenNameCOMMA
paxis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XNumber	TokenNameIdentifier
score	TokenNameIdentifier
=	TokenNameEQUAL
tail	TokenNameIdentifier
.	TokenNameDOT
getStaticScore	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tail	TokenNameIdentifier
.	TokenNameDOT
setRelativePathPattern	TokenNameIdentifier
(	TokenNameLPAREN
selfPattern	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
tail	TokenNameIdentifier
.	TokenNameDOT
setStaticScore	TokenNameIdentifier
(	TokenNameLPAREN
score	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
selfPattern	TokenNameIdentifier
.	TokenNameDOT
setStaticScore	TokenNameIdentifier
(	TokenNameLPAREN
score	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
DEBUG_PATTERN_CREATION	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"Done loading steps: "	TokenNameStringLiteral
+	TokenNamePLUS
step	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
step	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
StepPattern	TokenNameIdentifier
createDefaultStepPattern	TokenNameIdentifier
(	TokenNameLPAREN
Compiler	TokenNameIdentifier
compiler	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
opPos	TokenNameIdentifier
,	TokenNameCOMMA
MatchPatternIterator	TokenNameIdentifier
mpi	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
analysis	TokenNameIdentifier
,	TokenNameCOMMA
StepPattern	TokenNameIdentifier
tail	TokenNameIdentifier
,	TokenNameCOMMA
StepPattern	TokenNameIdentifier
head	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
stepType	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
simpleInit	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
boolean	TokenNameboolean
prevIsOneStepDown	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
int	TokenNameint
whatToShow	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getWhatToShow	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StepPattern	TokenNameIdentifier
ai	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
axis	TokenNameIdentifier
,	TokenNameCOMMA
predicateAxis	TokenNameIdentifier
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_VARIABLE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_EXTFUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_FUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GROUP	TokenNameIdentifier
:	TokenNameCOLON
prevIsOneStepDown	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
Expression	TokenNameIdentifier
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_VARIABLE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_EXTFUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_FUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GROUP	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
compile	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
compile	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
FILTEREDLIST	TokenNameIdentifier
;	TokenNameSEMICOLON
predicateAxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
FILTEREDLIST	TokenNameIdentifier
;	TokenNameSEMICOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FunctionPattern	TokenNameIdentifier
(	TokenNameLPAREN
expr	TokenNameIdentifier
,	TokenNameCOMMA
axis	TokenNameIdentifier
,	TokenNameCOMMA
predicateAxis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
simpleInit	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ROOT	TokenNameIdentifier
:	TokenNameCOLON
whatToShow	TokenNameIdentifier
=	TokenNameEQUAL
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_DOCUMENT	TokenNameIdentifier
|	TokenNameOR
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_DOCUMENT_FRAGMENT	TokenNameIdentifier
;	TokenNameSEMICOLON
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
ROOT	TokenNameIdentifier
;	TokenNameSEMICOLON
predicateAxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
ROOT	TokenNameIdentifier
;	TokenNameSEMICOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StepPattern	TokenNameIdentifier
(	TokenNameLPAREN
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_DOCUMENT	TokenNameIdentifier
|	TokenNameOR
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_DOCUMENT_FRAGMENT	TokenNameIdentifier
,	TokenNameCOMMA
axis	TokenNameIdentifier
,	TokenNameCOMMA
predicateAxis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ATTRIBUTES	TokenNameIdentifier
:	TokenNameCOLON
whatToShow	TokenNameIdentifier
=	TokenNameEQUAL
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ATTRIBUTE	TokenNameIdentifier
;	TokenNameSEMICOLON
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
PARENT	TokenNameIdentifier
;	TokenNameSEMICOLON
predicateAxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_NAMESPACE	TokenNameIdentifier
:	TokenNameCOLON
whatToShow	TokenNameIdentifier
=	TokenNameEQUAL
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_NAMESPACE	TokenNameIdentifier
;	TokenNameSEMICOLON
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
PARENT	TokenNameIdentifier
;	TokenNameSEMICOLON
predicateAxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
NAMESPACE	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ANCESTORS	TokenNameIdentifier
:	TokenNameCOLON
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANT	TokenNameIdentifier
;	TokenNameSEMICOLON
predicateAxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
ANCESTOR	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_CHILDREN	TokenNameIdentifier
:	TokenNameCOLON
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
PARENT	TokenNameIdentifier
;	TokenNameSEMICOLON
predicateAxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
CHILD	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ANCESTORS_OR_SELF	TokenNameIdentifier
:	TokenNameCOLON
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANTORSELF	TokenNameIdentifier
;	TokenNameSEMICOLON
predicateAxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
ANCESTORORSELF	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_SELF	TokenNameIdentifier
:	TokenNameCOLON
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
SELF	TokenNameIdentifier
;	TokenNameSEMICOLON
predicateAxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
SELF	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PARENT	TokenNameIdentifier
:	TokenNameCOLON
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
CHILD	TokenNameIdentifier
;	TokenNameSEMICOLON
predicateAxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
PARENT	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PRECEDING_SIBLINGS	TokenNameIdentifier
:	TokenNameCOLON
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
FOLLOWINGSIBLING	TokenNameIdentifier
;	TokenNameSEMICOLON
predicateAxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
PRECEDINGSIBLING	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PRECEDING	TokenNameIdentifier
:	TokenNameCOLON
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
FOLLOWING	TokenNameIdentifier
;	TokenNameSEMICOLON
predicateAxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
PRECEDING	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_FOLLOWING_SIBLINGS	TokenNameIdentifier
:	TokenNameCOLON
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
PRECEDINGSIBLING	TokenNameIdentifier
;	TokenNameSEMICOLON
predicateAxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
FOLLOWINGSIBLING	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_FOLLOWING	TokenNameIdentifier
:	TokenNameCOLON
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
PRECEDING	TokenNameIdentifier
;	TokenNameSEMICOLON
predicateAxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
FOLLOWING	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_DESCENDANTS_OR_SELF	TokenNameIdentifier
:	TokenNameCOLON
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
ANCESTORORSELF	TokenNameIdentifier
;	TokenNameSEMICOLON
predicateAxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANTORSELF	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_DESCENDANTS	TokenNameIdentifier
:	TokenNameCOLON
axis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
ANCESTOR	TokenNameIdentifier
;	TokenNameSEMICOLON
predicateAxis	TokenNameIdentifier
=	TokenNameEQUAL
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANT	TokenNameIdentifier
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
XSLMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
Integer	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
ai	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
whatToShow	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getWhatToShow	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StepPattern	TokenNameIdentifier
(	TokenNameLPAREN
whatToShow	TokenNameIdentifier
,	TokenNameCOMMA
compiler	TokenNameIdentifier
.	TokenNameDOT
getStepNS	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
compiler	TokenNameIdentifier
.	TokenNameDOT
getStepLocalName	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
axis	TokenNameIdentifier
,	TokenNameCOMMA
predicateAxis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
false	TokenNamefalse
||	TokenNameOR_OR
DEBUG_PATTERN_CREATION	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
print	TokenNameIdentifier
(	TokenNameLPAREN
"new step: "	TokenNameStringLiteral
+	TokenNamePLUS
ai	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
print	TokenNameIdentifier
(	TokenNameLPAREN
", axis: "	TokenNameStringLiteral
+	TokenNamePLUS
Axis	TokenNameIdentifier
.	TokenNameDOT
getNames	TokenNameIdentifier
(	TokenNameLPAREN
ai	TokenNameIdentifier
.	TokenNameDOT
getAxis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
print	TokenNameIdentifier
(	TokenNameLPAREN
", predAxis: "	TokenNameStringLiteral
+	TokenNamePLUS
Axis	TokenNameIdentifier
.	TokenNameDOT
getNames	TokenNameIdentifier
(	TokenNameLPAREN
ai	TokenNameIdentifier
.	TokenNameDOT
getAxis	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
print	TokenNameIdentifier
(	TokenNameLPAREN
", what: "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
print	TokenNameIdentifier
(	TokenNameLPAREN
"    "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ai	TokenNameIdentifier
.	TokenNameDOT
debugWhatToShow	TokenNameIdentifier
(	TokenNameLPAREN
ai	TokenNameIdentifier
.	TokenNameDOT
getWhatToShow	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
argLen	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getFirstPredicateOpPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ai	TokenNameIdentifier
.	TokenNameDOT
setPredicates	TokenNameIdentifier
(	TokenNameLPAREN
compiler	TokenNameIdentifier
.	TokenNameDOT
getCompiledPredicates	TokenNameIdentifier
(	TokenNameLPAREN
argLen	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
ai	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
boolean	TokenNameboolean
analyzePredicate	TokenNameIdentifier
(	TokenNameLPAREN
Compiler	TokenNameIdentifier
compiler	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
opPos	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
stepType	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
argLen	TokenNameIdentifier
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_VARIABLE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_EXTFUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_FUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GROUP	TokenNameIdentifier
:	TokenNameCOLON
argLen	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getArgLength	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
argLen	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getArgLengthOfStep	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
pos	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getFirstPredicateOpPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
nPredicates	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
countPredicates	TokenNameIdentifier
(	TokenNameLPAREN
pos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
(	TokenNameLPAREN
nPredicates	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
?	TokenNameQUESTION
true	TokenNametrue
:	TokenNameCOLON
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
AxesWalker	TokenNameIdentifier
createDefaultWalker	TokenNameIdentifier
(	TokenNameLPAREN
Compiler	TokenNameIdentifier
compiler	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
opPos	TokenNameIdentifier
,	TokenNameCOMMA
WalkingIterator	TokenNameIdentifier
lpi	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
AxesWalker	TokenNameIdentifier
ai	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
int	TokenNameint
stepType	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
simpleInit	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
int	TokenNameint
totalNumberWalkers	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BITS_COUNT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
boolean	TokenNameboolean
prevIsOneStepDown	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_VARIABLE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_EXTFUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_FUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GROUP	TokenNameIdentifier
:	TokenNameCOLON
prevIsOneStepDown	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
DEBUG_WALKER_CREATION	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"new walker:  FilterExprWalker: "	TokenNameStringLiteral
+	TokenNamePLUS
analysis	TokenNameIdentifier
+	TokenNamePLUS
", "	TokenNameStringLiteral
+	TokenNamePLUS
compiler	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FilterExprWalker	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
simpleInit	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ROOT	TokenNameIdentifier
:	TokenNameCOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AxesWalker	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
ROOT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ANCESTORS	TokenNameIdentifier
:	TokenNameCOLON
prevIsOneStepDown	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ReverseAxesWalker	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
ANCESTOR	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ANCESTORS_OR_SELF	TokenNameIdentifier
:	TokenNameCOLON
prevIsOneStepDown	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ReverseAxesWalker	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
ANCESTORORSELF	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ATTRIBUTES	TokenNameIdentifier
:	TokenNameCOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AxesWalker	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_NAMESPACE	TokenNameIdentifier
:	TokenNameCOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AxesWalker	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
NAMESPACE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_CHILDREN	TokenNameIdentifier
:	TokenNameCOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AxesWalker	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
CHILD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_DESCENDANTS	TokenNameIdentifier
:	TokenNameCOLON
prevIsOneStepDown	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AxesWalker	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_DESCENDANTS_OR_SELF	TokenNameIdentifier
:	TokenNameCOLON
prevIsOneStepDown	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AxesWalker	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
DESCENDANTORSELF	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_FOLLOWING	TokenNameIdentifier
:	TokenNameCOLON
prevIsOneStepDown	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AxesWalker	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
FOLLOWING	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_FOLLOWING_SIBLINGS	TokenNameIdentifier
:	TokenNameCOLON
prevIsOneStepDown	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AxesWalker	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
FOLLOWINGSIBLING	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PRECEDING	TokenNameIdentifier
:	TokenNameCOLON
prevIsOneStepDown	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ReverseAxesWalker	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
PRECEDING	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PRECEDING_SIBLINGS	TokenNameIdentifier
:	TokenNameCOLON
prevIsOneStepDown	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ReverseAxesWalker	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
PRECEDINGSIBLING	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PARENT	TokenNameIdentifier
:	TokenNameCOLON
prevIsOneStepDown	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
ReverseAxesWalker	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
PARENT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_SELF	TokenNameIdentifier
:	TokenNameCOLON
ai	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
AxesWalker	TokenNameIdentifier
(	TokenNameLPAREN
lpi	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
SELF	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
XSLMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
Integer	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
simpleInit	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ai	TokenNameIdentifier
.	TokenNameDOT
initNodeTest	TokenNameIdentifier
(	TokenNameLPAREN
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ALL	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
int	TokenNameint
whatToShow	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getWhatToShow	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
==	TokenNameEQUAL_EQUAL
(	TokenNameLPAREN
whatToShow	TokenNameIdentifier
&	TokenNameAND
(	TokenNameLPAREN
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ATTRIBUTE	TokenNameIdentifier
|	TokenNameOR
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_NAMESPACE	TokenNameIdentifier
|	TokenNameOR
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ELEMENT	TokenNameIdentifier
|	TokenNameOR
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_PROCESSING_INSTRUCTION	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
whatToShow	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ALL	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
ai	TokenNameIdentifier
.	TokenNameDOT
initNodeTest	TokenNameIdentifier
(	TokenNameLPAREN
whatToShow	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
else	TokenNameelse
{	TokenNameLBRACE
ai	TokenNameIdentifier
.	TokenNameDOT
initNodeTest	TokenNameIdentifier
(	TokenNameLPAREN
whatToShow	TokenNameIdentifier
,	TokenNameCOMMA
compiler	TokenNameIdentifier
.	TokenNameDOT
getStepNS	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
compiler	TokenNameIdentifier
.	TokenNameDOT
getStepLocalName	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
ai	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
String	TokenNameIdentifier
getAnalysisString	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
StringBuffer	TokenNameIdentifier
buf	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StringBuffer	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"count: "	TokenNameStringLiteral
+	TokenNamePLUS
getStepCount	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
" "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_NODETEST_ANY	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"NTANY|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_PREDICATE	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"PRED|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_ANCESTOR	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"ANC|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_ANCESTOR_OR_SELF	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"ANCOS|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_ATTRIBUTE	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"ATTR|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_CHILD	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"CH|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_DESCENDANT	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"DESC|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_DESCENDANT_OR_SELF	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"DESCOS|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_FOLLOWING	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"FOL|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_FOLLOWING_SIBLING	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"FOLS|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_NAMESPACE	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"NS|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_PARENT	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"P|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_PRECEDING	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"PREC|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_PRECEDING_SIBLING	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"PRECS|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_SELF	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
".|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_FILTER	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"FLT|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_ROOT	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
buf	TokenNameIdentifier
.	TokenNameDOT
append	TokenNameIdentifier
(	TokenNameLPAREN
"R|"	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
buf	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
final	TokenNamefinal
boolean	TokenNameboolean
DEBUG_PATTERN_CREATION	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
boolean	TokenNameboolean
DEBUG_WALKER_CREATION	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
static	TokenNamestatic
final	TokenNamefinal
boolean	TokenNameboolean
DEBUG_ITERATOR_CREATION	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
hasPredicate	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
!=	TokenNameNOT_EQUAL
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_PREDICATE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isWild	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
!=	TokenNameNOT_EQUAL
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_NODETEST_ANY	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksAncestors	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_ANCESTOR	TokenNameIdentifier
|	TokenNameOR
BIT_ANCESTOR_OR_SELF	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksAttributes	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
!=	TokenNameNOT_EQUAL
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_ATTRIBUTE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksNamespaces	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
!=	TokenNameNOT_EQUAL
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_NAMESPACE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksChildren	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
!=	TokenNameNOT_EQUAL
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BIT_CHILD	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksDescendants	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_DESCENDANT	TokenNameIdentifier
|	TokenNameOR
BIT_DESCENDANT_OR_SELF	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksSubtree	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_DESCENDANT	TokenNameIdentifier
|	TokenNameOR
BIT_DESCENDANT_OR_SELF	TokenNameIdentifier
|	TokenNameOR
BIT_CHILD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksSubtreeOnlyMaybeAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
walksSubtree	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksExtraNodes	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksUp	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksSideways	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksSubtreeOnly	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
walksSubtreeOnlyMaybeAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
isAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksFilteredList	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_FILTER	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksSubtreeOnlyFromRootOrContext	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
walksSubtree	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksExtraNodes	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksUp	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksSideways	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_FILTER	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksInDocOrder	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
walksSubtreeOnlyMaybeAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
walksExtraNodesOnly	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
walksFollowingOnlyMaybeAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_FILTER	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksFollowingOnlyMaybeAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_SELF	TokenNameIdentifier
|	TokenNameOR
BIT_FOLLOWING_SIBLING	TokenNameIdentifier
|	TokenNameOR
BIT_FOLLOWING	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksSubtree	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksUp	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksSideways	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksUp	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_PARENT	TokenNameIdentifier
|	TokenNameOR
BIT_ANCESTOR	TokenNameIdentifier
|	TokenNameOR
BIT_ANCESTOR_OR_SELF	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksSideways	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_FOLLOWING	TokenNameIdentifier
|	TokenNameOR
BIT_FOLLOWING_SIBLING	TokenNameIdentifier
|	TokenNameOR
BIT_PRECEDING	TokenNameIdentifier
|	TokenNameOR
BIT_PRECEDING_SIBLING	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksExtraNodes	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_NAMESPACE	TokenNameIdentifier
|	TokenNameOR
BIT_ATTRIBUTE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksExtraNodesOnly	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
walksExtraNodes	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_SELF	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksSubtree	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksUp	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksSideways	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
isAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_ROOT	TokenNameIdentifier
|	TokenNameOR
BIT_FILTER	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksChildrenOnly	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
walksChildren	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_SELF	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksExtraNodes	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksDescendants	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksUp	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksSideways	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
!	TokenNameNOT
isAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_ROOT	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksChildrenAndExtraAndSelfOnly	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
walksChildren	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksDescendants	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksUp	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksSideways	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
!	TokenNameNOT
isAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_ROOT	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksDescendantsAndExtraAndSelfOnly	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
!	TokenNameNOT
walksChildren	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
walksDescendants	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksUp	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksSideways	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
!	TokenNameNOT
isAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_ROOT	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksSelfOnly	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_SELF	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksSubtree	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksUp	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksSideways	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
isAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksUpOnly	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
!	TokenNameNOT
walksSubtree	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
walksUp	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksSideways	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
isAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksDownOnly	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
walksSubtree	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksUp	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksSideways	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
isAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
walksDownExtraOnly	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
walksSubtree	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
walksExtraNodes	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksUp	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
walksSideways	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
isAbsolute	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
canSkipSubtrees	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_CHILD	TokenNameIdentifier
)	TokenNameRPAREN
|	TokenNameOR
walksSideways	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
canCrissCross	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
walksSelfOnly	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
walksDownOnly	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
!	TokenNameNOT
canSkipSubtrees	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
walksChildrenAndExtraAndSelfOnly	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
walksDescendantsAndExtraAndSelfOnly	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
walksUpOnly	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
walksExtraNodesOnly	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
else	TokenNameelse
if	TokenNameif
(	TokenNameLPAREN
walksSubtree	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
(	TokenNameLPAREN
walksSideways	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
walksUp	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
canSkipSubtrees	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
static	TokenNamestatic
public	TokenNamepublic
boolean	TokenNameboolean
isNaturalDocOrder	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
canCrissCross	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_NAMESPACE	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
walksFilteredList	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
walksInDocOrder	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
boolean	TokenNameboolean
isNaturalDocOrder	TokenNameIdentifier
(	TokenNameLPAREN
Compiler	TokenNameIdentifier
compiler	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
stepOpCodePos	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
stepIndex	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
canCrissCross	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_NAMESPACE	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_FOLLOWING	TokenNameIdentifier
|	TokenNameOR
BIT_FOLLOWING_SIBLING	TokenNameIdentifier
)	TokenNameRPAREN
&&	TokenNameAND_AND
isSet	TokenNameIdentifier
(	TokenNameLPAREN
analysis	TokenNameIdentifier
,	TokenNameCOMMA
BIT_PRECEDING	TokenNameIdentifier
|	TokenNameOR
BIT_PRECEDING_SIBLING	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
int	TokenNameint
stepType	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
stepCount	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
boolean	TokenNameboolean
foundWildAttribute	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
int	TokenNameint
potentialDuplicateMakingStepCount	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
OpCodes	TokenNameIdentifier
.	TokenNameDOT
ENDOP	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
(	TokenNameLPAREN
stepType	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getOp	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
stepCount	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ATTRIBUTES	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_ATTRIBUTE	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
foundWildAttribute	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
String	TokenNameIdentifier
localName	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getStepLocalName	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
localName	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
"*"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
foundWildAttribute	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_FOLLOWING	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_FOLLOWING_SIBLINGS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PRECEDING	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PRECEDING_SIBLINGS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_PARENT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_VARIABLE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_EXTFUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_FUNCTION	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GROUP	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_NAMESPACE	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ANCESTORS	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ANCESTORS_OR_SELF	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_ANY_ANCESTOR	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_IMMEDIATE_ANCESTOR	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_DESCENDANTS_OR_SELF	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_DESCENDANTS	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
potentialDuplicateMakingStepCount	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
potentialDuplicateMakingStepCount	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ROOT	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_CHILDREN	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_SELF	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
foundWildAttribute	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
XSLMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_NULL_ERROR_HANDLER	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
Integer	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
int	TokenNameint
nextStepOpCodePos	TokenNameIdentifier
=	TokenNameEQUAL
compiler	TokenNameIdentifier
.	TokenNameDOT
getNextStepPos	TokenNameIdentifier
(	TokenNameLPAREN
stepOpCodePos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
nextStepOpCodePos	TokenNameIdentifier
<	TokenNameLESS
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
break	TokenNamebreak
;	TokenNameSEMICOLON
stepOpCodePos	TokenNameIdentifier
=	TokenNameEQUAL
nextStepOpCodePos	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isOneStep	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BITS_COUNT	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0x00000001	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
int	TokenNameint
getStepCount	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
analysis	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
analysis	TokenNameIdentifier
&	TokenNameAND
BITS_COUNT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BITS_COUNT	TokenNameIdentifier
=	TokenNameEQUAL
0x000000FF	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BITS_RESERVED	TokenNameIdentifier
=	TokenNameEQUAL
0x00000F00	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_PREDICATE	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_ANCESTOR	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_ANCESTOR_OR_SELF	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_ATTRIBUTE	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_CHILD	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
4	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_DESCENDANT	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
5	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_DESCENDANT_OR_SELF	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
6	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_FOLLOWING	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
7	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_FOLLOWING_SIBLING	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
8	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_NAMESPACE	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
9	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_PARENT	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
10	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_PRECEDING	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
11	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_PRECEDING_SIBLING	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
12	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_SELF	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
13	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_FILTER	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
14	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_ROOT	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
15	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BITMASK_TRAVERSES_OUTSIDE_SUBTREE	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
BIT_NAMESPACE	TokenNameIdentifier
|	TokenNameOR
BIT_PRECEDING_SIBLING	TokenNameIdentifier
|	TokenNameOR
BIT_PRECEDING	TokenNameIdentifier
|	TokenNameOR
BIT_FOLLOWING_SIBLING	TokenNameIdentifier
|	TokenNameOR
BIT_FOLLOWING	TokenNameIdentifier
|	TokenNameOR
BIT_PARENT	TokenNameIdentifier
|	TokenNameOR
BIT_ANCESTOR_OR_SELF	TokenNameIdentifier
|	TokenNameOR
BIT_ANCESTOR	TokenNameIdentifier
|	TokenNameOR
BIT_FILTER	TokenNameIdentifier
|	TokenNameOR
BIT_ROOT	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_BACKWARDS_SELF	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
16	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_ANY_DESCENDANT_FROM_ROOT	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
17	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_NODETEST_ANY	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
18	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
BIT_MATCH_PATTERN	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
0x00001000	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
19	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
