package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
compiler	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
ErrorListener	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
SourceLocator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
javax	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
transform	TokenNameIdentifier
.	TokenNameDOT
TransformerException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xalan	TokenNameIdentifier
.	TokenNameDOT
res	TokenNameIdentifier
.	TokenNameDOT
XSLMessages	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
dtm	TokenNameIdentifier
.	TokenNameDOT
Axis	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
dtm	TokenNameIdentifier
.	TokenNameDOT
DTMFilter	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
dtm	TokenNameIdentifier
.	TokenNameDOT
DTMIterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
PrefixResolver	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
QName	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
.	TokenNameDOT
SAXSourceLocator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
Expression	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
axes	TokenNameIdentifier
.	TokenNameDOT
UnionPathIterator	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
axes	TokenNameIdentifier
.	TokenNameDOT
WalkerFactory	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
functions	TokenNameIdentifier
.	TokenNameDOT
FuncExtFunction	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
functions	TokenNameIdentifier
.	TokenNameDOT
FuncExtFunctionAvailable	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
functions	TokenNameIdentifier
.	TokenNameDOT
Function	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
functions	TokenNameIdentifier
.	TokenNameDOT
WrongNumberArgsException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
objects	TokenNameIdentifier
.	TokenNameDOT
XNumber	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
objects	TokenNameIdentifier
.	TokenNameDOT
XString	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
And	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Div	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Equals	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Gt	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Gte	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Lt	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Lte	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Minus	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Mod	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Mult	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Neg	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
NotEquals	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Operation	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Or	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Plus	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
UnaryOperation	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Variable	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
patterns	TokenNameIdentifier
.	TokenNameDOT
FunctionPattern	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
patterns	TokenNameIdentifier
.	TokenNameDOT
NodeTest	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
patterns	TokenNameIdentifier
.	TokenNameDOT
StepPattern	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
patterns	TokenNameIdentifier
.	TokenNameDOT
UnionPattern	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
res	TokenNameIdentifier
.	TokenNameDOT
XPATHErrorResources	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
Compiler	TokenNameIdentifier
extends	TokenNameextends
OpMap	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
Compiler	TokenNameIdentifier
(	TokenNameLPAREN
ErrorListener	TokenNameIdentifier
errorHandler	TokenNameIdentifier
,	TokenNameCOMMA
SourceLocator	TokenNameIdentifier
locator	TokenNameIdentifier
,	TokenNameCOMMA
FunctionTable	TokenNameIdentifier
fTable	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_errorHandler	TokenNameIdentifier
=	TokenNameEQUAL
errorHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
m_locator	TokenNameIdentifier
=	TokenNameEQUAL
locator	TokenNameIdentifier
;	TokenNameSEMICOLON
m_functionTable	TokenNameIdentifier
=	TokenNameEQUAL
fTable	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Compiler	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
m_errorHandler	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
m_locator	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Expression	TokenNameIdentifier
compile	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
op	TokenNameIdentifier
=	TokenNameEQUAL
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Expression	TokenNameIdentifier
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
op	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_XPATH	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
compile	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_OR	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
or	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_AND	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
and	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_NOTEQUALS	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
notequals	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_EQUALS	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
equals	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_LTE	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
lte	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_LT	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
lt	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GTE	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
gte	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GT	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
gt	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_PLUS	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
plus	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_MINUS	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
minus	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_MULT	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
mult	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_DIV	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
div	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_MOD	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
mod	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_NEG	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
neg	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_STRING	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
string	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_BOOL	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
bool	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_NUMBER	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
number	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_UNION	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
union	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_LITERAL	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
literal	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_VARIABLE	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
variable	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_GROUP	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
group	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_NUMBERLIT	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
numberlit	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_ARGUMENT	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
arg	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_EXTFUNCTION	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
compileExtension	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_FUNCTION	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
compileFunction	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_LOCATIONPATH	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
locationPath	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_PREDICATE	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_MATCHPATTERN	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
matchPattern	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_LOCATIONPATHPATTERN	TokenNameIdentifier
:	TokenNameCOLON
expr	TokenNameIdentifier
=	TokenNameEQUAL
locationPathPattern	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_QUO	TokenNameIdentifier
:	TokenNameCOLON
error	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_UNKNOWN_OPCODE	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
"quo"	TokenNameStringLiteral
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
error	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_UNKNOWN_OPCODE	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
Integer	TokenNameIdentifier
.	TokenNameDOT
toString	TokenNameIdentifier
(	TokenNameLPAREN
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
expr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Expression	TokenNameIdentifier
compileOperation	TokenNameIdentifier
(	TokenNameLPAREN
Operation	TokenNameIdentifier
operation	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
leftPos	TokenNameIdentifier
=	TokenNameEQUAL
getFirstChildPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
rightPos	TokenNameIdentifier
=	TokenNameEQUAL
getNextOpPos	TokenNameIdentifier
(	TokenNameLPAREN
leftPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
operation	TokenNameIdentifier
.	TokenNameDOT
setLeftRight	TokenNameIdentifier
(	TokenNameLPAREN
compile	TokenNameIdentifier
(	TokenNameLPAREN
leftPos	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
compile	TokenNameIdentifier
(	TokenNameLPAREN
rightPos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
operation	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Expression	TokenNameIdentifier
compileUnary	TokenNameIdentifier
(	TokenNameLPAREN
UnaryOperation	TokenNameIdentifier
unary	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
rightPos	TokenNameIdentifier
=	TokenNameEQUAL
getFirstChildPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
unary	TokenNameIdentifier
.	TokenNameDOT
setRight	TokenNameIdentifier
(	TokenNameLPAREN
compile	TokenNameIdentifier
(	TokenNameLPAREN
rightPos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
unary	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
or	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Or	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
and	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
And	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
notequals	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
NotEquals	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
equals	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Equals	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
lte	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Lte	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
lt	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Lt	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
gte	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Gte	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
gt	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Gt	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
plus	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Plus	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
minus	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Minus	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
mult	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Mult	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
div	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Div	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
mod	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileOperation	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Mod	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
neg	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileUnary	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
Neg	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
string	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileUnary	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
bool	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileUnary	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Bool	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
number	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compileUnary	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xpath	TokenNameIdentifier
.	TokenNameDOT
operations	TokenNameIdentifier
.	TokenNameDOT
Number	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
literal	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
opPos	TokenNameIdentifier
=	TokenNameEQUAL
getFirstChildPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
(	TokenNameLPAREN
XString	TokenNameIdentifier
)	TokenNameRPAREN
getTokenQueue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
numberlit	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
opPos	TokenNameIdentifier
=	TokenNameEQUAL
getFirstChildPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
(	TokenNameLPAREN
XNumber	TokenNameIdentifier
)	TokenNameRPAREN
getTokenQueue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
variable	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
Variable	TokenNameIdentifier
var	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Variable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
opPos	TokenNameIdentifier
=	TokenNameEQUAL
getFirstChildPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
nsPos	TokenNameIdentifier
=	TokenNameEQUAL
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
namespace	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
OpCodes	TokenNameIdentifier
.	TokenNameDOT
EMPTY	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
nsPos	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
null	TokenNamenull
:	TokenNameCOLON
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
)	TokenNameRPAREN
getTokenQueue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
nsPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
localname	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
)	TokenNameRPAREN
getTokenQueue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
QName	TokenNameIdentifier
qname	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
QName	TokenNameIdentifier
(	TokenNameLPAREN
namespace	TokenNameIdentifier
,	TokenNameCOMMA
localname	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
var	TokenNameIdentifier
.	TokenNameDOT
setQName	TokenNameIdentifier
(	TokenNameLPAREN
qname	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
var	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
group	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compile	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
arg	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compile	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
union	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
locPathDepth	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
UnionPathIterator	TokenNameIdentifier
.	TokenNameDOT
createUnionIterator	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
,	TokenNameCOMMA
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
locPathDepth	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
int	TokenNameint
locPathDepth	TokenNameIdentifier
=	TokenNameEQUAL
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
int	TokenNameint
getLocationPathDepth	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
locPathDepth	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
FunctionTable	TokenNameIdentifier
getFunctionTable	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
m_functionTable	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Expression	TokenNameIdentifier
locationPath	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
locPathDepth	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
DTMIterator	TokenNameIdentifier
iter	TokenNameIdentifier
=	TokenNameEQUAL
WalkerFactory	TokenNameIdentifier
.	TokenNameDOT
newDTMIterator	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
,	TokenNameCOMMA
opPos	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
locPathDepth	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
(	TokenNameLPAREN
Expression	TokenNameIdentifier
)	TokenNameRPAREN
iter	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
locPathDepth	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
Expression	TokenNameIdentifier
predicate	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
compile	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
+	TokenNamePLUS
2	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
protected	TokenNameprotected
Expression	TokenNameIdentifier
matchPattern	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
locPathDepth	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
nextOpPos	TokenNameIdentifier
=	TokenNameEQUAL
opPos	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
i	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
getOp	TokenNameIdentifier
(	TokenNameLPAREN
nextOpPos	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_LOCATIONPATHPATTERN	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
nextOpPos	TokenNameIdentifier
=	TokenNameEQUAL
getNextOpPos	TokenNameIdentifier
(	TokenNameLPAREN
nextOpPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
if	TokenNameif
(	TokenNameLPAREN
i	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
compile	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
UnionPattern	TokenNameIdentifier
up	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
UnionPattern	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StepPattern	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
patterns	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StepPattern	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_LOCATIONPATHPATTERN	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
nextOpPos	TokenNameIdentifier
=	TokenNameEQUAL
getNextOpPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
patterns	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
(	TokenNameLPAREN
StepPattern	TokenNameIdentifier
)	TokenNameRPAREN
compile	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
opPos	TokenNameIdentifier
=	TokenNameEQUAL
nextOpPos	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
up	TokenNameIdentifier
.	TokenNameDOT
setPatterns	TokenNameIdentifier
(	TokenNameLPAREN
patterns	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
up	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
finally	TokenNamefinally
{	TokenNameLBRACE
locPathDepth	TokenNameIdentifier
--	TokenNameMINUS_MINUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
Expression	TokenNameIdentifier
locationPathPattern	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
opPos	TokenNameIdentifier
=	TokenNameEQUAL
getFirstChildPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
stepPattern	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
,	TokenNameCOMMA
0	TokenNameIntegerLiteral
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
getWhatToShow	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
axesType	TokenNameIdentifier
=	TokenNameEQUAL
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
testType	TokenNameIdentifier
=	TokenNameEQUAL
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
+	TokenNamePLUS
3	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
testType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
NODETYPE_COMMENT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_COMMENT	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
NODETYPE_TEXT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_TEXT	TokenNameIdentifier
|	TokenNameOR
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_CDATA_SECTION	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
NODETYPE_PI	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_PROCESSING_INSTRUCTION	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
NODETYPE_NODE	TokenNameIdentifier
:	TokenNameCOLON
switch	TokenNameswitch
(	TokenNameLPAREN
axesType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_NAMESPACE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_NAMESPACE	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ATTRIBUTES	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_ATTRIBUTE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ATTRIBUTE	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_SELF	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ANCESTORS_OR_SELF	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_DESCENDANTS_OR_SELF	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ALL	TokenNameIdentifier
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
getOp	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_MATCHPATTERN	TokenNameIdentifier
)	TokenNameRPAREN
return	TokenNamereturn
~	TokenNameTWIDDLE
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ATTRIBUTE	TokenNameIdentifier
&	TokenNameAND
~	TokenNameTWIDDLE
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_DOCUMENT	TokenNameIdentifier
&	TokenNameAND
~	TokenNameTWIDDLE
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_DOCUMENT_FRAGMENT	TokenNameIdentifier
;	TokenNameSEMICOLON
else	TokenNameelse
return	TokenNamereturn
~	TokenNameTWIDDLE
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ATTRIBUTE	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
NODETYPE_ROOT	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_DOCUMENT	TokenNameIdentifier
|	TokenNameOR
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_DOCUMENT_FRAGMENT	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
NODETYPE_FUNCTEST	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
NodeTest	TokenNameIdentifier
.	TokenNameDOT
SHOW_BYFUNCTION	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
NODENAME	TokenNameIdentifier
:	TokenNameCOLON
switch	TokenNameswitch
(	TokenNameLPAREN
axesType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_NAMESPACE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_NAMESPACE	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ATTRIBUTES	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_ATTRIBUTE	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ATTRIBUTE	TokenNameIdentifier
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_ANY_ANCESTOR	TokenNameIdentifier
:	TokenNameCOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_IMMEDIATE_ANCESTOR	TokenNameIdentifier
:	TokenNameCOLON
return	TokenNamereturn
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ELEMENT	TokenNameIdentifier
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ELEMENT	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
default	TokenNamedefault
:	TokenNameCOLON
return	TokenNamereturn
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ALL	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
boolean	TokenNameboolean
DEBUG	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
protected	TokenNameprotected
StepPattern	TokenNameIdentifier
stepPattern	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
,	TokenNameCOMMA
int	TokenNameint
stepCount	TokenNameIdentifier
,	TokenNameCOMMA
StepPattern	TokenNameIdentifier
ancestorPattern	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
startOpPos	TokenNameIdentifier
=	TokenNameEQUAL
opPos	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
stepType	TokenNameIdentifier
=	TokenNameEQUAL
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
OpCodes	TokenNameIdentifier
.	TokenNameDOT
ENDOP	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
stepType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
boolean	TokenNameboolean
addMagicSelf	TokenNameIdentifier
=	TokenNameEQUAL
true	TokenNametrue
;	TokenNameSEMICOLON
int	TokenNameint
endStep	TokenNameIdentifier
=	TokenNameEQUAL
getNextOpPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
StepPattern	TokenNameIdentifier
pattern	TokenNameIdentifier
;	TokenNameSEMICOLON
int	TokenNameint
argLen	TokenNameIdentifier
;	TokenNameSEMICOLON
switch	TokenNameswitch
(	TokenNameLPAREN
stepType	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_FUNCTION	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
DEBUG	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"MATCH_FUNCTION: "	TokenNameStringLiteral
+	TokenNamePLUS
m_currentPattern	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addMagicSelf	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
argLen	TokenNameIdentifier
=	TokenNameEQUAL
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
+	TokenNamePLUS
OpMap	TokenNameIdentifier
.	TokenNameDOT
MAPINDEX_LENGTH	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pattern	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FunctionPattern	TokenNameIdentifier
(	TokenNameLPAREN
compileFunction	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
PARENT	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
CHILD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
FROM_ROOT	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
DEBUG	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"FROM_ROOT, "	TokenNameStringLiteral
+	TokenNamePLUS
m_currentPattern	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
addMagicSelf	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
argLen	TokenNameIdentifier
=	TokenNameEQUAL
getArgLengthOfStep	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
opPos	TokenNameIdentifier
=	TokenNameEQUAL
getFirstChildPosOfStep	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pattern	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StepPattern	TokenNameIdentifier
(	TokenNameLPAREN
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_DOCUMENT	TokenNameIdentifier
|	TokenNameOR
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_DOCUMENT_FRAGMENT	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
PARENT	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
CHILD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_ATTRIBUTE	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
DEBUG	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"MATCH_ATTRIBUTE: "	TokenNameStringLiteral
+	TokenNamePLUS
getStepLocalName	TokenNameIdentifier
(	TokenNameLPAREN
startOpPos	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
", "	TokenNameStringLiteral
+	TokenNamePLUS
m_currentPattern	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
argLen	TokenNameIdentifier
=	TokenNameEQUAL
getArgLengthOfStep	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
opPos	TokenNameIdentifier
=	TokenNameEQUAL
getFirstChildPosOfStep	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pattern	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StepPattern	TokenNameIdentifier
(	TokenNameLPAREN
DTMFilter	TokenNameIdentifier
.	TokenNameDOT
SHOW_ATTRIBUTE	TokenNameIdentifier
,	TokenNameCOMMA
getStepNS	TokenNameIdentifier
(	TokenNameLPAREN
startOpPos	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
getStepLocalName	TokenNameIdentifier
(	TokenNameLPAREN
startOpPos	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
PARENT	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
ATTRIBUTE	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_ANY_ANCESTOR	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
DEBUG	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"MATCH_ANY_ANCESTOR: "	TokenNameStringLiteral
+	TokenNamePLUS
getStepLocalName	TokenNameIdentifier
(	TokenNameLPAREN
startOpPos	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
", "	TokenNameStringLiteral
+	TokenNamePLUS
m_currentPattern	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
argLen	TokenNameIdentifier
=	TokenNameEQUAL
getArgLengthOfStep	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
opPos	TokenNameIdentifier
=	TokenNameEQUAL
getFirstChildPosOfStep	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
what	TokenNameIdentifier
=	TokenNameEQUAL
getWhatToShow	TokenNameIdentifier
(	TokenNameLPAREN
startOpPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
0x00000500	TokenNameIntegerLiteral
==	TokenNameEQUAL_EQUAL
what	TokenNameIdentifier
)	TokenNameRPAREN
addMagicSelf	TokenNameIdentifier
=	TokenNameEQUAL
false	TokenNamefalse
;	TokenNameSEMICOLON
pattern	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StepPattern	TokenNameIdentifier
(	TokenNameLPAREN
getWhatToShow	TokenNameIdentifier
(	TokenNameLPAREN
startOpPos	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
getStepNS	TokenNameIdentifier
(	TokenNameLPAREN
startOpPos	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
getStepLocalName	TokenNameIdentifier
(	TokenNameLPAREN
startOpPos	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
ANCESTOR	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
CHILD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
case	TokenNamecase
OpCodes	TokenNameIdentifier
.	TokenNameDOT
MATCH_IMMEDIATE_ANCESTOR	TokenNameIdentifier
:	TokenNameCOLON
if	TokenNameif
(	TokenNameLPAREN
DEBUG	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"MATCH_IMMEDIATE_ANCESTOR: "	TokenNameStringLiteral
+	TokenNamePLUS
getStepLocalName	TokenNameIdentifier
(	TokenNameLPAREN
startOpPos	TokenNameIdentifier
)	TokenNameRPAREN
+	TokenNamePLUS
", "	TokenNameStringLiteral
+	TokenNamePLUS
m_currentPattern	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
argLen	TokenNameIdentifier
=	TokenNameEQUAL
getArgLengthOfStep	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
opPos	TokenNameIdentifier
=	TokenNameEQUAL
getFirstChildPosOfStep	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
pattern	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
StepPattern	TokenNameIdentifier
(	TokenNameLPAREN
getWhatToShow	TokenNameIdentifier
(	TokenNameLPAREN
startOpPos	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
getStepNS	TokenNameIdentifier
(	TokenNameLPAREN
startOpPos	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
getStepLocalName	TokenNameIdentifier
(	TokenNameLPAREN
startOpPos	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
PARENT	TokenNameIdentifier
,	TokenNameCOMMA
Axis	TokenNameIdentifier
.	TokenNameDOT
CHILD	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
break	TokenNamebreak
;	TokenNameSEMICOLON
default	TokenNamedefault
:	TokenNameCOLON
error	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_UNKNOWN_MATCH_OPERATION	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
pattern	TokenNameIdentifier
.	TokenNameDOT
setPredicates	TokenNameIdentifier
(	TokenNameLPAREN
getCompiledPredicates	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
+	TokenNamePLUS
argLen	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
==	TokenNameEQUAL_EQUAL
ancestorPattern	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
pattern	TokenNameIdentifier
.	TokenNameDOT
setRelativePathPattern	TokenNameIdentifier
(	TokenNameLPAREN
ancestorPattern	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
StepPattern	TokenNameIdentifier
relativePathPattern	TokenNameIdentifier
=	TokenNameEQUAL
stepPattern	TokenNameIdentifier
(	TokenNameLPAREN
endStep	TokenNameIdentifier
,	TokenNameCOMMA
stepCount	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
pattern	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
relativePathPattern	TokenNameIdentifier
)	TokenNameRPAREN
?	TokenNameQUESTION
relativePathPattern	TokenNameIdentifier
:	TokenNameCOLON
pattern	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
Expression	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getCompiledPredicates	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
count	TokenNameIdentifier
=	TokenNameEQUAL
countPredicates	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
count	TokenNameIdentifier
>	TokenNameGREATER
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
{	TokenNameLBRACE
Expression	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
predicates	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
Expression	TokenNameIdentifier
[	TokenNameLBRACKET
count	TokenNameIdentifier
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
compilePredicates	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
,	TokenNameCOMMA
predicates	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
predicates	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
int	TokenNameint
countPredicates	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
count	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_PREDICATE	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
count	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
opPos	TokenNameIdentifier
=	TokenNameEQUAL
getNextOpPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
count	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
void	TokenNamevoid
compilePredicates	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
,	TokenNameCOMMA
Expression	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
predicates	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
OpCodes	TokenNameIdentifier
.	TokenNameDOT
OP_PREDICATE	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
predicates	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
=	TokenNameEQUAL
predicate	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
opPos	TokenNameIdentifier
=	TokenNameEQUAL
getNextOpPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
Expression	TokenNameIdentifier
compileFunction	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
endFunc	TokenNameIdentifier
=	TokenNameEQUAL
opPos	TokenNameIdentifier
+	TokenNamePLUS
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
opPos	TokenNameIdentifier
=	TokenNameEQUAL
getFirstChildPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
int	TokenNameint
funcID	TokenNameIdentifier
=	TokenNameEQUAL
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
opPos	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
!=	TokenNameNOT_EQUAL
funcID	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
Function	TokenNameIdentifier
func	TokenNameIdentifier
=	TokenNameEQUAL
m_functionTable	TokenNameIdentifier
.	TokenNameDOT
getFunction	TokenNameIdentifier
(	TokenNameLPAREN
funcID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
func	TokenNameIdentifier
instanceof	TokenNameinstanceof
FuncExtFunctionAvailable	TokenNameIdentifier
)	TokenNameRPAREN
(	TokenNameLPAREN
(	TokenNameLPAREN
FuncExtFunctionAvailable	TokenNameIdentifier
)	TokenNameRPAREN
func	TokenNameIdentifier
)	TokenNameRPAREN
.	TokenNameDOT
setFunctionTable	TokenNameIdentifier
(	TokenNameLPAREN
m_functionTable	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
func	TokenNameIdentifier
.	TokenNameDOT
postCompileStep	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
p	TokenNameIdentifier
=	TokenNameEQUAL
opPos	TokenNameIdentifier
;	TokenNameSEMICOLON
p	TokenNameIdentifier
<	TokenNameLESS
endFunc	TokenNameIdentifier
;	TokenNameSEMICOLON
p	TokenNameIdentifier
=	TokenNameEQUAL
getNextOpPos	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
)	TokenNameRPAREN
{	TokenNameLBRACE
func	TokenNameIdentifier
.	TokenNameDOT
setArg	TokenNameIdentifier
(	TokenNameLPAREN
compile	TokenNameIdentifier
(	TokenNameLPAREN
p	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
func	TokenNameIdentifier
.	TokenNameDOT
checkNumberArgs	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
WrongNumberArgsException	TokenNameIdentifier
wnae	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
name	TokenNameIdentifier
=	TokenNameEQUAL
m_functionTable	TokenNameIdentifier
.	TokenNameDOT
getFunctionName	TokenNameIdentifier
(	TokenNameLPAREN
funcID	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
m_errorHandler	TokenNameIdentifier
.	TokenNameDOT
fatalError	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
TransformerException	TokenNameIdentifier
(	TokenNameLPAREN
XSLMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_ONLY_ALLOWS	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
name	TokenNameIdentifier
,	TokenNameCOMMA
wnae	TokenNameIdentifier
.	TokenNameDOT
getMessage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
}	TokenNameRBRACE
)	TokenNameRPAREN
,	TokenNameCOMMA
m_locator	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
func	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
error	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_FUNCTION_TOKEN_NOT_FOUND	TokenNameIdentifier
,	TokenNameCOMMA
null	TokenNamenull
)	TokenNameRPAREN
;	TokenNameSEMICOLON
return	TokenNamereturn
null	TokenNamenull
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
long	TokenNamelong
s_nextMethodId	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
synchronized	TokenNamesynchronized
private	TokenNameprivate
long	TokenNamelong
getNextMethodId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
s_nextMethodId	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
Long	TokenNameIdentifier
.	TokenNameDOT
MAX_VALUE	TokenNameIdentifier
)	TokenNameRPAREN
s_nextMethodId	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
return	TokenNamereturn
s_nextMethodId	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
private	TokenNameprivate
Expression	TokenNameIdentifier
compileExtension	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
opPos	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
int	TokenNameint
endExtFunc	TokenNameIdentifier
=	TokenNameEQUAL
opPos	TokenNameIdentifier
+	TokenNamePLUS
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
+	TokenNamePLUS
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
-	TokenNameMINUS
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
opPos	TokenNameIdentifier
=	TokenNameEQUAL
getFirstChildPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
ns	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
)	TokenNameRPAREN
getTokenQueue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
opPos	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
funcName	TokenNameIdentifier
=	TokenNameEQUAL
(	TokenNameLPAREN
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
)	TokenNameRPAREN
getTokenQueue	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
.	TokenNameDOT
elementAt	TokenNameIdentifier
(	TokenNameLPAREN
getOp	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
opPos	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
Function	TokenNameIdentifier
extension	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
FuncExtFunction	TokenNameIdentifier
(	TokenNameLPAREN
ns	TokenNameIdentifier
,	TokenNameCOMMA
funcName	TokenNameIdentifier
,	TokenNameCOMMA
String	TokenNameIdentifier
.	TokenNameDOT
valueOf	TokenNameIdentifier
(	TokenNameLPAREN
getNextMethodId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
while	TokenNamewhile
(	TokenNameLPAREN
opPos	TokenNameIdentifier
<	TokenNameLESS
endExtFunc	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
nextOpPos	TokenNameIdentifier
=	TokenNameEQUAL
getNextOpPos	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
extension	TokenNameIdentifier
.	TokenNameDOT
setArg	TokenNameIdentifier
(	TokenNameLPAREN
this	TokenNamethis
.	TokenNameDOT
compile	TokenNameIdentifier
(	TokenNameLPAREN
opPos	TokenNameIdentifier
)	TokenNameRPAREN
,	TokenNameCOMMA
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
opPos	TokenNameIdentifier
=	TokenNameEQUAL
nextOpPos	TokenNameIdentifier
;	TokenNameSEMICOLON
i	TokenNameIdentifier
++	TokenNamePLUS_PLUS
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
WrongNumberArgsException	TokenNameIdentifier
wnae	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
extension	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
warn	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
msg	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
fmsg	TokenNameIdentifier
=	TokenNameEQUAL
XSLMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHWarning	TokenNameIdentifier
(	TokenNameLPAREN
msg	TokenNameIdentifier
,	TokenNameCOMMA
args	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
m_errorHandler	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_errorHandler	TokenNameIdentifier
.	TokenNameDOT
warning	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
TransformerException	TokenNameIdentifier
(	TokenNameLPAREN
fmsg	TokenNameIdentifier
,	TokenNameCOMMA
m_locator	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
fmsg	TokenNameIdentifier
+	TokenNamePLUS
"; file "	TokenNameStringLiteral
+	TokenNamePLUS
m_locator	TokenNameIdentifier
.	TokenNameDOT
getSystemId	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
"; line "	TokenNameStringLiteral
+	TokenNamePLUS
m_locator	TokenNameIdentifier
.	TokenNameDOT
getLineNumber	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
+	TokenNamePLUS
"; column "	TokenNameStringLiteral
+	TokenNamePLUS
m_locator	TokenNameIdentifier
.	TokenNameDOT
getColumnNumber	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
assertion	TokenNameIdentifier
(	TokenNameLPAREN
boolean	TokenNameboolean
b	TokenNameIdentifier
,	TokenNameCOMMA
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
msg	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
b	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
fMsg	TokenNameIdentifier
=	TokenNameEQUAL
XSLMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
XPATHErrorResources	TokenNameIdentifier
.	TokenNameDOT
ER_INCORRECT_PROGRAMMER_ASSERTION	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
msg	TokenNameIdentifier
}	TokenNameRBRACE
)	TokenNameRPAREN
;	TokenNameSEMICOLON
throw	TokenNamethrow
new	TokenNamenew
RuntimeException	TokenNameIdentifier
(	TokenNameLPAREN
fMsg	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
error	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
msg	TokenNameIdentifier
,	TokenNameCOMMA
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
TransformerException	TokenNameIdentifier
{	TokenNameLBRACE
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
String	TokenNameIdentifier
fmsg	TokenNameIdentifier
=	TokenNameEQUAL
XSLMessages	TokenNameIdentifier
.	TokenNameDOT
createXPATHMessage	TokenNameIdentifier
(	TokenNameLPAREN
msg	TokenNameIdentifier
,	TokenNameCOMMA
args	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
null	TokenNamenull
!=	TokenNameNOT_EQUAL
m_errorHandler	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_errorHandler	TokenNameIdentifier
.	TokenNameDOT
fatalError	TokenNameIdentifier
(	TokenNameLPAREN
new	TokenNamenew
TransformerException	TokenNameIdentifier
(	TokenNameLPAREN
fmsg	TokenNameIdentifier
,	TokenNameCOMMA
m_locator	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
TransformerException	TokenNameIdentifier
(	TokenNameLPAREN
fmsg	TokenNameIdentifier
,	TokenNameCOMMA
(	TokenNameLPAREN
SAXSourceLocator	TokenNameIdentifier
)	TokenNameRPAREN
m_locator	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
PrefixResolver	TokenNameIdentifier
m_currentPrefixResolver	TokenNameIdentifier
=	TokenNameEQUAL
null	TokenNamenull
;	TokenNameSEMICOLON
public	TokenNamepublic
PrefixResolver	TokenNameIdentifier
getNamespaceContext	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
m_currentPrefixResolver	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
void	TokenNamevoid
setNamespaceContext	TokenNameIdentifier
(	TokenNameLPAREN
PrefixResolver	TokenNameIdentifier
pr	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
m_currentPrefixResolver	TokenNameIdentifier
=	TokenNameEQUAL
pr	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
ErrorListener	TokenNameIdentifier
m_errorHandler	TokenNameIdentifier
;	TokenNameSEMICOLON
SourceLocator	TokenNameIdentifier
m_locator	TokenNameIdentifier
;	TokenNameSEMICOLON
private	TokenNameprivate
FunctionTable	TokenNameIdentifier
m_functionTable	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
