package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
res	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ListResourceBundle	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Locale	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
MissingResourceException	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
ResourceBundle	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
XMLErrorResources_ca	TokenNameIdentifier
extends	TokenNameextends
ListResourceBundle	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FUNCTION_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FUNCTION_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_OVERWRITE_CAUSE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_OVERWRITE_CAUSE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_DEFAULT_IMPL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_DEFAULT_IMPL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CHUNKEDINTARRAY_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CHUNKEDINTARRAY_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_OFFSET_BIGGER_THAN_SLOT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_OFFSET_BIGGER_THAN_SLOT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COROUTINE_NOT_AVAIL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COROUTINE_NOT_AVAIL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COROUTINE_CO_EXIT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COROUTINE_CO_EXIT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COJOINROUTINESET_FAILED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COJOINROUTINESET_FAILED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COROUTINE_PARAM	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COROUTINE_PARAM"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PARSER_DOTERMINATE_ANSWERS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PARSER_DOTERMINATE_ANSWERS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_PARSE_CALL_WHILE_PARSING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_PARSE_CALL_WHILE_PARSING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ITERATOR_AXIS_NOT_IMPLEMENTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ITERATOR_AXIS_NOT_IMPLEMENTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ITERATOR_CLONE_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ITERATOR_CLONE_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_UNKNOWN_AXIS_TYPE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_UNKNOWN_AXIS_TYPE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_AXIS_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_AXIS_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_DTMIDS_AVAIL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_DTMIDS_AVAIL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NODE_NON_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NODE_NON_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_RESOLVE_NODE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_RESOLVE_NODE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STARTPARSE_WHILE_PARSING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STARTPARSE_WHILE_PARSING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_STARTPARSE_NEEDS_SAXPARSER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_STARTPARSE_NEEDS_SAXPARSER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_COULD_NOT_INIT_PARSER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_COULD_NOT_INIT_PARSER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_EXCEPTION_CREATING_POOL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_EXCEPTION_CREATING_POOL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SCHEME_REQUIRED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SCHEME_REQUIRED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_SCHEME_IN_URI	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_SCHEME_IN_URI"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_SCHEME_INURI	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_SCHEME_INURI"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PATH_INVALID_CHAR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PATH_INVALID_CHAR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SCHEME_FROM_NULL_STRING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SCHEME_FROM_NULL_STRING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SCHEME_NOT_CONFORMANT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SCHEME_NOT_CONFORMANT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_HOST_ADDRESS_NOT_WELLFORMED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_HOST_ADDRESS_NOT_WELLFORMED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PORT_WHEN_HOST_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PORT_WHEN_HOST_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INVALID_PORT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INVALID_PORT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FRAG_FOR_GENERIC_URI	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FRAG_FOR_GENERIC_URI"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FRAG_WHEN_PATH_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FRAG_WHEN_PATH_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_FRAG_INVALID_CHAR	TokenNameIdentifier
=	TokenNameEQUAL
"ER_FRAG_INVALID_CHAR"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PARSER_IN_USE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PARSER_IN_USE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_CHANGE_WHILE_PARSING	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_CHANGE_WHILE_PARSING"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SELF_CAUSATION_NOT_PERMITTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SELF_CAUSATION_NOT_PERMITTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_USERINFO_IF_NO_HOST	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_USERINFO_IF_NO_HOST"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_PORT_IF_NO_HOST	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_PORT_IF_NO_HOST"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_QUERY_STRING_IN_PATH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_QUERY_STRING_IN_PATH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NO_FRAGMENT_STRING_IN_PATH	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NO_FRAGMENT_STRING_IN_PATH"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANNOT_INIT_URI_EMPTY_PARMS	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANNOT_INIT_URI_EMPTY_PARMS"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_METHOD_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_METHOD_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_INCRSAXSRCFILTER_NOT_RESTARTABLE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_INCRSAXSRCFILTER_NOT_RESTARTABLE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_XMLRDR_NOT_BEFORE_STARTPARSE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_XMLRDR_NOT_BEFORE_STARTPARSE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_AXIS_TRAVERSER_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_AXIS_TRAVERSER_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_SYSTEMID_UNKNOWN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_SYSTEMID_UNKNOWN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_LOCATION_UNKNOWN	TokenNameIdentifier
=	TokenNameEQUAL
"ER_LOCATION_UNKNOWN"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_PREFIX_MUST_RESOLVE	TokenNameIdentifier
=	TokenNameEQUAL
"ER_PREFIX_MUST_RESOLVE"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CREATEDOCUMENT_NOT_SUPPORTED	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CREATEDOCUMENT_NOT_SUPPORTED"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CHILD_HAS_NO_OWNER_DOCUMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CHILD_HAS_NO_OWNER_DOCUMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_OUTPUT_TEXT_BEFORE_DOC	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_OUTPUT_TEXT_BEFORE_DOC"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_CANT_HAVE_MORE_THAN_ONE_ROOT	TokenNameIdentifier
=	TokenNameEQUAL
"ER_CANT_HAVE_MORE_THAN_ONE_ROOT"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ARG_LOCALNAME_NULL	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ARG_LOCALNAME_NULL"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ARG_LOCALNAME_INVALID	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ARG_LOCALNAME_INVALID"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_ARG_PREFIX_INVALID	TokenNameIdentifier
=	TokenNameEQUAL
"ER_ARG_PREFIX_INVALID"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
ER_NAME_CANT_START_WITH_COLON	TokenNameIdentifier
=	TokenNameEQUAL
"ER_NAME_CANT_START_WITH_COLON"	TokenNameStringLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
getContents	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
new	TokenNamenew
Object	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
[	TokenNameLBRACKET
]	TokenNameRBRACKET
{	TokenNameLBRACE
{	TokenNameLBRACE
"ER0000"	TokenNameStringLiteral
,	TokenNameCOMMA
"{0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FUNCTION_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Aquesta funció no té suport."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_OVERWRITE_CAUSE	TokenNameIdentifier
,	TokenNameCOMMA
"No es pot sobreescriure una causa"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_DEFAULT_IMPL	TokenNameIdentifier
,	TokenNameCOMMA
"No s'ha trobat cap implementació per defecte "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CHUNKEDINTARRAY_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Actualment no es dóna suport a ChunkedIntArray({0})"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_OFFSET_BIGGER_THAN_SLOT	TokenNameIdentifier
,	TokenNameCOMMA
"El desplaçament és més gran que la ranura"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COROUTINE_NOT_AVAIL	TokenNameIdentifier
,	TokenNameCOMMA
"Coroutine no està disponible, id={0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COROUTINE_CO_EXIT	TokenNameIdentifier
,	TokenNameCOMMA
"CoroutineManager ha rebut una sol·licitud co_exit()"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COJOINROUTINESET_FAILED	TokenNameIdentifier
,	TokenNameCOMMA
"S'ha produït un error a co_joinCoroutineSet()"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COROUTINE_PARAM	TokenNameIdentifier
,	TokenNameCOMMA
"Error de paràmetre coroutine ({0})"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PARSER_DOTERMINATE_ANSWERS	TokenNameIdentifier
,	TokenNameCOMMA
" UNEXPECTED: doTerminate de l''analitzador respon {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_PARSE_CALL_WHILE_PARSING	TokenNameIdentifier
,	TokenNameCOMMA
"L'anàlisi no es pot cridar mentre s'està duent a terme"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED	TokenNameIdentifier
,	TokenNameCOMMA
"Error: l''iterador de tipus de l''eix {0} no s''ha implementat"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ITERATOR_AXIS_NOT_IMPLEMENTED	TokenNameIdentifier
,	TokenNameCOMMA
"Error: l''iterador de l''eix {0} no s''ha implementat "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ITERATOR_CLONE_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"El clonatge de l'iterador no té suport"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_UNKNOWN_AXIS_TYPE	TokenNameIdentifier
,	TokenNameCOMMA
"Tipus de commutació de l''eix desconeguda: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_AXIS_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"La commutació de l''eix no té suport: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_DTMIDS_AVAIL	TokenNameIdentifier
,	TokenNameCOMMA
"No hi ha més ID de DTM disponibles"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"No té suport: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NODE_NON_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"El node no ha de ser nul per a getDTMHandleFromNode"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_RESOLVE_NODE	TokenNameIdentifier
,	TokenNameCOMMA
"No s'ha pogut resoldre el node en un manejador"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STARTPARSE_WHILE_PARSING	TokenNameIdentifier
,	TokenNameCOMMA
"startParse no es pot cridar mentre s'està duent a terme l'anàlisi"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_STARTPARSE_NEEDS_SAXPARSER	TokenNameIdentifier
,	TokenNameCOMMA
"startParse necessita un SAXParser que no sigui nul"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_COULD_NOT_INIT_PARSER	TokenNameIdentifier
,	TokenNameCOMMA
"No s'ha pogut inicialitzar l'analitzador amb"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_EXCEPTION_CREATING_POOL	TokenNameIdentifier
,	TokenNameCOMMA
"S'ha produït una excepció en crear una nova instància de l'agrupació"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE	TokenNameIdentifier
,	TokenNameCOMMA
"La via d'accés conté una seqüència d'escapament no vàlida"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SCHEME_REQUIRED	TokenNameIdentifier
,	TokenNameCOMMA
"Es necessita l'esquema"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_SCHEME_IN_URI	TokenNameIdentifier
,	TokenNameCOMMA
"No s''ha trobat cap esquema a l''URI: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_SCHEME_INURI	TokenNameIdentifier
,	TokenNameCOMMA
"No s'ha trobat cap esquema a l'URI"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PATH_INVALID_CHAR	TokenNameIdentifier
,	TokenNameCOMMA
"La via d''accés conté un caràcter no vàlid {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SCHEME_FROM_NULL_STRING	TokenNameIdentifier
,	TokenNameCOMMA
"No es pot establir un esquema des d'una cadena nul·la"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SCHEME_NOT_CONFORMANT	TokenNameIdentifier
,	TokenNameCOMMA
"L'esquema no té conformitat."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_HOST_ADDRESS_NOT_WELLFORMED	TokenNameIdentifier
,	TokenNameCOMMA
"El format de l'adreça del sistema principal no és el correcte"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PORT_WHEN_HOST_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"El port no es pot establir quan el sistema principal és nul"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INVALID_PORT	TokenNameIdentifier
,	TokenNameCOMMA
"Número de port no vàlid"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FRAG_FOR_GENERIC_URI	TokenNameIdentifier
,	TokenNameCOMMA
"El fragment només es pot establir per a un URI genèric"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FRAG_WHEN_PATH_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"El fragment no es pot establir si la via d'accés és nul·la"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_FRAG_INVALID_CHAR	TokenNameIdentifier
,	TokenNameCOMMA
"El fragment conté un caràcter no vàlid"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PARSER_IN_USE	TokenNameIdentifier
,	TokenNameCOMMA
"L'analitzador ja s'està utilitzant"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_CHANGE_WHILE_PARSING	TokenNameIdentifier
,	TokenNameCOMMA
"No es pot modificar {0} {1} mentre es duu a terme l''anàlisi"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SELF_CAUSATION_NOT_PERMITTED	TokenNameIdentifier
,	TokenNameCOMMA
"La causalitat pròpia no està permesa."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_USERINFO_IF_NO_HOST	TokenNameIdentifier
,	TokenNameCOMMA
"No es pot especificar informació de l'usuari si no s'especifica el sistema principal"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_PORT_IF_NO_HOST	TokenNameIdentifier
,	TokenNameCOMMA
"No es pot especificar el port si no s'especifica el sistema principal"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_QUERY_STRING_IN_PATH	TokenNameIdentifier
,	TokenNameCOMMA
"No es pot especificar una cadena de consulta en la via d'accés i la cadena de consulta"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NO_FRAGMENT_STRING_IN_PATH	TokenNameIdentifier
,	TokenNameCOMMA
"No es pot especificar un fragment tant en la via d'accés com en el fragment"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANNOT_INIT_URI_EMPTY_PARMS	TokenNameIdentifier
,	TokenNameCOMMA
"No es pot inicialitzar l'URI amb paràmetres buits"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_METHOD_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"Aquest mètode encara no té suport "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_INCRSAXSRCFILTER_NOT_RESTARTABLE	TokenNameIdentifier
,	TokenNameCOMMA
"Ara mateix no es pot reiniciar IncrementalSAXSource_Filter"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_XMLRDR_NOT_BEFORE_STARTPARSE	TokenNameIdentifier
,	TokenNameCOMMA
"XMLReader no es pot produir abans de la sol·licitud d'startParse"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_AXIS_TRAVERSER_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"La commutació de l''eix no té suport: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER	TokenNameIdentifier
,	TokenNameCOMMA
"S'ha creat ListingErrorHandler amb PrintWriter nul"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_SYSTEMID_UNKNOWN	TokenNameIdentifier
,	TokenNameCOMMA
"ID del sistema (SystemId) desconegut"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_LOCATION_UNKNOWN	TokenNameIdentifier
,	TokenNameCOMMA
"Ubicació de l'error desconeguda"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_PREFIX_MUST_RESOLVE	TokenNameIdentifier
,	TokenNameCOMMA
"El prefix s''ha de resoldre en un espai de noms: {0}"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CREATEDOCUMENT_NOT_SUPPORTED	TokenNameIdentifier
,	TokenNameCOMMA
"createDocument() no té suport a XPathContext"	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CHILD_HAS_NO_OWNER_DOCUMENT	TokenNameIdentifier
,	TokenNameCOMMA
"El subordinat de l'atribut no té un document de propietari."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT	TokenNameIdentifier
,	TokenNameCOMMA
"El subordinat de l'atribut no té un element de document de propietari."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_OUTPUT_TEXT_BEFORE_DOC	TokenNameIdentifier
,	TokenNameCOMMA
"Avís: no es pot produir text abans de l'element de document. Es passa per alt."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_CANT_HAVE_MORE_THAN_ONE_ROOT	TokenNameIdentifier
,	TokenNameCOMMA
"No hi pot haver més d'una arrel en un DOM."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ARG_LOCALNAME_NULL	TokenNameIdentifier
,	TokenNameCOMMA
"L'argument 'localName' és nul."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ARG_LOCALNAME_INVALID	TokenNameIdentifier
,	TokenNameCOMMA
"El nom local de QNAME ha de ser un NCName vàlid."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_ARG_PREFIX_INVALID	TokenNameIdentifier
,	TokenNameCOMMA
"El prefix de QNAME ha de ser un NCName vàlid."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
ER_NAME_CANT_START_WITH_COLON	TokenNameIdentifier
,	TokenNameCOMMA
"El nom no pot començar amb dos punts. "	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"BAD_CODE"	TokenNameStringLiteral
,	TokenNameCOMMA
"El paràmetre de createMessage estava fora dels límits."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"FORMAT_FAILED"	TokenNameStringLiteral
,	TokenNameCOMMA
"S'ha generat una excepció durant la crida messageFormat."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"line"	TokenNameStringLiteral
,	TokenNameCOMMA
"Línia núm."	TokenNameStringLiteral
}	TokenNameRBRACE
,	TokenNameCOMMA
{	TokenNameLBRACE
"column"	TokenNameStringLiteral
,	TokenNameCOMMA
"Columna núm."	TokenNameStringLiteral
}	TokenNameRBRACE
}	TokenNameRBRACE
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
XMLErrorResources	TokenNameIdentifier
loadResourceBundle	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
className	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
MissingResourceException	TokenNameIdentifier
{	TokenNameLBRACE
Locale	TokenNameIdentifier
locale	TokenNameIdentifier
=	TokenNameEQUAL
Locale	TokenNameIdentifier
.	TokenNameDOT
getDefault	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
suffix	TokenNameIdentifier
=	TokenNameEQUAL
getResourceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
locale	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XMLErrorResources	TokenNameIdentifier
)	TokenNameRPAREN
ResourceBundle	TokenNameIdentifier
.	TokenNameDOT
getBundle	TokenNameIdentifier
(	TokenNameLPAREN
className	TokenNameIdentifier
+	TokenNamePLUS
suffix	TokenNameIdentifier
,	TokenNameCOMMA
locale	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MissingResourceException	TokenNameIdentifier
e	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
try	TokenNametry
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
XMLErrorResources	TokenNameIdentifier
)	TokenNameRPAREN
ResourceBundle	TokenNameIdentifier
.	TokenNameDOT
getBundle	TokenNameIdentifier
(	TokenNameLPAREN
className	TokenNameIdentifier
,	TokenNameCOMMA
new	TokenNamenew
Locale	TokenNameIdentifier
(	TokenNameLPAREN
"ca"	TokenNameStringLiteral
,	TokenNameCOMMA
"ES"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
catch	TokenNamecatch
(	TokenNameLPAREN
MissingResourceException	TokenNameIdentifier
e2	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
throw	TokenNamethrow
new	TokenNamenew
MissingResourceException	TokenNameIdentifier
(	TokenNameLPAREN
"Could not load any resource bundles."	TokenNameStringLiteral
,	TokenNameCOMMA
className	TokenNameIdentifier
,	TokenNameCOMMA
""	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
String	TokenNameIdentifier
getResourceSuffix	TokenNameIdentifier
(	TokenNameLPAREN
Locale	TokenNameIdentifier
locale	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
suffix	TokenNameIdentifier
=	TokenNameEQUAL
"_"	TokenNameStringLiteral
+	TokenNamePLUS
locale	TokenNameIdentifier
.	TokenNameDOT
getLanguage	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
String	TokenNameIdentifier
country	TokenNameIdentifier
=	TokenNameEQUAL
locale	TokenNameIdentifier
.	TokenNameDOT
getCountry	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
country	TokenNameIdentifier
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
"TW"	TokenNameStringLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
suffix	TokenNameIdentifier
+=	TokenNamePLUS_EQUAL
"_"	TokenNameStringLiteral
+	TokenNamePLUS
country	TokenNameIdentifier
;	TokenNameSEMICOLON
return	TokenNamereturn
suffix	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
