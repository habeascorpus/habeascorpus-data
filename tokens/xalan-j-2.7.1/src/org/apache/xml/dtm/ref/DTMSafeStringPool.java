package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
dtm	TokenNameIdentifier
.	TokenNameDOT
ref	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
DTMSafeStringPool	TokenNameIdentifier
extends	TokenNameextends
DTMStringPool	TokenNameIdentifier
{	TokenNameLBRACE
public	TokenNamepublic
synchronized	TokenNamesynchronized
void	TokenNamevoid
removeAllElements	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
super	TokenNamesuper
.	TokenNameDOT
removeAllElements	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
synchronized	TokenNamesynchronized
String	TokenNameIdentifier
indexToString	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
)	TokenNameRPAREN
throws	TokenNamethrows
java	TokenNameIdentifier
.	TokenNameDOT
lang	TokenNameIdentifier
.	TokenNameDOT
ArrayIndexOutOfBoundsException	TokenNameIdentifier
{	TokenNameLBRACE
return	TokenNamereturn
super	TokenNamesuper
.	TokenNameDOT
indexToString	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
synchronized	TokenNamesynchronized
int	TokenNameint
stringToIndex	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
s	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
super	TokenNamesuper
.	TokenNameDOT
stringToIndex	TokenNameIdentifier
(	TokenNameLPAREN
s	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
void	TokenNamevoid
main	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
args	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
word	TokenNameIdentifier
=	TokenNameEQUAL
{	TokenNameLBRACE
"Zero"	TokenNameStringLiteral
,	TokenNameCOMMA
"One"	TokenNameStringLiteral
,	TokenNameCOMMA
"Two"	TokenNameStringLiteral
,	TokenNameCOMMA
"Three"	TokenNameStringLiteral
,	TokenNameCOMMA
"Four"	TokenNameStringLiteral
,	TokenNameCOMMA
"Five"	TokenNameStringLiteral
,	TokenNameCOMMA
"Six"	TokenNameStringLiteral
,	TokenNameCOMMA
"Seven"	TokenNameStringLiteral
,	TokenNameCOMMA
"Eight"	TokenNameStringLiteral
,	TokenNameCOMMA
"Nine"	TokenNameStringLiteral
,	TokenNameCOMMA
"Ten"	TokenNameStringLiteral
,	TokenNameCOMMA
"Eleven"	TokenNameStringLiteral
,	TokenNameCOMMA
"Twelve"	TokenNameStringLiteral
,	TokenNameCOMMA
"Thirteen"	TokenNameStringLiteral
,	TokenNameCOMMA
"Fourteen"	TokenNameStringLiteral
,	TokenNameCOMMA
"Fifteen"	TokenNameStringLiteral
,	TokenNameCOMMA
"Sixteen"	TokenNameStringLiteral
,	TokenNameCOMMA
"Seventeen"	TokenNameStringLiteral
,	TokenNameCOMMA
"Eighteen"	TokenNameStringLiteral
,	TokenNameCOMMA
"Nineteen"	TokenNameStringLiteral
,	TokenNameCOMMA
"Twenty"	TokenNameStringLiteral
,	TokenNameCOMMA
"Twenty-One"	TokenNameStringLiteral
,	TokenNameCOMMA
"Twenty-Two"	TokenNameStringLiteral
,	TokenNameCOMMA
"Twenty-Three"	TokenNameStringLiteral
,	TokenNameCOMMA
"Twenty-Four"	TokenNameStringLiteral
,	TokenNameCOMMA
"Twenty-Five"	TokenNameStringLiteral
,	TokenNameCOMMA
"Twenty-Six"	TokenNameStringLiteral
,	TokenNameCOMMA
"Twenty-Seven"	TokenNameStringLiteral
,	TokenNameCOMMA
"Twenty-Eight"	TokenNameStringLiteral
,	TokenNameCOMMA
"Twenty-Nine"	TokenNameStringLiteral
,	TokenNameCOMMA
"Thirty"	TokenNameStringLiteral
,	TokenNameCOMMA
"Thirty-One"	TokenNameStringLiteral
,	TokenNameCOMMA
"Thirty-Two"	TokenNameStringLiteral
,	TokenNameCOMMA
"Thirty-Three"	TokenNameStringLiteral
,	TokenNameCOMMA
"Thirty-Four"	TokenNameStringLiteral
,	TokenNameCOMMA
"Thirty-Five"	TokenNameStringLiteral
,	TokenNameCOMMA
"Thirty-Six"	TokenNameStringLiteral
,	TokenNameCOMMA
"Thirty-Seven"	TokenNameStringLiteral
,	TokenNameCOMMA
"Thirty-Eight"	TokenNameStringLiteral
,	TokenNameCOMMA
"Thirty-Nine"	TokenNameStringLiteral
}	TokenNameRBRACE
;	TokenNameSEMICOLON
DTMStringPool	TokenNameIdentifier
pool	TokenNameIdentifier
=	TokenNameEQUAL
new	TokenNamenew
DTMSafeStringPool	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
"If no complaints are printed below, we passed initial test."	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
pass	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
pass	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
pass	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
i	TokenNameIdentifier
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
word	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
j	TokenNameIdentifier
=	TokenNameEQUAL
pool	TokenNameIdentifier
.	TokenNameDOT
stringToIndex	TokenNameIdentifier
(	TokenNameLPAREN
word	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
j	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
i	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
" Mismatch populating pool: assigned "	TokenNameStringLiteral
+	TokenNamePLUS
j	TokenNameIdentifier
+	TokenNamePLUS
" for create "	TokenNameStringLiteral
+	TokenNamePLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
word	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
j	TokenNameIdentifier
=	TokenNameEQUAL
pool	TokenNameIdentifier
.	TokenNameDOT
stringToIndex	TokenNameIdentifier
(	TokenNameLPAREN
word	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
j	TokenNameIdentifier
!=	TokenNameNOT_EQUAL
i	TokenNameIdentifier
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
" Mismatch in stringToIndex: returned "	TokenNameStringLiteral
+	TokenNamePLUS
j	TokenNameIdentifier
+	TokenNamePLUS
" for lookup "	TokenNameStringLiteral
+	TokenNamePLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
for	TokenNamefor
(	TokenNameLPAREN
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
word	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
String	TokenNameIdentifier
w	TokenNameIdentifier
=	TokenNameEQUAL
pool	TokenNameIdentifier
.	TokenNameDOT
indexToString	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
word	TokenNameIdentifier
[	TokenNameLBRACKET
i	TokenNameIdentifier
]	TokenNameRBRACKET
.	TokenNameDOT
equals	TokenNameIdentifier
(	TokenNameLPAREN
w	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
" Mismatch in indexToString: returned"	TokenNameStringLiteral
+	TokenNamePLUS
w	TokenNameIdentifier
+	TokenNamePLUS
" for lookup "	TokenNameStringLiteral
+	TokenNamePLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
pool	TokenNameIdentifier
.	TokenNameDOT
removeAllElements	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
System	TokenNameIdentifier
.	TokenNameDOT
out	TokenNameIdentifier
.	TokenNameDOT
println	TokenNameIdentifier
(	TokenNameLPAREN
" Pass "	TokenNameStringLiteral
+	TokenNamePLUS
pass	TokenNameIdentifier
+	TokenNamePLUS
" complete "	TokenNameStringLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
