package	TokenNamepackage
org	TokenNameIdentifier
.	TokenNameDOT
apache	TokenNameIdentifier
.	TokenNameDOT
xml	TokenNameIdentifier
.	TokenNameDOT
serializer	TokenNameIdentifier
.	TokenNameDOT
utils	TokenNameIdentifier
;	TokenNameSEMICOLON
import	TokenNameimport
java	TokenNameIdentifier
.	TokenNameDOT
util	TokenNameIdentifier
.	TokenNameDOT
Arrays	TokenNameIdentifier
;	TokenNameSEMICOLON
public	TokenNamepublic
class	TokenNameclass
XML11Char	TokenNameIdentifier
{	TokenNameLBRACE
private	TokenNameprivate
static	TokenNamestatic
final	TokenNamefinal
byte	TokenNamebyte
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
]	TokenNameRBRACKET
=	TokenNameEQUAL
new	TokenNamenew
byte	TokenNamebyte
[	TokenNameLBRACKET
1	TokenNameIntegerLiteral
<<	TokenNameLEFT_SHIFT
16	TokenNameIntegerLiteral
]	TokenNameRBRACKET
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MASK_XML11_VALID	TokenNameIdentifier
=	TokenNameEQUAL
0x01	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MASK_XML11_SPACE	TokenNameIdentifier
=	TokenNameEQUAL
0x02	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MASK_XML11_NAME_START	TokenNameIdentifier
=	TokenNameEQUAL
0x04	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MASK_XML11_NAME	TokenNameIdentifier
=	TokenNameEQUAL
0x08	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MASK_XML11_CONTROL	TokenNameIdentifier
=	TokenNameEQUAL
0x10	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MASK_XML11_CONTENT	TokenNameIdentifier
=	TokenNameEQUAL
0x20	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MASK_XML11_NCNAME_START	TokenNameIdentifier
=	TokenNameEQUAL
0x40	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MASK_XML11_NCNAME	TokenNameIdentifier
=	TokenNameEQUAL
0x80	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
public	TokenNamepublic
static	TokenNamestatic
final	TokenNamefinal
int	TokenNameint
MASK_XML11_CONTENT_INTERNAL	TokenNameIdentifier
=	TokenNameEQUAL
MASK_XML11_CONTROL	TokenNameIdentifier
|	TokenNameOR
MASK_XML11_CONTENT	TokenNameIdentifier
;	TokenNameSEMICOLON
static	TokenNamestatic
{	TokenNameLBRACE
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
1	TokenNameIntegerLiteral
,	TokenNameCOMMA
9	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
17	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
9	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
35	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
10	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
11	TokenNameIntegerLiteral
,	TokenNameCOMMA
13	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
17	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
13	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
3	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
14	TokenNameIntegerLiteral
,	TokenNameCOMMA
32	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
17	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
32	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
35	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
33	TokenNameIntegerLiteral
,	TokenNameCOMMA
38	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
38	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
39	TokenNameIntegerLiteral
,	TokenNameCOMMA
45	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
45	TokenNameIntegerLiteral
,	TokenNameCOMMA
47	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
87	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
47	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
33	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
48	TokenNameIntegerLiteral
,	TokenNameCOMMA
58	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
87	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
58	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
45	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
59	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
33	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
60	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
61	TokenNameIntegerLiteral
,	TokenNameCOMMA
65	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
65	TokenNameIntegerLiteral
,	TokenNameCOMMA
91	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
19	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
91	TokenNameIntegerLiteral
,	TokenNameCOMMA
93	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
93	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
94	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
33	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
95	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
-	TokenNameMINUS
19	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
96	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
33	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
97	TokenNameIntegerLiteral
,	TokenNameCOMMA
123	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
19	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
123	TokenNameIntegerLiteral
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
127	TokenNameIntegerLiteral
,	TokenNameCOMMA
133	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
17	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
133	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
35	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
134	TokenNameIntegerLiteral
,	TokenNameCOMMA
160	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
17	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
160	TokenNameIntegerLiteral
,	TokenNameCOMMA
183	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
183	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
-	TokenNameMINUS
87	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
184	TokenNameIntegerLiteral
,	TokenNameCOMMA
192	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
192	TokenNameIntegerLiteral
,	TokenNameCOMMA
215	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
19	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
215	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
33	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
216	TokenNameIntegerLiteral
,	TokenNameCOMMA
247	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
19	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
247	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
33	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
248	TokenNameIntegerLiteral
,	TokenNameCOMMA
768	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
19	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
768	TokenNameIntegerLiteral
,	TokenNameCOMMA
880	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
87	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
880	TokenNameIntegerLiteral
,	TokenNameCOMMA
894	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
19	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
894	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
33	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
895	TokenNameIntegerLiteral
,	TokenNameCOMMA
8192	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
19	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
8192	TokenNameIntegerLiteral
,	TokenNameCOMMA
8204	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
8204	TokenNameIntegerLiteral
,	TokenNameCOMMA
8206	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
19	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
8206	TokenNameIntegerLiteral
,	TokenNameCOMMA
8232	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
8232	TokenNameIntegerLiteral
]	TokenNameRBRACKET
=	TokenNameEQUAL
35	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
8233	TokenNameIntegerLiteral
,	TokenNameCOMMA
8255	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
8255	TokenNameIntegerLiteral
,	TokenNameCOMMA
8257	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
87	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
8257	TokenNameIntegerLiteral
,	TokenNameCOMMA
8304	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
8304	TokenNameIntegerLiteral
,	TokenNameCOMMA
8592	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
19	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
8592	TokenNameIntegerLiteral
,	TokenNameCOMMA
11264	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
11264	TokenNameIntegerLiteral
,	TokenNameCOMMA
12272	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
19	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
12272	TokenNameIntegerLiteral
,	TokenNameCOMMA
12289	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
12289	TokenNameIntegerLiteral
,	TokenNameCOMMA
55296	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
19	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
57344	TokenNameIntegerLiteral
,	TokenNameCOMMA
63744	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
63744	TokenNameIntegerLiteral
,	TokenNameCOMMA
64976	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
19	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
64976	TokenNameIntegerLiteral
,	TokenNameCOMMA
65008	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
33	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
Arrays	TokenNameIdentifier
.	TokenNameDOT
fill	TokenNameIdentifier
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
,	TokenNameCOMMA
65008	TokenNameIntegerLiteral
,	TokenNameCOMMA
65534	TokenNameIntegerLiteral
,	TokenNameCOMMA
(	TokenNameLPAREN
byte	TokenNamebyte
)	TokenNameRPAREN
-	TokenNameMINUS
19	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isXML11Space	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
c	TokenNameIdentifier
<	TokenNameLESS
0x10000	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
c	TokenNameIdentifier
]	TokenNameRBRACKET
&	TokenNameAND
MASK_XML11_SPACE	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isXML11Valid	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
c	TokenNameIdentifier
<	TokenNameLESS
0x10000	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
c	TokenNameIdentifier
]	TokenNameRBRACKET
&	TokenNameAND
MASK_XML11_VALID	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
0x10000	TokenNameIntegerLiteral
<=	TokenNameLESS_EQUAL
c	TokenNameIdentifier
&&	TokenNameAND_AND
c	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
0x10FFFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isXML11Invalid	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
!	TokenNameNOT
isXML11Valid	TokenNameIdentifier
(	TokenNameLPAREN
c	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isXML11ValidLiteral	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
(	TokenNameLPAREN
c	TokenNameIdentifier
<	TokenNameLESS
0x10000	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
c	TokenNameIdentifier
]	TokenNameRBRACKET
&	TokenNameAND
MASK_XML11_VALID	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
c	TokenNameIdentifier
]	TokenNameRBRACKET
&	TokenNameAND
MASK_XML11_CONTROL	TokenNameIdentifier
)	TokenNameRPAREN
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
0x10000	TokenNameIntegerLiteral
<=	TokenNameLESS_EQUAL
c	TokenNameIdentifier
&&	TokenNameAND_AND
c	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
0x10FFFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isXML11Content	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
c	TokenNameIdentifier
<	TokenNameLESS
0x10000	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
c	TokenNameIdentifier
]	TokenNameRBRACKET
&	TokenNameAND
MASK_XML11_CONTENT	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
0x10000	TokenNameIntegerLiteral
<=	TokenNameLESS_EQUAL
c	TokenNameIdentifier
&&	TokenNameAND_AND
c	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
0x10FFFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isXML11InternalEntityContent	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
c	TokenNameIdentifier
<	TokenNameLESS
0x10000	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
c	TokenNameIdentifier
]	TokenNameRBRACKET
&	TokenNameAND
MASK_XML11_CONTENT_INTERNAL	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
0x10000	TokenNameIntegerLiteral
<=	TokenNameLESS_EQUAL
c	TokenNameIdentifier
&&	TokenNameAND_AND
c	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
0x10FFFF	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isXML11NameStart	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
c	TokenNameIdentifier
<	TokenNameLESS
0x10000	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
c	TokenNameIdentifier
]	TokenNameRBRACKET
&	TokenNameAND
MASK_XML11_NAME_START	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
0x10000	TokenNameIntegerLiteral
<=	TokenNameLESS_EQUAL
c	TokenNameIdentifier
&&	TokenNameAND_AND
c	TokenNameIdentifier
<	TokenNameLESS
0xF0000	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isXML11Name	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
c	TokenNameIdentifier
<	TokenNameLESS
0x10000	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
c	TokenNameIdentifier
]	TokenNameRBRACKET
&	TokenNameAND
MASK_XML11_NAME	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
c	TokenNameIdentifier
>=	TokenNameGREATER_EQUAL
0x10000	TokenNameIntegerLiteral
&&	TokenNameAND_AND
c	TokenNameIdentifier
<	TokenNameLESS
0xF0000	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isXML11NCNameStart	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
c	TokenNameIdentifier
<	TokenNameLESS
0x10000	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
c	TokenNameIdentifier
]	TokenNameRBRACKET
&	TokenNameAND
MASK_XML11_NCNAME_START	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
0x10000	TokenNameIntegerLiteral
<=	TokenNameLESS_EQUAL
c	TokenNameIdentifier
&&	TokenNameAND_AND
c	TokenNameIdentifier
<	TokenNameLESS
0xF0000	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isXML11NCName	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
c	TokenNameIdentifier
<	TokenNameLESS
0x10000	TokenNameIntegerLiteral
&&	TokenNameAND_AND
(	TokenNameLPAREN
XML11CHARS	TokenNameIdentifier
[	TokenNameLBRACKET
c	TokenNameIdentifier
]	TokenNameRBRACKET
&	TokenNameAND
MASK_XML11_NCNAME	TokenNameIdentifier
)	TokenNameRPAREN
!=	TokenNameNOT_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
||	TokenNameOR_OR
(	TokenNameLPAREN
0x10000	TokenNameIntegerLiteral
<=	TokenNameLESS_EQUAL
c	TokenNameIdentifier
&&	TokenNameAND_AND
c	TokenNameIdentifier
<	TokenNameLESS
0xF0000	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isXML11NameHighSurrogate	TokenNameIdentifier
(	TokenNameLPAREN
int	TokenNameint
c	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
(	TokenNameLPAREN
0xD800	TokenNameIntegerLiteral
<=	TokenNameLESS_EQUAL
c	TokenNameIdentifier
&&	TokenNameAND_AND
c	TokenNameIdentifier
<=	TokenNameLESS_EQUAL
0xDB7F	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isXML11ValidName	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
name	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
length	TokenNameIdentifier
=	TokenNameEQUAL
name	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
length	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
char	TokenNamechar
ch	TokenNameIdentifier
=	TokenNameEQUAL
name	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isXML11NameStart	TokenNameIdentifier
(	TokenNameLPAREN
ch	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
length	TokenNameIdentifier
>	TokenNameGREATER
1	TokenNameIntegerLiteral
&&	TokenNameAND_AND
isXML11NameHighSurrogate	TokenNameIdentifier
(	TokenNameLPAREN
ch	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
char	TokenNamechar
ch2	TokenNameIdentifier
=	TokenNameEQUAL
name	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
XMLChar	TokenNameIdentifier
.	TokenNameDOT
isLowSurrogate	TokenNameIdentifier
(	TokenNameLPAREN
ch2	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
!	TokenNameNOT
isXML11NameStart	TokenNameIdentifier
(	TokenNameLPAREN
XMLChar	TokenNameIdentifier
.	TokenNameDOT
supplemental	TokenNameIdentifier
(	TokenNameLPAREN
ch	TokenNameIdentifier
,	TokenNameCOMMA
ch2	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
i	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
i	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ch	TokenNameIdentifier
=	TokenNameEQUAL
name	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isXML11Name	TokenNameIdentifier
(	TokenNameLPAREN
ch	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
&&	TokenNameAND_AND
isXML11NameHighSurrogate	TokenNameIdentifier
(	TokenNameLPAREN
ch	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
char	TokenNamechar
ch2	TokenNameIdentifier
=	TokenNameEQUAL
name	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
XMLChar	TokenNameIdentifier
.	TokenNameDOT
isLowSurrogate	TokenNameIdentifier
(	TokenNameLPAREN
ch2	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
!	TokenNameNOT
isXML11Name	TokenNameIdentifier
(	TokenNameLPAREN
XMLChar	TokenNameIdentifier
.	TokenNameDOT
supplemental	TokenNameIdentifier
(	TokenNameLPAREN
ch	TokenNameIdentifier
,	TokenNameCOMMA
ch2	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isXML11ValidNCName	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
ncName	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
length	TokenNameIdentifier
=	TokenNameEQUAL
ncName	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
length	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
1	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
char	TokenNamechar
ch	TokenNameIdentifier
=	TokenNameEQUAL
ncName	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isXML11NCNameStart	TokenNameIdentifier
(	TokenNameLPAREN
ch	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
length	TokenNameIdentifier
>	TokenNameGREATER
1	TokenNameIntegerLiteral
&&	TokenNameAND_AND
isXML11NameHighSurrogate	TokenNameIdentifier
(	TokenNameLPAREN
ch	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
char	TokenNamechar
ch2	TokenNameIdentifier
=	TokenNameEQUAL
ncName	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
1	TokenNameIntegerLiteral
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
XMLChar	TokenNameIdentifier
.	TokenNameDOT
isLowSurrogate	TokenNameIdentifier
(	TokenNameLPAREN
ch2	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
!	TokenNameNOT
isXML11NCNameStart	TokenNameIdentifier
(	TokenNameLPAREN
XMLChar	TokenNameIdentifier
.	TokenNameDOT
supplemental	TokenNameIdentifier
(	TokenNameLPAREN
ch	TokenNameIdentifier
,	TokenNameCOMMA
ch2	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
i	TokenNameIdentifier
=	TokenNameEQUAL
2	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
while	TokenNamewhile
(	TokenNameLPAREN
i	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
ch	TokenNameIdentifier
=	TokenNameEQUAL
ncName	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isXML11NCName	TokenNameIdentifier
(	TokenNameLPAREN
ch	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
&&	TokenNameAND_AND
isXML11NameHighSurrogate	TokenNameIdentifier
(	TokenNameLPAREN
ch	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
char	TokenNamechar
ch2	TokenNameIdentifier
=	TokenNameEQUAL
ncName	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
XMLChar	TokenNameIdentifier
.	TokenNameDOT
isLowSurrogate	TokenNameIdentifier
(	TokenNameLPAREN
ch2	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
!	TokenNameNOT
isXML11NCName	TokenNameIdentifier
(	TokenNameLPAREN
XMLChar	TokenNameIdentifier
.	TokenNameDOT
supplemental	TokenNameIdentifier
(	TokenNameLPAREN
ch	TokenNameIdentifier
,	TokenNameCOMMA
ch2	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
;	TokenNameSEMICOLON
}	TokenNameRBRACE
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
public	TokenNamepublic
static	TokenNamestatic
boolean	TokenNameboolean
isXML11ValidNmtoken	TokenNameIdentifier
(	TokenNameLPAREN
String	TokenNameIdentifier
nmtoken	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
int	TokenNameint
length	TokenNameIdentifier
=	TokenNameEQUAL
nmtoken	TokenNameIdentifier
.	TokenNameDOT
length	TokenNameIdentifier
(	TokenNameLPAREN
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
length	TokenNameIdentifier
==	TokenNameEQUAL_EQUAL
0	TokenNameIntegerLiteral
)	TokenNameRPAREN
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
for	TokenNamefor
(	TokenNameLPAREN
int	TokenNameint
i	TokenNameIdentifier
=	TokenNameEQUAL
0	TokenNameIntegerLiteral
;	TokenNameSEMICOLON
i	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
;	TokenNameSEMICOLON
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
)	TokenNameRPAREN
{	TokenNameLBRACE
char	TokenNamechar
ch	TokenNameIdentifier
=	TokenNameEQUAL
nmtoken	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
isXML11Name	TokenNameIdentifier
(	TokenNameLPAREN
ch	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
if	TokenNameif
(	TokenNameLPAREN
++	TokenNamePLUS_PLUS
i	TokenNameIdentifier
<	TokenNameLESS
length	TokenNameIdentifier
&&	TokenNameAND_AND
isXML11NameHighSurrogate	TokenNameIdentifier
(	TokenNameLPAREN
ch	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
char	TokenNamechar
ch2	TokenNameIdentifier
=	TokenNameEQUAL
nmtoken	TokenNameIdentifier
.	TokenNameDOT
charAt	TokenNameIdentifier
(	TokenNameLPAREN
i	TokenNameIdentifier
)	TokenNameRPAREN
;	TokenNameSEMICOLON
if	TokenNameif
(	TokenNameLPAREN
!	TokenNameNOT
XMLChar	TokenNameIdentifier
.	TokenNameDOT
isLowSurrogate	TokenNameIdentifier
(	TokenNameLPAREN
ch2	TokenNameIdentifier
)	TokenNameRPAREN
||	TokenNameOR_OR
!	TokenNameNOT
isXML11Name	TokenNameIdentifier
(	TokenNameLPAREN
XMLChar	TokenNameIdentifier
.	TokenNameDOT
supplemental	TokenNameIdentifier
(	TokenNameLPAREN
ch	TokenNameIdentifier
,	TokenNameCOMMA
ch2	TokenNameIdentifier
)	TokenNameRPAREN
)	TokenNameRPAREN
)	TokenNameRPAREN
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
else	TokenNameelse
{	TokenNameLBRACE
return	TokenNamereturn
false	TokenNamefalse
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
}	TokenNameRBRACE
return	TokenNamereturn
true	TokenNametrue
;	TokenNameSEMICOLON
}	TokenNameRBRACE
}	TokenNameRBRACE
